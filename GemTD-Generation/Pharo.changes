'From Pharo7.0alpha of 26 January 2018 [Build information: Pharo-7.0+alpha.build.456.sha.63e0b3f29bf7f31011770e9738c537cbf48fca1f (32 Bit)] on 26 January 2018 at 10:56:32.555832 am'!----QUIT----2018-01-26T10:56:32.558479+01:00 Pharo7.0-32bit-63e0b3f.image priorSource: 0!----QUIT----2018-01-26T10:56:39.895516+01:00 Pharo7.0-32bit-63e0b3f.image priorSource: 183!"This scripts sets the correct versionInfo for loaded Pharo packages. The purpose of it is to ensure 
 iceberg will find an ancestor in history and it will correctly calculate differences."
| repo commit repositoryReference |

"Create repository"

repositoryReference := (Smalltalk os environment at: 'BOOTSTRAP_REPOSITORY' ifAbsent: ['..']) asFileReference.

repo := IceRepositoryCreator new
	location: repositoryReference;
	subdirectory: 'src';
	createRepository.

repo name: 'pharo'.
"get loaded commit"
commit := repo branch lastCommit.
"using commit as versionInfo for all loaded packages"
repo savedPackages do: [ :eachPackage | 
	MCWorkingCopy allManagers
		detect: [ :each | each packageName = eachPackage packageName ]
		ifFound: [ :each |
			each ancestry ancestors: { 
				IceProxyMCVersionInfo
					remoteUrl: 'git@github.com:pharo-project/pharo.git'
					packageName: each packageName
					commit: commit 
					message: ('Stub pointing to remote repository git@github.com:pharo-project/pharo.git. 
Add iceberg repository to have the real version here.')
					author: 'TheBootstrap' } ] ]!----End fileIn----!----QUIT----2018-01-26T10:56:40.71005+01:00 Pharo7.0-32bit-63e0b3f.image priorSource: 274!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!Object subclass: #GemTDImporter	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:18'!resourcesToImport	^ #(addon_english.txt		 addon_schinese.txt		 addon_tchinese.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:18'!scriptsToImport	^ #(addon_english.txt		 addon_schinese.txt		 addon_tchinese.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:21' prior: 33559316!scriptsToImport	^ #(vscripts/addon_game_mode.lua		 npc_abilities_custom.txt		 npc_units_custom.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:21' prior: 33559506!scriptsToImport	^ #(luaScript 	vscripts/addon_game_mode.lua		 ability 		npc_abilities_custom.txt		 units 		npc_units_custom.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:22' prior: 33559140!resourcesToImport	^ #(addon_english.txt		 addon_schinese.txt		 addon_tchinese.txt)! !----SNAPSHOT----2018-01-26T11:22:08.39568+01:00 Pharo.image priorSource: 1491!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:22'!importResources! !Object subclass: #GemTDParser	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:25'!parse: readStream	self skipSeparators.	^ self parseKeyValue! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:25' prior: 33560423!parse: rs	readStream := rs.	self skipSeparators.	^ self parseKeyValue! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:26'!skipSeparators	readStream peek isSeparator whileTrue: [ readStream next ].! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:28'!parseString	| ws |	ws := WriteStream on: (ByteString new: 20).	self assert: readStream peek = $".	readStream next. "skip ''"	[readStream peek = $"] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip ''"	^ ws contents	! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:29'!parseKeyValue	| key val |	key := self parseString.	self skipSeparators.	val := (readStream peek = $"		ifTrue: [ self parseString ]		ifFalse: [ self parseDict ]).	^ key -> val! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:31'!parseDict	| assoc dict |	dict := Dictionary new.	self assert: readStream peek = ${.	readStream next. "skip ${"	[self skipSeparators.	readStream peek = $} ] whileFalse: [ 		assoc := self parseKeyValue.		dict at: assoc key put: assoc value ].	readStream next. "skip $}"	^ dict! !----SNAPSHOT----2018-01-26T11:31:48.045157+01:00 Pharo.image priorSource: 5609!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:33' prior: 33560209!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id) asFileReference readStream ]! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:33' prior: 33561929!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id , '.txt') asFileReference readStream ]! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:33' prior: 33562167!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream ]! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:34' prior: 33559953!resourcesToImport	^ #('addon_english.txt'		 'addon_schinese.txt'		 'addon_tchinese.txt')! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:34' prior: 33562414!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream contents readStream ]! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 12:03'!skipUntilRelevant	[readStream peek = $" 		or: [ readStream peek = ${		or: [ readStream peek = $} ] ]] whileFalse: [ readStream next ].! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 12:03' prior: 33560577!parse: rs	readStream := rs.	self skipUntilRelevant.	^ self parseKeyValue! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 12:03' prior: 33561457!parseDict	| assoc dict |	dict := Dictionary new.	self assert: readStream peek = ${.	readStream next. "skip ${"	[self skipUntilRelevant.	readStream peek = $} ] whileFalse: [ 		assoc := self parseKeyValue.		dict at: assoc key put: assoc value ].	readStream next. "skip $}"	^ dict! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 12:04' prior: 33561199!parseKeyValue	| key val |	key := self parseString.	self skipUntilRelevant.	val := (readStream peek = $"		ifTrue: [ self parseString ]		ifFalse: [ self parseDict ]).	^ key -> val! !GemTDParser removeSelector: #skipSeparators!----SNAPSHOT----2018-01-26T12:04:19.299262+01:00 Pharo.image priorSource: 7312!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 12:05' prior: 33562851!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ]! !----QUIT----2018-01-26T12:11:53.855358+01:00 Pharo.image priorSource: 9659!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-01-26T16:25:21.291105+01:00 Pharo.image priorSource: 10015!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-01-26T16:28:56.846216+01:00 Pharo.image priorSource: 13017!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!Object subclass: #GemTDGod	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!Object subclass: #GemTDGod	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!Object subclass: #GemTDImporter	instanceVariableNames: 'resources script'	classVariableNames: ''	package: 'GemTD-Analysis'!Object subclass: #GemTDImporter	instanceVariableNames: 'resources scripts'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:31' prior: 33564276!importResources	^ resources := (self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:31'!importNPC	^ resources := (self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:31'!npcToImport	^ #(npc_abilities_custom.txt		 npc_units_custom.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:31' prior: 33559715!scriptsToImport	^ #(scripts/vscripts/addon_game_mode.lua)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:32' prior: 33574745!scriptsToImport	^ #(vscripts/addon_game_mode.lua)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:32' prior: 33574304!importNPC	^ npcs := (self npcToImport collect: [ :id |		GemTDParser new parse: ('scripts/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:32'!importScript	^ scripts := (self scriptsToImport collect: [ :id |		('scripts/' , id ) asFileReference readStream binary contents asString ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:33'!importAll	self importResources.	self importNPC.	self importScript.! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:33' prior: 33575067!importNPC	^ npcs := (self npcToImport collect: [ :id |		GemTDParser new parse: ('scripts/npc' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:34' prior: 33575731!importNPC	^ npcs := (self npcToImport collect: [ :id |		GemTDParser new parse: ('scripts/npc/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:34' prior: 33574572!npcToImport	^ #('npc_abilities_custom.txt'		 'npc_units_custom.txt')! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:34' prior: 33574910!scriptsToImport	^ #('vscripts/addon_game_mode.lua')! !!GemTDGod methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:36'!process	| importer |	importer := GemTDImporter new.	importer importAll.	! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:36' prior: 33576597!process	| importer |	importer := GemTDImporter new.	importer importAll.	self generateTowers.! !Object subclass: #GemTDElement	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDElement subclass: #GemTDTower	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDTower subclass: #GemTDBaseTower	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDTower subclass: #GemTDAdvancedTower	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!----SNAPSHOT----2018-01-26T16:36:38.055292+01:00 Pharo.image priorSource: 16020!Object subclass: #GemTDElement	instanceVariableNames: 'codeName'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:36'!codeName	^ codeName! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:36'!codeName: anObject	codeName := anObject! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:37'!generateTowers	| towers |	towers := OrderedCollection new.	self units do: [ :u |		towers add: (self genTower: u) ].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:37'!units	^ importer units! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:38' prior: 33576765!process	importer := GemTDImporter new.	importer importAll.	self generateTowers.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:38'!units	1halt.	^ npcs at: 'DOTA'! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:39' prior: 33578295!units	^ (npcs at:'DOTAUnits') keys! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:39' prior: 33578132!process	importer := GemTDImporter new.	importer importAll.	self generate.! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:39'!generate	| towers |	towers := OrderedCollection new.	self units do: [ :u |		towers add: (self genTower: u) ].! !GemTDGod removeSelector: #generateTowers!!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:40' prior: 33578703!generate	| units |	self units do: [ :u |		units := ((self unitType: u) newFrom: u with: importer)].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:41'!unitType: u	1halt.	(importer units at: u)! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:41' prior: 33574030!importResources	^ resources := (self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:41' prior: 33576006!importNPC	^ npcs := ((self npcToImport collect: [ :id |		GemTDParser new parse: ('scripts/npc/' , id ) asFileReference readStream binary contents asString readStream ])) asDictionary! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:42' prior: 33578424!units	^ (npcs at:'DOTAUnits')! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:42' prior: 33578951!generate	| units |	self units keysDo: [ :u |		units := ((self unitType: u) newFrom: u with: importer)].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:42' prior: 33579952!generate	| units |	self units keysDo: [ :u |		u halt.		units := ((self unitType: u) newFrom: u with: importer)].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:43' prior: 33580150!generate	| units |	self units keysAndValuesDo: [ :u :details |		u halt.		units := ((self unitType: u) newFrom: u with: importer)].! !GemTDElement subclass: #GemTDCreep	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:46' prior: 33580358!generate	| units |	self units keysAndValuesDo: [ :u :details |		| cls |		cls := ((details at: 'Model') beginsWith:'models/items/wards/')			ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]			ifFalse: [ GemTDCreep ].				units := cls newFrom: u with: details importer: importer].! !!GemTDElement class methodsFor: 'instance creation' stamp: 'ClementBera 1/26/2018 16:46'!newFrom: aString with: aCollection importer: aGemTDImporter 	self shouldBeImplemented.! !!GemTDElement class methodsFor: 'instance creation' stamp: 'ClementBera 1/26/2018 16:47' prior: 33581111!newFrom: codeName with: details importer: importer 	^ self new 			codeName: codeName;		importWith: details importer: importer;		yourself! !!GemTDBaseTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:47'!importWith: details importer: importer! !!GemTDBaseTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:48' prior: 33581540!importWith: details importer: importer	"!!!! Chipped Sapphire / B1+file://wards/crystal_maiden_ward.png|width=10+|!! Code |!! English |!! S. Chinese |!! T. Chinese|| gemtd_b1 || Smalltalk || Hypra cool || baz|!! Damage |!! Rate |!! Range |!! Projectile Speed| 2	| 1 | 600 | 3000|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !Object subclass: #GemTDElement	instanceVariableNames: 'codeName enName schName tchName'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!enName	^ enName! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!enName: anObject	enName := anObject! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!schName	^ schName! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!schName: anObject	schName := anObject! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!tchName	^ tchName! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!tchName: anObject	tchName := anObject! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:48'!importWith: details importer: importer	! !!GemTDBaseTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:48' prior: 33581686!importWith: details importer: importer	super importWith: details importer: importer.	"!!!! Chipped Sapphire / B1+file://wards/crystal_maiden_ward.png|width=10+|!! Code |!! English |!! S. Chinese |!! T. Chinese|| gemtd_b1 || Smalltalk || Hypra cool || baz|!! Damage |!! Rate |!! Range |!! Projectile Speed| 2	| 1 | 600 | 3000|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !----SNAPSHOT----2018-01-26T16:49:00.102613+01:00 Pharo.image priorSource: 22896!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:49' prior: 33582930!importWith: details importer: importer		"!!!!|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:49' prior: 33583681!importWith: details importer: importer		"names (3 lang) + abilities.|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:49' prior: 33583078!importWith: details importer: importer	super importWith: details importer: importer.	"pic"! !!GemTDTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:50'!importWith: details importer: importer	super importWith: details importer: importer.	"	|!! Damage |!! Rate |!! Range |!! Projectile Speed| 2	| 1 | 600 | 3000"! !Object subclass: #GemTDElement	instanceVariableNames: 'codeName enName schName tchName abilities'	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDElement subclass: #GemTDAbility	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!----SNAPSHOT----2018-01-26T16:50:32.156965+01:00 Pharo.image priorSource: 29073!----SNAPSHOT----2018-01-26T16:50:34.679073+01:00 Pharo.image priorSource: 30360!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:50' prior: 33583917!importWith: details importer: importer	1halt.		"names (3 lang) + abilities.|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!resources	^ resources! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!resources: anObject	^ resources := anObject! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!scripts	^ scripts! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!scripts: anObject	^ scripts := anObject! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!npcs	^ npcs! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!npcs: anObject	^ npcs := anObject! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:51' prior: 33579269!importResources	resources := (self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ]).	self reworkResources.	^ resources! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:51'!reworkResources	resources halt.! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:52' prior: 33586272!reworkResources	| newDict |	newDict := Dictionary new.	resources do: [ :res |		res halt. ]! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:53' prior: 33586401!reworkResources	| newDict |	newDict := Dictionary new.	resources do: [ :res |		newDict at: (res value at: 'Language') put: (res value at: 'Tokens') ].	resources := newDict.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:53' prior: 33585050!importWith: details importer: importer	importer resources .	1halt.		"names (3 lang) + abilities.|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 16:54' prior: 33560878!parseString	| ws str |	ws := WriteStream on: (ByteString new: 20).	self assert: readStream peek = $".	readStream next. "skip ''"	[readStream peek = $"] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip ''"	str := ws contents.	str removeAll: Character null.	1halt.	^ str	! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 16:55' prior: 33587151!parseString	| ws str |	ws := WriteStream on: (ByteString new: 20).	self assert: readStream peek = $".	readStream next. "skip ''"	[readStream peek = $"] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip ''"	^ ws contents reject: [ :e | e = Character null].		! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:57' prior: 33586592!reworkResources	| newDict |	newDict := Dictionary new.	resources with: #(en sch tch)  do: [ :res :l |		newDict at: l put: (res value at: 'Tokens') ].	resources := newDict.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:59' prior: 33586866!importWith: details importer: importer	enName := (importer resources at: 'en') at: codeName ifAbsent: ['Resource imported incorrectly'].		1halt.		"names (3 lang) + abilities.|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !GemTDElement subclass: #GemTDAbility	instanceVariableNames: 'tooltip'	classVariableNames: ''	package: 'GemTD-Analysis'!Object subclass: #GemTDElement	instanceVariableNames: 'codeName name abilities'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:03' prior: 33588201!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i).		ab = '' ifFalse: [ 			abilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ]! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:03' prior: 33588827!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i).		ab = '' ifFalse: [ 			abilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].	hiddenAbilities := OrderedCollection new.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:03' prior: 33589315!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i).		ab = '' ifFalse: [ 			abilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].	hiddenAbilities := OrderedCollection new.	9 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i).		ab = '' ifFalse: [ 			hiddenAbilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:03' prior: 33589847!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			abilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].	hiddenAbilities := OrderedCollection new.	9 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			hiddenAbilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 17:05' prior: 33580699!generate	| units |	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		(u name beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ GemTDCreep ].		units add: (cls newFrom: u with: details importer: importer)]].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 17:05' prior: 33591262!generate	| units |	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ GemTDCreep ].		units add: (cls newFrom: u with: details importer: importer)]].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 17:05' prior: 33578551!process	importer := GemTDImporter new.	importer importAll.	self generate.	1halt.! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 17:05' prior: 33591752!generate	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ GemTDCreep ].		units add: (cls newFrom: u with: details importer: importer)]].! !!GemTDTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:06' prior: 33584358!importWith: details importer: importer	super importWith: details importer: importer.	1halt.		"	|!! Damage |!! Rate |!! Range |!! Projectile Speed| 2	| 1 | 600 | 3000"! !!GemTDTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:08' prior: 33592890!importWith: details importer: importer	super importWith: details importer: importer.	damage := details at: 'AttackDamageMin'.	range := details at: 'AttackRange'.	rate := details at: 'AttackRate'.	projectileSpeed := details at: 'ProjectileSpeed'.! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:08' prior: 33584178!importWith: details importer: importer	super importWith: details importer: importer.	"pic"	1halt.! !GemTDElement subclass: #GemTDTower	instanceVariableNames: 'damage range rate projectileSpeed picture'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:10' prior: 33593505!importWith: details importer: importer	super importWith: details importer: importer.	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDAdvancedTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:10'!importWith: details importer: importer	super importWith: details importer: importer.	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:10' prior: 33594110!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:11' prior: 33594367!importWith: details importer: importer	super importWith: details importer: importer.	picture := codeName.! !----SNAPSHOT----2018-01-26T17:11:55.474281+01:00 Pharo.image priorSource: 30442!----SNAPSHOT----2018-01-26T17:11:58.906938+01:00 Pharo.image priorSource: 40310!----SNAPSHOT----2018-01-26T17:12:00.937399+01:00 Pharo.image priorSource: 40392!----SNAPSHOT----2018-01-26T17:12:04.797246+01:00 Pharo.image priorSource: 40474!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:12' prior: 33590545!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			abilities add: (GemTDAbility newFrom: ab importer: importer) ] ].	hiddenAbilities := OrderedCollection new.	9 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			hiddenAbilities add: (GemTDAbility newFrom: ab importer: importer ) ] ].! !!GemTDAbility class methodsFor: '*Alien-Core' stamp: 'ClementBera 1/26/2018 17:12'!newFrom: aString importer: aGemTDImporter 	self shouldBeImplemented.! !!GemTDAbility class methodsFor: '*Alien-Core' stamp: 'ClementBera 1/26/2018 17:13' prior: 33595874!newFrom: codeName importer: importer	^ self new 				codeName: codeName;			importWith: importer;			yourself ! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:13'!importWith: aGemTDImporter 	self shouldBeImplemented.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:13'!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:13' prior: 33595164!importWith: details importer: importer	self importNameWithImporter: importer.	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			abilities add: (GemTDAbility newFrom: ab importer: importer) ] ].	hiddenAbilities := OrderedCollection new.	9 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			hiddenAbilities add: (GemTDAbility newFrom: ab importer: importer ) ] ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:14' prior: 33596248!importWith: importer 	self importNameWithImporter: importer.	! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:14' prior: 33597280!importWith: importer 	1halt.	self importNameWithImporter: importer.	! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:16' prior: 33597449!importWith: importer 	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Resource imported incorrectly']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Resource imported incorrectly']) ].! !----QUIT----2018-01-26T17:16:48.058291+01:00 Pharo.image priorSource: 40556!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:20' prior: 33597626!importWith: importer 	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Resource imported incorrectly']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Resource imported incorrectly']) ].	self! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:21' prior: 33601147!importWith: importer 	name := Dictionary s.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Resource imported incorrectly']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Resource imported incorrectly']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:21' prior: 33601671!importWith: importer 	name := Dictionary s.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:21' prior: 33596383!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Unavailable']) ].! !----QUIT----2018-01-27T10:22:13.409502+01:00 Pharo.image priorSource: 43609!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:22' prior: 33602187!importWith: importer 	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 10:24' prior: 33592237!process	importer := GemTDImporter new.	importer importAll.	self generate.	self exportBaseTowers.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:24'!exportBaseTowers	self shouldBeImplemented.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:25' prior: 33606580!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	units do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].	1halt.! !!GemTDBaseTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:25'!exportOn: s	! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:25'!exportOn: s! !GemTDBaseTower removeSelector: #exportOn:!!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:26' prior: 33593860!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:26' prior: 33607183!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	"base/B"	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:31' prior: 33607029!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=10+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (name at: 'sch')		<< ' | ' <<  (name at: 'tch').	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ]! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:34'!shortExportOn: s	s << '|!! Ability Code |!! Name (en) |!! Tooltip (en) |!! Name (sch) |!! Tooltip (sch) |!! Name (tch) |!! Tooltip (tch)'.	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en')		<< ' | ' << (name at: 'sch')		<< ' | ' << (tooltip at: 'sch')		<< ' | ' << (name at: 'tch')		<< ' | ' << (tooltip at: 'tch').	s cr.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:34' prior: 33606712!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	units do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].	s contents.! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:35' prior: 33607444!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'base/' , (codeName at: (codeName indexOf: $_) + 1) asUppercase asString! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:36' prior: 33594632!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:36' prior: 33608829!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	units do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].	s contents.	1halt.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:36' prior: 33609597!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	self orderedBaseTowers do: [ :u |  u exportOn: s ].	s contents.	1halt.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:36'!orderedBaseTowers	self shouldBeImplemented.! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:38' prior: 33609114!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'base/' , (codeName at: 7) asUppercase asString! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:39' prior: 33610128!orderedBaseTowers	| baseTowers |	baseTowers := units select: [:u | u class = GemTDBaseTower ].	baseTowers sort: [ :a :b |		"comp type B, G, etc."		(a codeName at: 7) = (b codeName at: 7)			ifFalse: [ (a codeName at: 7) <= (b codeName at: 7) ]			ifTrue: [ a size < b size ]		 ].	^ baseTowers! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:40' prior: 33610505!orderedBaseTowers	| baseTowers |	baseTowers := units select: [:u | u class = GemTDBaseTower ].	baseTowers sort: [ :a :b |		"comp type B, G, etc."		(a codeName at: 7) = (b codeName at: 7)			ifFalse: [ (a codeName at: 7) <= (b codeName at: 7) ]			ifTrue: [ a codeName size < b codeName size ]		 ].	^ baseTowers! !----SNAPSHOT----2018-01-27T10:40:44.631649+01:00 Pharo.image priorSource: 48401!----SNAPSHOT----2018-01-27T10:40:50.647843+01:00 Pharo.image priorSource: 56781!----SNAPSHOT----2018-01-27T10:41:05.095765+01:00 Pharo.image priorSource: 56863!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:43' prior: 33609880!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	self orderedBaseTowers do: [ :u |  u exportOn: s ].	'export/baseTowers.pillar' asFileReference writeStream nextPutAll: s contents.	1halt.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:44' prior: 33607707!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (name at: 'sch')		<< ' | ' <<  (name at: 'tch').	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ]! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:45' prior: 33605939!importWith: importer 	name := Dictionary new.	1halt.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:48' prior: 33612566!importWith: importer 	| details |	name := Dictionary new.	details := (importer npcs at: 'DOTAAbilities') at: codeName.	1halt.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:51' prior: 33613056!importWith: importer 	| details |	name := Dictionary new.	details := (importer npcs at: 'DOTAAbilities') at: codeName.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:51' prior: 33613621!importWith: importer 	| details |	name := Dictionary new.	"details := (importer npcs at: 'DOTAAbilities') at: codeName."	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:52' prior: 33611545!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	self orderedBaseTowers do: [ :u |  u exportOn: s ].	'export/baseTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 10:52' prior: 33606407!process	importer := GemTDImporter new.	importer importAll.	self generate.	self exportBaseTowers.	self exportAdvancedTowers.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:52'!exportAdvancedTowers	self shouldBeImplemented.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:53' prior: 33615247!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	self units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:53' prior: 33615383!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	self units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].	1halt.	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:54' prior: 33615746!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].	1halt.	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:54' prior: 33616117!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !----QUIT----2018-01-27T10:58:23.631402+01:00 Pharo.image priorSource: 56945!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:03' prior: 33608367!shortExportOn: s	s << '|!! Ability Code |!! Name (en) |!! Tooltip (en) |!! Other Languages' "Name (sch) |!! Tooltip (sch) |!! Name (tch) |!! Tooltip (tch)'".	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en')		<< ' | ' << 'Disabled'		"<< ' | ' << (name at: 'sch')		<< ' | ' << (tooltip at: 'sch')		<< ' | ' << (name at: 'tch')		<< ' | ' << (tooltip at: 'tch')".	s cr.! !----QUIT----2018-01-27T11:03:33.487905+01:00 Pharo.image priorSource: 62323!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-01-27T11:04:21.174296+01:00 Pharo.image priorSource: 65838!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:14' prior: 33611878!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ]! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:14' prior: 33626364!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	abilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:14' prior: 33627063!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:15'!shortExportHiddenOn: s	s << '|!! Hidden Ability Code |!! Name (en) |!! Tooltip (en) |!! Other Languages' "Name (sch) |!! Tooltip (sch) |!! Name (tch) |!! Tooltip (tch)'".	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en')		<< ' | ' << 'Disabled'		"<< ' | ' << (name at: 'sch')		<< ' | ' << (tooltip at: 'sch')		<< ' | ' << (name at: 'tch')		<< ' | ' << (tooltip at: 'tch')".	s cr.! !----SNAPSHOT----2018-01-27T11:15:11.660114+01:00 Pharo.image priorSource: 68841!!GemTDCreep methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 11:16'!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:16'!importWith: details importer: importer	super importWith: details importer: importer.	! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:16' prior: 33629651!importWith: details importer: importer	super importWith: details importer: importer.	1halt.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:18' prior: 33629829!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	ms := details at: 'MovementSpeed (NumPlayer factor)'.	res := details at: 'MagicalResistance'.	1halt.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:19' prior: 33630013!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed (NumPlayer factor)'.	res := details at: 'MagicalResistance'.	1halt.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:19' prior: 33630324!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed (NumPlayer factor)'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.	1halt.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:19' prior: 33630678!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed (NumPlayer factor)'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:21' prior: 33629163!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement |!! Simplified Chinese |!! Traditional Chinese'.	s cr.		abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:21' prior: 33631071!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:22' prior: 33631456!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (*NumPlayer factor) |!! Armor |!! Magic resistance'.	s cr.	1halt.	s 		<< '| ' << level 		<< ' | ' <<  ms << '(' << mc << ')'		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:22' prior: 33615046!process	importer := GemTDImporter new.	importer importAll.	self generate.	self exportBaseTowers.	self exportAdvancedTowers.	self exportCreeps.! !GemTDGod removeSelector: #unitType:!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:23'!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:23'!orderedCreeps	| creeps |	creeps := units select: [:u | u class = GemTDCreep ].	creeps sort: [ :a :b |		a level asInteger < b level asInteger		 ].	^ creeps! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!level	^ level! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!level: anObject	level := anObject! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!ms	^ ms! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!ms: anObject	ms := anObject! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!res	^ res! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!res: anObject	res := anObject! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!mc	^ mc! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!mc: anObject	mc := anObject! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!armor	^ armor! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!armor: anObject	armor := anObject! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:24' prior: 33632414!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (*NumPlayer factor) |!! Armor |!! Magic resistance'.	s cr.	1halt.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:24' prior: 33634908!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (*NumPlayer factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:27' prior: 33635658!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:27' prior: 33636400!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiplied by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:27' prior: 33637131!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:29' prior: 33637876!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:31' prior: 33633379!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	1halt.	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:31' prior: 33639367!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:35' prior: 33638619!exportOn: s	(name at: 'en') = 1 ifTrue: [ ^ self ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:35' prior: 33639989!exportOn: s	(name at: 'en') = 'Unavailable' ifTrue: [ ^ self ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:35' prior: 33632048!importWith: details importer: importer	1halt.	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 11:36' prior: 33614178!importWith: importer 	| details |	1halt.	name := Dictionary new.	"details := (importer npcs at: 'DOTAAbilities') at: codeName."	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 11:42' prior: 33641972!importWith: importer 	| details |	name := Dictionary new.	"details := (importer npcs at: 'DOTAAbilities') at: codeName."	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:42' prior: 33641583!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !----QUIT----2018-01-27T11:42:33.417816+01:00 Pharo.image priorSource: 74564!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:45' prior: 33640780!exportOn: s	(name at: 'en') = 'Unavailable' ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !----QUIT----2018-01-27T11:45:35.669432+01:00 Pharo.image priorSource: 88929!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:47' prior: 33646452!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:48' prior: 33639681!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: Some creeps may not be used by default in the game.'	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:48' prior: 33651124!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: Some creeps may not be used by default in the game.'.	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !----QUIT----2018-01-27T11:48:23.239948+01:00 Pharo.image priorSource: 92752!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:49' prior: 33650275!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !----QUIT----2018-01-27T11:49:26.643546+01:00 Pharo.image priorSource: 97365!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:51' prior: 33643083!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:52' prior: 33658743!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.	hp := details at: 'StatusHealth'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:52' prior: 33659117!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.	hp := details at: 'StatusHealth'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:52' prior: 33654888!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! HP |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !----SNAPSHOT----2018-01-27T11:52:37.132638+01:00 Pharo.image priorSource: 101220!----QUIT----2018-01-27T11:52:57.7912+01:00 Pharo.image priorSource: 106253!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:53' prior: 33659927!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Base HP |!! Base Movement |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !----SNAPSHOT----2018-01-27T11:53:46.464414+01:00 Pharo.image priorSource: 106336!----SNAPSHOT----2018-01-27T11:54:02.426605+01:00 Pharo.image priorSource: 110173!----QUIT----2018-01-27T11:54:05.06218+01:00 Pharo.image priorSource: 110256!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-01-27T12:01:44.077057+01:00 Pharo.image priorSource: 110339!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-01-27T12:02:38.238152+01:00 Pharo.image priorSource: 110339!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 13:40' prior: 33609387!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:40'!combinations	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:45' prior: 33674106!combinations	combinations ifNotNil: [ ^ combinations ].	combinations := Dictionary new.	self parseCombinations: 'GameRules.gemtd_merge'.	self parseCombinations: 'GameRules.gemtd_merge_secret'.	^ combinations! !Object subclass: #GemTDLuaParser	instanceVariableNames: 'readStream'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDLuaParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 13:47'!parse: rs	readStream := rs.	self skipUntilRelevant.	^ self parseKeyValue! !GemTDParser subclass: #GemTDLuaParser	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:48'!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	1halt.! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 13:48' prior: 33673896!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	importer combinations.	1halt.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:49' prior: 33674650!parse: rs	result := Dictionary new.	readStream := rs.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ self parseCombination ]! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:49'!skipSeparators	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:50' prior: 33675601!skipSeparators	[readStream peek isSeparator] whileTrue: [ readStream next ].! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:50'!parseCombination	self ! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:51' prior: 33675870!parseCombination	| ws str |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = $=] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:51'!parseRes	| ws str |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = $=] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:52' prior: 33675989!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:55'!parseCombo	| str1 ws |	ws := WriteStream on: (Array new: 5).	[readStream peek = ${] whileFalse: [ readStream next].	readStream next. "skip {"	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ ws nextPut: self parseString ].	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:55' prior: 33676798!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	[readStream peek = ${] whileFalse: [ readStream next].	readStream next. "skip {"	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ ws nextPut: self parseString ].	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:55' prior: 33676635!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	result at: res put: combo! !----SNAPSHOT----2018-01-27T13:56:22.607608+01:00 Pharo.image priorSource: 110339!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:57' prior: 33674924!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	GemTDLuaParser new parse: (scripts first copyFrom: i + 2 to: i + 100000) readStream.	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:58' prior: 33677841!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	GemTDLuaParser new parse: (scripts first copyFrom: i + 4 to: i + 100000) readStream.	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:58' prior: 33678128!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.	1halt.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:58' prior: 33675380!parse: rs	result := Dictionary new.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ self parseCombination ]! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:59' prior: 33677178!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	[readStream peek = ${] whileFalse: [ readStream next].	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ ws nextPut: self parseString ].	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:00' prior: 33678977!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	[readStream peek = ${] whileFalse: [ readStream next].	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: self parseString ].	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:01' prior: 33679374!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: self parseString ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:04' prior: 33677553!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	result at: res put: combo.	res = 'gemtd_haibao' ifTrue: [ 1halt ].! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:05' prior: 33680363!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	result at: res put: combo.	res trim = 'gemtd_haibao' ifTrue: [ 1halt ].! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:06' prior: 33678697!parse: rs	result := Dictionary new.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self parseCombination.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]	]! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 14:06' prior: 33678415!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:07' prior: 33680609!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	result at: res put: combo.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:07' prior: 33680860!parse: rs	result := Dictionary new.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self parseCombination.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]].	^ result! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 14:07' prior: 33681222!parseCombinations: sub	| i combos |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	combos := GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.	combos keysAndValuesDo: [ :k :v |		combinations at: k put: v ]	 ! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 14:08' prior: 33674223!combinations	combinations ifNotNil: [ ^ combinations ].	combinations := Dictionary new.	self parseCombinations: 'GameRules.gemtd_merge'.	self parseCombinations: 'GameRules.gemtd_merge_secret'.	1halt.	^ combinations! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 14:08' prior: 33682432!combinations	combinations ifNotNil: [ ^ combinations ].	combinations := Dictionary new.	self parseCombinations: 'GameRules.gemtd_merge'.	self parseCombinations: 'GameRules.gemtd_merge_secret'.	^ combinations! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:08' prior: 33675131!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:09' prior: 33683064!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ]! !!GemTDAdvancedTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 14:09'!exportOn: s	super exportOn: s.	1halt.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:13' prior: 33683613!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).		1halt.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:14'!enNameFor: key importer: importer	^ (importer resources at: 'en') at: codeName ifAbsent: ['Unavailable']! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:14' prior: 33683751!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.	1halt.! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:15' prior: 33683333!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ].	comboNames := combo collect: [ :c | self enNameFor: c importer: importer ].! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:15' prior: 33684461!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.	1halt.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:15' prior: 33685355!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:16' prior: 33686215!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:16' prior: 33687067!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----SNAPSHOT----2018-01-27T14:16:59.794337+01:00 Pharo.image priorSource: 123232!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:17' prior: 33684257!enNameFor: key importer: importer	^ (importer resources at: 'en') at: key ifAbsent: ['Unavailable']! !----QUIT----2018-01-27T14:18:21.211368+01:00 Pharo.image priorSource: 134282!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-01-27T14:19:59.41277+01:00 Pharo.image priorSource: 134562!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:20' prior: 33687920!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----SNAPSHOT----2018-01-27T14:20:49.382902+01:00 Pharo.image priorSource: 134562!----QUIT----2018-01-27T14:20:53.48445+01:00 Pharo.image priorSource: 141482!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:54'!exportNamesOn: s	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:54' prior: 33663858!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	self exportNamesOn: s.	s << '|!! Base HP |!! Base Movement |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:55'!exportAbilitiesOn: s	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:55' prior: 33699422!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	self exportNamesOn: s.	s << '|!! Base HP |!! Base Movement |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	self exportAbilitiesOn: s! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:55' prior: 33627816!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:55' prior: 33700776!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	self exportAbilitiesOn: s! !----SNAPSHOT----2018-01-27T14:55:56.519498+01:00 Pharo.image priorSource: 141565!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:56' prior: 33699074!exportNamesOn: s	s << '|!! Code |!! English |!! Short name |!! '.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:56' prior: 33701865!exportNamesOn: s	s << '|!! Code |!! English |!! Short name |!! '.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  ''.	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:56' prior: 33702188!exportNamesOn: s	s << '|!! Code |!! English |!! Short name |!! '.	s cr.	1halt.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  1		<< ' | ' <<  ''.	s cr.! !----QUIT----2018-01-27T14:57:14.799283+01:00 Pharo.image priorSource: 147260!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:00'!initialsFrom: n	| s |	s := n splitOn: '/'.	s size = 2 ifTrue: [ s at: 2 ].	1halt.	^ (s substrings collect: [ :e | e first capitalized ])! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:00' prior: 33702484!exportNamesOn: s	s << '|!! Code |!! English |!! Short name |!! '.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (self initialsFrom: (name at: 'en')) 		<< ' | ' <<  ''.	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:01' prior: 33705748!initialsFrom: n	| s |	s := n splitOn: '/'.	s size = 2 ifTrue: [ s at: 2 ].	self assert: s size = 1.	^ String newFrom: (s first substrings collect: [ :e | e first asUppercase ])  ! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:01' prior: 33706286!initialsFrom: n	| s |	s := n splitOn: '/'.	s size = 2 ifTrue: [ ^ s at: 2 ].	self assert: s size = 1.	^ String newFrom: (s first substrings collect: [ :e | e first asUppercase ])  ! !GemTDAbility removeSelector: #shortExportHiddenOn:!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:02' prior: 33619848!shortExportOn: s	s << '|!! Ability Code |!! Ability English |!! Tooltip English |!! Other' "Name (sch) |!! Tooltip (sch) |!! Name (tch) |!! Tooltip (tch)'".	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en')		<< ' | ' << ''		"<< ' | ' << (name at: 'sch')		<< ' | ' << (tooltip at: 'sch')		<< ' | ' << (name at: 'tch')		<< ' | ' << (tooltip at: 'tch')".	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:04' prior: 33705982!exportNamesOn: s	s << '|!! Code |!! English |!! Initials |!! '.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (self initialsFrom: (name at: 'en')) 		<< ' | ' <<  ''.	s cr.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:06' prior: 33695104!exportOn: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	super exportOn: s.	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----SNAPSHOT----2018-01-27T15:06:43.947852+01:00 Pharo.image priorSource: 148238!----QUIT----2018-01-27T15:07:06.384014+01:00 Pharo.image priorSource: 154082!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:11' prior: 33707704!exportOn: s	((combo isNil or: [ combo size < 2 ]) and: [ (name at: 'en') = 'Unavailable' ])		ifTrue: [ ^ self ].	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:12' prior: 33711697!exportOn: s	((combo isNil or: [ combo size < 2 ]) and: [ (name at: 'en') = 'Unavailable' ])		ifTrue: [ ^ self ].	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----SNAPSHOT----2018-01-27T15:12:06.446999+01:00 Pharo.image priorSource: 154165!----SNAPSHOT----2018-01-27T15:12:08.761629+01:00 Pharo.image priorSource: 159187!----SNAPSHOT----2018-01-27T15:12:11.758573+01:00 Pharo.image priorSource: 159270!!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 15:13' prior: 33633120!process	importer := GemTDImporter new.	importer importAll.	self generate.	self clearExport.	self exportBaseTowers.	self exportAdvancedTowers.	self exportCreeps.! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 15:14'!clearExport	'export' asFileReference children do: #delete! !----QUIT----2018-01-27T15:19:10.746718+01:00 Pharo.image priorSource: 159353!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:02' prior: 33616483!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	self orderedAdvancedTowers do: [ :u | u exportOn: s ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:05'!orderedAdvancedTowersFor: key with: order	| baseTowers |	baseTowers := units select: [:u | u class = GemTDAdvancedTower ].		^ baseTowers! !GemTDGod removeSelector: #exportAdvancedTowers!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:05'!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	self orderedAdvancedTowers do: [ :u | u exportOn: s ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !GemTDLuaParser subclass: #GemTDKikooParser	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDKikooParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 16:07'!parseRes	| ws str |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = ${] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:07' prior: 33724251!parseRes	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = ${] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:08' prior: 33724580!parseRes	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = Character space] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:08'!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseRes.	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: self parseRes ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:10' prior: 33723785!exportAdvancedTowers	| s order |	s := WriteStream on: (WideString new: 10000).	order := GemTDKikooParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		towerCodes do: [ :tc |			units halt.			 ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:12' prior: 33725755!exportAdvancedTowers	| s order printed others|	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDKikooParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | each class = GemTDAdvancedTower and: [ (printed includes: each codeName) not ] ].	1halt.	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:14' prior: 33726244!exportAdvancedTowers	| s order printed others|	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDKikooParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | each class = GemTDAdvancedTower and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:14' prior: 33712706!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----QUIT----2018-01-27T16:15:25.385869+01:00 Pharo.image priorSource: 159829!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:22'!parseDirect	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = Character space] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:22' prior: 33725227!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseDirect.	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: self parseDirect ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:23' prior: 33724905!parseRes	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = ${] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:23' prior: 33732613!parseRes	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = ${] whileFalse: [ 		ws nextPut: readStream next].	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:24' prior: 33681701!parse: rs	result := self dictClass new.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self parseCombination.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]].	^ result! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:24'!dictClass 	^ Dictionary! !!GemTDKikooParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 16:24'!dictClass 	^ OrderedDictionary! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:24'!parseComboWith: parseSelector	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	self skipSeparators.	ws nextPut: (self perform: parseSelector).	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: (self perform: parseSelector) ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:25' prior: 33679822!parseCombo	self parseComboWith: #parseString! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:25' prior: 33732070!parseCombo	self parseComboWith: #parseDirect! !----SNAPSHOT----2018-01-27T16:25:14.746883+01:00 Pharo.image priorSource: 174214!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 16:26' prior: 33682073!parseCombinations: sub	| i combos |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	combos := GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.	1halt.	combos keysAndValuesDo: [ :k :v |		combinations at: k put: v ]	 ! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 16:26' prior: 33734772!parseCombinations: sub	| i combos |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	combos := GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.	combos keysAndValuesDo: [ :k :v |		combinations at: k put: v ]	 ! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:27' prior: 33734404!parseCombo	^ self parseComboWith: #parseString! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:27' prior: 33734547!parseCombo	^ self parseComboWith: #parseDirect! !----QUIT----2018-01-27T16:27:44.828854+01:00 Pharo.image priorSource: 180163!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 17:42' prior: 33701318!exportOn: s	| width |	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 12 ] ifFalse: [ 8 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	self exportAbilitiesOn: s! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:44' prior: 33602658!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: [			self getFallBackNames halt.			'Unavailable']) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:44'!getFallBackNames 	^ 'extra/fallBackName.txt' asFileReference readStream contents readStream! !(Smalltalk globals at: #GemTDKikooParser) rename: #GemTDOrderParser!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 17:45' prior: 33726990!exportAdvancedTowers	| s order printed others|	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | each class = GemTDAdvancedTower and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !GemTDParser subclass: #GemTDNameParser	instanceVariableNames: 'result'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDNameParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 17:46'!parse: rs	readStream := rs.	readStream next. "skip {"	self skipSeparators.! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:46'!skipSeparators	[readStream peek isSeparator] whileTrue: [ readStream next ].! !GemTDLuaParser removeSelector: #skipSeparators!!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:46' prior: 33740867!parse: rs	result := OrderedCollection new.	readStream := rs.	readStream next. "skip {"	self skipSeparators.	! !GemTDOrderParser subclass: #GemTDNameParser	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:47' prior: 33741244!parse: rs	result := OrderedCollection new.	readStream := rs.	readStream next. "skip {"	self skipSeparators.	! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:49' prior: 33741578!parse: rs	result := OrderedCollection new.	readStream := rs.	readStream next. "skip {"	self skipSeparators.	[result add: self parseDirect.	 self skipSeparators.	readStream peek = $}] whileFalse.	^ Dictionary newFromPairs: result! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:49' prior: 33739651!getFallBackNames 	^ GemTDNameParser new parse: ('extra/fallBackName.txt' asFileReference readStream contents readStream)! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:49' prior: 33739363!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: [			self getFallBackNames halt.			'Unavailable']) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:50' prior: 33742339!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: [			self getFallBackNames at: codeName ifAbsent: ['Unavailable'] ]) ].! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:52' prior: 33741788!parse: rs	result := OrderedCollection new.	readStream := rs.	readStream next. "skip {"	self skipSeparators.	[result add: self parseDirect.	 self skipSeparators.	readStream peek = $}] whileFalse.	2 to: result size by: 2 do: [ :i |		result at: i put: (self rework: (result at: i)) ].	^ Dictionary newFromPairs: result! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:54'!rework: string	| ws noUp |	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		 ]! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:55' prior: 33743370!rework: string	| ws noUp |	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: rs next ]! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:55' prior: 33743723!rework: string	| ws noUp |	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: rs next ].	^ ws contents trimBoth! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:55' prior: 33744095!rework: string	| ws noUp |	1halt.	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: rs next ].	^ ws contents trimBoth! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:56' prior: 33744492!rework: string	| ws noUp |	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		[rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !----SNAPSHOT----2018-01-27T17:57:12.562163+01:00 Pharo.image priorSource: 181260!GemTDElement removeSelector: #enName!GemTDElement removeSelector: #enName:!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:57'!clean: string	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:00' prior: 33745466!clean: string	| ws upNext |	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:00' prior: 33745578!clean: string	| ws upNext |	1halt.	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:00' prior: 33742643!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: (self clean: ((importer resources at: l) at: codeName ifAbsent: [			self getFallBackNames at: codeName ifAbsent: ['Unavailable'] ])) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:01' prior: 33746006!clean: string	| ws upNext |	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:01' prior: 33746777!clean: string	| ws upNext |	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:02' prior: 33747205!clean: string	| ws upNext |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:04' prior: 33738784!exportOn: s	| width |	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 8 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	self exportAbilitiesOn: s! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:07' prior: 33747644!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[rs peek isUppercase ifTrue: [ noUp ifFalse: [1halt. ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:08' prior: 33748695!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:12' prior: 33749307!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ noUp ifFalse: [rs peekBack = Character space ifFalse: [ws space]] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:12' prior: 33749984!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	noUp := false.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ noUp ifFalse: [rs peekBack = Character space ifFalse: [ws space]] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:14' prior: 33750702!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	noUp := false.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ 			noUp ifFalse: [				rs position = 0 ifFalse: [ 					rs peekBack = Character space ifFalse: [ws space] ] ] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !----QUIT----2018-01-27T18:14:57.319624+01:00 Pharo.image priorSource: 190794!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-01-27T18:28:56.691253+01:00 Pharo.image priorSource: 197689!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----SNAPSHOT----2018-01-27T18:29:13.828975+01:00 Pharo.image priorSource: 197689!!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 18:30' prior: 33592413!generate	units := OrderedCollection new.	1halt.	self units keysAndValuesDo: [ :u :details |		| cls |		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ GemTDCreep ].		units add: (cls newFrom: u with: details importer: importer)]].! !GemTDElement subclass: #GemTDSlate	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 18:34' prior: 33758308!generate	units := OrderedCollection new.	1halt.	self units keysAndValuesDo: [ :u :details |		| cls |		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ 					((details at: 'Model') beginsWith:'materials/')						ifFalse: [GemTDCreep]						ifTrue: [GemTDSlate]].		units add: (cls newFrom: u with: details importer: importer)]].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 18:34' prior: 33758905!generate	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ 					((details at: 'Model') beginsWith:'materials/')						ifFalse: [GemTDCreep]						ifTrue: [GemTDSlate]].		units add: (cls newFrom: u with: details importer: importer)]].! !----SNAPSHOT----2018-01-27T18:34:42.226302+01:00 Pharo.image priorSource: 203704!!GemTDSlate methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 18:35'!importWith: details importer: importer	1halt.	super importWith: details importer: importer.! !!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:36' prior: 33760134!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.! !!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:37' prior: 33760322!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ].	comboNames := combo collect: [ :c | self enNameFor: c importer: importer ].! !!GemTDSlate methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 18:38'!exportOn: s	super exportOn: s.	! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:38'!exportCombo: combo names: comboNames on: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !!GemTDSlate methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:38' prior: 33760888!exportOn: s	super exportOn: s.	self exportCombo: combo names: comboNames on: s.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:38' prior: 33727836!exportOn: s	super exportOn: s.	self exportCombo: combo names: comboNames on: s! !----SNAPSHOT----2018-01-27T18:39:01.406312+01:00 Pharo.image priorSource: 205534!!GemTDSlate methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:39' prior: 33761907!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	self exportAbilitiesOn: s.	self exportCombo: combo names: comboNames on: s.! !----SNAPSHOT----2018-01-27T18:39:50.521506+01:00 Pharo.image priorSource: 207738!----SNAPSHOT----2018-01-27T18:39:58.388933+01:00 Pharo.image priorSource: 208222!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:40' prior: 33739902!exportAdvancedTowers	| s order printed others|	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !----QUIT----2018-01-27T18:41:23.727722+01:00 Pharo.image priorSource: 208305!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDSlate methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:42' prior: 33762341!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	self exportAbilitiesOn: s.	self exportCombo: combo names: comboNames on: s.! !!GemTDSlate methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:44' prior: 33766790!exportOn: s	"Name incorrect..." 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	self exportAbilitiesOn: s.	self exportCombo: combo names: comboNames on: s.! !----QUIT----2018-01-27T18:44:13.386008+01:00 Pharo.image priorSource: 209266!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDSlate methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:46' prior: 33767110!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	self exportAbilitiesOn: s.	self exportCombo: combo names: comboNames on: s.! !----SNAPSHOT----2018-01-27T18:46:53.422911+01:00 Pharo.image priorSource: 212931!----QUIT----2018-01-27T18:47:27.152753+01:00 Pharo.image priorSource: 216255!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-01-27T18:50:48.500017+01:00 Pharo.image priorSource: 216338!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-01-27T18:51:31.116872+01:00 Pharo.image priorSource: 219342!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 08:27' prior: 33762906!exportAdvancedTowers	| s order printed others|	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	"others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ]."	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 08:27' prior: 33779868!exportAdvancedTowers	| s order printed others|	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 08:27' prior: 33780748!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !----SNAPSHOT----2018-01-28T08:27:33.455142+01:00 Pharo.image priorSource: 222346!----SNAPSHOT----2018-01-28T08:27:36.207838+01:00 Pharo.image priorSource: 227987!----SNAPSHOT----2018-01-28T08:27:39.217495+01:00 Pharo.image priorSource: 228070!----SNAPSHOT----2018-01-28T08:27:46.136783+01:00 Pharo.image priorSource: 228153!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:28' prior: 33682749!combinations	combinations ifNotNil: [ ^ combinations ].	combinations := Dictionary new.	self parseCombinations: 'GameRules.gemtd_merge'.	self parseCombinations: 'GameRules.gemtd_merge_secret'.	self parseCombinations: 'GameRules.gemtd_merge_shiban'.	^ combinations! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:31'!creepExtraAbilities	creepExtraAbilities ifNotNil: [ ^ creepExtraAbilities ].	creepExtraAbilities := Array new: 150.	self parseCreepAbilites: 'GameRules.guai_ability'.	^ creepExtraAbilities! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:32'!parseCreepAbilites: sub	| i combos |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	^ GemTDLuaParser new parseArray: (scripts first copyFrom: i to: i + 100000) readStream! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:32' prior: 33783468!parseCreepAbilites: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	^ GemTDLuaParser new parseArray: (scripts first copyFrom: i to: i + 100000) readStream! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:32' prior: 33783195!creepExtraAbilities	creepExtraAbilities ifNotNil: [ ^ creepExtraAbilities ].	^ creepExtraAbilities := self parseCreepAbilites: 'GameRules.guai_ability'! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:33' prior: 33784039!creepExtraAbilities	creepExtraAbilities ifNotNil: [ ^ creepExtraAbilities ].	^ creepExtraAbilities := self parseCreepAbilites! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:35'!parseCreepAbilites	| creeps creepsAB |	creeps := self parseCreepAbilites: 'GameRules.guai'.	creepsAB := self parseCreepAbilites: 'GameRules.guai_ability'.	1halt.	"Need to make dict with intel"! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:35'!parseArray: rs	result := Array new: 150.	readStream := rs.	1halt.	"self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self parseCombination.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]].	^ result"! !----SNAPSHOT----2018-01-28T08:35:44.41547+01:00 Pharo.image priorSource: 228236!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 08:36' prior: 33659526!importWith: details importer: importer	super importWith: details importer: importer.	self importExtraAbilities: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.	hp := details at: 'StatusHealth'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 08:37'!importExtraAbilities: importer	(importer creepExtraAbilities at: codeName ifAbsent: [#()]) do: [:ab |		].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 08:38' prior: 33596670!importWith: details importer: importer	self importNameWithImporter: importer.	abilities := OrderedCollection new.	self importAbilities: details importer: importer! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 08:38'!importAbilities: details importer: importer	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			abilities add: (GemTDAbility newFrom: ab importer: importer) ] ].	hiddenAbilities := OrderedCollection new.	9 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			hiddenAbilities add: (GemTDAbility newFrom: ab importer: importer ) ] ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 08:38' prior: 33786110!importAbilities: details importer: importer	1 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			abilities add: (GemTDAbility newFrom: ab importer: importer) ] ].! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 08:38' prior: 33700026!exportAbilitiesOn: s	abilities do: [ :ab |		ab shortExportOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 08:39' prior: 33785660!importExtraAbilities: importer	(importer creepExtraAbilities at: codeName ifAbsent: [#()]) do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:40' prior: 33784497!parseCreepAbilites	| creeps creepsAB |	creeps := self parseCreepAbilites: 'GameRules.guai ='.	creepsAB := self parseCreepAbilites: 'GameRules.guai_ability ='.	1halt.	"Need to make dict with intel"! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:41' prior: 33784774!parseArray: rs	result := Array new: 150.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self parseArrayCombination.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]].	^ result! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:41'!parseArrayCombination	self shouldBeImplemented.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:42' prior: 33788030!parseArrayCombination	self assert: readStream peek = $[.	readStream next.	Integer readFrom: readStream.	1halt.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:43' prior: 33788174!parseArrayCombination	| key val |	self assert: readStream peek = $[.	readStream next.	key := Integer readFrom: readStream.	self assert: readStream peek = $].	readStream next.	val := self parseString.	result at: key put: val! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:43' prior: 33787368!parseCreepAbilites	| creeps creepsAB |	creeps := self parseCreepAbilites: 'GameRules.guai ='.	creepsAB := self parseCreepAbilites2: 'GameRules.guai_ability ='.	1halt.	"Need to make dict with intel"! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:44'!parseCreepAbilites2: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	^ GemTDLuaParser new parseArrayArray: (scripts first copyFrom: i to: i + 100000) readStream! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:44'!parseArrayArray: rs	result := Array new: 150.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self parseArrayArrayCombination.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]].	^ result! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:45' prior: 33742964!parse: rs	result := OrderedCollection new.	readStream := rs.	readStream next. "skip {"	self skipSeparators.	[result add: self parseDirect.	 self skipSeparators.	readStream peek = $}] whileFalse.	2 to: result size by: 2 do: [ :i |		result at: i put: (result at: i) ].	^ Dictionary newFromPairs: result! !GemTDNameParser removeSelector: #rework:!----SNAPSHOT----2018-01-28T08:45:17.331943+01:00 Pharo.image priorSource: 230635!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 08:45' prior: 33751436!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	noUp := false.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ 			noUp ifFalse: [				rs position = 0 ifFalse: [ 					(rs peekBack = Character space or: [ rs peekBack isUppercase ]) ifFalse: [ws space] ] ] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:46'!parseWith: selector	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self perform: selector.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]].	^ result! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:46' prior: 33733230!parse: rs	result := self dictClass new.	readStream := rs.	^ self parseWith: #parseCombination! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:46' prior: 33787665!parseArray: rs	result := Array new: 150.	readStream := rs.	^ self parseWith: #parseArrayCombination! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:46' prior: 33789266!parseArrayArray: rs	result := Array new: 150.	readStream := rs.	^ self parseWith: #parseArrayArrayCombination! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:47'!parseArrayArrayCombination	| key val |	self assert: readStream peek = $[.	readStream next.	key := Integer readFrom: readStream.	self assert: readStream peek = $].	readStream next.	val := self parseString.	result at: key put: val! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:47' prior: 33791905!parseArrayArrayCombination	| key val |	self assert: readStream peek = $[.	readStream next.	key := Integer readFrom: readStream.	self assert: readStream peek = $].	readStream next.	val := self parseCombo.	result at: key put: val! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:49' prior: 33788384!parseArrayCombination	| key val |	self assert: readStream peek = $[.	readStream next.	key := Integer readFrom: readStream.	self assert: readStream peek = $].	readStream next.	self skipSeparators.	self assert: readStream peek = $=.	readStream next.	self skipSeparators.	val := self parseString.	result at: key put: val! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:51'!skipUntil: character	[readStream peek = character] whileFalse: [ readStream next ].! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:51' prior: 33790987!parseWith: selector	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  readStream peek = $- ifTrue: [ self skipUntil: Character cr. self skipSeparators ].	  self perform: selector.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]].	^ result! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:52'!parseArrayCombinationWith: selector	| key val |	self assert: readStream peek = $[.	readStream next.	key := Integer readFrom: readStream.	self assert: readStream peek = $].	readStream next.	self skipSeparators.	self assert: readStream peek = $=.	readStream next.	self skipSeparators.	val := self perform: selector.	result at: key put: val! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:52' prior: 33792568!parseArrayCombination	^ self parseArrayCombinationWith: #parseString! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:53' prior: 33792237!parseArrayArrayCombination	^ self parseArrayCombinationWith: #parseCombo! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 08:54' prior: 33733818!parseComboWith: parseSelector	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	readStream peek = $} ifTrue: [ readStream next. ^ #() ].	self skipSeparators.	ws nextPut: (self perform: parseSelector).	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: (self perform: parseSelector) ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 08:59' prior: 33788712!parseCreepAbilites	| creeps creepsAB dict  |	creeps := self parseCreepAbilites: 'GameRules.guai ='.	creepsAB := self parseCreepAbilites2: 'GameRules.guai_ability ='.	dict := Dictionary new.	creeps withIndexDo: [ :cr :i |		cr ifNotNil: [ dict at: cr put: (i -> creeps at: i - 1 \\ 50 + 1) ] ].	^ dict! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:00' prior: 33794985!parseCreepAbilites	| creeps creepsAB dict  |	creeps := self parseCreepAbilites: 'GameRules.guai ='.	creepsAB := self parseCreepAbilites2: 'GameRules.guai_ability ='.	dict := Dictionary new.	creeps withIndexDo: [ :cr :i |		cr ifNotNil: [ dict at: cr put: (i -> (creeps at: i - 1 \\ 50 + 1)) ] ].	^ dict! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:01' prior: 33787103!importExtraAbilities: importer	| assoc |	assoc := importer creepExtraAbilities at: codeName ifAbsent: [#()].	hiddenLevel := assoc key.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:01' prior: 33795388!parseCreepAbilites	| creeps creepsAB dict  |	creeps := self parseCreepAbilites: 'GameRules.guai ='.	creepsAB := self parseCreepAbilites2: 'GameRules.guai_ability ='.	dict := Dictionary new.	creeps withIndexDo: [ :cr :i |		cr ifNotNil: [ dict at: cr put: (i -> (creepsAB at: i - 1 \\ 50 + 1)) ] ].	^ dict! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:02' prior: 33795787!importExtraAbilities: importer	| assoc |	assoc := importer creepExtraAbilities at: codeName ifAbsent: [#()].	hiddenLevel := assoc key.	1halt.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:02' prior: 33796512!importExtraAbilities: importer	| assoc |	assoc := importer creepExtraAbilities at: codeName ifAbsent: [#()].	hiddenLevel := assoc key.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 09:05' prior: 33791323!parse: rs	result := self dictClass new.	readStream := rs.	^ self parse2With: #parseCombination! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 09:06' prior: 33797161!parse: rs	result := self dictClass new.	readStream := rs.	^ self parseWith: #parseCombination! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 09:07' prior: 33681496!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	self skipSeparators.	readStream peek = $- ifTrue: [ 1halt ].	result at: res put: combo.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 09:08' prior: 33797546!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	self skipUntil: Character cr.	1halt.	result at: res put: combo.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 09:10' prior: 33797814!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	self skipUntil: Character cr.	self skipSeparators.	readStream peek = $- ifTrue: [ 1halt ].	result at: res put: combo.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 09:11' prior: 33798058!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	self skipUntil: Character cr.	self skipSeparators.	readStream peek = $- ifTrue: [ readStream next: 2. self skipSeparators. ].	result at: res put: combo.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:11' prior: 33796838!importExtraAbilities: importer	| assoc |	assoc := importer creepExtraAbilities at: codeName ifAbsent: [0->#()].	hiddenLevel := assoc key.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDOrderParser methodsFor: 'parsing' stamp: 'ClementBera 1/28/2018 09:14'!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	result at: res put: combo.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:18'!orderedCreeps	| d arr |	d := self creepExtraAbilities.	arr = Array new: 50.	arr atAllPut: (OrderedCollection new: 3).	d keysAndValuesDo: [ :codeName :assoc |		(arr at: (assoc key - 1 \\ 50 + 1)) add: codeName ].	^ arr! !----SNAPSHOT----2018-01-28T09:18:55.748606+01:00 Pharo.image priorSource: 235582!----SNAPSHOT----2018-01-28T09:20:25.634733+01:00 Pharo.image priorSource: 244983!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:23' prior: 33651503!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString.		s cr.		col do: [ :u | u exportOn: s ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flatten.	others := self orderedCreeps reject: [ :u | printed includes: u ].	others do: [ :u | u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:25' prior: 33700238!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportNamesOn: s.	s << '|!! Base HP |!! Base Movement |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	self exportAbilitiesOn: s! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:26' prior: 33799667!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | u name at: 'en' ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | u exportOn: s ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flatten.	others := self orderedCreeps reject: [ :u | printed includes: u ].	others do: [ :u | u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:27' prior: 33799188!orderedCreeps	| d arr | 	d := self creepExtraAbilities.	arr = Array new: 50.	arr atAllPut: (OrderedCollection new: 3).	d keysAndValuesDo: [ :codeName :assoc |		(arr at: (assoc key - 1 \\ 50 + 1)) add: codeName ].	^ arr! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:27' prior: 33801447!orderedCreeps	| d arr | 	d := self creepExtraAbilities.	arr := Array new: 50.	arr atAllPut: (OrderedCollection new: 3).	d keysAndValuesDo: [ :codeName :assoc |		(arr at: (assoc key - 1 \\ 50 + 1)) add: codeName ].	^ arr! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:29'!unitNamed: codeName do: aBlock ifNone: exceptionBlock	^ units detect: [ :u | u codeName = codeName ] ifFound: aBlock ifNone: exceptionBlock! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:29' prior: 33781626!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:30' prior: 33800723!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | self unitNamed: u do: [ :unit | unit name at: 'en' ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flatten.	others := self orderedCreeps reject: [ :u | printed includes: u ].	others do: [ :u | u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !----SNAPSHOT----2018-01-28T09:31:00.063226+01:00 Pharo.image priorSource: 245066!Object subclass: #GemTDElement	instanceVariableNames: 'codeName name abilities'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:31'!name	^ name! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:31'!name: anObject	name := anObject! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:31'!abilities	^ abilities! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:31'!abilities: anObject	abilities := anObject! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:32' prior: 33803159!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | self unitNamed: u do: [ :unit | unit name at: 'en' ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet asArray.	others := self orderedCreeps reject: [ :u | printed includes: u ].	others do: [ :u | u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:32' prior: 33804621!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | self unitNamed: u do: [ :unit | unit name at: 'en' ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u ].	others do: [ :u | u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !----SNAPSHOT----2018-01-28T09:32:07.538584+01:00 Pharo.image priorSource: 249458!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:33' prior: 33805454!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	1halt.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | self unitNamed: u do: [ :unit | unit name at: 'en' ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u ].	others do: [ :u | u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:35' prior: 33801769!orderedCreeps	| d arr | 	d := self creepExtraAbilities.	arr := Array new: 50.	1 to: arr size do: [ :i | arr at: i put: (OrderedCollection new: 3) ].	d keysAndValuesDo: [ :codeName :assoc |		(arr at: (assoc key - 1 \\ 50 + 1)) add: codeName ].	^ arr! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:35' prior: 33806362!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | self unitNamed: u do: [ :unit | unit name at: 'en' ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u ].	others do: [ :u | u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 09:36' prior: 33807547!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | self unitNamed: u do: [ :unit | unit name at: 'en' ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u codeName ].	others do: [ :u | u exportOn: s ] separatedBy: [s cr].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:40' prior: 33796111!parseCreepAbilites	| creeps creepsAB dict  |	creeps := self parseCreepAbilites: 'GameRules.guai ='.	creepsAB := self parseCreepAbilites2: 'GameRules.guai_ability ='.	scriptSpecials := self parseCreepScriptSpecial.	dict := Dictionary new.	creeps withIndexDo: [ :cr :i |		cr ifNotNil: [ dict at: cr put: (i -> (creepsAB at: i - 1 \\ 50 + 1)) ] ].	^ dict! !----SNAPSHOT----2018-01-28T09:40:37.489429+01:00 Pharo.image priorSource: 251761!GemTDLuaParser subclass: #GemTDLuaMatcher	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:49'!matchFrom: string	| str |	str := string.	result := OrderedCollection new.	[str beginsWith: 'if (GameRules.guai_level'] whileTrue: [ 		str := self match: string readStream].	^ result! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:53'!match: rs	"if (GameRules.guai_level ==35 and RandomInt(1,100)>50 ) then				guai_name = guai_name..""1""			end"	| lvl random val |	readStream := rs	self skipUntil: $=.	readStream next: 2.	self skipSeparators.	lvl := Integer readFrom: readStream.	self skipUntil: $>.	readStream next.	self skipSeparators.	random := Integer readFrom: readStream.	self skipUntil: $=.	readStream next.	self skipSeparators.	val := readStream peek = $" 		ifTrue: [ self parseString ]		ifFalse: [ #hundred ].		result add: { lvl . random . val }	! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:54' prior: 33810171!match: rs	"if (GameRules.guai_level ==35 and RandomInt(1,100)>50 ) then				guai_name = guai_name..""1""			end"	| lvl random val |	readStream := rs.	self skipUntil: $=.	readStream next: 2.	self skipSeparators.	lvl := Integer readFrom: readStream.	self skipUntil: $>.	readStream next.	self skipSeparators.	random := Integer readFrom: readStream.	self skipUntil: $=.	readStream next.	self skipSeparators.	val := readStream peek = $" 		ifTrue: [ self parseString ]		ifFalse: [ #hundred ].		result add: { lvl . random . val }	! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:54' prior: 33810821!match: rs	"if (GameRules.guai_level ==35 and RandomInt(1,100)>50 ) then				guai_name = guai_name..""1""			end"	| lvl random val |	readStream := rs.	self skipUntil: $=.	readStream next: 2.	self skipSeparators.	lvl := Integer readFrom: readStream.	self skipUntil: $>.	readStream next.	self skipSeparators.	random := Integer readFrom: readStream.	self skipUntil: $=.	readStream next.	self skipSeparators.	val := readStream peek = $" 		ifTrue: [ self parseString ]		ifFalse: [ #hundred ].	result add: { lvl . random . val }.	^ rs position	! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:54' prior: 33809891!matchFrom: string	| str |	str := string.	result := OrderedCollection new.	[str beginsWith: 'if (GameRules.guai_level'] whileTrue: [ 		str := str allButFirst: (self match: string readStream)].	^ result! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:55' prior: 33811472!match: rs	"if (GameRules.guai_level ==35 and RandomInt(1,100)>50 ) then				guai_name = guai_name..""1""			end"	| lvl random val |	readStream := rs.	self skipUntil: $=.	readStream next: 2.	self skipSeparators.	lvl := Integer readFrom: readStream.	self skipUntil: $>.	readStream next.	self skipSeparators.	random := Integer readFrom: readStream.	self skipUntil: $=.	readStream next.	self skipSeparators.	val := readStream peek = $" 		ifTrue: [ self parseString ]		ifFalse: [ #hundred ].	result add: { lvl . random . val }.	self skipUntil: Character cr.	self skipUntil: Character cr.	self skipSeparators.	^ rs position	! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:55' prior: 33812138!matchFrom: string	| str |	str := string.	result := OrderedCollection new.	[str beginsWith: 'if (GameRules.guai_level'] whileTrue: [ 		str := str allButFirst: (self match: string readStream)].	1halt.	^ result! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:56'!parseCreepScriptSpecial	| i |	i := scripts first indexOfSubCollection: 'if (GameRules.guai_level'.	^ GemTDLuaMatcher new match: (scripts first copyFrom: i to: i + 10000) ! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 09:56' prior: 33813498!parseCreepScriptSpecial	| i |	i := scripts first indexOfSubCollection: 'if (GameRules.guai_level'.	^ GemTDLuaMatcher new matchFrom: (scripts first copyFrom: i to: i + 10000) ! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:57' prior: 33812453!match: rs	"if (GameRules.guai_level ==35 and RandomInt(1,100)>50 ) then				guai_name = guai_name..""1""			end"	| lvl random val |	readStream := rs.	self skipUntil: $=.	readStream next: 2.	self skipSeparators.	lvl := Integer readFrom: readStream.	self skipUntil: $>.	readStream next.	self skipSeparators.	random := Integer readFrom: readStream.	self skipUntil: $=.	readStream next.	self skipSeparators.	val := readStream peek = $" 		ifTrue: [ self parseString ]		ifFalse: [ #hundred ].	result add: { lvl . random . val }.	self skipUntil: Character cr.	readStream next.	self skipUntil: Character cr.	self skipSeparators.	^ rs position	! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:58' prior: 33813203!matchFrom: string	| str |	str := string.	result := OrderedCollection new.	[str beginsWith: 'if (GameRules.guai_level'] whileTrue: [ 		str := str allButFirst: (self match: str readStream)].	1halt.	^ result! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 09:59' prior: 33814822!matchFrom: string	| str |	str := string.	result := OrderedCollection new.	[str beginsWith: 'if (GameRules.guai_level'] whileTrue: [ 		str := str allButFirst: (self match: str readStream)].	^ result! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:00' prior: 33809234!parseCreepAbilites	| creeps creepsAB dict  |	creeps := self parseCreepAbilites: 'GameRules.guai ='.	creepsAB := self parseCreepAbilites2: 'GameRules.guai_ability ='.	dict := Dictionary new.	creeps withIndexDo: [ :cr :i |		cr ifNotNil: [ dict at: cr put: (i -> (creepsAB at: i - 1 \\ 50 + 1)) ] ].	^ dict! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:00'!creepScriptSpecials	scriptSpecials ifNotNil: [ ^ scriptSpecials ].	^ scriptSpecials := self parseCreepScriptSpecial.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:04' prior: 33807203!orderedCreeps	| d arr | 	d := self creepExtraAbilities.	arr := Array new: 50.	1 to: arr size do: [ :i | arr at: i put: (OrderedCollection new: 3) ].	d keysAndValuesDo: [ :codeName :assoc |		(arr at: (assoc key - 1 \\ 50 + 1)) add: codeName ].	self creepScriptSpecials do: [ :array |		"lvl random codeName"		(arr at: array first) add: array allButFirst ].	^ arr! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:05' prior: 33816048!orderedCreeps	| d arr | 	d := self creepExtraAbilities.	arr := Array new: 50.	1 to: arr size do: [ :i | arr at: i put: (OrderedCollection new: 3) ].	d keysAndValuesDo: [ :codeName :assoc |		(arr at: (assoc key - 1 \\ 50 + 1)) add: {nil . codeName} ].	self creepScriptSpecials do: [ :array |		"lvl random codeName"		(arr at: array first) add: { 100 - array second . array third } ].	^ arr! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:07' prior: 33808372!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | "u is {random.codeName}"			self unitNamed: u second do: [ :unit | 				(unit name at: 'en') , (u first 					ifNil: [ '' ] 					ifNotNil: [ :it | ' (' , it printString , '%)' ]) ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	1halt.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u codeName ].	others do: [ :u | u exportOn: s ] separatedBy: [s cr].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:07' prior: 33817001!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | "u is {random.codeName}"			self unitNamed: u second do: [ :unit | 				(unit name at: 'en') , (u first 					ifNil: [ '' ] 					ifNotNil: [ :it | ' (' , it printString , '%)' ]) ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u codeName ].	others do: [ :u | u exportOn: s ] separatedBy: [s cr].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:08' prior: 33817992!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | "u is {random.codeName}"			self unitNamed: u second do: [ :unit | 				(unit name at: 'en') , (u first 					ifNil: [ '' ] 					ifNotNil: [ :it | ' (' , it printString , '%)' ]) ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u second do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u codeName ].	others do: [ :u | u exportOn: s ] separatedBy: [s cr].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:09' prior: 33706893!shortExportOn: s	s << '|!! Ability Code |!! Ability English |!! Tooltip English |!! ' "Name (sch) |!! Tooltip (sch) |!! Name (tch) |!! Tooltip (tch)'".	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en')		<< ' | ' << ''		"<< ' | ' << (name at: 'sch')		<< ' | ' << (tooltip at: 'sch')		<< ' | ' << (name at: 'tch')		<< ' | ' << (tooltip at: 'tch')".	s cr.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:11' prior: 33816515!orderedCreeps	| d arr | 	d := self creepExtraAbilities.	arr := Array new: 50.	1 to: arr size do: [ :i | arr at: i put: (OrderedCollection new: 3) ].	d keysAndValuesDo: [ :codeName :assoc |		(arr at: (assoc key - 1 \\ 50 + 1)) add: {nil . codeName} ].	self creepScriptSpecials do: [ :array |		"lvl random codeName OR hundred"		| codeName |		codeName := array third = #hundred 			ifTrue: [  ] 			ifFalse: [ array third ].		(arr at: array first) add: { 100 - array second . codeName } ].	^ arr! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:13' prior: 33820471!orderedCreeps	| d arr | 	d := self creepExtraAbilities.	arr := Array new: 50.	1 to: arr size do: [ :i | arr at: i put: (OrderedCollection new: 3) ].	d keysAndValuesDo: [ :codeName :assoc |		(arr at: (assoc key - 1 \\ 50 + 1)) add: {nil . codeName} ].	self creepScriptSpecials do: [ :array |		"lvl random codeName OR hundred"		| codeName |		codeName := array third = #hundred 			ifTrue: [ self detectIn: d lvl: array first + 100 ] 			ifFalse: [ array third ].		(arr at: array first) add: { 100 - array second . codeName } ].	^ arr! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:13'!detectIn: d lvl: lvl	d keysAndValuesDo: [ :codeName :assoc |		assoc key = lvl ifTrue: [^ codeName ]]! !----SNAPSHOT----2018-01-28T10:14:16.09156+01:00 Pharo.image priorSource: 255164!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:15' prior: 33821696!detectIn: d lvl: lvl	d keysAndValuesDo: [ :codeName :assoc |		assoc key = lvl ifTrue: [^ codeName ]].	^ 'Error'! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:15' prior: 33821977!detectIn: d lvl: lvl1halt.	d keysAndValuesDo: [ :codeName :assoc |		assoc key = lvl ifTrue: [^ codeName ]].	^ 'Error'! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:18' prior: 33821072!orderedCreeps	| d arr | 	d := self creepExtraAbilities.	arr := Array new: 50.	1 to: arr size do: [ :i | arr at: i put: (OrderedCollection new: 3) ].	d keysAndValuesDo: [ :codeName :assoc |		(arr at: (assoc key - 1 \\ 50 + 1)) add: {nil . codeName} ].	self creepScriptSpecials do: [ :array |		"lvl random codeName OR hundred"		| codeName |		codeName := array third = #hundred 			ifTrue: [ (self detectIn: d lvl: array first) , '1' ] 			ifFalse: [ array third ].		(arr at: array first) add: { 100 - array second . codeName } ].	^ arr! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 10:18' prior: 33822188!detectIn: d lvl: lvl	d keysAndValuesDo: [ :codeName :assoc |		assoc key = lvl ifTrue: [^ codeName ]].	^ 'Error'! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:20'!exportNamesOn: s withAssoc: assoc	s << '|!! Code |!! English |!! Initials |!! ' << assoc key.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (self initialsFrom: (name at: 'en')) 		<< ' | ' <<  assoc value.	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:20' prior: 33707396!exportNamesOn: s	self exportNamesOn: s withAssoc: '' -> ''! !----SNAPSHOT----2018-01-28T10:20:29.93146+01:00 Pharo.image priorSource: 267369!----SNAPSHOT----2018-01-28T10:20:32.92405+01:00 Pharo.image priorSource: 269210!----SNAPSHOT----2018-01-28T10:20:37.043518+01:00 Pharo.image priorSource: 269292!----SNAPSHOT----2018-01-28T10:20:40.263331+01:00 Pharo.image priorSource: 269374!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:21' prior: 33800258!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportNamesOn: s withAssoc: 'Lvl' -> level printString.	s << '|!! Base HP |!! Base Movement |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	self exportAbilitiesOn: s! !----QUIT----2018-01-28T10:21:40.424336+01:00 Pharo.image priorSource: 269457!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:24' prior: 33824060!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportNamesOn: s withAssoc: 'Lvl' -> level.	s << '|!! Base HP |!! Base Movement |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	self exportAbilitiesOn: s! !----QUIT----2018-01-28T10:25:13.57382+01:00 Pharo.image priorSource: 270045!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:37' prior: 33818975!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | "u is {random.codeName}"			self unitNamed: u second do: [ :unit | 				(unit name at: 'en') , (u first 					ifNil: [ '' ] 					ifNotNil: [ :it | ' (' , it printString , '%)' ]) ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u second do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u codeName ].	others do: [ :u | u exportOn: s ] separatedBy: [s cr].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:37' prior: 33802297!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:38' prior: 33832608!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.	s << 'Note: The towers are displayed based on fan-provided order. Hence, updates may break temporarily (until manual update) the order. To solve this problem, unordered towers are displayed at the bottom in the Others section. The Other section also includes experimental towers not necessarily present in-game (Currently there is a super emerald golem for example)'.	s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:38' prior: 33834026!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.	s << 'Note: The towers are displayed based on fan-provided order. Hence, updates may break temporarily (until manual update) the order. To solve this problem, unordered towers are displayed at the bottom in the Others section. The Other section also includes experimental towers not necessarily available in-game (Currently there is a super emerald golem for example)'.	s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:39' prior: 33831063!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | "u is {random.codeName}"			self unitNamed: u second do: [ :unit | 				(unit name at: 'en') , (u first 					ifNil: [ '' ] 					ifNotNil: [ :it | ' (' , it printString , '%)' ]) ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u second do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u codeName ].	others do: [ :u | u exportOn: s ] separatedBy: [s cr].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !----QUIT----2018-01-28T10:39:21.368237+01:00 Pharo.image priorSource: 273542!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 10:40' prior: 33835264!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.	s << 'Note: The towers are displayed based on fan-provided order. Hence, updates may break temporarily (until manual update) the order. To solve this problem, unordered towers are displayed at the bottom in the Others section. The Other section also includes experimental towers not necessarily available in-game (Currently there is a super emerald golem for example).'.	s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !----QUIT----2018-01-28T10:40:53.065545+01:00 Pharo.image priorSource: 283532!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-01-28T10:41:00.99359+01:00 Pharo.image priorSource: 287777!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:01' prior: 33841054!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Advanced towers'.	s cr.	s << 'Note: The towers are displayed based on fan-provided order. Hence, updates may break temporarily (until manual update) the order. To solve this problem, unordered towers are displayed at the bottom in the Others section. The Other section also includes experimental towers not necessarily available in-game (Currently there is a super emerald golem for example).'.	s cr.	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !----SNAPSHOT----2018-01-28T12:02:00.292039+01:00 Pharo.image priorSource: 290781!----SNAPSHOT----2018-01-28T12:02:02.801443+01:00 Pharo.image priorSource: 295060!----SNAPSHOT----2018-01-28T12:02:06.484953+01:00 Pharo.image priorSource: 295143!----SNAPSHOT----2018-01-28T12:02:13.266623+01:00 Pharo.image priorSource: 295226!----SNAPSHOT----2018-01-28T12:03:53.21634+01:00 Pharo.image priorSource: 295309!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:39' prior: 33760998!exportCombo: combo names: comboNames on: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '!!!!!!!! Combination' .	s cr.	s << (name at: 'en') << ' = '.	comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' + ' ].	s cr.	s << codeName << ' = '.	combo		do: [ :cn | s << cn ]		separatedBy: [ s << ' + ' ].	s cr.	"s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr."! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:44' prior: 33849996!exportCombo: combo names: comboNames on: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '!!!!!!!! Combination' .	s cr.	s << (name at: 'en') << ' = '.	comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.	s cr.	s << codeName << ' = '.	combo		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.	"s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr."! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:45' prior: 33851148!exportCombo: combo names: comboNames on: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '""Combination""' .	s cr.	s << (name at: 'en') << ' = '.	comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.	s cr.	s << codeName << ' = '.	combo		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.	"s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr."! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 12:46'!path	^ 'export'! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/28/2018 12:46' prior: 33714200!clearExport	self path asFileReference children do: #delete! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:46' prior: 33848302!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Advanced towers'.	s cr.	s << 'Note: The towers are displayed based on fan-provided order. Hence, updates may break temporarily (until manual update) the order. To solve this problem, unordered towers are displayed at the bottom in the Others section. The Other section also includes experimental towers not necessarily available in-game (Currently there is a super emerald golem for example).'.	s cr.	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	(self path, 'advancedTowers.pillar') asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:46' prior: 33614720!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	self orderedBaseTowers do: [ :u |  u exportOn: s ].	(self path, 'baseTowers.pillar') asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:47' prior: 33836504!exportCreeps	| s printed others |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | "u is {random.codeName}"			self unitNamed: u second do: [ :unit | 				(unit name at: 'en') , (u first 					ifNil: [ '' ] 					ifNotNil: [ :it | ' (' , it printString , '%)' ]) ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u second do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u codeName ].	others do: [ :u | u exportOn: s ] separatedBy: [s cr].	(self path, 'creeps.pillar') asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:47' prior: 33853704!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (String new: 10000).	s << '!! Advanced towers'.	s cr.	s << 'Note: The towers are displayed based on fan-provided order. Hence, updates may break temporarily (until manual update) the order. To solve this problem, unordered towers are displayed at the bottom in the Others section. The Other section also includes experimental towers not necessarily available in-game (Currently there is a super emerald golem for example).'.	s cr.	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	(self path, 'advancedTowers.pillar') asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:47' prior: 33854986!exportBaseTowers	| s |	s := WriteStream on: (String new: 10000).	s << '!! Base Towers'.	s cr.	self orderedBaseTowers do: [ :u |  u exportOn: s ].	(self path, 'baseTowers.pillar') asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:47' prior: 33855315!exportCreeps	| s printed others |	s := WriteStream on: (String new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | "u is {random.codeName}"			self unitNamed: u second do: [ :unit | 				(unit name at: 'en') , (u first 					ifNil: [ '' ] 					ifNotNil: [ :it | ' (' , it printString , '%)' ]) ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u second do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u codeName ].	others do: [ :u | u exportOn: s ] separatedBy: [s cr].	(self path, 'creeps.pillar') asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:48'!exportCreepsOn: s	| printed others |	importer orderedCreeps withIndexDo: [ :col :index |		s << '!!!! Level ' << index printString << ' '.		(col collect: [ :u | "u is {random.codeName}"			self unitNamed: u second do: [ :unit | 				(unit name at: 'en') , (u first 					ifNil: [ '' ] 					ifNotNil: [ :it | ' (' , it printString , '%)' ]) ] ifNone: [ '' ] ]) 			do: [ :n | s << n ]			separatedBy: [ s << ' & ' ].		s cr.		col do: [ :u | self unitNamed: u second do: [ :unit | unit exportOn: s ] ifNone: [ ] ] separatedBy: [ s cr ] ].	s << '!!!! Others '.	s cr.	printed := importer orderedCreeps flattened asSet.	others := self orderedCreeps reject: [ :u | printed includes: u codeName ].	others do: [ :u | u exportOn: s ] separatedBy: [s cr].! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:48' prior: 33858470!exportCreeps	| s printed others |	s := WriteStream on: (String new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	self exportCreepsOn: s.	(self path, 'creeps.pillar') asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:48' prior: 33860846!exportCreeps	| s |	s := WriteStream on: (String new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	self exportCreepsOn: s.	(self path, 'creeps.pillar') asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:48'!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:48' prior: 33861701!exportCreeps	| s |	s := WriteStream on: (String new: 10000).	self exportCreepsHeaderOn: s.	self exportCreepsOn: s.	(self path, 'creeps.pillar') asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:49'!export: s to: fileName	(self path, fileName ,'.pillar') asFileReference writeStream nextPutAll: s contents! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:49' prior: 33863221!exportCreeps	| s |	s := WriteStream on: (String new: 10000).	self exportCreepsHeaderOn: s.	self exportCreepsOn: s.	self export: s to: 'creeps'! !----SNAPSHOT----2018-01-28T12:49:25.499002+01:00 Pharo.image priorSource: 295392!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:49' prior: 33858145!exportBaseTowers	| s |	s := WriteStream on: (String new: 10000).	s << '!! Base Towers'.	s cr.	self orderedBaseTowers do: [ :u |  u exportOn: s ].	self export: s to: 'baseTowers'! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:49' prior: 33856867!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (String new: 10000).	s << '!! Advanced towers'.	s cr.	s << 'Note: The towers are displayed based on fan-provided order. Hence, updates may break temporarily (until manual update) the order. To solve this problem, unordered towers are displayed at the bottom in the Others section. The Other section also includes experimental towers not necessarily available in-game (Currently there is a super emerald golem for example).'.	s cr.	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	self export: s to: 'advancedTowers'! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:50'!exportAdvancedTowersHeaderOn: s	s << '!! Advanced towers'.	s cr.	s << 'Note: The towers are displayed based on fan-provided order. Hence, updates may break temporarily (until manual update) the order. To solve this problem, unordered towers are displayed at the bottom in the Others section. The Other section also includes experimental towers not necessarily available in-game (Currently there is a super emerald golem for example).'.	s cr.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:50' prior: 33864281!exportAdvancedTowers	| s order printed others |	self exportAdvancedTowersHeaderOn: s.	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	self export: s to: 'advancedTowers'! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:50' prior: 33866025!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (String new: 10000).	self exportAdvancedTowersHeaderOn: s.	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	self export: s to: 'advancedTowers'! !----SNAPSHOT----2018-01-28T12:50:34.962554+01:00 Pharo.image priorSource: 309408!----SNAPSHOT----2018-01-28T12:50:38.154548+01:00 Pharo.image priorSource: 313164!----SNAPSHOT----2018-01-28T12:50:44.195097+01:00 Pharo.image priorSource: 313247!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:51'!exportAdvancedTowersOn: s	| printed order others |	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:51' prior: 33866832!exportAdvancedTowers	| s order printed others |	s := WriteStream on: (String new: 10000).	self exportAdvancedTowersHeaderOn: s.	self exportAdvancedTowersOn: s.	self export: s to: 'advancedTowers'! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:51' prior: 33868649!exportAdvancedTowers	| s |	s := WriteStream on: (String new: 10000).	self exportAdvancedTowersHeaderOn: s.	self exportAdvancedTowersOn: s.	self export: s to: 'advancedTowers'! !----SNAPSHOT----2018-01-28T12:51:57.661138+01:00 Pharo.image priorSource: 313330!----SNAPSHOT----2018-01-28T12:52:20.513371+01:00 Pharo.image priorSource: 314688!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/28/2018 12:53' prior: 33863494!export: s to: fileName	(self path, '/' , fileName ,'.pillar') asFileReference writeStream nextPutAll: s contents! !----SNAPSHOT----2018-01-28T12:53:04.129081+01:00 Pharo.image priorSource: 314771!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 12:56'!cleanNameFor: key lang: lang importer: importer	^ self clean: ((importer resources at: lang) 			at: codeName 			ifAbsent: [ self getFallBackNames 							at: codeName 							ifAbsent: ['Unavailable'] ])! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 12:56' prior: 33688891!enNameFor: key importer: importer	^ self cleanNameFor: key lang: 'en' importer: importer! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 12:56' prior: 33746442!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: (self cleanNameFor: codeName lang: l importer: importer)].! !----SNAPSHOT----2018-01-28T12:56:54.661786+01:00 Pharo.image priorSource: 315056!----SNAPSHOT----2018-01-28T12:57:01.991879+01:00 Pharo.image priorSource: 315869!----SNAPSHOT----2018-01-28T12:57:04.430281+01:00 Pharo.image priorSource: 315952!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 12:57' prior: 33869649!cleanNameFor: key lang: lang importer: importer	^ self clean: ((importer resources at: lang) 			at: key 			ifAbsent: [ self getFallBackNames 							at: key 							ifAbsent: ['Unavailable'] ])! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 13:00' prior: 33790191!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	noUp := false.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ 			noUp ifFalse: [				rs position = 0 ifFalse: [ 					(rs peekBack = Character space or: [ rs peekBack = $/ or: [ rs peekBack isUppercase ] ]) ifFalse: [ws space] ] ] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 13:01' prior: 33852309!exportCombo: combo names: comboNames on: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '""Combination""' .	s cr.	s cr.	s << (name at: 'en') << ' = '.	comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.	s cr.	s << codeName << ' = '.	combo		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.	"s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr."! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 13:01' prior: 33748116!exportOn: s	| width |	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 8 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	self exportAbilitiesOn: s! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:03' prior: 33642539!importWith: importer 	name := Dictionary new.	self importDetailsWith: importer.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:04'!importDetailsWith: importer	| details |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:08' prior: 33874021!importDetailsWith: importer	| details |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	(details at: 'AbilityBehavior') logCr.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:08' prior: 33874256!importDetailsWith: importer	| details |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	(details at: 'AbilityBehavior' ifAbsent: []) logCr.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:10' prior: 33874523!importDetailsWith: importer	| details isAura |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	isAura := false.	(details at: 'AbilityBehavior' ifPresent: [:beh |		| split |		split := (beh splitOn: '|') collect: #trimBoth.		(split includes: 'DOTA_ABILITY_BEHAVIOR_AURA') ifTrue: [ isAura := true ].]) logCr.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:11' prior: 33874803!importDetailsWith: importer	| details isAura |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	isAura := false.	details at: 'AbilityBehavior' ifPresent: [:beh |		| split |		split := (beh splitOn: '|') collect: #trimBoth.		(split includes: 'DOTA_ABILITY_BEHAVIOR_AURA') ifTrue: [ isAura := true ]].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:15' prior: 33875254!importDetailsWith: importer	| details isAura modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	isAura := false.	details at: 'AbilityBehavior' ifPresent: [:beh |		| split |		split := (beh splitOn: '|') collect: #trimBoth.		(split includes: 'DOTA_ABILITY_BEHAVIOR_AURA') ifTrue: [ isAura := true ]].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | ^ self importAttackLanded: f modifiers: modifiers importer: importer ].			1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:16'!importAttackLanded: attackLanded modifiers: modifiers importer: importer	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:16' prior: 33875704!importDetailsWith: importer	| details isAura modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	isAura := false.	details at: 'AbilityBehavior' ifPresent: [:beh |		| split |		split := (beh splitOn: '|') collect: #trimBoth.		(split includes: 'DOTA_ABILITY_BEHAVIOR_AURA') ifTrue: [ isAura := true ]].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | ^ self importAttackLanded: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer ].			1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:19' prior: 33876371!importAttackLanded: attackLanded modifiers: modifiers importer: importer	| finalMod |	finalMod := modifiers at: ((attackLanded at: 'ApplyModifier') at: 'ModifierName').	(finalMod includesKey: 'ThinkInterval') ifTrue: [ ^ self importThinkAbility: finalMod ].	1halt.! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/28/2018 13:19'!importThinkAbility: aCollection 	self shouldBeImplemented.! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/28/2018 13:24' prior: 33877608!importThinkAbility: modifier	| think |	think := modifier at: 'OnIntervalThink'.	property := String streamContents: [:s |		s 			<< 'During ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom:(think at: 'Type')) << ' damage.' ].! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/28/2018 13:25' prior: 33877760!importThinkAbility: modifier	| think |	think := modifier at: 'OnIntervalThink'.	property := String streamContents: [:s |		s 			<< 'During ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ].! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/28/2018 13:25'!damageKeywordFrom: keyword	keyword = 'DAMAGE_TYPE_MAGICAL' ifTrue: [ ^ 'magic' ].	1halt.! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/28/2018 13:26' prior: 33878206!importThinkAbility: modifier	| think |	think := modifier at: 'OnIntervalThink'.	property := String streamContents: [:s |		s  			<< 'During ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ].! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/28/2018 13:27' prior: 33878820!importThinkAbility: modifier	| think |	think := (modifier at: 'OnIntervalThink') at: 'Damage'.	property := String streamContents: [:s |		s  			<< 'During ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:27' prior: 33876557!importDetailsWith: importer	| details isAura modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	isAura := false.	details at: 'AbilityBehavior' ifPresent: [:beh |		| split |		split := (beh splitOn: '|') collect: #trimBoth.		(split includes: 'DOTA_ABILITY_BEHAVIOR_AURA') ifTrue: [ isAura := true ]].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | ^ self importAttackLanded: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer ].	1halt.! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/28/2018 13:29'!importAttack: aCollection modifiers: aCollection2 importer: aGemTDImporter 	self shouldBeImplemented.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:30'!import: attackLanded modifiers: modifiers importer: importer prefix: prefix	| finalMod |	finalMod := modifiers at: ((attackLanded at: 'ApplyModifier') at: 'ModifierName').	(finalMod includesKey: 'ThinkInterval') ifTrue: [ ^ self importThinkAbility: finalMod prefix: prefix ].	1halt.! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/28/2018 13:31'!importThinkAbility: modifier prefix: prefix	| think |	think := (modifier at: 'OnIntervalThink') at: 'Damage'.	property := String streamContents: [:s |		s  			<< prefix			<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ].! !GemTDAbility removeSelector: #importThinkAbility:!GemTDAbility removeSelector: #importAttackLanded:modifiers:importer:!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:32' prior: 33879744!importDetailsWith: importer	| details isAura modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	isAura := false.	details at: 'AbilityBehavior' ifPresent: [:beh |		| split |		split := (beh splitOn: '|') collect: #trimBoth.		(split includes: 'DOTA_ABILITY_BEHAVIOR_AURA') ifTrue: [ isAura := true ]].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:32' prior: 33881600!importDetailsWith: importer	| details isAura modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	isAura := false.	details at: 'AbilityBehavior' ifPresent: [:beh |		| split |		split := (beh splitOn: '|') collect: #trimBoth.		(split includes: 'DOTA_ABILITY_BEHAVIOR_AURA') ifTrue: [ isAura := true ]].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:32' prior: 33880610!import: triggerModifier modifiers: modifiers importer: importer prefix: prefix	| finalMod |	finalMod := modifiers at: ((triggerModifier at: 'ApplyModifier') at: 'ModifierName').	(finalMod includesKey: 'ThinkInterval') ifTrue: [ ^ self importThinkAbility: finalMod prefix: prefix ].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:33' prior: 33883233!import: triggerModifier modifiers: modifiers importer: importer prefix: prefix	| finalMod |	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalMod := modifiers at: ((triggerModifier at: 'ApplyModifier') at: 'ModifierName').	(finalMod includesKey: 'ThinkInterval') ifTrue: [ ^ self importThinkAbility: finalMod prefix: prefix ].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:34'!importRunScript: rn prefix: prefix	! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:34' prior: 33884115!importRunScript: rn prefix: prefix	1halt.	"| think |	think := (modifier at: 'OnIntervalThink') at: 'Damage'.	property := String streamContents: [:s |		s  			<< prefix			<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ]."! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:40' prior: 33884257!importRunScript: modifier prefix: prefix	| otherModif |	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ].	otherModif := otherModif associations.	property := String streamContents: [:s |		s  			<< prefix			<< 'run script named ' << (modifier at: 'Function') << ' in '			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ' with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:41' prior: 33882324!importDetailsWith: importer	| details isAura modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:42' prior: 33885407!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:42' prior: 33886108!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	modifiers values 		detect: [ :m | m includesKey: 'Aura' ]		ifFound: [ :f | 			^ self import: (f at: 'Aura') modifiers: modifiers importer: importer prefix: 'Aura: ' ].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:44' prior: 33886802!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	modifiers values 		detect: [ :m | m includesKey: 'Aura' ]		ifFound: [ :f | 			^ self importAura: f modifiers: modifiers importer: importer ].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:45'!importAura: aura modifiers: modifiers importer: importer	| otherModif |1halt."	property := String streamContents: [:s |		s  			<< prefix			<< 'run script named ' << (modifier at: 'Function') << ' in '			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ' with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]."! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:49' prior: 33888492!importAura: aura modifiers: modifiers importer: importer	| otherModif |	otherModif := modifiers at: (aura at: 'Aura').	property := String streamContents: [:s |		s << 'Aura: Range ' << (aura at: 'Aura_Radius') << ' Effect: '.		self importProperties: otherModif on: s ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:49'!importProperties: modifier on: s	| prop |	prop := modifier at: 'Properties'.	 ! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:51' prior: 33889364!importProperties: modifier on: s	| prop |	prop := modifier at: 'Properties'.	prop keys do: [ :each |		(each beginsWith: 'MODIFIER_PROPERTY') ifTrue: [ self importModifierProperty: each on: s ] ]! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:51'!importModifierProperty: each on: s! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:51' prior: 33889839!importModifierProperty: each on: s	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:54' prior: 33889551!importProperties: modifier on: s	| prop |	prop := modifier at: 'Properties'.	prop keys do: [ :each |		(each beginsWith: 'MODIFIER_PROPERTY') ifTrue: [ self importModifierProperty: each with: (prop at: each) on: s ] ]! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:55'!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'BONUS' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e ] separatedBy: [ s space ].	s << val.	s << ']'.! !GemTDAbility removeSelector: #importModifierProperty:on:!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:55' prior: 33890437!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'BONUS' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e ] separatedBy: [ s space ].	s << val.	percent ifTrue: [ s << '\%' ].	s << ']'.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:56' prior: 33890950!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'BONUS' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e. s space ].	s << val.	percent ifTrue: [ s << '\%' ].	s << ']'.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:57' prior: 33891436!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'BONUS' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	s << val.	percent ifTrue: [ s << '\%' ].	s << ']'.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:57' prior: 33887668!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	modifiers values 		detect: [ :m | m includesKey: 'Aura' ]		ifFound: [ :f | 			^ self importAura: f modifiers: modifiers importer: importer ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:58' prior: 33884762!importRunScript: modifier prefix: prefix	| otherModif |	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	property := String streamContents: [:s |		s  			<< prefix			<< 'run script named ' << (modifier at: 'Function') << ' in '			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ' with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:59' prior: 33883631!import: triggerModifier modifiers: modifiers importer: importer prefix: prefix	| finalMod |	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalMod := modifiers at: ((triggerModifier at: 'ApplyModifier') at: 'ModifierName') ifAbsent: [^self].	(finalMod includesKey: 'ThinkInterval') ifTrue: [ ^ self importThinkAbility: finalMod prefix: prefix ].	1halt.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 13:59' prior: 33893895!import: triggerModifier modifiers: modifiers importer: importer prefix: prefix	| finalMod |	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalMod := modifiers at: ((triggerModifier at: 'ApplyModifier') at: 'ModifierName') ifAbsent: [^self].	(finalMod includesKey: 'ThinkInterval') ifTrue: [ ^ self importThinkAbility: finalMod prefix: prefix ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 14:00' prior: 33894413!import: triggerModifier modifiers: modifiers importer: importer prefix: prefix	| finalMod |	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalMod := modifiers at: ((triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName') ifAbsent: [^self].	(finalMod includesKey: 'ThinkInterval') ifTrue: [ ^ self importThinkAbility: finalMod prefix: prefix ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 14:03' prior: 33889001!importAura: aura modifiers: modifiers importer: importer	| otherModif prefix |	otherModif := modifiers at: (aura at: 'Aura').	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	(otherModif includesKey: 'ThinkInterval')		ifTrue: [  ^ self importThinkAbility: otherModif prefix: prefix ].	property := String streamContents: [:s |		s << prefix.		self importProperties: otherModif on: s ].! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/28/2018 14:04' prior: 33880973!importThinkAbility: modifier prefix: prefix	| think |	think := (modifier at: 'OnIntervalThink' ifAbsent: [^self]) at: 'Damage'.	property := String streamContents: [:s |		s  			<< prefix			<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 14:04' prior: 33890127!importProperties: modifier on: s	| prop |	prop := modifier at: 'Properties' ifAbsent: [^ self].	prop keys do: [ :each |		(each beginsWith: 'MODIFIER_PROPERTY') ifTrue: [ self importModifierProperty: each with: (prop at: each) on: s ] ]! !----SNAPSHOT----2018-01-28T14:05:17.867655+01:00 Pharo.image priorSource: 316035!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:07' prior: 33819969!shortExportOn: s	s << '""Ability""'.	s cr.	s cr.	s << '|!! Ability Code |!! Ability name |!! Ability Tooltip '.	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en').	s cr.	! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:07' prior: 33896891!shortExportOn: s	s << '""Ability""'.	s cr.	s cr.	s << '|!! Ability Code |!! Ability name |!! Ability Tooltip '.	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en').	s cr.	s cr.! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:08' prior: 33897205!shortExportOn: s	s << '""Ability""'.	s cr.	s cr.	s << '|!! Ability Code |!! Ability name |!! Ability Tooltip '.	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en').	s cr.	property ifNotNil: [ :p |		s << '""Raw Program extract:"" '.		s << property.		s cr ]! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:08' prior: 33786945!exportAbilitiesOn: s	abilities withIndexDo: [ :ab :i |		ab shortExportOn: s i: i ]! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:10'!shortExportOn: s i: i	s << '""Ability ' << i printString << '""'.	s cr.	s << '|!! Ability Code |!! Ability name |!! Ability Tooltip '.	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en').	s cr.	property ifNotNil: [ :p |		s << 'Raw Program extract: =='.		s << property.		s << '=='.		s cr ]! !GemTDAbility removeSelector: #shortExportOn:!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:10' prior: 33898087!shortExportOn: s i: i	s << '""Ability ' << i printString << '""'.	s cr.	s << '|!! Ability Code |!! Ability name |!! Ability Tooltip '.	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en').	s cr.	property ifNotNil: [ :p |		s cr.		s << 'Raw Program extract: =='.		s << property.		s << '=='.		s cr ]! !----QUIT----2018-01-28T14:12:17.295284+01:00 Pharo.image priorSource: 342286!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:22' prior: 33898569!shortExportOn: s i: i	s << '""Ability ' << i printString << '""'.	s cr.	s 		<< '|!! Ability Code | '		<< codeName.	s cr.	s 		<< '|!! Ability Name | ' 		<< (name at: 'en').	s cr.	s 		<< '|!! Ability Tooltip | '		<< (tooltip at: 'en').	s cr.	property ifNotNil: [ :p |		s << '|!! Raw Extract: | =='.		s << property.		s << '=='.		s cr ]! !----SNAPSHOT----2018-01-28T14:23:00.065016+01:00 Pharo.image priorSource: 344490!----QUIT----2018-01-28T14:23:05.470564+01:00 Pharo.image priorSource: 347939!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:24' prior: 33871771!exportCombo: combo names: comboNames on: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '""Combination""' .	s cr.	s << '|!! ' << (name at: 'en') << ' | '.	comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.	s << '|!! ' << codeName << ' | '.	combo		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.	"s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr."! !----SNAPSHOT----2018-01-28T14:24:52.463469+01:00 Pharo.image priorSource: 348022!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:45' prior: 33823239!exportNamesOn: s withAssoc: assoc	s << '|!! Code | ' << codeName.	s cr.	s << '|!! English | ' << self printName.	s cr.	s << '|!! ' << assoc key << ' | ' << assoc value.	s cr.	"	s << '|!! Code |!! English |!! Initials |!! ' << assoc key.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (self initialsFrom: (name at: 'en')) 		<< ' | ' <<  assoc value.	s cr."! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:46'!printName	^ (name at: 'en')! !----SNAPSHOT----2018-01-28T14:46:09.839195+01:00 Pharo.image priorSource: 352195!----SNAPSHOT----2018-01-28T14:46:12.819677+01:00 Pharo.image priorSource: 352875!----SNAPSHOT----2018-01-28T14:46:19.597862+01:00 Pharo.image priorSource: 352958!----SNAPSHOT----2018-01-28T14:46:24.250902+01:00 Pharo.image priorSource: 353041!!GemTDAdvancedTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 14:47'!printName	! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:47' prior: 33907732!printName	^ super printName , ' / ' , (self initialsFrom: (name at: 'en')) ! !----SNAPSHOT----2018-01-28T14:47:36.20824+01:00 Pharo.image priorSource: 353124!----SNAPSHOT----2018-01-28T14:47:41.853155+01:00 Pharo.image priorSource: 353489!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:49' prior: 33827569!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportNamesOn: s withAssoc: 'Lvl' -> level.	s << '|!! Base HP | ' << hp.	s cr.	s << '|!! Base Movement | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor.	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:50' prior: 33905548!exportCombo: combo names: comboNames on: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination  | '.	comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	"s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr."! !!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 14:51' prior: 33760538!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ].	comboNames := self comboNamesFrom: combo importer: importer! !!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 14:51'!comboNamesFrom: com importer: importer	^ com collect: [ :c | self enNameFor: c importer: importer ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 14:51'!comboNamesFrom: com importer: importer	^ com collect: [ :c | self enNameFor: c importer: importer ].! !GemTDSlate removeSelector: #comboNamesFrom:importer:!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 14:51' prior: 33910185!comboNamesFrom: com importer: importer	^ com collect: [ :c | 		((self enNameFor: c importer: importer) splitOn: '/') last trim ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 14:51' prior: 33910438!comboNamesFrom: com importer: importer	^ com collect: [ :c | 		((self enNameFor: c importer: importer) splitOn: '/') last trim ]! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/28/2018 14:52' prior: 33684994!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ].	comboNames := self comboNamesFrom: combo importer: importer! !----SNAPSHOT----2018-01-28T14:52:02.840214+01:00 Pharo.image priorSource: 353571!----SNAPSHOT----2018-01-28T14:52:07.398922+01:00 Pharo.image priorSource: 356716!!GemTDSlate methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:52' prior: 33770455!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	self exportCombo: combo names: comboNames on: s.	self exportAbilitiesOn: s.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:53'!exportDamageOn: s	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range.	s cr.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:53' prior: 33872932!exportOn: s	| width |	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 8 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.	self exportNamesOn: s.	self exportDamageOn: s.	self exportAbilitiesOn: s! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:53'!exportHeaderOn: s	| width |	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 8 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:53' prior: 33911955!exportOn: s	self exportHeaderOn: s.	self exportNamesOn: s.	self exportDamageOn: s.	self exportAbilitiesOn: s! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:54' prior: 33762087!exportOn: s	self exportHeaderOn: s.	self exportNamesOn: s.	self exportDamageOn: s.	self exportCombo: combo names: comboNames on: s.	self exportAbilitiesOn: s.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:54'!exSplit: s	s << '| ~ | ~'.	s cr.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:55' prior: 33912890!exportOn: s	self exportHeaderOn: s.	self exSplit: s.	self exportNamesOn: s.	self exSplit: s.	self exportDamageOn: s.	self exSplit: s.	self exportCombo: combo names: comboNames on: s.	self exportAbilitiesOn: s.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:55' prior: 33897926!exportAbilitiesOn: s	abilities withIndexDo: [ :ab :i |		self exSplit: s.		ab shortExportOn: s i: i ]! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:55' prior: 33912679!exportOn: s	self exportHeaderOn: s.	self exSplit: s.	self exportNamesOn: s.	self exSplit: s.	self exportDamageOn: s.	self exportAbilitiesOn: s! !!GemTDSlate methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:55' prior: 33911402!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	self exSplit: s.	self exportCombo: combo names: comboNames on: s.	self exSplit: s.	self exportAbilitiesOn: s.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:55' prior: 33908174!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! Base HP | ' << hp.	s cr.	s << '|!! Base Movement | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor.	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:56' prior: 33823580!exportNamesOn: s	self exportNamesOn: s withAssoc: nil! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:56' prior: 33906800!exportNamesOn: s withAssoc: assoc	s << '|!! Code | ' << codeName.	s cr.	s << '|!! English | ' << self printName.	s cr.	assoc ifNotNil: [ 		s << '|!! ' << assoc key << ' | ' << assoc value.		s cr].	"	s << '|!! Code |!! English |!! Initials |!! ' << assoc key.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (self initialsFrom: (name at: 'en')) 		<< ' | ' <<  assoc value.	s cr."! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:57' prior: 33911706!exportDamageOn: s	s << '|!! Attack Damage | ' << damage.	s cr.	s << '|!! Attack Rate | ' << rate. 	s cr.	s << '|!! Attack Range | ' << range .	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:57' prior: 33908665!exportCombo: combo names: comboNames on: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination  | '.	comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.	"s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr."! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 14:59' prior: 33902016!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' Code | '		<< codeName.	s cr.	s 		<< '|!! Ability ' << num << ' Name | ' 		<< (name at: 'en').	s cr.	s 		<< '|!! Ability ' << num << ' Tooltip | '		<< (tooltip at: 'en').	s cr.	property ifNotNil: [ :p |		s << '|!! Ability ' << num << ' Raw | =='.		s << property.		s << '=='.		s cr ]! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 15:01' prior: 33913767!exportOn: s	self exportHeaderOn: s.	self exportNamesOn: s.	self exSplit: s.	self exportDamageOn: s.	self exportAbilitiesOn: s! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/28/2018 15:01' prior: 33913263!exportOn: s	self exportHeaderOn: s.	self exportNamesOn: s.	self exSplit: s.	self exportDamageOn: s.	self exSplit: s.	self exportCombo: combo names: comboNames on: s.	self exportAbilitiesOn: s.! !----QUIT----2018-01-28T15:06:56.082133+01:00 Pharo.image priorSource: 356799!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 15:16' prior: 33891906!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'BONUS' 'CONSTANT' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	s << val.	percent ifTrue: [ s << '\%' ].	s << ']'.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 15:17' prior: 33892403!importDetailsWith: importer	| details modifiers |	codeName = 'tower_speed1' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	modifiers values 		detect: [ :m | m includesKey: 'Aura' ]		ifFound: [ :f | 			^ self importAura: f modifiers: modifiers importer: importer ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 15:19' prior: 33921320!importDetailsWith: importer	| details modifiers |	codeName = 'tower_speed1' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	modifiers values 		detect: [ :m | m includesKey: 'Aura' ]		ifFound: [ :f | 			^ self importAura: f modifiers: modifiers importer: importer ].	modifiers values 		detect: [ :m | m includesKey: 'Properties' ]		ifFound: [ :f | 			^ String streamContents: [:s | self importProperties: f on: s ] ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 15:19' prior: 33922198!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	modifiers values 		detect: [ :m | m includesKey: 'Aura' ]		ifFound: [ :f | 			^ self importAura: f modifiers: modifiers importer: importer ].	modifiers values 		detect: [ :m | m includesKey: 'Properties' ]		ifFound: [ :f | 			^ String streamContents: [:s | self importProperties: f on: s ] ].! !----QUIT----2018-01-28T15:20:00.295095+01:00 Pharo.image priorSource: 363273!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 15:21' prior: 33923231!importDetailsWith: importer	| details modifiers |	codeName = 'tower_speed2' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	modifiers values 		detect: [ :m | m includesKey: 'Aura' ]		ifFound: [ :f | 			^ self importAura: f modifiers: modifiers importer: importer ].	modifiers values 		detect: [ :m | m includesKey: 'Properties' ]		ifFound: [ :f | 			^ String streamContents: [:s | self importProperties: f on: s ] ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 15:22' prior: 33927222!importDetailsWith: importer	| details modifiers |	codeName = 'tower_speed2' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	modifiers values 		detect: [ :m | m includesKey: 'Aura' ]		ifFound: [ :f | 			^ self importAura: f modifiers: modifiers importer: importer ].	modifiers values 		detect: [ :m | m includesKey: 'Properties' ]		ifFound: [ :f | 			^ property := String streamContents: [:s | self importProperties: f on: s ] ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 15:22' prior: 33928255!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttackLanded' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttackLanded') modifiers: modifiers importer: importer prefix: 'On attack landed, ' ].	modifiers values 		detect: [ :m | m includesKey: 'OnAttack' ]		ifFound: [ :f | 			^ self import: (f at: 'OnAttack') modifiers: modifiers importer: importer prefix: 'On attack, ' ].	modifiers values 		detect: [ :m | m includesKey: 'Aura' ]		ifFound: [ :f | 			^ self importAura: f modifiers: modifiers importer: importer ].	modifiers values 		detect: [ :m | m includesKey: 'Properties' ]		ifFound: [ :f | 			^ property := String streamContents: [:s | self importProperties: f on: s ] ].! !----QUIT----2018-01-28T15:22:28.372869+01:00 Pharo.image priorSource: 369683!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 15:31' prior: 33873520!importWith: importer 	name := Dictionary new.	self importDetailsWith: importer.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: [nil]) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: [nil]) ].! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 15:32' prior: 33916796!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' Code | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Ability ' << num << ' Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Ability ' << num << ' Tooltip | '			<< (tooltip at: 'en').		s cr].	property ifNotNil: [ :p |		s << '|!! Ability ' << num << ' Raw | =='.		s << property.		s << '=='.		s cr ]! !----SNAPSHOT----2018-01-28T15:32:38.424377+01:00 Pharo.image priorSource: 375764!----SNAPSHOT----2018-01-28T15:32:40.417493+01:00 Pharo.image priorSource: 379817!----SNAPSHOT----2018-01-28T15:32:45.881405+01:00 Pharo.image priorSource: 379900!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 15:33' prior: 33914362!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	s << '+file://wards/' << codeName << '.png|width=' << 8 printString << '+'.	s cr.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! Base HP | ' << hp.	s cr.	s << '|!! Base Movement | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor.	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !----SNAPSHOT----2018-01-28T15:33:23.590285+01:00 Pharo.image priorSource: 379983!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 15:34' prior: 33934586!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	s << '+file://creeps/' << codeName << '.png|width=' << 8 printString << '+'.	s cr.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! Base HP | ' << hp.	s cr.	s << '|!! Base Movement | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor.	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 15:34' prior: 33935260!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	s << '+file://creeps/' << codeName << '.png|width=8+'.	s cr.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! Base HP | ' << hp.	s cr.	s << '|!! Base Movement | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor.	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 15:34' prior: 33935852!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	s << '+file://creeps/' << codeName << '.png|width=8+'.	s cr.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! Base HP | ' << hp.	s cr.	s << '|!! Base Movement | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/28/2018 15:35' prior: 33936422!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	s << '+file://creeps/' << codeName << '.png|width=10+'.	s cr.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! Base HP | ' << hp.	s cr.	s << '|!! Base Movement | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !----QUIT----2018-01-28T15:35:37.338166+01:00 Pharo.image priorSource: 380657!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 21:26' prior: 33929300!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 21:27'!importModifiers: modifiers	self importAuras: modifiers.	self importOnTriggers: modifiers.	self importProperties: modifiers.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/28/2018 21:28'!importAuras: modifiers	modifiers copy do: [ :mod |		(mod includesKey: 'Aura') ifTrue: [ self importAura: mod editing: modifiers ] ]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:29'!importAura: mod editing: modifiers	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:30' prior: 33941338!importAura: aura editing: modifiers	| otherModif prefix |	otherModif := modifiers at: (aura at: 'Aura').	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	(otherModif includesKey: 'ThinkInterval')		ifTrue: [  ^ self importThinkAbility: otherModif prefix: prefix ].	property := String streamContents: [:s |		s << prefix.		self importProperties: otherModif on: s ].! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:31'!importOnTriggers: modifiers	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:32' prior: 33941473!importAura: aura editing: modifiers	| auraModif prefix |	auraModif := modifiers at: (aura at: 'Aura').	modifiers removeKey: (aura at: 'Aura').	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	(auraModif includesKey: 'ThinkInterval')		ifTrue: [  ^ self importThinkAbility: auraModif prefix: prefix ].	property := String streamContents: [:s |		s << prefix.		self importProperties: auraModif on: s ].! !----SNAPSHOT----2018-01-28T21:32:11.594561+01:00 Pharo.image priorSource: 383045!----SNAPSHOT----2018-01-28T21:32:22.12186+01:00 Pharo.image priorSource: 388067!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:33' prior: 33941944!importOnTriggers: modifiers	modifiers copy do: [ :mod |		(mod keys anySatisfy: [:k | k beginsWith: 'OnAttack']) ifTrue: [ 			self importTrigger: mod editing: modifiers ] ]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:34' prior: 33942072!importAura: aura editing: modifiers	| auraModif prefix |	auraModif := modifiers at: (aura at: 'Aura').	modifiers removeKey: (aura at: 'Aura').	modifiers removeKey: (modifiers keyForValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	(auraModif includesKey: 'ThinkInterval')		ifTrue: [  ^ self importThinkAbility: auraModif prefix: prefix ].	property := String streamContents: [:s |		s << prefix.		self importProperties: auraModif on: s ].! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:37'!importTrigger: trigger editing: modifiers	| key triggerModifier |	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	triggerModifier :=	(trigger at: key).	modifiers removeKey: key.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:38'!importSecondMod: mod prefix: prefix	(mod includesKey: 'ThinkInterval')		ifTrue: [  ^ self importThinkAbility: mod prefix: prefix ].	property := String streamContents: [:s |		s << prefix.		self importProperties: mod on: s ].! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:38' prior: 33943033!importAura: aura editing: modifiers	| auraModif prefix |	auraModif := modifiers at: (aura at: 'Aura').	modifiers removeKey: (aura at: 'Aura').	modifiers removeKey: (modifiers keyForValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	self importSecondMod: auraModif prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:41' prior: 33943593!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	triggerModifier :=	(trigger at: key).	prefix := (self clean: key) , ', '.	modifiers removeKey: key.	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	modifiers removeKey: finalModKey.	finalMod := modifiers at: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !----SNAPSHOT----2018-01-28T21:41:19.062171+01:00 Pharo.image priorSource: 388150!----SNAPSHOT----2018-01-28T21:41:23.261773+01:00 Pharo.image priorSource: 390777!----SNAPSHOT----2018-01-28T21:41:39.498486+01:00 Pharo.image priorSource: 390860!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:42' prior: 33940906!importModifiers: modifiers	self importAuras: modifiers.	self importOnTriggers: modifiers.	self importDirect: modifiers.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:43'!importDirect: modifiers	modifiers copy do: [ :mod |		self importSecondMod: mod prefix: 'Unit ' ] ! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:43' prior: 33945759!importDirect: modifiers	modifiers copy do: [ :mod |		self importSecondMod: mod prefix: 'Apply ' ] ! !----SNAPSHOT----2018-01-28T21:43:29.865327+01:00 Pharo.image priorSource: 390943!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:43' prior: 33945957!importDirect: modifiers	modifiers copy do: [ :mod |		self importSecondMod: mod prefix: 'Direct ' ] ! !----SNAPSHOT----2018-01-28T21:43:42.213034+01:00 Pharo.image priorSource: 391628!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:44' prior: 33944620!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	triggerModifier :=	(trigger at: key).	prefix := (self clean: key) , ', '.	modifiers removeKey: key.	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | 1halt. ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	modifiers removeKey: finalModKey.	finalMod := modifiers at: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:45' prior: 33946522!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	triggerModifier :=	(trigger at: key).	prefix := (self clean: key) , ', '.	modifiers removeKey: (modifiers keyForValue: trigger).	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | 1halt. ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	modifiers removeKey: finalModKey.	finalMod := modifiers at: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:45' prior: 33947214!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	triggerModifier :=	(trigger at: key).	prefix := (self clean: key) , ', '.	modifiers removeKey: (modifiers keyAtValue: trigger).	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | 1halt. ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	modifiers removeKey: finalModKey.	finalMod := modifiers at: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:46' prior: 33947935!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	triggerModifier :=	(trigger at: key).	modifiers removeKey: (modifiers keyAtValue: trigger).	prefix := (self clean: key) , ', '.	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | 1halt. ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:47' prior: 33948655!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	triggerModifier :=	(trigger at: key).	modifiers removeKey: (modifiers keyAtValue: trigger).	prefix := (self clean: key) , ', '.	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:47' prior: 33944207!importAura: aura editing: modifiers	| auraModif prefix |	auraModif := modifiers at: (aura at: 'Aura').	modifiers removeKey: (aura at: 'Aura').	modifiers removeKey: (modifiers keyAtValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	self importSecondMod: auraModif prefix: prefix! !GemTDAbility removeSelector: #import:modifiers:importer:prefix:!GemTDAbility removeSelector: #importAura:modifiers:importer:!GemTDAbility removeSelector: #importAttack:modifiers:importer:!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:48' prior: 33878637!damageKeywordFrom: keyword	keyword = 'DAMAGE_TYPE_MAGICAL' ifTrue: [ ^ 'magic' ].	keyword = 'DAMAGE_TYPE_PHYSICAL' ifTrue: [ ^ 'physical' ].	^ 'pure'! !----SNAPSHOT----2018-01-28T21:48:17.48563+01:00 Pharo.image priorSource: 391911!----SNAPSHOT----2018-01-28T21:48:41.364795+01:00 Pharo.image priorSource: 396417!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:49' prior: 33940584!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	codeName = 'tower_baoji1' ifTrue: [ 1halt ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:54' prior: 33920812!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'BONUS' 'PREATTACK' 'CONSTANT' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	s << val.	percent ifTrue: [ s << '\%' ].	s << ']'.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:54' prior: 33949375!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:55'!addProperty: prop	property ifNil: [ ^ property := prop ].	property := property , String cr , prop! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:56' prior: 33893235!importRunScript: modifier prefix: prefix	| otherModif |	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script named ' << (modifier at: 'Function') << ' in '			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ' with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:56' prior: 33943880!importSecondMod: mod prefix: prefix	(mod includesKey: 'ThinkInterval')		ifTrue: [  ^ self importThinkAbility: mod prefix: prefix ].	self addProperty: (String streamContents: [:s |		s << prefix.		self importProperties: mod on: s ])! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:56' prior: 33895954!importThinkAbility: modifier prefix: prefix	| think |	think := (modifier at: 'OnIntervalThink' ifAbsent: [^self]) at: 'Damage'.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:58' prior: 33952000!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	(trigger includesKey: 'Random') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:59' prior: 33953653!importSecondMod: mod prefix: prefix	(mod includesKey: 'ThinkInterval')		ifTrue: [  ^ self importThinkAbility: mod prefix: prefix ].	(mod includesKey: 'Random') 		ifTrue: [ ^ self importRandomAbility: mod prefix: prefix ].	self addProperty: (String streamContents: [:s |		s << prefix.		self importProperties: mod on: s ])! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 21:59'!importRandomAbility: modifier prefix: prefix 	| think |	1halt.	think := (modifier at: 'OnIntervalThink' ifAbsent: [^self]) at: 'Damage'.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:00' prior: 33954510!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	1halt.	(trigger includesKey: 'Random') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:01' prior: 33956356!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:01' prior: 33957267!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importSecondMod: triggerModifier prefix: prefix].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !----SNAPSHOT----2018-01-28T22:01:46.107311+01:00 Pharo.image priorSource: 396499!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:04' prior: 33942760!importOnTriggers: modifiers	#(OnAttackStart OnAttack OnAttackLanded) do: [ :key | 		modifiers copy do: [ :mod |			(mod keys anySatisfy: [:k | k includes: key]) ifTrue: [ 				self importTrigger: mod editing: modifiers ] ] ]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:04' prior: 33955823!importRandomAbility: modifier prefix: prefix 	| think |	1halt. 	think := (modifier at: 'OnIntervalThink' ifAbsent: [^self]) at: 'Damage'.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:05' prior: 33958178!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	1halt.	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importSecondMod: triggerModifier prefix: prefix].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:05' prior: 33955413!importSecondMod: mod prefix: prefix	(mod includesKey: 'ThinkInterval')		ifTrue: [  ^ self importThinkAbility: mod prefix: prefix ].	self addProperty: (String streamContents: [:s |		s << prefix.		self importProperties: mod on: s ])! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:06' prior: 33960039!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	1halt.	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importRandom: triggerModifier prefix: prefix editing: modifiers].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:06'!importRandom: modifier prefix: prefix editing: modifiers	| think |	1halt. 	think := (modifier at: 'OnIntervalThink' ifAbsent: [^self]) at: 'Damage'.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:11' prior: 33962227!importRandom: modifier prefix: prefix editing: modifiers	| think mod ch finalModKey finalMod fullPrefix |	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	fullPrefix := prefix , '[' , ch printString , '\%]'.	finalModKey := ((mod at: 'OnSuccess') at: 'ApplyModifier' ifAbsent: [^ self		addProperty: fullPrefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	self addProperty: (String streamContents: [:s |		self importSecondMod: finalMod prefix: 	fullPrefix ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:12' prior: 33961300!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	1halt.	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importRandom: triggerModifier prefix: prefix].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !GemTDAbility removeSelector: #importRandomAbility:prefix:!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:13'!importRandom: modifier prefix: prefix 	| mod ch |	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	self addProperty: (prefix , '[' , ch printString , '\%]')! !GemTDAbility removeSelector: #importRandom:prefix:editing:!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:13' prior: 33963358!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importRandom: triggerModifier prefix: prefix].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:14' prior: 33964651!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	1halt.	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importRandom: triggerModifier prefix: prefix].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:14' prior: 33965567!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	1halt. 	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importRandom: triggerModifier prefix: prefix].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:14' prior: 33966491!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	1halt.  	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importRandom: triggerModifier prefix: prefix].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:15' prior: 33959180!importOnTriggers: modifiers	#(OnAttackStart OnAttack OnAttackLanded) do: [ :key | 		modifiers copy do: [ :mod |			(mod keys includesKey: key) ifTrue: [ 				self importTrigger: mod editing: modifiers ] ] ]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:15' prior: 33968342!importOnTriggers: modifiers	#(OnAttackStart OnAttack OnAttackLanded) do: [ :key | 		modifiers copy do: [ :mod |			(mod includesKey: key) ifTrue: [ 				self importTrigger: mod editing: modifiers ] ] ]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:16' prior: 33964326!importRandom: modifier prefix: prefix 	| mod ch |	1halt.	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	self addProperty: (prefix , '[' , ch printString , '\%]')! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:17' prior: 33968951!importRandom: modifier prefix: prefix 	| mod ch |	1halt.	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	self addProperty: (prefix , '[' , ch , '\%]')! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:17' prior: 33967416!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Random') ifTrue: [  ^ self importRandom: triggerModifier prefix: prefix].	triggerModifier 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (triggerModifier at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:17' prior: 33969223!importRandom: modifier prefix: prefix 	| mod ch |	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	self addProperty: (prefix , '[' , ch , '\%]')! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:19' prior: 33951110!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:20' prior: 33952794!addProperty: prop	property ifNil: [ ^ property := prop ].	property := property , ' ~ ' , prop! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:21' prior: 33952992!importRunScript: modifier prefix: prefix	| otherModif |	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:21' prior: 33946239!importDirect: modifiers	modifiers copy do: [ :mod |		self importSecondMod: mod prefix: '' ] ! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 22:22' prior: 33933787!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' Code | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Ability ' << num << ' Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Ability ' << num << ' Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Ability ' << num << ' Raw | =='.		s << property.		s << '=='.		s cr ]! !----SNAPSHOT----2018-01-28T22:24:10.443986+01:00 Pharo.image priorSource: 404569!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:24' prior: 33971176!importRunScript: modifier prefix: prefix	| otherModif |	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !----SNAPSHOT----2018-01-28T22:33:20.976015+01:00 Pharo.image priorSource: 418072!----SNAPSHOT----2018-01-28T22:33:24.082022+01:00 Pharo.image priorSource: 418809!----SNAPSHOT----2018-01-28T22:33:29.703857+01:00 Pharo.image priorSource: 418892!----QUIT----2018-01-28T22:33:31.747577+01:00 Pharo.image priorSource: 418975!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:40'!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod |	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:41'!importRandom: modifier prefix: prefix editing: modifiers	| mod ch |	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	self importInnerMod: mod editing: modifiers prefix: (prefix , '[' , ch , '\%]').! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:41' prior: 33977133!importRandom: modifier prefix: prefix editing: modifiers	| mod ch |	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	self importInnerMod: mod editing: modifiers prefix: (prefix , '[' , ch , '\%]')! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:41' prior: 33969483!importTrigger: trigger editing: modifiers	| key triggerModifier prefix finalMod finalModKey |	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	self importInnerMod: triggerModifier editing: modifiers prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:41' prior: 33976574!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod |	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: prefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:41' prior: 33977742!importTrigger: trigger editing: modifiers	| key triggerModifier prefix|	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	self importInnerMod: triggerModifier editing: modifiers prefix: prefix! !----SNAPSHOT----2018-01-28T22:42:05.520388+01:00 Pharo.image priorSource: 419058!----SNAPSHOT----2018-01-28T22:42:21.280251+01:00 Pharo.image priorSource: 424913!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:45' prior: 33970651!importDetailsWith: importer	| details modifiers |	codeName = 'tower_aojiao' ifTrue: [1halt].		details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:49' prior: 33951487!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'STATE' 'BONUS' 'PREATTACK' 'CONSTANT' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	(val endsWith: 'ENABLED') 		ifTrue: [ s << 'true' ]		ifFalse: [ 			s << val.			val = '0' ifTrue: [ s << '' ] ].	percent ifTrue: [ s << '\%' ].	s << ']'.! !----SNAPSHOT----2018-01-28T22:49:53.058022+01:00 Pharo.image priorSource: 424996!----SNAPSHOT----2018-01-28T22:49:56.156835+01:00 Pharo.image priorSource: 426083!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:50' prior: 33979984!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'STATE' 'BONUS' 'PREATTACK' 'CONSTANT' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	(val endsWith: 'ENABLED') 		ifTrue: [ s << 'true' ]		ifFalse: [ 			s << val.			val = '0' ifTrue: [ s << '(false ?)' ].			val = '1' ifTrue: [ s << '(true ?)' ]. ].	percent ifTrue: [ s << '\%' ].	s << ']'.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:50' prior: 33980777!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'STATE' 'BONUS' 'PREATTACK' 'CONSTANT' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	(val endsWith: 'ENABLED') 		ifTrue: [ s << 'true' ]		ifFalse: [ 			s << val.			val = '0' ifTrue: [ s << '(could mean false)' ].			val = '1' ifTrue: [ s << '(could mean true)' ]. ].	percent ifTrue: [ s << '\%' ].	s << ']'.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:54' prior: 33977438!importRandom: modifier prefix: prefix editing: modifiers	| mod ch |	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	self importInnerMod: (mod at: 'OnSuccess') editing: modifiers prefix: (prefix , '[' , ch , '\%]')! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:55' prior: 33978305!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod fullPrefix |	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	fullPrefix := prefix , ((mod at: 'ApplyModifier') at: 'Duration' ifPresent: [:e | ' ' , e] ifAbsent: [ '' ]) .	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: fullPrefix.! !----SNAPSHOT----2018-01-28T22:55:32.74076+01:00 Pharo.image priorSource: 426166!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:56' prior: 33982475!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod fullPrefix |	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	fullPrefix := prefix , ((mod at: 'ApplyModifier') at: 'Duration' ifPresent: [:e | ' [Duration: ' , e , ']'] ifAbsent: [ '' ]) .	modifiers removeKey: finalModKey.	1halt.	self importSecondMod: finalMod prefix: fullPrefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:58' prior: 33896476!importProperties: modifier on: s	| prop prop2 |	prop := modifier at: 'Properties' ifAbsent: [Dictionary new].	prop2 := modifier at: 'States' ifAbsent: [Dictionary new].	prop2 keysAndValuesDo: [ :k :v | prop at: k put: v ].	prop keys do: [ :each |		(each beginsWith: 'MODIFIER_') ifTrue: [ self importModifierProperty: each with: (prop at: each) on: s ] ]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:58' prior: 33983279!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod fullPrefix |	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	fullPrefix := prefix , ((mod at: 'ApplyModifier') at: 'Duration' ifPresent: [:e | ' [Duration: ' , e , ']'] ifAbsent: [ '' ]) .	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: fullPrefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:59' prior: 33979607!importDetailsWith: importer	| details modifiers |	codeName = 'tower_aojiao' ifTrue: [1halt].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 22:59' prior: 33985224!importDetailsWith: importer	| details modifiers |	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:01' prior: 33985599!importDetailsWith: importer	| details modifiers |	codeName = 'gemtd_gudaidejixueshi' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:01' prior: 33985930!importDetailsWith: importer	| details modifiers |	codeName = 'gemtd_gudaidejixueshi' ifTrue: [ 1halt ]. 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:02' prior: 33986316!importDetailsWith: importer	| details modifiers |	codeName = 'tower_chazhuangshandian' ifTrue: [ 1halt ]. 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:02' prior: 33972683!importRunScript: modifier prefix: prefix	| otherModif |	1halt.	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:03' prior: 33987092!importRunScript: modifier prefix: prefix	| otherModif |	"1halt."	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:03' prior: 33987754!importRunScript: modifier prefix: prefix	| otherModif |	1halt.	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:05' prior: 33986703!importDetailsWith: importer	| details modifiers |	codeName = 'tower_chazhuangshandian' ifTrue: [ 1halt ]. 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:06'!importAbilitySpecial: collection	1halt.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:06' prior: 33988418!importRunScript: modifier prefix: prefix	| otherModif |	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with parameters: ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:07' prior: 33989536!importAbilitySpecial: collection	abilitySpecial := Dictionary new.	collection values do: [ :val |		val removeKey: 'var_type' ifAbsent: [  ].		val keysAndValuesDo: [ :k :v | abilitySpecial at: k put: v ] ]	! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 23:09' prior: 33972010!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' Code | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Ability ' << num << ' Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Ability ' << num << ' Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Ability ' << num << ' Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		s << '|!! Special ' << num << ' Raw | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			s << '[' << k << ': ' << v << ']' ].		s << '=='.		s cr ]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:09' prior: 33990329!importAbilitySpecial: collection	codeName logCr.	abilitySpecial := Dictionary new.	collection values do: [ :val |		val removeKey: 'var_type' ifAbsent: [  ].		val keysAndValuesDo: [ :k :v | abilitySpecial at: k put: v ] ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:09' prior: 33989080!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:10' prior: 33991403!importAbilitySpecial: collection	abilitySpecial := Dictionary new.	collection values do: [ :val |		val removeKey: 'var_type' ifAbsent: [  ].		val keysAndValuesDo: [ :k :v | abilitySpecial at: k put: v ] ]	! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 23:10' prior: 33990632!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' Code | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Ability ' << num << ' Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Ability ' << num << ' Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Ability ' << num << ' Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		s << '|!! Ability ' << num << ' Spe. Raw | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			s << '[' << k << ': ' << v << ']' ].		s << '=='.		s cr ]! !----QUIT----2018-01-28T23:10:56.904141+01:00 Pharo.image priorSource: 428669!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:18' prior: 33991729!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_zheyi2' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:19' prior: 33996227!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_zheyi2' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 23:20' prior: 33992447!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' Code | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Ability ' << num << ' Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Ability ' << num << ' Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Ability ' << num << ' Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		s << '|!! Ability ' << num << ' Spe. Raw | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			s << '[' << k << ': ' << v << ']' ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity (Raw) | =='			<< spellImmunityType printString 			<< '==' ]! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 23:20' prior: 33997240!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' Code | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Ability ' << num << ' Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Ability ' << num << ' Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Ability ' << num << ' Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		s << '|!! Ability ' << num << ' Spe. Raw | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			s << '[' << k << ': ' << v << ']' ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity (Raw) | =='			<< spellImmunityType printString 			<< '=='.		s cr  ]! !----SNAPSHOT----2018-01-28T23:21:00.265336+01:00 Pharo.image priorSource: 438695!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/28/2018 23:21' prior: 33996688!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !----QUIT----2018-01-28T23:21:14.517353+01:00 Pharo.image priorSource: 444533!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/28/2018 23:23' prior: 33998143!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			s << '[' << k << ': ' << v << ']' ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Raw: Pierce Spell Immunity | =='			<< spellImmunityType printString 			<< '=='.		s cr  ]! !----QUIT----2018-01-28T23:26:35.554693+01:00 Pharo.image priorSource: 445128!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:26' prior: 33999144!importDetailsWith: importer	| details modifiers | 	codeName = 'gemtd_sililankazhixing' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:26' prior: 34006486!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_jihan' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:26' prior: 33984485!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod fullPrefix |	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	1halt.	fullPrefix := prefix , ((mod at: 'ApplyModifier') at: 'Duration' ifPresent: [:e | ' [Duration: ' , e , ']'] ifAbsent: [ '' ]) .	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: fullPrefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:28' prior: 34007611!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod fullPrefix |	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	fullPrefix := self applyModifierPrefix: mod.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: fullPrefix.! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/29/2018 10:28'!applyModifierPrefix: aCollection 	self shouldBeImplemented.! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/29/2018 10:29'!applyModifierPrefix: applyModifier prefix: prefix	^ String streamContents: [ :s | 		s << prefix.		applyModifier at: 'Duration' ifPresent: [:e | s << ' [Duration: ' , e , ']'] ifAbsent: [ '' ] .		applyModifier at: 'Target'	]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:29' prior: 34008358!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod fullPrefix |	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	fullPrefix := self applyModifierPrefix: mod prefix: prefix.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: fullPrefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:30' prior: 34009456!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod fullPrefix |	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	fullPrefix := self applyModifierPrefix: (mod at: 'ApplyModifier') prefix: prefix.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: fullPrefix.! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/29/2018 10:30' prior: 34009129!applyModifierPrefix: applyModifier prefix: prefix	^ String streamContents: [ :s | 		s << prefix.		applyModifier at: 'Duration' ifPresent: [:e | s << ' [Duration: ' << e << ']'] ifAbsent: [ '' ] .		(applyModifier at: 'Target') halt.	]! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 1/29/2018 10:32' prior: 34010814!applyModifierPrefix: applyModifier prefix: prefix	^ String streamContents: [ :s | 		s << prefix.		applyModifier at: 'Duration' ifPresent: [:e | s << ' [Duration: ' << e << ']'] ifAbsent: [ '' ] .		(applyModifier at: 'Target') class = Dictionary 			ifTrue: [ "non single target"					(applyModifier at: 'Target') 					at: 'Radius'						ifPresent: [:e | s << ' [Splash: ' << e << ']'] ifAbsent: [ '' ] ]]! !GemTDAbility removeSelector: #applyModifierPrefix:!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:32' prior: 33981456!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'STATE' 'BONUS' 'PREATTACK' 'CONSTANT' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	(val endsWith: 'ENABLED') 		ifTrue: [ s << 'true' ]		ifFalse: [ s << val ].	percent ifTrue: [ s << '\%' ].	s << ']'.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:33' prior: 34007054!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_ranjin' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:35' prior: 33989675!importRunScript: modifier prefix: prefix	| otherModif |	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:35' prior: 34012295!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_10jiyun' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:36' prior: 33982153!importRandom: modifier prefix: prefix editing: modifiers	| mod ch |	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	1halt.	self importInnerMod: (mod at: 'OnSuccess') editing: modifiers prefix: (prefix , '[' , ch , '\%]')! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:37' prior: 34010127!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod fullPrefix |	(mod includesKey: 'Stun') ifTrue: [  ^ self importStun: mod prefix: prefix ].	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	fullPrefix := self applyModifierPrefix: (mod at: 'ApplyModifier') prefix: prefix.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: fullPrefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:38'!importStun: mod prefix: prefix 	1halt.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:39' prior: 34014384!importInnerMod: mod editing: modifiers prefix: prefix	| finalModKey finalMod fullPrefix |	(mod includesKey: 'Stun') ifTrue: [  ^ self importStun: (mod at: 'Stun') prefix: prefix ].	(mod includesKey: 'Random') ifTrue: [  ^ self importRandom: mod prefix: prefix editing: modifiers ].	mod 		at: 'RunScript'		ifPresent: [ :rn | ^ self importRunScript: rn prefix: prefix ].	finalModKey  := (mod at: 'ApplyModifier' ifAbsent: [^ self addProperty: prefix]) at: 'ModifierName'.	finalMod := modifiers at: finalModKey.	fullPrefix := self applyModifierPrefix: (mod at: 'ApplyModifier') prefix: prefix.	modifiers removeKey: finalModKey.	self importSecondMod: finalMod prefix: fullPrefix.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:40' prior: 34015140!importStun: mod prefix: prefix 	self addProperty: prefix , '[Stun ' , (mod at: 'Duration') , ' seconds]'! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:40' prior: 34014054!importRandom: modifier prefix: prefix editing: modifiers	| mod ch |	mod := modifier at: 'Random'.	ch := mod at: 'Chance'.	self importInnerMod: (mod at: 'OnSuccess') editing: modifiers prefix: (prefix , '[' , ch , '\%]')! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 10:40' prior: 34013495!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !----SNAPSHOT----2018-01-29T10:41:00.409425+01:00 Pharo.image priorSource: 448954!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 10:44'!difficultyHP	(scripts at: 1) halt.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:44' prior: 33785237!importWith: details importer: importer	super importWith: details importer: importer.	self importExtraAbilities: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.	hp := details at: 'StatusHealth'.	self difficultyPatchWith: importer.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:45'!difficultyPatchWith: importer	importer difficultyHP! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:45' prior: 34017754!difficultyPatchWith: importer	importer difficultyHP.	1halt.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/29/2018 10:46' prior: 33794006!parseArrayCombination	^ self parseArrayCombinationWith: #parseStringOrInt! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/29/2018 10:48'!parseStringOrInt	^ readStream peek = $"		ifTrue: [ self parseString ]		ifFalse: [ NumberParser parse:  readStream ]! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 10:49' prior: 34017168!difficultyHP	^ difficultyHP ifNil: [difficultyHP := (self parseCreepAbilites: 'GameRules.gem_difficulty =') first: 4]! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 10:50'!difficultyHPSpeed	^ difficultyHPSpeed ifNil: [difficultyHPSpeed := (self parseCreepAbilites: 'GameRules.gem_difficulty_speed =') first: 4]! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 10:50' prior: 34018622!difficultyHPSpeed	1halt.	^ difficultyHPSpeed ifNil: [difficultyHPSpeed := (self parseCreepAbilites: 'GameRules.gem_difficulty_speed =') first: 4]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:50' prior: 34017897!difficultyPatchWith: importer	importer difficultyHP.	importer difficultyHPSpeed.	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 10:50' prior: 34018858!difficultyHPSpeed	^ difficultyHPSpeed ifNil: [difficultyHPSpeed := (self parseCreepAbilites: 'GameRules.gem_difficulty_speed =') first: 4]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:53' prior: 34019096!difficultyPatchWith: importer	| base coef |	"HP"	coef := importer difficultyHP.	base := Integer readFrom: hp.	hp := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | hp := hp , each printString , ' ~ '].	"Speed"	coef := importer difficultyHPSpeed.	base := Integer readFrom: ms.	ms := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | ms := ms , each printString , ' ~ '].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:54' prior: 34019513!difficultyPatchWith: importer	| base coef |	"HP"	coef := importer difficultyHP.	base := Integer readFrom: hp.	hp := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | hp := hp , each printString] separatedBy: [ hp := hp , ' ~ '].	"Speed"	coef := importer difficultyHPSpeed.	base := Integer readFrom: ms.	ms := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | ms := ms , each printString] separatedBy: [ hp := hp , ' ~ '].! !----SNAPSHOT----2018-01-29T10:54:39.906874+01:00 Pharo.image priorSource: 462575!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:55' prior: 34020010!difficultyPatchWith: importer	| base coef |	1halt.	"HP"	coef := importer difficultyHP.	base := Integer readFrom: hp.	hp := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | hp := hp , each printString] separatedBy: [ hp := hp , ' ~ '].	"Speed"	coef := importer difficultyHPSpeed.	base := Integer readFrom: ms.	ms := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | ms := ms , each printString] separatedBy: [ hp := hp , ' ~ '].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:58' prior: 34020640!difficultyPatchWith: importer	| base coef |	1halt.	"HP"	coef := importer difficultyHP.	base := Integer readFrom: hp.	hp := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | hp := hp , each printString] separatedBy: [ hp := hp , ' ~ '].	"Speed"	coef := importer difficultyHPSpeed.	base := Integer readFrom: ms.	ms := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | ms := ms , each printString] separatedBy: [ ms := ms , ' ~ '].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:58' prior: 34021195!difficultyPatchWith: importer	| base coef |	"HP"	coef := importer difficultyHP.	base := Integer readFrom: hp.	hp := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | hp := hp , each printString] separatedBy: [ hp := hp , ' ~ '].	"Speed"	coef := importer difficultyHPSpeed.	base := Integer readFrom: ms.	ms := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | ms := ms , each printString] separatedBy: [ ms := ms , ' ~ '].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:59' prior: 33936993!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	s << '+file://creeps/' << codeName << '.png|width=10+'.	s cr.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! HP | ' << hp.	s cr.	s << '|!! Movement | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 10:59' prior: 34021750!difficultyPatchWith: importer	| base coef |	"HP"	coef := importer difficultyHP.	base := Integer readFrom: hp.	hp := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | hp := hp , each printString] separatedBy: [ hp := hp , ' . '].	"Speed"	coef := importer difficultyHPSpeed.	base := Integer readFrom: ms.	ms := ''.	(coef collect: [ :c | (c * base) rounded ]) do: [ :each | ms := ms , each printString] separatedBy: [ ms := ms , ' . '].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 11:00' prior: 34022297!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	s << '+file://creeps/' << codeName << '.png|width=10+'.	s cr.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! HP (1-4 players) | ' << hp.	s cr.	s << '|!! Movement (1-4 players) | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !----SNAPSHOT----2018-01-29T11:00:47.917648+01:00 Pharo.image priorSource: 466037!----SNAPSHOT----2018-01-29T11:00:51.727782+01:00 Pharo.image priorSource: 469476!----SNAPSHOT----2018-01-29T11:00:59.516084+01:00 Pharo.image priorSource: 469559!----QUIT----2018-01-29T11:01:18.792569+01:00 Pharo.image priorSource: 469642!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:35' prior: 34016591!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_shechengguanghuan' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:38' prior: 33970982!addProperty: prop
	prop ifEmpty: [ ^ self ].	property ifNil: [ ^ property := prop ].	property := property , ' ~ ' , prop! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:39' prior: 33953987!importThinkAbility: modifier prefix: prefix	| think |	1halt.	think := (modifier at: 'OnIntervalThink' ifAbsent: [^self addProperty: prefix]) at: 'Damage'.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:39' prior: 33960966!importSecondMod: mod prefix: prefix	(mod includesKey: 'OnIntervalThink')		ifTrue: [  ^ self importThinkAbility: mod prefix: prefix ].	self addProperty: (String streamContents: [:s |		s << prefix.		self importProperties: mod on: s ])! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:39' prior: 34028048!importThinkAbility: modifier prefix: prefix	| think |	think := (modifier at: 'OnIntervalThink' ifAbsent: [^self addProperty: prefix]) at: 'Damage'.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 			<< (modifier at: 'ThinkInterval') << ' seconds, deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:40' prior: 34027257!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_tanlan' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:41' prior: 33950088!importAura: aura editing: modifiers	| auraModif prefix |	auraModif := modifiers at: (aura at: 'Aura').	modifiers removeKey: (aura at: 'Aura').	modifiers removeKey: (modifiers keyAtValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	1halt.	self importSecondMod: auraModif prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:42' prior: 34030036!importAura: aura editing: modifiers	| auraModif prefix |	auraModif := modifiers at: (aura at: 'Aura').	modifiers removeKey: (aura at: 'Aura').	modifiers removeKey: (modifiers keyAtValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	self importSecondMod: auraModif prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:42' prior: 34029478!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_chenmoguanghuan' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:43' prior: 34030868!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_ranjin' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:44' prior: 33968649!importOnTriggers: modifiers	#(OnAttackStart OnAttack OnAttackLanded OnAttacklanded) do: [ :key | 		modifiers copy do: [ :mod |			(mod includesKey: key) ifTrue: [ 				self importTrigger: mod editing: modifiers ] ] ]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:44' prior: 33978900!importTrigger: trigger editing: modifiers	| key triggerModifier prefix|	1halt.	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	self importInnerMod: triggerModifier editing: modifiers prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:45' prior: 34032310!importTrigger: trigger editing: modifiers	| key triggerModifier prefix|	"1halt."	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	self importInnerMod: triggerModifier editing: modifiers prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:45' prior: 34032859!importTrigger: trigger editing: modifiers	| key triggerModifier prefix|	1halt.	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	self importInnerMod: triggerModifier editing: modifiers prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:49' prior: 34033410!importTrigger: trigger editing: modifiers	| key triggerModifier prefix|	1halt.	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'FireSound') ifTrue: [ 'F' logCr ].	(triggerModifier includesKey: 'Damage') ifTrue: [ 'D' logCr ].	self importInnerMod: triggerModifier editing: modifiers prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:49' prior: 34033959!importTrigger: trigger editing: modifiers	| key triggerModifier prefix|	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'FireSound') ifTrue: [ 'F' logCr ].	(triggerModifier includesKey: 'Damage') ifTrue: [ 'D' logCr ].	self importInnerMod: triggerModifier editing: modifiers prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:49' prior: 34034639!importTrigger: trigger editing: modifiers	| key triggerModifier prefix|	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Damage') ifTrue: [ 		^ self importDamage: triggerModifier prefix: prefix ].	self importInnerMod: triggerModifier editing: modifiers prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:49'!importDamage: triggerModifier prefix: prefix 	1halt.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:50' prior: 34035311!importTrigger: trigger editing: modifiers	| key triggerModifier prefix|	modifiers removeKey: (modifiers keyAtValue: trigger).	key := trigger keys detect: [ :each | each beginsWith: 'OnAttack' ].	prefix := (self clean: key) , ', '.	(trigger includesKey: 'Properties') ifTrue: [  ^ self importSecondMod: trigger prefix: prefix].	triggerModifier :=	(trigger at: key).	(triggerModifier includesKey: 'Damage') ifTrue: [ 		^ self importDamage: (triggerModifier at: 'Damage') prefix: prefix ].	self importInnerMod: triggerModifier editing: modifiers prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:52' prior: 34035945!importDamage: mod prefix: prefix 	self addProperty: (String streamContents: [:s | 		s << prefix.		s << '[Radius: ' ,  ((mod at: 'Target') at: 'Radius') , ']'.		s << 'deals ' << (mod at: 'Damage')			<< ' ' << (self damageKeywordFrom: (mod at: 'Type')) << ' damage.' ])! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:53' prior: 34036762!importDamage: mod prefix: prefix 	self addProperty: (String streamContents: [:s | 		s << prefix.		s << '[Radius: ' <<  ((mod at: 'Target') at: 'Radius') << ']'.		s << 'deals ' << (mod at: 'Damage')			<< ' ' << (self damageKeywordFrom: (mod at: 'Type')) << ' damage.' ])! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 13:53' prior: 34031435!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !----SNAPSHOT----2018-01-29T13:53:47.240357+01:00 Pharo.image priorSource: 469725!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 13:54'!stealable	1halt.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/29/2018 13:54'!exportStealable	importer stealable.	1halt.! !!GemTDGod methodsFor: 'public' stamp: 'ClementBera 1/29/2018 13:54' prior: 33713957!process	importer := GemTDImporter new.	importer importAll.	self generate.	self clearExport.	self exportBaseTowers.	self exportAdvancedTowers.	self exportCreeps.	self exportStealable.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/29/2018 13:57'!parseComboPublic: rs	readStream := rs.	^ self parseCombo! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/29/2018 14:00' prior: 33794340!parseComboWith: parseSelector	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	readStream peek = $} ifTrue: [ readStream next. ^ #() ].	self skipSeparators.	ws nextPut: (self perform: parseSelector).	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	readStream peek = $} ifTrue: [ ", with nothing after..."		readStream next. "skip }"		^ ws contents ]. 	ws nextPut: (self perform: parseSelector) ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:00' prior: 34038083!stealable	| i |	i := scripts first indexOfSubCollection: 'GameRules.stealable_ability_pool ='.	i := i + 'GameRules.stealable_ability_pool =' size.	^ GemTDLuaParser new parseComboPublic: (scripts first copyFrom: i to: i + 100000) readStream	! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:02' prior: 34038173!exportStealable	| abilities s |	abilities := importer stealable collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	s := WriteStream on: (String new: 10000).	s << '!! Abilities to steal'.	s cr.	abilities do: [ :ab | ab exportOn: s ].	self export: s to: 'steal'! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:03' prior: 34039815!exportStealable	| abilities s |	abilities := importer stealable collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	s := WriteStream on: (String new: 10000).	s << '!! Abilities to steal'.	s cr.	abilities withIndexDo: [ :ab :i | ab shortExportOn: s i: i ].	self export: s to: 'steal'! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:06' prior: 33917503!exportOn: s	self exportHeaderOn: s.	self exportNamesOn: s.	self exSplit: s.	self exportDamageOn: s.	self exSplit: s.	self exportCombo: combo names: comboNames on: s.	self exportAbilitiesOn: s.	codeName = 'gemtd_tianranzumulv' ifTrue: [ 		s << '*Spells to steal>steal.pillar*' ]! !----QUIT----2018-01-29T14:06:56.2069+01:00 Pharo.image priorSource: 483490!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 14:09' prior: 34037506!importDetailsWith: importer	| details modifiers | 	codeName = 'chain_frost' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 14:10' prior: 33992144!importAbilitySpecial: collection	abilitySpecial := Dictionary new.	1hat.	collection values do: [ :val |		val removeKey: 'var_type' ifAbsent: [  ].		val keysAndValuesDo: [ :k :v | abilitySpecial at: k put: v ] ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 14:10' prior: 34044539!importAbilitySpecial: collection	abilitySpecial := Dictionary new.	1halt.	collection values do: [ :val |		val removeKey: 'var_type' ifAbsent: [  ].		val keysAndValuesDo: [ :k :v | abilitySpecial at: k put: v ] ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 14:11' prior: 34044855!importAbilitySpecial: collection	abilitySpecial := Dictionary new.	collection values do: [ :val |		val removeKey: 'var_type' ifAbsent: [  ].		val keysAndValuesDo: [ :k :v | abilitySpecial at: k put: v ] ].	#(vision_radius slow_attack_speed damage_scepter cast_range_scepter) do: [:k |		abilitySpecial removeKey: k ifAbsent: [  ] ].	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 14:12' prior: 34045172!importAbilitySpecial: collection	abilitySpecial := Dictionary new.	collection values do: [ :val |		val removeKey: 'var_type' ifAbsent: [  ].		val keysAndValuesDo: [ :k :v | abilitySpecial at: k put: v ] ].	#(vision_radius damage_scepter cast_range_scepter) do: [:k |		abilitySpecial removeKey: k ifAbsent: [  ] ].	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 14:13' prior: 34043982!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:17' prior: 34002654!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 7 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ]			s << '[' << k << ': ' << v << ']'.			count := count + 1. 			 ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Raw: Pierce Spell Immunity | =='			<< spellImmunityType printString 			<< '=='.		s cr  ]! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:18' prior: 34046536!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 7 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. 			 ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Raw: Pierce Spell Immunity | =='			<< spellImmunityType printString 			<< '=='.		s cr  ]! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:18' prior: 34047500!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 7 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Raw: Pierce Spell Immunity | =='			<< spellImmunityType printString 			<< '=='.		s cr  ]! !----QUIT----2018-01-29T14:18:55.100871+01:00 Pharo.image priorSource: 486452!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:19' prior: 34048465!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 6 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Raw: Pierce Spell Immunity | =='			<< spellImmunityType printString 			<< '=='.		s cr  ]! !----SNAPSHOT----2018-01-29T14:19:49.319428+01:00 Pharo.image priorSource: 494903!----QUIT----2018-01-29T14:19:52.816701+01:00 Pharo.image priorSource: 498867!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-01-29T14:20:07.140174+01:00 Pharo.image priorSource: 498950!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:22' prior: 34040595!exportOn: s	self exportHeaderOn: s.	self exportNamesOn: s.	self exSplit: s.	self exportDamageOn: s.	self exSplit: s.	self exportCombo: combo names: comboNames on: s.	self exportAbilitiesOn: s.	codeName = 'gemtd_tianranzumulv' ifTrue: [ 		s << '*Spells to steal>steal.pillar*'.		s cr. ]! !----SNAPSHOT----2018-01-29T14:22:16.174227+01:00 Pharo.image priorSource: 498950!----QUIT----2018-01-29T14:22:23.432069+01:00 Pharo.image priorSource: 505359!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:36' prior: 33798686!importExtraAbilities: importer	| assoc |	assoc := importer creepExtraAbilities at: codeName ifAbsent: [		1halt.		0->#()].	hiddenLevel := assoc key.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:38' prior: 34062966!importExtraAbilities: importer	| assoc cea |	cea := importer creepExtraAbilities.	assoc := cea at: codeName ifAbsent: [		cea values		 	detect: [ :a | a key = level ]			ifFound: [ :b | b ]			ifNone: [ 0->#() ] ].	hiddenLevel := assoc key.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:38' prior: 34017294!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.	hp := details at: 'StatusHealth'.	self importExtraAbilities: importer.	self difficultyPatchWith: importer.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:38' prior: 34063299!importExtraAbilities: importer	| assoc cea |	1halt.	cea := importer creepExtraAbilities.	assoc := cea at: codeName ifAbsent: [		cea values		 	detect: [ :a | a key = level ]			ifFound: [ :b | b ]			ifNone: [ 0->#() ] ].	hiddenLevel := assoc key.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:39' prior: 34064201!importExtraAbilities: importer	| assoc cea l |	l := level asInteger.	cea := importer creepExtraAbilities.	assoc := cea at: codeName ifAbsent: [		cea values		 	detect: [ :a | a key = l ]			ifFound: [ :b | b ]			ifNone: [ 0->#() ] ].	hiddenLevel := assoc key.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:39' prior: 34064635!importExtraAbilities: importer	| assoc cea l |	l := level asInteger.	cea := importer creepExtraAbilities.	assoc := cea at: codeName ifAbsent: [		cea values		 	detect: [ :a | a key = l ]			ifFound: [ :b | b logCr. b ]			ifNone: [ 0->#() ] ].	hiddenLevel := assoc key.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/29/2018 14:40' prior: 34065082!importExtraAbilities: importer	| assoc cea l |	l := level asInteger.	cea := importer creepExtraAbilities.	assoc := cea at: codeName ifAbsent: [		cea values		 	detect: [ :a | a key = l ]			ifFound: [ :b | b ]			ifNone: [ 0->#() ] ].	hiddenLevel := assoc key.	assoc value do: [:ab |		abilities add: (GemTDAbility newFrom: ab importer: importer) ].! !----QUIT----2018-01-29T14:40:46.298012+01:00 Pharo.image priorSource: 505442!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 1/29/2018 14:42' prior: 33909678!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ].	comboNames := self comboNamesFrom: combo importer: importer! !!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 1/29/2018 14:45' prior: 34068993!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ].	comboNames := self comboNamesFrom: combo importer: importer.	self importSlateAbility: importer! !!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 1/29/2018 14:45'!importSlateAbility: importer	importer slateAbilityMapping.	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:45'!slateAbilityMapping	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:51' prior: 34069851!slateAbilityMapping	| script last parsed |	script := scripts at: 1.	last := 1.	parsed := OrderedCollection new.	[last := (script indexOfSubCollection: 'merge_shiban(' startingAt: last) + 'merge_shiban(' size.	parsed add: (GemTDLuaParser new parsePair: (script copyFrom: last to: last + 150) readStream).	last = 'merge_shiban(' size] whileFalse.	^ parsed! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/29/2018 14:52'!parsePair: rs	| s1 s2 |	readStream := rs.	self skipSeparators.	s1 := self parseString.	self skipSeparators.	self assert: readStream peek = $, .	self skipSeparators.	s2 := self parseString.	^ s1 -> s2! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:52' prior: 34069975!slateAbilityMapping	| script last parsed |	script := scripts at: 1.	last := 1.	parsed := OrderedCollection new.	[last := (script indexOfSubCollection: 'merge_shiban(' startingAt: last) + 'merge_shiban(' size.	parsed add: (GemTDLuaParser new parsePair: (script copyFrom: last to: last + 150) readStream).	last = 'merge_shiban(' size] whileFalse.1halt.	^ parsed! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/29/2018 14:53' prior: 34070416!parsePair: rs	| s1 s2 |	readStream := rs.	self skipSeparators.	s1 := self parseString.	self skipSeparators.	self assert: readStream peek = $, .	readStream next.	self skipSeparators.	s2 := self parseString.	^ s1 -> s2! !----SNAPSHOT----2018-01-29T14:54:21.034707+01:00 Pharo.image priorSource: 511465!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:55' prior: 34070721!slateAbilityMapping	| script last parsed |	script := scripts at: 1.	last := 1.	parsed := OrderedCollection new.	[last := (script indexOfSubCollection: 'merge_shiban(' startingAt: last) + 'merge_shiban(' size.	last = 'merge_shiban(' size] whileFalse: [		parsed add: (GemTDLuaParser new parsePair: (script copyFrom: last to: last + 150) readStream).].	^ parsed! !!GemTDGod methodsFor: 'analysis' stamp: 'ClementBera 1/29/2018 14:56' prior: 33759484!generate	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		u = 'gemtd_feidanshiban' ifTrue: [ 1halt ].		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ 					((details at: 'Model') beginsWith:'materials/')						ifFalse: [GemTDCreep]						ifTrue: [GemTDSlate]].		units add: (cls newFrom: u with: details importer: importer)]].! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:58' prior: 34071591!slateAbilityMapping	| script last parsed |	script := scripts at: 1.	last := 1.	parsed := OrderedCollection new.	[last := (script indexOfSubCollection: 'merge_shiban( "' startingAt: last) + 'merge_shiban(' size.	last = 'merge_shiban(' size] whileFalse: [		parsed add: (GemTDLuaParser new parsePair: (script copyFrom: last to: last + 150) readStream).].	^ parsed! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:58' prior: 34072670!slateAbilityMapping	| script last parsed |	script := scripts at: 1.	last := 1.	parsed := OrderedCollection new.	[last := (script indexOfSubCollection: 'merge_shiban( "' startingAt: last) + 'merge_shiban(' size.	last = 'merge_shiban(' size] whileFalse: [		parsed add: (GemTDLuaParser new parsePair: (script copyFrom: last to: last + 150) readStream).].	^ parsed! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:58'!parseSlateAbilityMapping	| script last parsed |	script := scripts at: 1.	last := 1.	parsed := OrderedCollection new.	[last := (script indexOfSubCollection: 'merge_shiban( "' startingAt: last) + 'merge_shiban(' size.	last = 'merge_shiban(' size] whileFalse: [		parsed add: (GemTDLuaParser new parsePair: (script copyFrom: last to: last + 150) readStream).].	^ parsed! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:58' prior: 34073135!slateAbilityMapping	slateMap ifNotNil: [ ^ slateMap ].	^ slateMap := self parseSlateAbilityMapping! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 14:59' prior: 34074054!slateAbilityMapping	slateMap ifNotNil: [ ^ slateMap ].	^ slateMap := self parseSlateAbilityMapping asDictionary! !!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 1/29/2018 14:59' prior: 34069703!importSlateAbility: importer	| map |	map := importer slateAbilityMapping.	map at: 'codeName'.	1halt.! !!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 1/29/2018 15:00' prior: 34074459!importSlateAbility: importer	| map |	map := importer slateAbilityMapping.	abilities add: (GemTDAbility newFrom: (map at: codeName) importer: importer)! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:02' prior: 34028935!importThinkAbility: modifier prefix: prefix	| think |	think := (modifier at: 'OnIntervalThink' ifAbsent: [^self addProperty: prefix]) at: 'Damage'.	self addProperty: (String streamContents: [:s |		s  			<< prefix.		(modifier includesKey: 'Duration') ifTrue: 			[s				<< 'during ' << (modifier at: 'Duration') << ' seconds, every ' 				<< (modifier at: 'ThinkInterval') << ' seconds,'].		s << ' deals ' << (think at: 'Damage')			<< ' ' << (self damageKeywordFrom: (think at: 'Type')) << ' damage.' ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:03' prior: 34030456!importAura: aura editing: modifiers	| auraModif prefix |	modifiers removeKey: (aura at: 'Aura').	modifiers removeKey: (modifiers keyAtValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	auraModif := modifiers at: (aura at: 'Aura') ifAbsent: [^ self addProperty: prefix].	self importSecondMod: auraModif prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:03' prior: 34075520!importAura: aura editing: modifiers	| auraModif prefix |	modifiers removeKey: (aura at: 'Aura') ifAbsent: [].	modifiers removeKey: (modifiers keyAtValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	auraModif := modifiers at: (aura at: 'Aura') ifAbsent: [^ self addProperty: prefix].	self importSecondMod: auraModif prefix: prefix! !!GemTDGod methodsFor: 'analysis' stamp: 'ClementBera 1/29/2018 15:03' prior: 34072048!generate	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		1halt.		u = 'gemtd_feidanshiban' ifTrue: [ 1halt ].		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ 					((details at: 'Model') beginsWith:'materials/')						ifFalse: [GemTDCreep]						ifTrue: [GemTDSlate]].		units add: (cls newFrom: u with: details importer: importer)]].! !!GemTDGod methodsFor: 'analysis' stamp: 'ClementBera 1/29/2018 15:05' prior: 34076427!generate	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ 					((details at: 'Model') beginsWith:'materials/')						ifFalse: [GemTDCreep]						ifTrue: [GemTDSlate]].		units add: (cls newFrom: u with: details importer: importer)]].	#(gemtd_bingfengshiban gemtd_feidanshiban) do: [ :each |		(self units keys includes: each) ifFalse: [ units add: (GemTDSlate newFrom: each with: Dictionary new importer: importer) ] ]! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/29/2018 15:06' prior: 33786639!importAbilities: details importer: importer	1 to: 16 do: [ :i |		| ab |		ab := details at: 'Ability' , i printString ifAbsent: [''].		ab = '' ifFalse: [ 			abilities add: (GemTDAbility newFrom: ab importer: importer) ] ].! !!GemTDGod methodsFor: 'analysis' stamp: 'ClementBera 1/29/2018 15:07' prior: 34077052!generate	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ 					((details at: 'Model') beginsWith:'materials/')						ifFalse: [GemTDCreep]						ifTrue: [GemTDSlate]].		units add: (cls newFrom: u with: details importer: importer)]].! !----QUIT----2018-01-29T15:07:45.627496+01:00 Pharo.image priorSource: 516982!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:11' prior: 34075971!importAura: aura editing: modifiers	| auraModif prefix |	codeName = 'tower_lanbaoshi2' ifTrue: [ 1halt ].	modifiers removeKey: (aura at: 'Aura') ifAbsent: [].	modifiers removeKey: (modifiers keyAtValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	auraModif := modifiers at: (aura at: 'Aura') ifAbsent: [^ self addProperty: prefix].	self importSecondMod: auraModif prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:11' prior: 34081714!importAura: aura editing: modifiers	| auraModif prefix |	codeName = 'tower_lanbaoshi2' ifTrue: [ 1halt ].	modifiers removeKey: (aura at: 'Aura') ifAbsent: [].	modifiers removeKey: (modifiers keyAtValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	auraModif := modifiers at: (aura at: 'Aura') ifAbsent: [1halt. ^ self addProperty: prefix].	self importSecondMod: auraModif prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:12' prior: 34082228!importAura: aura editing: modifiers	| auraModif prefix |	modifiers removeKey: (aura at: 'Aura') ifAbsent: [].	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	auraModif := modifiers at: (aura at: 'Aura') ifAbsent: [ ^ self addProperty: prefix].	modifiers removeKey: (modifiers keyAtValue: aura).	self importSecondMod: auraModif prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:13' prior: 34082749!importAura: aura editing: modifiers	| auraModif prefix |	modifiers removeKey: (modifiers keyAtValue: aura).	prefix := 'Aura: Range ' , (aura at: 'Aura_Radius') , ' Effect: '.	auraModif := modifiers at: (aura at: 'Aura') ifAbsent: [ ^ self addProperty: prefix].	modifiers removeKey: (aura at: 'Aura') ifAbsent: [].	self importSecondMod: auraModif prefix: prefix! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:14' prior: 34046030!importDetailsWith: importer	| details modifiers | 	codeName = 'new_cask' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ]	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:15' prior: 34083679!importDetailsWith: importer	| details modifiers | 	codeName = 'new_cask' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:15' prior: 34084233!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:18' prior: 34084788!importDetailsWith: importer	| details modifiers | 	codeName = 'tower_chain_frost' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:20' prior: 34085301!importDetailsWith: importer	| details modifiers | 	codeName = 'naga_siren_ensnare' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 15:23' prior: 34074251!slateAbilityMapping	1halt.	slateMap ifNotNil: [ ^ slateMap ].	^ slateMap := self parseSlateAbilityMapping asDictionary! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/29/2018 15:24' prior: 34086428!slateAbilityMapping	slateMap ifNotNil: [ ^ slateMap ].	^ slateMap := self parseSlateAbilityMapping asDictionary! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 1/29/2018 15:26' prior: 34085865!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !----SNAPSHOT----2018-01-29T15:26:04.835439+01:00 Pharo.image priorSource: 524182!----QUIT----2018-01-29T15:28:29.873804+01:00 Pharo.image priorSource: 532843!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/29/2018 15:30' prior: 34040189!exportStealable	| abilities s |	abilities := importer stealable collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	s := WriteStream on: (String new: 10000).	s << '!! Abilities to steal'.	s cr.	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s i: i.		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].	self export: s to: 'steal'! !----QUIT----2018-01-29T15:31:10.14807+01:00 Pharo.image priorSource: 532926!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/5/2018 20:57' prior: 33867915!exportAdvancedTowersOn: s	| printed order others |	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		s << '!!!!!! Memo '.		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit comboExportOn: s ] ifNone: [ ] ].		s cr.		towerCodes do: [ :tc |			self unitNamed: tc do: [ :unit | unit exportOn: s ] ifNone: [ ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | 			(each class = GemTDAdvancedTower or: [ each class = GemTDSlate ]) 			and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 2/5/2018 20:58'!comboExportOn: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << (name at: 'en').	s << ' = '.	comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 2/5/2018 20:58'!comboExportOn: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << (name at: 'en').	s << ' = '.	comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.! !GemTDAdvancedTower removeSelector: #comboExportOn:!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 2/5/2018 20:59' prior: 34100895!comboExportOn: s	self combo ifNil: [ ^ self ].	self combo size < 2 ifTrue: [ ^ self ] .	s << (name at: 'en').	s << ' = '.	self comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.! !!GemTDSlate methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!picture	^ picture! !!GemTDSlate methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!picture: anObject	picture := anObject! !!GemTDSlate methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!combo	^ combo! !!GemTDSlate methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!combo: anObject	combo := anObject! !!GemTDSlate methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!comboNames	^ comboNames! !!GemTDSlate methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!comboNames: anObject	comboNames := anObject! !!GemTDAdvancedTower methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!combo	^ combo! !!GemTDAdvancedTower methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!combo: anObject	combo := anObject! !!GemTDAdvancedTower methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!comboNames	^ comboNames! !!GemTDAdvancedTower methodsFor: 'accessing' stamp: 'ClementBera 2/5/2018 20:59'!comboNames: anObject	comboNames := anObject! !----QUIT----2018-02-05T20:59:32.198499+01:00 Pharo.image priorSource: 536392!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 2/5/2018 21:02' prior: 34101231!comboExportOn: s	self combo ifNil: [ ^ self ].	self combo size < 2 ifTrue: [ ^ self ] .	s << '|!! ' <<(name at: 'en') << ' | '.	self comboNames 		do: [ :cn | s << cn ]		separatedBy: [ s << ' \+ ' ].	s cr.! !----SNAPSHOT----2018-02-05T21:02:09.773354+01:00 Pharo.image priorSource: 548098!----QUIT----2018-02-05T21:02:11.229696+01:00 Pharo.image priorSource: 554330!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/5/2018 21:08' prior: 34086858!importDetailsWith: importer	| details modifiers | 	codeName = 'shredder_reactive_armor' ifTrue: [ 1halt ].	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/5/2018 21:09' prior: 34114869!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/5/2018 21:10' prior: 33933303!importWith: importer 	name := Dictionary new.	codeName = 'tower_ranjin' ifTrue: [ 1halt ].	self importDetailsWith: importer.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: [nil]) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: [nil]) ].! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/5/2018 21:14'!abilityResourceLang: l importer: importer keyword: keyword	^ (importer resources at: l) 			at: 'DOTA_Tooltip_Ability_' , codeName 			ifAbsent: [				(importer resources at: l) 					at: 'DOTA_Tooltip_ability_' , codeName 					ifAbsent: [nil]]! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/5/2018 21:15' prior: 34115944!importWith: importer 	name := Dictionary new.	codeName = 'tower_ranjin' ifTrue: [ 1halt ].	self importDetailsWith: importer.	#(en sch tch) do: [ :l |		name at: l put: (self abilityResourceLang: l importer: importer keyword: codeName) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: (self abilityResourceLang: l importer: importer keyword: codeName , '_Description') ].! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/5/2018 21:15' prior: 34116795!importWith: importer 	name := Dictionary new.	self importDetailsWith: importer.	#(en sch tch) do: [ :l |		name at: l put: (self abilityResourceLang: l importer: importer keyword: codeName) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: (self abilityResourceLang: l importer: importer keyword: codeName , '_Description') ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 21:16' prior: 33870644!cleanNameFor: key lang: lang importer: importer	^ self clean: ((importer resources at: lang) 			at: key 			ifAbsent: [ 1halt. self getFallBackNames 							at: key 							ifAbsent: ['Unavailable'] ])! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 21:17' prior: 34117743!cleanNameFor: key lang: lang importer: importer	^ self clean: ((importer resources at: lang) 			at: key 			ifAbsent: [ (codeName beginsWith: 'Kooh') ifTrue: [1halt]. self getFallBackNames 							at: key 							ifAbsent: ['Unavailable'] ])! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 21:17' prior: 34118042!cleanNameFor: key lang: lang importer: importer	^ self clean: ((importer resources at: lang) 			at: key 			ifAbsent: [ (codeName = 'gemtd_keyinuoerguangmingzhishan') ifTrue: [1halt]. self getFallBackNames 							at: key 							ifAbsent: ['Unavailable'] ])! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 21:19' prior: 34118381!cleanNameFor: key lang: lang importer: importer	^ self clean: ((importer resources at: lang) 			at: key 			ifAbsent: [ self getFallBackNames 							at: key 							ifAbsent: ['Unavailable'] ])! !----QUIT----2018-02-05T21:20:05.832587+01:00 Pharo.image priorSource: 554413!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/5/2018 21:22' prior: 34116457!abilityResourceLang: l importer: importer keyword: keyword	^ (importer resources at: l) 			at: 'DOTA_Tooltip_Ability_' , keyword 			ifAbsent: [				(importer resources at: l) 					at: 'DOTA_Tooltip_ability_' , keyword 					ifAbsent: [nil]]! !----QUIT----2018-02-05T21:22:44.501667+01:00 Pharo.image priorSource: 564504!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 2/5/2018 21:55' prior: 34052429!shortExportOn: s i: i	| num |	num := i printString.	s 		<< '|!! Ability ' << num << ' | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 6 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity | '			<< spellImmunityType printString.		s cr  ]! !!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 21:55' prior: 34069342!importWith: details importer: importer	codeName = 'gemtd_hongliushiban' ifTrue: [ 1halt ].	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ].	comboNames := self comboNamesFrom: combo importer: importer.	self importSlateAbility: importer! !----QUIT----2018-02-05T21:56:00.788876+01:00 Pharo.image priorSource: 573694!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 21:58'!baseNameFor: key lang: lang importer: importer	| n |	n := (importer resources at: lang) 			at: key 			ifAbsent: [ self getFallBackNames 							at: key 							ifAbsent: ['Unavailable'] ].	n ifEmpty: [ ^ self getFallBackNames 							at: key 							ifAbsent: ['Unavailable'] ].	^ n! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 21:58' prior: 34118737!cleanNameFor: key lang: lang importer: importer	^ self clean: (self baseNameFor: key lang: lang importer: importer)! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 21:58' prior: 34138505!baseNameFor: key lang: lang importer: importer	"Needs to work around the non sense where name is in ressource but empty..."	| n |	n := (importer resources at: lang) 			at: key 			ifAbsent: [ self getFallBackNames 							at: key 							ifAbsent: ['Unavailable'] ].	n ifEmpty: [ ^ self getFallBackNames 							at: key 							ifAbsent: ['Unavailable'] ].	^ n! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 21:58' prior: 34138889!cleanNameFor: key lang: lang importer: importer	^ self clean: (self baseNameFor: key lang: lang importer: importer)! !----QUIT----2018-02-05T21:58:57.830196+01:00 Pharo.image priorSource: 580992!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-02-05T21:59:51.869656+01:00 Pharo.image priorSource: 585250!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDSlate methodsFor: 'initialize' stamp: 'ClementBera 2/5/2018 22:00' prior: 34135086!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ].	comboNames := self comboNamesFrom: combo importer: importer.	self importSlateAbility: importer! !----QUIT----2018-02-05T22:00:08.253933+01:00 Pharo.image priorSource: 585250!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!GemTDElement subclass: #GemTDAbility	instanceVariableNames: 'tooltip property abilitySpecial spellImmunityType bonusDamage'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/5/2018 22:05' prior: 34011706!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	codeName = 'tower_attack3' ifTrue: [ 1halt ].	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'STATE' 'BONUS' 'PREATTACK' 'CONSTANT' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	(val endsWith: 'ENABLED') 		ifTrue: [ s << 'true' ]		ifFalse: [ s << val ].	percent ifTrue: [ s << '\%' ].	s << ']'.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/5/2018 22:08' prior: 34155200!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	codeName = 'tower_attack3' ifTrue: [ 1halt ].	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'STATE' 'BONUS' 'PREATTACK' 'CONSTANT' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	(val endsWith: 'ENABLED') 		ifTrue: [ s << 'true' ]		ifFalse: [ s << val ].	percent ifTrue: [ s << '\%' ].	s << ']'.	((split includes: 'BASEATTACK') and: [split includes: 'BONUSDAMAGE'])		ifTrue: [ bonusDamage := val asInteger ]! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 2/5/2018 22:08'!bonusDamage	^ bonusDamage! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/5/2018 22:09' prior: 33915531!exportDamageOn: s	s << '|!! Attack Damage | ' << damage.	abilities do: [ :ab |		ab bonusDamage ifNotNil: [ :dmg | s << ' ==[+' << dmg << ']==' ] ].	s cr.	s << '|!! Attack Rate | ' << rate. 	s cr.	s << '|!! Attack Range | ' << range .	s cr.! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/5/2018 22:09' prior: 34155835!importModifierProperty: prop with: val on: s	| split percent |	percent := false.	split := prop splitOn: '_'.	split last = 'PERCENTAGE' ifTrue: [ percent := true ].	#('MODIFIER' 'PROPERTY' 'STATE' 'BONUS' 'PREATTACK' 'CONSTANT' 'PERCENTAGE') do: [ :s2 |		split remove: s2 ifAbsent: [ ] ].	s << '['.	split do: [ :e | s << e] separatedBy: [ s space ].	s << ': '.	(val endsWith: 'ENABLED') 		ifTrue: [ s << 'true' ]		ifFalse: [ s << val ].	percent ifTrue: [ s << '\%' ].	s << ']'.	"Special case to display base attack bonus damage in dmg section for towers"	((split includes: 'BASEATTACK') and: [split includes: 'BONUSDAMAGE'])		ifTrue: [ bonusDamage := val ]! !----SNAPSHOT----2018-02-05T22:10:03.94639+01:00 Pharo.image priorSource: 594566!----SNAPSHOT----2018-02-05T22:10:06.813077+01:00 Pharo.image priorSource: 603279!----QUIT----2018-02-05T22:10:08.165669+01:00 Pharo.image priorSource: 603361!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/6/2018 10:28' prior: 34012853!importRunScript: modifier prefix: prefix	| otherModif |	codeName = 'jianshe3' ifTrue: [ 1halt ].	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/6/2018 10:28' prior: 34166825!importRunScript: modifier prefix: prefix	| otherModif |	codeName = 'tower_jianshe4' ifTrue: [ 1halt ].	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !!GemTDLuaMatcher methodsFor: 'as yet unclassified' stamp: 'ClementBera 2/6/2018 10:30'!matchJianshe: string	| str |	1halt.	str := string.	result := OrderedCollection new.	[str beginsWith: 'if (GameRules.guai_level'] whileTrue: [ 		str := str allButFirst: (self match: str readStream)].	^ result! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 2/6/2018 10:31'!importJianshe: codeName	| i |	1halt.	i := scripts first indexOfSubCollection: 'if (GameRules.guai_level'.	^ GemTDLuaMatcher new matchFrom: (scripts first copyFrom: i to: i + 10000) ! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/6/2018 10:32' prior: 34167508!importRunScript: modifier prefix: prefix	| otherModif |	otherModif := modifier copy.	#('Function' 'ScriptFile' 'Target' 'attack_effect') do: [ :e | otherModif removeKey: e ifAbsent: [  ] ].	otherModif := otherModif associations.	self addProperty: (String streamContents: [:s |		s  			<< prefix			<< 'run script ' << (modifier at: 'Function') << ' ('			<< ((modifier at: 'ScriptFile') splitOn: '/') last 			<< ') with ['.		otherModif do: [ :assoc | s << assoc key << ': ' << assoc value ]  separatedBy: [ s << ', ' ].		s << ']'  ]).! !GemTDImporter removeSelector: #importJianshe:!GemTDLuaMatcher removeSelector: #matchJianshe:!----SNAPSHOT----2018-02-06T10:33:21.347786+01:00 Pharo.image priorSource: 603444!TraitDescription removeSelector: #mcWorkingCopy!TraitDescription removeSelector: #manifestBuilderForRuleChecker:!TraitDescription removeSelector: #criticNameOn:!TraitDescription removeSelector: #criticClass!TheManifestBuilder removeSelector: #unwrap:!TheManifestBuilder removeSelector: #truePositiveOf:version:!TheManifestBuilder removeSelector: #toDoOf:version:!TheManifestBuilder removeSelector: #selectorTruePositiveOf:version:!TheManifestBuilder removeSelector: #selectorToDoOf:version:!TheManifestBuilder removeSelector: #selectorFalsePositiveOf:version:!TheManifestBuilder removeSelector: #resetToDoOf:version:!TheManifestBuilder removeSelector: #resetFalsePositiveOf:version:!TheManifestBuilder removeSelector: #removeToDo:of:version:!TheManifestBuilder removeSelector: #removeRejectRule:!TheManifestBuilder removeSelector: #removeRejectClass:!TheManifestBuilder removeSelector: #removeObsoleteFalsePositiveOf:!TheManifestBuilder removeSelector: #removeManifestOf:!TheManifestBuilder removeSelector: #removeItem:selector:!TheManifestBuilder removeSelector: #removeFalsePositive:of:version:!TheManifestBuilder removeSelector: #removeAllToDo:of:version:!TheManifestBuilder removeSelector: #removeAllManifest!TheManifestBuilder removeSelector: #removeAllItem:selector:!TheManifestBuilder removeSelector: #removeAllFalsePositive:of:version:!TheManifestBuilder removeSelector: #rejectRules!TheManifestBuilder removeSelector: #rejectClasses!TheManifestBuilder removeSelector: #printOn:!TheManifestBuilder removeSelector: #packageNameOf:!TheManifestBuilder removeSelector: #manifestOf:!TheManifestBuilder removeSelector: #manifestClass:!TheManifestBuilder removeSelector: #manifest!TheManifestBuilder removeSelector: #isFalsePositive:onRule:version:!TheManifestBuilder removeSelector: #installTruePositiveOf:version:!TheManifestBuilder removeSelector: #installToDoOf:version:!TheManifestBuilder removeSelector: #installFalsePositiveOf:version:!TheManifestBuilder removeSelector: #hash!TheManifestBuilder removeSelector: #hasTruePositiveOf:version:!TheManifestBuilder removeSelector: #hasToDoOf:version:!TheManifestBuilder removeSelector: #hasFalsePositiveOf:version:!TheManifestBuilder removeSelector: #falsePositiveOf:version:!TheManifestBuilder removeSelector: #dateOfTruePositive:onRule:version:!TheManifestBuilder removeSelector: #dateOfToDo:onRule:version:!TheManifestBuilder removeSelector: #dateOfFalsePositive:onRule:version:!TheManifestBuilder removeSelector: #dateOf:forSelector:!TheManifestBuilder removeSelector: #createManifestOf:!TheManifestBuilder removeSelector: #createManifestNamed:!TheManifestBuilder removeSelector: #containsTruePositive:onRule:version:!TheManifestBuilder removeSelector: #containsToDo:onRule:version:!TheManifestBuilder removeSelector: #containsRejectedRule:!TheManifestBuilder removeSelector: #containsRejectedClass:!TheManifestBuilder removeSelector: #containsFalsePositive:onRule:version:!TheManifestBuilder removeSelector: #compileSelector:returnValue:classified:!TheManifestBuilder removeSelector: #compileSelector:returnValue:!TheManifestBuilder removeSelector: #cleanUp!TheManifestBuilder removeSelector: #buildArrayString:!TheManifestBuilder removeSelector: #browsedEnvironment!TheManifestBuilder removeSelector: #addTruePositive:of:version:!TheManifestBuilder removeSelector: #addToDo:of:version:!TheManifestBuilder removeSelector: #addRejectRule:!TheManifestBuilder removeSelector: #addRejectClass:!TheManifestBuilder removeSelector: #addItem:selector:!TheManifestBuilder removeSelector: #addFalsePositive:of:version:!TheManifestBuilder removeSelector: #addAllToDo:of:version:!TheManifestBuilder removeSelector: #addAllItem:selector:!TheManifestBuilder removeSelector: #addAllFalsePositive:of:version:!TheManifestBuilder removeSelector: #=!TheManifestBuilder class removeSelector: #truePositiveEndTag!TheManifestBuilder class removeSelector: #toDoMiddleTag!TheManifestBuilder class removeSelector: #toDoEndTag!TheManifestBuilder class removeSelector: #toDoBeginningTag!TheManifestBuilder class removeSelector: #rejectRulesTag!TheManifestBuilder class removeSelector: #rejectClassesTag!TheManifestBuilder class removeSelector: #ofPackageNamed:!TheManifestBuilder class removeSelector: #of:!TheManifestBuilder class removeSelector: #manifestTag!TheManifestBuilder class removeSelector: #manifestClassComment!TheManifestBuilder class removeSelector: #hasPackageNamed:!TheManifestBuilder class removeSelector: #hasManifestFor:!TheManifestBuilder class removeSelector: #falsePositiveMiddleTag!TheManifestBuilder class removeSelector: #falsePositiveEndTag!TheManifestBuilder class removeSelector: #falsePositiveBeginningTag!TheManifestBuilder class removeSelector: #allManifestClasses!Smalltalk globals removeClassNamed: #AnObsoleteTheManifestBuilder!TClassDescription removeSelector: #mcWorkingCopy!TClassDescription removeSelector: #manifestBuilderForRuleChecker:!TClassDescription removeSelector: #criticNameOn:!TClassDescription removeSelector: #criticClass!TApplyingOnClassSide removeSelector: #criticTheNonMetaclassClass!Metaclass removeSelector: #criticTheNonMetaclassClass!RBPackageEnvironment removeSelector: #smallLintCritics!RBCompositeLintRule class removeSelector: #rulesClassifiedFor:!RBCompositeLintRule class removeSelector: #removedRules!RBCompositeLintRule class removeSelector: #allGoodRules!RBClassEnvironment removeSelector: #smallLintCritics!SmalllintManifestChecker removeSelector: #toDoOf:!SmalllintManifestChecker removeSelector: #runRules:onPackage:withoutTestCase:!SmalllintManifestChecker removeSelector: #runRules:onPackage:!SmalllintManifestChecker removeSelector: #rule!SmalllintManifestChecker removeSelector: #rejectRulesOf:!SmalllintManifestChecker removeSelector: #rejectClassesOf:!SmalllintManifestChecker removeSelector: #manifestBuilderOfPackage:!SmalllintManifestChecker removeSelector: #manifestBuilderOfMethod:!SmalllintManifestChecker removeSelector: #manifestBuilderOfClass:!SmalllintManifestChecker removeSelector: #manifestBuilderOf:!SmalllintManifestChecker removeSelector: #isTruePositive:forRuleId:versionId:!SmalllintManifestChecker removeSelector: #isToDo:forRuleId:versionId:!SmalllintManifestChecker removeSelector: #isFalsePositive:forRuleId:versionId:!SmalllintManifestChecker removeSelector: #initialize!SmalllintManifestChecker removeSelector: #falsePositiveOf:!SmalllintManifestChecker removeSelector: #criticsOf:!SmalllintManifestChecker removeSelector: #cleanAllManifest!SmalllintManifestChecker removeSelector: #builderManifestClass!Smalltalk globals removeClassNamed: #AnObsoleteSmalllintManifestChecker!CompiledMethod removeSelector: #mcWorkingCopy!CompiledMethod removeSelector: #manifestBuilderForRuleChecker:!CompiledMethod removeSelector: #criticTheNonMetaclassClass!CompiledMethod removeSelector: #criticNameOn:!CompiledMethod removeSelector: #criticClass!RGMethodDefinition removeSelector: #storeOn:!RGMethodDefinition removeSelector: #arrayStringForManifest!RGMethodDefinition class removeSelector: #manifestReadOn:!ClassTestCase removeSelector: #targetClassEnvironment!ClassTestCase removeSelector: #assertValidLintRule:!RGPackage removeSelector: #arrayStringForManifest!RGPackage class removeSelector: #manifestReadOn:!ClassTrait removeSelector: #criticTheNonMetaclassClass!ReleaseTest removeSelector: #assertValidLintRule:!TClass removeSelector: #criticTheNonMetaclassClass!RGMetaclassDefinition removeSelector: #arrayStringForManifest!RGMetaclassDefinition class removeSelector: #manifestReadOn:!RGClassDescriptionDefinition removeSelector: #arrayStringForManifest!RGClassDescriptionDefinition class removeSelector: #manifestReadOn:!RBMultiEnvironment removeSelector: #smallLintCritics!RBMultiEnvironment removeSelector: #isMultiEnvironment!RBSelectorEnvironment removeSelector: #smallLintCritics!Trait removeSelector: #criticTheNonMetaclassClass!RPackage removeSelector: #packageManifest!RPackage removeSelector: #manifestBuilderForRuleChecker:!RPackage removeSelector: #criticNameOn:!RBVariableEnvironment removeSelector: #smallLintCritics!RPackageTag removeSelector: #manifestBuilderForRuleChecker:!ClassDescription removeSelector: #mcWorkingCopy!ClassDescription removeSelector: #manifestBuilderForRuleChecker:!ClassDescription removeSelector: #criticNameOn:!ClassDescription removeSelector: #criticClass!RBTransformationRule removeSelector: #transform:!RBLintRule removeSelector: #critics!RBBrowserEnvironment removeSelector: #isMultiEnvironment!PackageTreePackageSelection removeSelector: #manifestBuilderForRuleChecker:!ManifestManifestCore class removeSelector: #ruleSentNotImplementedRuleV1FalsePositive!ManifestManifestCore class removeSelector: #ruleImplementedNotSentRuleV1FalsePositive!ManifestManifestCore class removeSelector: #ruleEquivalentSuperclassMethodsRuleV1FalsePositive!ManifestManifestCore class removeSelector: #ruleContainsRuleV1FalsePositive!ManifestManifestCore class removeSelector: #ruleConsistencyCheckRuleV1FalsePositive!ManifestManifestCore class removeSelector: #ruleCodeCruftLeftInMethodsRuleV1TODO!ManifestManifestCore class removeSelector: #ruleClassNotReferencedRuleV1FalsePositive!ManifestManifestCore class removeSelector: #ruleBadMessageRuleV1FalsePositive!ManifestManifestCore class removeSelector: #rejectRules!Smalltalk globals removeClassNamed: #AnObsoleteManifestManifestCore!Class removeSelector: #criticTheNonMetaclassClass!RGMethodDefinitionTest removeSelector: #testStoreOn!RGMethodDefinitionTest removeSelector: #testReadFrom!RGMethodDefinitionTest removeSelector: #testManifestReadOn!RGMethodDefinitionTest removeSelector: #testArrayStringForManifest!RGMetaclassDefinitionTest removeSelector: #testManifestReadOn!RGMetaclassDefinitionTest removeSelector: #testArrayStringForManifest!SmalllintManifestCheckerTest removeSelector: #testToDoOf!SmalllintManifestCheckerTest removeSelector: #testIsToDo!SmalllintManifestCheckerTest removeSelector: #testIsFalsePositive!SmalllintManifestCheckerTest removeSelector: #testCriticsOf!SmalllintManifestCheckerTest removeSelector: #tearDown!SmalllintManifestCheckerTest removeSelector: #setUp!SmalllintManifestCheckerTest removeSelector: #package!SmalllintManifestCheckerTest removeSelector: #cleaningResources!Smalltalk globals removeClassNamed: #AnObsoleteSmalllintManifestCheckerTest!BuilderManifestTest removeSelector: #testResetToDo!BuilderManifestTest removeSelector: #testResetFalsePositive!BuilderManifestTest removeSelector: #testIsFalsePositive!BuilderManifestTest removeSelector: #testIsClassAManifest!BuilderManifestTest removeSelector: #testInstallToDo!BuilderManifestTest removeSelector: #testInstallFalsePositive!BuilderManifestTest removeSelector: #testDateOfToDo!BuilderManifestTest removeSelector: #testDateOfFalsePositive!BuilderManifestTest removeSelector: #testCreationManifestOn!BuilderManifestTest removeSelector: #testCreationManifest!BuilderManifestTest removeSelector: #testContainsToDo!BuilderManifestTest removeSelector: #testContainsFalsePositive!BuilderManifestTest removeSelector: #testCleanUpTD!BuilderManifestTest removeSelector: #testCleanUpFP!BuilderManifestTest removeSelector: #testAddToDo!BuilderManifestTest removeSelector: #testAddRule!BuilderManifestTest removeSelector: #testAddFalsePositive!BuilderManifestTest removeSelector: #testAddClass!BuilderManifestTest removeSelector: #testAddAllToDo!BuilderManifestTest removeSelector: #testAddAllFalsePositive!BuilderManifestTest removeSelector: #tearDown!BuilderManifestTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteBuilderManifestTest!Smalltalk globals removeClassNamed: #AnObsoleteManifestManifestTests!RGClassDefinitionTest removeSelector: #testManifestReadOn!RGClassDefinitionTest removeSelector: #testArrayStringForManifest!MFClassB removeSelector: #method3!MFClassB removeSelector: #method2!Smalltalk globals removeClassNamed: #AnObsoleteMFClassB!MFClassA removeSelector: #method!Smalltalk globals removeClassNamed: #AnObsoleteMFClassA!MetacelloToolBox removeSelector: #validateVersion:!MetacelloToolBox removeSelector: #validateConfiguration!MetacelloToolBox removeSelector: #updateVersionSpec:fullVersionSpec:updateProjects:updatePackages:visited:updated:!MetacelloToolBox removeSelector: #updateVersionMethodForVersion:versionSpecsDo:!MetacelloToolBox removeSelector: #updateVersionMethodForVersion:updateProjects:updatePackages:versionSpecsDo:!MetacelloToolBox removeSelector: #updateVersionMethodForVersion:projectAttributes:updateProjects:updatePackages:versionSpecsDo:!MetacelloToolBox removeSelector: #symbolicVersionMethod:!MetacelloToolBox removeSelector: #project:!MetacelloToolBox removeSelector: #project!MetacelloToolBox removeSelector: #modifyVersionMethodForVersion:versionSpecsDo:!MetacelloToolBox removeSelector: #modifyVersionMethodForVersion:!MetacelloToolBox removeSelector: #modifySymbolicVersionMethodFor:symbolicVersionSpecsDo:!MetacelloToolBox removeSelector: #modifySymbolicVersionMethodFor:!MetacelloToolBox removeSelector: #modifySection:sectionIndex:repository:requiredProjects:packages:dependencies:includes:files:repositories:preLoadDoIts:postLoadDoIts:supplyingAnswers:groups:versionSpecsDo:!MetacelloToolBox removeSelector: #modifySection:repository:requiredProjects:packages:dependencies:includes:files:repositories:preLoadDoIts:postLoadDoIts:supplyingAnswers:groups:versionSpecsDo:!MetacelloToolBox removeSelector: #modifyBaselineOf!MetacelloToolBox removeSelector: #modifiedPackageSpecs:packageSpecsDo:!MetacelloToolBox removeSelector: #methodSpec!MetacelloToolBox removeSelector: #methodSectionsFrom:do:!MetacelloToolBox removeSelector: #imports:!MetacelloToolBox removeSelector: #importFrom:updateProjects:updatePackages:versionSpecsDo:!MetacelloToolBox removeSelector: #importFrom:projectAttributes:inactiveAttributes:updateProjects:updatePackages:versionSpecsDo:!MetacelloToolBox removeSelector: #hasMethodForSymbolicVersion:!MetacelloToolBox removeSelector: #ensureMetacello!MetacelloToolBox removeSelector: #editVersionSpecsForImport:projectAttributes:active:fullVersionSpec:updateProjects:updatePackages:visited:updated:!MetacelloToolBox removeSelector: #createVersionSpec:!MetacelloToolBox removeSelector: #createVersionMethod:inCategory:forVersion:!MetacelloToolBox removeSelector: #createVersion:!MetacelloToolBox removeSelector: #createSymbolicVersionMethod:inCategory:forVersion:!MetacelloToolBox removeSelector: #createProjectReferenceSpec:!MetacelloToolBox removeSelector: #createPackageSpec:!MetacelloToolBox removeSelector: #createGroupSpec:!MetacelloToolBox removeSelector: #createConfiguration:!MetacelloToolBox removeSelector: #createBaselineOfMethod:inCategory:!MetacelloToolBox removeSelector: #constructor!MetacelloToolBox removeSelector: #configurationNamed:!MetacelloToolBox removeSelector: #configurationNameFrom:!MetacelloToolBox removeSelector: #commitMethod!MetacelloToolBox removeSelector: #commitConfiguration:!MetacelloToolBox removeSelector: #commitBaselineOfMethod!MetacelloToolBox removeSelector: #clearVersionSpec:fullVersionSpec:updateProjects:updatePackages:!MetacelloToolBox removeSelector: #classicCreateProjectReferenceSpec:!MetacelloToolBox removeSelector: #buildMapFrom:for:!MetacelloToolBox removeSelector: #baselineNamed:!MetacelloToolBox removeSelector: #baselineNameFrom:!MetacelloToolBox removeSelector: #addSymbolicSection:version:!MetacelloToolBox removeSelector: #addSectionsFrom:forBaseline:updateProjects:updatePackages:versionSpecsDo:!MetacelloToolBox removeSelector: #addSection:repository:requiredProjects:packages:repositories:dependencies:groups:versionSpecsDo:!MetacelloToolBox removeSelector: #addSection:repository:requiredProjects:packages:dependencies:includes:files:repositories:preLoadDoIts:postLoadDoIts:supplyingAnswers:groups:versionSpecsDo:!MetacelloToolBox removeSelector: #addSection:repository:requiredProjects:packages:dependencies:groups:versionSpecsDo:!MetacelloToolBox removeSelector: #addBaselineOfSection:requiredProjects:packages:repositories:dependencies:groups:versionSpecsDo:!MetacelloToolBox removeSelector: #addBaselineOfSection:requiredProjects:packages:dependencies:includes:files:repositories:preLoadDoIts:postLoadDoIts:supplyingAnswers:groups:versionSpecsDo:!MetacelloToolBox removeSelector: #addBaselineOfSection:requiredProjects:packages:dependencies:groups:versionSpecsDo:!MetacelloToolBox removeSelector: #abortMethod!MetacelloToolBox class removeSelector: #validateProject:version:debug:recurse:!MetacelloToolBox class removeSelector: #validateProject:version:!MetacelloToolBox class removeSelector: #validatePlatformLoad:for:version:!MetacelloToolBox class removeSelector: #validatePlatformLoad:for:!MetacelloToolBox class removeSelector: #validateConfiguration:debug:recurse:!MetacelloToolBox class removeSelector: #validateConfiguration:!MetacelloToolBox class removeSelector: #validateBaseline:debug:recurse:!MetacelloToolBox class removeSelector: #validateBaseline:!MetacelloToolBox class removeSelector: #updateToLatestPackageVersionsIn:description:!MetacelloToolBox class removeSelector: #updateDevelopment:for:updateProjects:description:!MetacelloToolBox class removeSelector: #updateDevelopment:for:updatePackages:description:!MetacelloToolBox class removeSelector: #updateDescription:for:description:!MetacelloToolBox class removeSelector: #stripVersionStringForSelector:!MetacelloToolBox class removeSelector: #stableVersion:for:platformAttribute:!MetacelloToolBox class removeSelector: #saveModifiedPackagesIn:description:!MetacelloToolBox class removeSelector: #saveModifiedPackagesAndConfigurationIn:description:!MetacelloToolBox class removeSelector: #saveModifiedDevelopmentPackages:for:description:!MetacelloToolBox class removeSelector: #saveConfigurationPackageFor:description:!MetacelloToolBox class removeSelector: #releaseVersion:for:blessingAttribute:platformAttribute:!MetacelloToolBox class removeSelector: #releaseVersion:for:!MetacelloToolBox class removeSelector: #releaseEarlyAccessVersion:for:from:!MetacelloToolBox class removeSelector: #releaseDevelopmentVersionIn:description:!MetacelloToolBox class removeSelector: #platformAttributes!MetacelloToolBox class removeSelector: #modifyVersion:section:for:repository:requiredProjects:packages:dependencies:includes:files:repositories:preLoadDoIts:postLoadDoIts:supplyingAnswers:groups:!MetacelloToolBox class removeSelector: #modifyVersion:for:versionSpecsDo:!MetacelloToolBox class removeSelector: #modifyVersion:for:projectDo:packageDo:groupDo:!MetacelloToolBox class removeSelector: #modifySymbolicVersion:for:attribute:to:!MetacelloToolBox class removeSelector: #modifyDevelopmentVersionIn:imports:requiredProjects:packages:description:!MetacelloToolBox class removeSelector: #modifyBaselineVersionIn:repository:requiredProjects:packages:dependencies:includes:files:repositories:preLoadDoIts:postLoadDoIts:supplyingAnswers:groups:!MetacelloToolBox class removeSelector: #helpTopicFor:!MetacelloToolBox class removeSelector: #helpTopicClass!MetacelloToolBox class removeSelector: #descriptionForValidationReasonCode:!MetacelloToolBox class removeSelector: #defaultTopic:for:!MetacelloToolBox class removeSelector: #createVersion:for:from:description:!MetacelloToolBox class removeSelector: #createNewDevelopmentVersionIn:description:!MetacelloToolBox class removeSelector: #createNewBaselineVersionIn:requiredProjects:packages:dependencies:groups:!MetacelloToolBox class removeSelector: #createNewBaselineVersionIn:description:versionSpecsDo:!MetacelloToolBox class removeSelector: #createNewBaselineVersionIn:description:!MetacelloToolBox class removeSelector: #createDevelopment:for:importFromBaseline:description:!MetacelloToolBox class removeSelector: #createDevelopment:for:from:imports:description:!MetacelloToolBox class removeSelector: #createDevelopment:for:from:description:!MetacelloToolBox class removeSelector: #createBranch:for:description:!MetacelloToolBox class removeSelector: #createBaselineOf:requiredProjects:packages:repositories:dependencies:groups:!MetacelloToolBox class removeSelector: #createBaseline:for:repository:requiredProjects:packages:repositories:dependencies:groups:!MetacelloToolBox class removeSelector: #createBaseline:for:repository:requiredProjects:packages:dependencies:includes:files:repositories:preLoadDoIts:postLoadDoIts:supplyingAnswers:groups:!MetacelloToolBox class removeSelector: #createBaseline:for:repository:requiredProjects:packages:dependencies:groups:!MetacelloToolBox class removeSelector: #createBaseline:for:from:description:versionSpecsDo:!MetacelloToolBox class removeSelector: #createBaseline:for:from:description:!MetacelloToolBox class removeSelector: #copyConfiguration:to:!MetacelloToolBox class removeSelector: #configurationNamed:!MetacelloToolBox class removeSelector: #configurationNameFrom:!MetacelloToolBox class removeSelector: #configurationClasses!MetacelloToolBox class removeSelector: #compiledMethodForVersion:!MetacelloToolBox class removeSelector: #compareVersionsIn:!MetacelloToolBox class removeSelector: #compareVersion:for:to:!MetacelloToolBox class removeSelector: #checkForCriticalValidationIssues:!MetacelloToolBox class removeSelector: #baselineNamed:!MetacelloToolBox class removeSelector: #baselineNameFrom:!MetacelloToolBox class removeSelector: #baseNameOfConfiguration:!MetacelloToolBox class removeSelector: #baseNameOf:!MetacelloToolBox class removeSelector: #appendDescription:to:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloToolBox!String removeSelector: #resolvePackageSpecsNamedForMetacelloMCVersion:visited:ifAbsent:!String removeSelector: #removeFromMetacelloRepositories:!String removeSelector: #recordRequiredForMetacelloMCVersion:!String removeSelector: #packageFileSpecFor:!String removeSelector: #mergeIntoMetacelloRepositories:!String removeSelector: #loadRequiredForMetacelloMCVersion:!String removeSelector: #fetchRequiredForMetacelloMCVersion:!String removeSelector: #addToMetacelloRepositories:!MetacelloPackageSpec removeSelector: #workingCopyNameFor:!MetacelloPackageSpec removeSelector: #workingCopyName!MetacelloPackageSpec removeSelector: #workingCopy!MetacelloPackageSpec removeSelector: #visitingWithPackages:!MetacelloPackageSpec removeSelector: #updatePackageSpec:using:!MetacelloPackageSpec removeSelector: #updatePackageSpec:force:using:!MetacelloPackageSpec removeSelector: #updatePackageRepositoriesFor:!MetacelloPackageSpec removeSelector: #updatePackageRepositories:!MetacelloPackageSpec removeSelector: #updateForSpawnMethod:!MetacelloPackageSpec removeSelector: #supplyingAnswers:constructor:!MetacelloPackageSpec removeSelector: #setPreLoadDoIt:!MetacelloPackageSpec removeSelector: #setPostLoadDoIt:!MetacelloPackageSpec removeSelector: #searchCacheRepositoryForPackage:!MetacelloPackageSpec removeSelector: #savePackage!MetacelloPackageSpec removeSelector: #resolveToPackagesIn:visited:!MetacelloPackageSpec removeSelector: #requires:constructor:!MetacelloPackageSpec removeSelector: #repositorySpecs!MetacelloPackageSpec removeSelector: #repositoryDescriptions!MetacelloPackageSpec removeSelector: #repository:username:password:constructor:!MetacelloPackageSpec removeSelector: #repository:username:password:!MetacelloPackageSpec removeSelector: #repository:constructor:!MetacelloPackageSpec removeSelector: #repository:!MetacelloPackageSpec removeSelector: #repository!MetacelloPackageSpec removeSelector: #repositories:constructor:!MetacelloPackageSpec removeSelector: #repositories:!MetacelloPackageSpec removeSelector: #repositories!MetacelloPackageSpec removeSelector: #projectDo:packageDo:groupDo:!MetacelloPackageSpec removeSelector: #preLoadDoIt:constructor:!MetacelloPackageSpec removeSelector: #preLoadDoIt:!MetacelloPackageSpec removeSelector: #preLoadDoIt!MetacelloPackageSpec removeSelector: #postLoadDoIt:constructor:!MetacelloPackageSpec removeSelector: #postLoadDoIt:!MetacelloPackageSpec removeSelector: #postLoadDoIt!MetacelloPackageSpec removeSelector: #postCopy!MetacelloPackageSpec removeSelector: #packagesNeedSavingVisited:using:into:!MetacelloPackageSpec removeSelector: #packageSpecsInLoadOrder!MetacelloPackageSpec removeSelector: #nonOverridable!MetacelloPackageSpec removeSelector: #name!MetacelloPackageSpec removeSelector: #mergeSpec:!MetacelloPackageSpec removeSelector: #mergeMap!MetacelloPackageSpec removeSelector: #loadUsing:gofer:!MetacelloPackageSpec removeSelector: #loadUsing:!MetacelloPackageSpec removeSelector: #load!MetacelloPackageSpec removeSelector: #isPackageLoaded:!MetacelloPackageSpec removeSelector: #isPackageLoaded!MetacelloPackageSpec removeSelector: #info!MetacelloPackageSpec removeSelector: #includesForPackageOrdering!MetacelloPackageSpec removeSelector: #includes:constructor:!MetacelloPackageSpec removeSelector: #hasRepository!MetacelloPackageSpec removeSelector: #goferPackage!MetacelloPackageSpec removeSelector: #goferLoaderReference!MetacelloPackageSpec removeSelector: #goferCommitPackage:!MetacelloPackageSpec removeSelector: #goferBranchPackage:message:!MetacelloPackageSpec removeSelector: #getRepositories!MetacelloPackageSpec removeSelector: #getPreLoadDoIt!MetacelloPackageSpec removeSelector: #getPostLoadDoIt!MetacelloPackageSpec removeSelector: #getName!MetacelloPackageSpec removeSelector: #getFile!MetacelloPackageSpec removeSelector: #forceUpdatePackageSpec:using:!MetacelloPackageSpec removeSelector: #file:constructor:!MetacelloPackageSpec removeSelector: #file:!MetacelloPackageSpec removeSelector: #file!MetacelloPackageSpec removeSelector: #fetchUsing:!MetacelloPackageSpec removeSelector: #fetchPackage:!MetacelloPackageSpec removeSelector: #fetch!MetacelloPackageSpec removeSelector: #extractNameFromFile!MetacelloPackageSpec removeSelector: #explicitLoadUsing:!MetacelloPackageSpec removeSelector: #ensureLoadedForDevelopmentUsing:!MetacelloPackageSpec removeSelector: #ensureLoadUsing:!MetacelloPackageSpec removeSelector: #currentVersionInfo!MetacelloPackageSpec removeSelector: #currentPackageLoaded:notLoaded:using:!MetacelloPackageSpec removeSelector: #currentPackageLoaded:comparing:notLoaded:using:!MetacelloPackageSpec removeSelector: #copySpecTo:!MetacelloPackageSpec removeSelector: #configShortCutMethodBodyOn:member:indent:!MetacelloPackageSpec removeSelector: #configMethodOn:indent:!MetacelloPackageSpec removeSelector: #configMethodCascadeOn:member:last:indent:!MetacelloPackageSpec removeSelector: #configMethodBodyOn:hasName:indent:!MetacelloPackageSpec removeSelector: #compareWorkingCopyNamed:using:!MetacelloPackageSpec removeSelector: #compareRelativeCurrentVersion:targetVersionStatus:using:!MetacelloPackageSpec removeSelector: #compareCurrentVersion:targetVersionStatus:using:!MetacelloPackageSpec removeSelector: #ancestors!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPackageSpec!MetacelloAbstractPackageSpec removeSelector: #visitingWithPackages:!MetacelloAbstractPackageSpec removeSelector: #version!MetacelloAbstractPackageSpec removeSelector: #updatePackageSpec:using:!MetacelloAbstractPackageSpec removeSelector: #updatePackageRepositoriesFor:!MetacelloAbstractPackageSpec removeSelector: #updateForSpawnMethod:!MetacelloAbstractPackageSpec removeSelector: #resolveToPackagesIn:visited:!MetacelloAbstractPackageSpec removeSelector: #resolveToPackagesIn:andProjects:visited:!MetacelloAbstractPackageSpec removeSelector: #resolveToLoadableSpec!MetacelloAbstractPackageSpec removeSelector: #resolveToAllPackagesIn:visited:!MetacelloAbstractPackageSpec removeSelector: #resolveToAllPackagesIn:into:visited:!MetacelloAbstractPackageSpec removeSelector: #repositorySpecs!MetacelloAbstractPackageSpec removeSelector: #repository!MetacelloAbstractPackageSpec removeSelector: #packagesNeedSavingVisited:using:into:!MetacelloAbstractPackageSpec removeSelector: #loadUsing:gofer:!MetacelloAbstractPackageSpec removeSelector: #isPackageLoaded!MetacelloAbstractPackageSpec removeSelector: #getFile!MetacelloAbstractPackageSpec removeSelector: #forceUpdatePackageSpec:using:!MetacelloAbstractPackageSpec removeSelector: #file!Object class removeSelector: #metacelloVersion:loads:!Object class removeSelector: #lastMetacelloVersionLoad!MetacelloVisitedPackages removeSelector: #visit:doing:!MetacelloVisitedPackages removeSelector: #pushProject:!MetacelloVisitedPackages removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVisitedPackages!MetacelloMCVersionSpecLoader removeSelector: #versionString!MetacelloMCVersionSpecLoader removeSelector: #versionSpec:!MetacelloMCVersionSpecLoader removeSelector: #versionSpec!MetacelloMCVersionSpecLoader removeSelector: #resolveToLoadableSpecs!MetacelloMCVersionSpecLoader removeSelector: #resolvePackageNames!MetacelloMCVersionSpecLoader removeSelector: #required:!MetacelloMCVersionSpecLoader removeSelector: #required!MetacelloMCVersionSpecLoader removeSelector: #repositorySpecs!MetacelloMCVersionSpecLoader removeSelector: #repositories!MetacelloMCVersionSpecLoader removeSelector: #project!MetacelloMCVersionSpecLoader removeSelector: #packages!MetacelloMCVersionSpecLoader removeSelector: #packageSpecsInLoadOrder!MetacelloMCVersionSpecLoader removeSelector: #operator!MetacelloMCVersionSpecLoader removeSelector: #name!MetacelloMCVersionSpecLoader removeSelector: #loaderPolicy:!MetacelloMCVersionSpecLoader removeSelector: #loaderPolicy!MetacelloMCVersionSpecLoader removeSelector: #loader!MetacelloMCVersionSpecLoader removeSelector: #load!MetacelloMCVersionSpecLoader removeSelector: #label!MetacelloMCVersionSpecLoader class removeSelector: #on:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCVersionSpecLoader!MetacelloMCPartiallyLoadedStatus removeSelector: #vrsnStatus!MetacelloMCPartiallyLoadedStatus removeSelector: #isSomethingLoaded:!MetacelloMCPartiallyLoadedStatus removeSelector: #isLoadedToSpec:!MetacelloMCPartiallyLoadedStatus removeSelector: #isLoadedMatchConstraints:!MetacelloMCPartiallyLoadedStatus removeSelector: #isAllLoadedToSpec:!MetacelloMCPartiallyLoadedStatus removeSelector: #initialize!MetacelloMCPartiallyLoadedStatus removeSelector: #hasNoProject:!MetacelloMCPartiallyLoadedStatus removeSelector: #hasNoProject!MetacelloMCPartiallyLoadedStatus removeSelector: #hasNoPackage:!MetacelloMCPartiallyLoadedStatus removeSelector: #hasNoPackage!MetacelloMCPartiallyLoadedStatus removeSelector: #evaluateStatus:!MetacelloMCPartiallyLoadedStatus removeSelector: #abort:!MetacelloMCPartiallyLoadedStatus removeSelector: #abort!MetacelloMCPartiallyLoadedStatus removeSelector: #aProjectNotLoaded:!MetacelloMCPartiallyLoadedStatus removeSelector: #aProjectNotLoaded!MetacelloMCPartiallyLoadedStatus removeSelector: #aProjectIsLoaded:!MetacelloMCPartiallyLoadedStatus removeSelector: #aProjectIsLoaded!MetacelloMCPartiallyLoadedStatus removeSelector: #aPackageNotLoaded:!MetacelloMCPartiallyLoadedStatus removeSelector: #aPackageNotLoaded!MetacelloMCPartiallyLoadedStatus removeSelector: #aPackageIsLoaded:!MetacelloMCPartiallyLoadedStatus removeSelector: #aPackageIsLoaded!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedProjectIsNotCurrent:!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedProjectIsNotCurrent!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedProjectIsExact:!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedProjectIsExact!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedProjectIsCurrent:!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedPackageIsNotCurrent:!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedPackageIsNotCurrent!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedPackageIsExact:!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedPackageIsExact!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedPackageIsCurrent:!MetacelloMCPartiallyLoadedStatus removeSelector: #aLoadedPackageIsCurrent!MetacelloMCPartiallyLoadedStatus class removeSelector: #new!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCPartiallyLoadedStatus!MetacelloLoaderPolicy removeSelector: #silently:!MetacelloLoaderPolicy removeSelector: #silently!MetacelloLoaderPolicy removeSelector: #resetCacheGofer!MetacelloLoaderPolicy removeSelector: #repositoryMap:!MetacelloLoaderPolicy removeSelector: #repositoryMap!MetacelloLoaderPolicy removeSelector: #pushLoadDirective:during:!MetacelloLoaderPolicy removeSelector: #pushLinearLoadDirectivesDuring:for:!MetacelloLoaderPolicy removeSelector: #pushExplicitLoadDirectivesDuring:for:!MetacelloLoaderPolicy removeSelector: #pushAtomicLoadDirectivesDuring:for:!MetacelloLoaderPolicy removeSelector: #overrideRepositories:!MetacelloLoaderPolicy removeSelector: #overrideRepositories!MetacelloLoaderPolicy removeSelector: #loadDirective!MetacelloLoaderPolicy removeSelector: #loadData!MetacelloLoaderPolicy removeSelector: #load!MetacelloLoaderPolicy removeSelector: #initialize!MetacelloLoaderPolicy removeSelector: #ignoreImage:!MetacelloLoaderPolicy removeSelector: #ignoreImage!MetacelloLoaderPolicy removeSelector: #hasRepositoryOverrides!MetacelloLoaderPolicy removeSelector: #ensuredMap:!MetacelloLoaderPolicy removeSelector: #ensuredMap!MetacelloLoaderPolicy removeSelector: #cacheRepository:!MetacelloLoaderPolicy removeSelector: #cacheRepository!MetacelloLoaderPolicy removeSelector: #cacheGofer!MetacelloLoaderPolicy class removeSelector: #overrideRepositories:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloLoaderPolicy!MetacelloLoadData removeSelector: #versionInfoMap!MetacelloLoadData removeSelector: #packageNameMap!MetacelloLoadData removeSelector: #isEmpty!MetacelloLoadData removeSelector: #do:!MetacelloLoadData removeSelector: #dataMap!MetacelloLoadData removeSelector: #currentVersionInfoFor:ifAbsent:!MetacelloLoadData removeSelector: #ancestorsFor:ifAbsent:!MetacelloLoadData removeSelector: #addVersion:versionInfo:resolvedReference:packageSpec:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloLoadData!MetacelloVersionLoadDirective removeSelector: #versionsDo:!MetacelloVersionLoadDirective removeSelector: #versionDo:!MetacelloVersionLoadDirective removeSelector: #versionDirectivesDo:!MetacelloVersionLoadDirective removeSelector: #versionDirectivesDepthFirstDo:!MetacelloVersionLoadDirective removeSelector: #spec!MetacelloVersionLoadDirective removeSelector: #printOn:indent:!MetacelloVersionLoadDirective removeSelector: #printLoadDirectivesOn:indent:!MetacelloVersionLoadDirective removeSelector: #prepostLoadsDo:!MetacelloVersionLoadDirective removeSelector: #prepostLoadDirectivesDo:!MetacelloVersionLoadDirective removeSelector: #packagesDo:!MetacelloVersionLoadDirective removeSelector: #packageDirectivesDo:!MetacelloVersionLoadDirective removeSelector: #loadWithPolicy:!MetacelloVersionLoadDirective removeSelector: #loadPreloadDirective:!MetacelloVersionLoadDirective removeSelector: #loadPostloadDirective:!MetacelloVersionLoadDirective removeSelector: #loadPackageDirective:gofer:!MetacelloVersionLoadDirective removeSelector: #loadLinearLoadDirective:gofer:!MetacelloVersionLoadDirective removeSelector: #loadExplicitLoadDirective:gofer:!MetacelloVersionLoadDirective removeSelector: #loadDirectives:!MetacelloVersionLoadDirective removeSelector: #loadDirectives!MetacelloVersionLoadDirective removeSelector: #loadAtomicLoadDirective:gofer:!MetacelloVersionLoadDirective removeSelector: #label!MetacelloVersionLoadDirective removeSelector: #isExplicit!MetacelloVersionLoadDirective removeSelector: #finalizeLoad:!MetacelloVersionLoadDirective removeSelector: #directivesDo:!MetacelloVersionLoadDirective removeSelector: #add:!MetacelloLinearLoadDirective removeSelector: #title!MetacelloLinearLoadDirective removeSelector: #loadUsing:gofer:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloLinearLoadDirective!MetacelloExplicitLoadDirective removeSelector: #title!MetacelloExplicitLoadDirective removeSelector: #loadUsing:gofer:!MetacelloExplicitLoadDirective removeSelector: #isExplicit!MetacelloExplicitLoadDirective removeSelector: #explicitLoadWithPolicy:!MetacelloExplicitLoadDirective removeSelector: #explicitLoadUsing:gofer:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloExplicitLoadDirective!MetacelloAtomicLoadDirective removeSelector: #title!MetacelloAtomicLoadDirective removeSelector: #prepostLoadsDo:!MetacelloAtomicLoadDirective removeSelector: #prepostLoadDirectivesDo:!MetacelloAtomicLoadDirective removeSelector: #preloads!MetacelloAtomicLoadDirective removeSelector: #postloads!MetacelloAtomicLoadDirective removeSelector: #packageloads:!MetacelloAtomicLoadDirective removeSelector: #packageloads!MetacelloAtomicLoadDirective removeSelector: #loadUsing:gofer:!MetacelloAtomicLoadDirective removeSelector: #loadPreloadDirective:!MetacelloAtomicLoadDirective removeSelector: #loadPostloadDirective:!MetacelloAtomicLoadDirective removeSelector: #loadPackageDirective:gofer:!MetacelloAtomicLoadDirective removeSelector: #loadLinearLoadDirective:gofer:!MetacelloAtomicLoadDirective removeSelector: #loadAtomicLoadDirective:gofer:!MetacelloAtomicLoadDirective removeSelector: #finalizeLoad:!MetacelloAtomicLoadDirective removeSelector: #directivesDo:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAtomicLoadDirective!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionLoadDirective!MetacelloPrePostLoadDirective removeSelector: #prepostLoadDo:!MetacelloPrePostLoadDirective removeSelector: #prepostLoadDirectivesDo:!MetacelloPrePostLoadDirective removeSelector: #evaluateSupplyingAnswers:!MetacelloPreLoadDirective removeSelector: #title!MetacelloPreLoadDirective removeSelector: #preLoadDo:!MetacelloPreLoadDirective removeSelector: #loadUsing:gofer:!MetacelloPreLoadDirective removeSelector: #label!MetacelloPreLoadDirective removeSelector: #addTo:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPreLoadDirective!MetacelloPostLoadDirective removeSelector: #title!MetacelloPostLoadDirective removeSelector: #postLoadDo:!MetacelloPostLoadDirective removeSelector: #loadUsing:gofer:!MetacelloPostLoadDirective removeSelector: #label!MetacelloPostLoadDirective removeSelector: #addTo:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPostLoadDirective!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPrePostLoadDirective!MetacelloPackageLoadDirective removeSelector: #title!MetacelloPackageLoadDirective removeSelector: #spec:externalReference:loader:!MetacelloPackageLoadDirective removeSelector: #resolvedReference:!MetacelloPackageLoadDirective removeSelector: #resolvedReference!MetacelloPackageLoadDirective removeSelector: #repository!MetacelloPackageLoadDirective removeSelector: #packageName!MetacelloPackageLoadDirective removeSelector: #packageDo:!MetacelloPackageLoadDirective removeSelector: #packageDirectivesDo:!MetacelloPackageLoadDirective removeSelector: #loadUsing:gofer:!MetacelloPackageLoadDirective removeSelector: #label!MetacelloPackageLoadDirective removeSelector: #file!MetacelloPackageLoadDirective removeSelector: #externalReference!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPackageLoadDirective!MetacelloDirective removeSelector: #versionDo:!MetacelloDirective removeSelector: #versionDirectivesDo:!MetacelloDirective removeSelector: #versionDirectivesDepthFirstDo:!MetacelloDirective removeSelector: #title!MetacelloDirective removeSelector: #spec:loader:!MetacelloDirective removeSelector: #spec!MetacelloDirective removeSelector: #printString!MetacelloDirective removeSelector: #printOn:indent:!MetacelloDirective removeSelector: #printOn:!MetacelloDirective removeSelector: #prepostLoadDo:!MetacelloDirective removeSelector: #prepostLoadDirectivesDo:!MetacelloDirective removeSelector: #preLoadDo:!MetacelloDirective removeSelector: #postLoadDo:!MetacelloDirective removeSelector: #packageDo:!MetacelloDirective removeSelector: #packageDirectivesDo:!MetacelloDirective removeSelector: #loader:!MetacelloDirective removeSelector: #loader!MetacelloDirective removeSelector: #loadUsing:gofer:!MetacelloDirective removeSelector: #label!MetacelloDirective removeSelector: #directivesDo:!MetacelloDirective removeSelector: #addTo:!MetacelloDirective class removeSelector: #preLoadSpec:loader:!MetacelloDirective class removeSelector: #postLoadSpec:loader:!MetacelloDirective class removeSelector: #loader:!MetacelloDirective class removeSelector: #loadPackage:externalReference:loader:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloDirective!MetacelloConfigTemplateExample removeSelector: #versionDevelopment:!MetacelloConfigTemplateExample removeSelector: #version10:!MetacelloConfigTemplateExample removeSelector: #stable:!MetacelloConfigTemplateExample removeSelector: #project!MetacelloConfigTemplateExample removeSelector: #fuelMetalevel:!MetacelloConfigTemplateExample removeSelector: #fileSystemLegacy:!MetacelloConfigTemplateExample removeSelector: #development:!MetacelloConfigTemplateExample removeSelector: #customProjectAttributes!MetacelloConfigTemplateExample removeSelector: #baseline10:!MetacelloConfigTemplateExample class removeSelector: #validate!MetacelloConfigTemplateExample class removeSelector: #project!MetacelloConfigTemplateExample class removeSelector: #loadDevelopment!MetacelloConfigTemplateExample class removeSelector: #loadBleedingEdge!MetacelloConfigTemplateExample class removeSelector: #load!MetacelloConfigTemplateExample class removeSelector: #isMetacelloConfig!MetacelloConfigTemplateExample class removeSelector: #ensureMetacelloBaseConfiguration!MetacelloConfigTemplateExample class removeSelector: #ensureMetacello!MetacelloConfigTemplateExample class removeSelector: #baseConfigurationClassIfAbsent:!MetacelloConfigTemplateExample class removeSelector: #DevelopmentSupport!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloConfigTemplateExample!MetacelloConfigTemplate removeSelector: #project!MetacelloConfigTemplate removeSelector: #customProjectAttributes!MetacelloConfigTemplate class removeSelector: #validate!MetacelloConfigTemplate class removeSelector: #project!MetacelloConfigTemplate class removeSelector: #loadDevelopment!MetacelloConfigTemplate class removeSelector: #loadBleedingEdge!MetacelloConfigTemplate class removeSelector: #load!MetacelloConfigTemplate class removeSelector: #isMetacelloConfig!MetacelloConfigTemplate class removeSelector: #ensureMetacelloBaseConfiguration!MetacelloConfigTemplate class removeSelector: #ensureMetacello!MetacelloConfigTemplate class removeSelector: #baseConfigurationClassIfAbsent:!MetacelloConfigTemplate class removeSelector: #DevelopmentSupport!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloConfigTemplate!MCDictionaryRepository removeSelector: #versionInfoFromVersionNamed:!MCDictionaryRepository removeSelector: #asRepositorySpecFor:!Collection removeSelector: #resolvePackageSpecsNamedForMetacelloMCVersion:visited:ifAbsent:!Collection removeSelector: #removeFromMetacelloRepositories:!Collection removeSelector: #recordRequiredForMetacelloMCVersion:!Collection removeSelector: #mergeIntoMetacelloRepositories:!Collection removeSelector: #loadRequiredForMetacelloMCVersion:!Collection removeSelector: #fetchRequiredForMetacelloMCVersion:!Collection removeSelector: #addToMetacelloRepositories:!MetacelloCachingGoferResolvedReference removeSelector: #workingCopy!MetacelloCachingGoferResolvedReference removeSelector: #version!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCachingGoferResolvedReference!GoferResolvedReference removeSelector: #asMetacelloCachingResolvedReference!MetacelloLoadingMCSpecLoader removeSelector: #savePackageUsing:!MetacelloLoadingMCSpecLoader removeSelector: #resolveSpec:with:!MetacelloLoadingMCSpecLoader removeSelector: #resolveSpec:from:!MetacelloLoadingMCSpecLoader removeSelector: #repositoryFor:with:!MetacelloLoadingMCSpecLoader removeSelector: #repositoryFor:from:!MetacelloLoadingMCSpecLoader removeSelector: #preLoad:!MetacelloLoadingMCSpecLoader removeSelector: #postLoad:!MetacelloLoadingMCSpecLoader removeSelector: #packagesNeedSavingUsing:into:!MetacelloLoadingMCSpecLoader removeSelector: #linearLoadPackageSpec:gofer:!MetacelloLoadingMCSpecLoader removeSelector: #latestPackage:fromRepository:!MetacelloLoadingMCSpecLoader removeSelector: #goferCommitPackageUsing:commitMessage:!MetacelloLoadingMCSpecLoader removeSelector: #goferCommitBranchPackage:using:commitMessage:!MetacelloLoadingMCSpecLoader removeSelector: #fetchingSpecLoader!MetacelloLoadingMCSpecLoader removeSelector: #doLoad!MetacelloLoadingMCSpecLoader removeSelector: #copySpec:with:to:!MetacelloLoadingMCSpecLoader removeSelector: #copySpec:from:to:!MetacelloLoadingMCSpecLoader removeSelector: #actionLabel!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloLoadingMCSpecLoader!MetacelloNullRecordingMCSpecLoader removeSelector: #resolveRecordingPackageSpecReference:gofer:!MetacelloNullRecordingMCSpecLoader removeSelector: #resolvePackageSpecReferences:gofer:!MetacelloNullRecordingMCSpecLoader removeSelector: #recordingSpecLoader!MetacelloNullRecordingMCSpecLoader removeSelector: #preLoad:!MetacelloNullRecordingMCSpecLoader removeSelector: #postLoad:!MetacelloNullRecordingMCSpecLoader removeSelector: #packages!MetacelloNullRecordingMCSpecLoader removeSelector: #loadingSpecLoader!MetacelloNullRecordingMCSpecLoader removeSelector: #loadedRepositories!MetacelloNullRecordingMCSpecLoader removeSelector: #loadedPackages!MetacelloNullRecordingMCSpecLoader removeSelector: #loadPackageDirectives:gofer:!MetacelloNullRecordingMCSpecLoader removeSelector: #loadPackageDirective:gofer:!MetacelloNullRecordingMCSpecLoader removeSelector: #linearLoadPackageSpec:gofer:!MetacelloNullRecordingMCSpecLoader removeSelector: #evalDoits:!MetacelloNullRecordingMCSpecLoader removeSelector: #evalDoits!MetacelloNullRecordingMCSpecLoader removeSelector: #ensureForDevelopment!MetacelloNullRecordingMCSpecLoader removeSelector: #doingLoads:!MetacelloNullRecordingMCSpecLoader removeSelector: #currentVersionInfoFor:!MetacelloNullRecordingMCSpecLoader removeSelector: #beforeLoads!MetacelloNullRecordingMCSpecLoader removeSelector: #afterLoads!MetacelloNullRecordingMCSpecLoader removeSelector: #actionLabel!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloNullRecordingMCSpecLoader!MetacelloFetchingMCSpecLoader removeSelector: #scheduleFetchFor:reference:message:!MetacelloFetchingMCSpecLoader removeSelector: #scheduleFetchFor:nearestReference:!MetacelloFetchingMCSpecLoader removeSelector: #scheduleFetchFor:externalReference:!MetacelloFetchingMCSpecLoader removeSelector: #scheduleFetchFor:cachedReference:!MetacelloFetchingMCSpecLoader removeSelector: #resolvePackageSpec:cachedGofer:!MetacelloFetchingMCSpecLoader removeSelector: #resolveDependencies:nearest:into:!MetacelloFetchingMCSpecLoader removeSelector: #printOn:!MetacelloFetchingMCSpecLoader removeSelector: #preLoad:!MetacelloFetchingMCSpecLoader removeSelector: #postLoad:!MetacelloFetchingMCSpecLoader removeSelector: #loadingSpecLoader!MetacelloFetchingMCSpecLoader removeSelector: #loadDirective!MetacelloFetchingMCSpecLoader removeSelector: #loadData!MetacelloFetchingMCSpecLoader removeSelector: #linearLoadPackageSpecs:repositories:!MetacelloFetchingMCSpecLoader removeSelector: #linearLoadPackageSpec:gofer:!MetacelloFetchingMCSpecLoader removeSelector: #explicitLoadPackageSpecs:repositories:!MetacelloFetchingMCSpecLoader removeSelector: #ensuredMap!MetacelloFetchingMCSpecLoader removeSelector: #ensureSpecLoader!MetacelloFetchingMCSpecLoader removeSelector: #doLoad!MetacelloFetchingMCSpecLoader removeSelector: #currentVersionInfoFor:!MetacelloFetchingMCSpecLoader removeSelector: #cacheRepository!MetacelloFetchingMCSpecLoader removeSelector: #atomicLoadPackageSpecs:repositories:!MetacelloFetchingMCSpecLoader removeSelector: #ancestorsFor:!MetacelloFetchingMCSpecLoader removeSelector: #actionLabel!MetacelloEnsureFetchingMCSpecLoader removeSelector: #scheduleFetchFor:nearestReference:!MetacelloEnsureFetchingMCSpecLoader removeSelector: #scheduleFetchFor:cachedReference:!MetacelloEnsureFetchingMCSpecLoader removeSelector: #ensureSpecLoader!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloEnsureFetchingMCSpecLoader!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloFetchingMCSpecLoader!MetacelloCommonMCSpecLoader removeSelector: #shouldDisablePackageCache:!MetacelloCommonMCSpecLoader removeSelector: #shouldDisablePackageCache!MetacelloCommonMCSpecLoader removeSelector: #retryingResolvePackageSpecReferences:gofer:!MetacelloCommonMCSpecLoader removeSelector: #resolvePackageSpecReferences:gofer:!MetacelloCommonMCSpecLoader removeSelector: #resolvePackageSpec:gofer:!MetacelloCommonMCSpecLoader removeSelector: #repositoryMap!MetacelloCommonMCSpecLoader removeSelector: #repositoriesFrom:ignoreOverrides:!MetacelloCommonMCSpecLoader removeSelector: #repositoriesFrom:!MetacelloCommonMCSpecLoader removeSelector: #recordingSpecLoader!MetacelloCommonMCSpecLoader removeSelector: #preLoad:!MetacelloCommonMCSpecLoader removeSelector: #postLoad:!MetacelloCommonMCSpecLoader removeSelector: #operator:!MetacelloCommonMCSpecLoader removeSelector: #operator!MetacelloCommonMCSpecLoader removeSelector: #nameComponentsFrom:!MetacelloCommonMCSpecLoader removeSelector: #loadingSpecLoader!MetacelloCommonMCSpecLoader removeSelector: #loaderPolicy:!MetacelloCommonMCSpecLoader removeSelector: #loaderPolicy!MetacelloCommonMCSpecLoader removeSelector: #loadPackageDirectives:gofer:!MetacelloCommonMCSpecLoader removeSelector: #loadPackageDirective:gofer:!MetacelloCommonMCSpecLoader removeSelector: #load!MetacelloCommonMCSpecLoader removeSelector: #linearLoadPackageSpecs:repositories:!MetacelloCommonMCSpecLoader removeSelector: #linearLoadPackageSpec:gofer:!MetacelloCommonMCSpecLoader removeSelector: #initialize!MetacelloCommonMCSpecLoader removeSelector: #ignoreImage!MetacelloCommonMCSpecLoader removeSelector: #hasRepositoryOverrides!MetacelloCommonMCSpecLoader removeSelector: #fetchingSpecLoader!MetacelloCommonMCSpecLoader removeSelector: #ensureSpecLoader!MetacelloCommonMCSpecLoader removeSelector: #ensureForDevelopment!MetacelloCommonMCSpecLoader removeSelector: #doingLoads:!MetacelloCommonMCSpecLoader removeSelector: #doLoad!MetacelloCommonMCSpecLoader removeSelector: #currentVersionInfoFor:!MetacelloCommonMCSpecLoader removeSelector: #ancestorsFor:!MetacelloCommonMCSpecLoader class removeSelector: #retryPackageResolution:!MetacelloCommonMCSpecLoader class removeSelector: #retryPackageResolution!MetacelloCommonMCSpecLoader class removeSelector: #nameComponentsFrom:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCommonMCSpecLoader!MetacelloGofer removeSelector: #interactiveCommit!MetacelloGofer removeSelector: #basicReferencesIn:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloGofer!MetacelloGoferLoad removeSelector: #updateRepositories!MetacelloGoferLoad removeSelector: #updateCategories!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloGoferLoad!MCVersionLoader removeSelector: #versions!MetacelloRepositorySpec removeSelector: #username:!MetacelloRepositorySpec removeSelector: #username!MetacelloRepositorySpec removeSelector: #type:!MetacelloRepositorySpec removeSelector: #type!MetacelloRepositorySpec removeSelector: #removeFromMetacelloRepositories:!MetacelloRepositorySpec removeSelector: #password:!MetacelloRepositorySpec removeSelector: #password!MetacelloRepositorySpec removeSelector: #name!MetacelloRepositorySpec removeSelector: #mergeMap!MetacelloRepositorySpec removeSelector: #mergeIntoMetacelloRepositories:!MetacelloRepositorySpec removeSelector: #hasNoLoadConflicts:!MetacelloRepositorySpec removeSelector: #extractTypeFromDescription!MetacelloRepositorySpec removeSelector: #description:!MetacelloRepositorySpec removeSelector: #description!MetacelloRepositorySpec removeSelector: #createRepository!MetacelloRepositorySpec removeSelector: #configMethodOn:indent:!MetacelloRepositorySpec removeSelector: #configMethodCascadeOn:lastCascade:!MetacelloRepositorySpec removeSelector: #canUpgradeTo:!MetacelloRepositorySpec removeSelector: #addToMetacelloRepositories:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloRepositorySpec!MetacelloProjectReferenceSpec removeSelector: #versionString!MetacelloProjectReferenceSpec removeSelector: #updatePackageSpec:using:!MetacelloProjectReferenceSpec removeSelector: #updateForSpawnMethod:!MetacelloProjectReferenceSpec removeSelector: #resolveToPackagesIn:visited:!MetacelloProjectReferenceSpec removeSelector: #resolveToPackagesIn:andProjects:visited:!MetacelloProjectReferenceSpec removeSelector: #resolveToLoadableSpec!MetacelloProjectReferenceSpec removeSelector: #resolveToAllPackagesIn:into:visited:!MetacelloProjectReferenceSpec removeSelector: #resolveProjectSpec!MetacelloProjectReferenceSpec removeSelector: #repository:!MetacelloProjectReferenceSpec removeSelector: #packagesNeedSavingVisited:using:into:!MetacelloProjectReferenceSpec removeSelector: #loadUsing:gofer:!MetacelloGoferPackage removeSelector: #workingCopy!MetacelloGoferPackage removeSelector: #packageFilename!MetacelloGoferPackage removeSelector: #matchesWorkingCopy:!MetacelloGoferPackage removeSelector: #matchesMetacelloGoferPackage:!MetacelloGoferPackage removeSelector: #matches:!MetacelloGoferPackage removeSelector: #initializeName:packageFilename:!MetacelloGoferPackage removeSelector: #findWorkingCopy!MetacelloGoferPackage removeSelector: #currentVersionInfo!MetacelloGoferPackage removeSelector: #ancestors!MetacelloGoferPackage class removeSelector: #packageFileName:matchesPackageName:!MetacelloGoferPackage class removeSelector: #name:packageFilename:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloGoferPackage!GoferPackageReference removeSelector: #metacelloPackageNameWithBranch!MCHttpRepository removeSelector: #asRepositorySpecFor:!MetacelloMCProjectSpec removeSelector: #workingCopy!MetacelloMCProjectSpec removeSelector: #versionForScriptEngine:!MetacelloMCProjectSpec removeSelector: #version!MetacelloMCProjectSpec removeSelector: #validateVersionString:withDefaultVersionString:!MetacelloMCProjectSpec removeSelector: #validateForScriptLoad:withDefaultVersionString:withDefaultRepositoryDecription:!MetacelloMCProjectSpec removeSelector: #updatePackageSpec:!MetacelloMCProjectSpec removeSelector: #updateForSpawnMethod:!MetacelloMCProjectSpec removeSelector: #resolveToAllPackagesIn:visited:!MetacelloMCProjectSpec removeSelector: #relativeCurrentVersion!MetacelloMCProjectSpec removeSelector: #projectPackage!MetacelloMCProjectSpec removeSelector: #projectClassProject!MetacelloMCProjectSpec removeSelector: #projectClass!MetacelloMCProjectSpec removeSelector: #packageFileSpecFor:!MetacelloMCProjectSpec removeSelector: #metacelloRegistrationHash!MetacelloMCProjectSpec removeSelector: #loadedPackageNames:!MetacelloMCProjectSpec removeSelector: #loadVersion:!MetacelloMCProjectSpec removeSelector: #loadPackageList!MetacelloMCProjectSpec removeSelector: #isPossibleBaseline!MetacelloMCProjectSpec removeSelector: #isPartiallyLoaded:!MetacelloMCProjectSpec removeSelector: #isConfigurationOfProjectSpec!MetacelloMCProjectSpec removeSelector: #isBaselineOfProjectSpec!MetacelloMCProjectSpec removeSelector: #hasNoLoadConflicts:!MetacelloMCProjectSpec removeSelector: #hasConflictWithProjectSpec:!MetacelloMCProjectSpec removeSelector: #hasConflictWithConfigurationSpec:!MetacelloMCProjectSpec removeSelector: #hasConflictWithBaselineSpec:!MetacelloMCProjectSpec removeSelector: #getFile!MetacelloMCProjectSpec removeSelector: #file:constructor:!MetacelloMCProjectSpec removeSelector: #file:!MetacelloMCProjectSpec removeSelector: #file!MetacelloMCProjectSpec removeSelector: #fetchUsing:!MetacelloMCProjectSpec removeSelector: #ensureProjectLoaded!MetacelloMCProjectSpec removeSelector: #ensureLoadedForDevelopmentUsing:!MetacelloMCProjectSpec removeSelector: #ensureLoadUsing:!MetacelloMCProjectSpec removeSelector: #ensureConfigurationLoaded:ensured:!MetacelloMCProjectSpec removeSelector: #determineCurrentVersionForLoad!MetacelloMCProjectSpec removeSelector: #copyForScriptingInto:!MetacelloMCProjectSpec removeSelector: #copyForRegistration:onWrite:!MetacelloMCProjectSpec removeSelector: #compareRelativeCurrentVersion:targetVersionStatus:using:!MetacelloMCProjectSpec removeSelector: #compareEqual:!MetacelloMCProjectSpec removeSelector: #compareCurrentVersion:targetVersionStatus:using:!MetacelloMCProjectSpec removeSelector: #className:!MetacelloMCProjectSpec removeSelector: #canUpgradeTo:!MetacelloMCProjectSpec removeSelector: #canDowngradeTo:!MetacelloMCProjectSpec removeSelector: #baseName!MetacelloMCProjectSpec removeSelector: #asProjectSpecForVersion:!MetacelloMCProjectSpec removeSelector: #asProjectSpec!MetacelloMCProjectSpec removeSelector: #asProjectRegistration!MetacelloMCProjectSpec removeSelector: #asConfigurationProjectSpec!MetacelloMCProjectSpec removeSelector: #asBaselineProjectSpec!MetacelloMCProjectSpec removeSelector: #allPackagesLoaded:!MetacelloMCProjectSpec class removeSelector: #new!MetacelloMCNamelessProjectSpec removeSelector: #copyForRegistration:onWrite:!MetacelloMCNamelessProjectSpec removeSelector: #asProjectSpecForVersion:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCNamelessProjectSpec!MetacelloMCConfigurationOfProjectSpec removeSelector: #projectLabel!MetacelloMCConfigurationOfProjectSpec removeSelector: #mergeSpec:!MetacelloMCConfigurationOfProjectSpec removeSelector: #isConfigurationOfProjectSpec!MetacelloMCConfigurationOfProjectSpec removeSelector: #hasConflictWithProjectSpec:!MetacelloMCConfigurationOfProjectSpec removeSelector: #hasConflictWithBaselineSpec:!MetacelloMCConfigurationOfProjectSpec removeSelector: #hasClassName!MetacelloMCConfigurationOfProjectSpec removeSelector: #copyForRegistration:onWrite:!MetacelloMCConfigurationOfProjectSpec removeSelector: #constructClassName!MetacelloMCConfigurationOfProjectSpec removeSelector: #asProjectRegistration!MetacelloMCConfigurationOfProjectSpec removeSelector: #asConfigurationProjectSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCConfigurationOfProjectSpec!MetacelloMCBaselineOfProjectSpec removeSelector: #versionString:constructor:!MetacelloMCBaselineOfProjectSpec removeSelector: #versionString!MetacelloMCBaselineOfProjectSpec removeSelector: #version:constructor:!MetacelloMCBaselineOfProjectSpec removeSelector: #version!MetacelloMCBaselineOfProjectSpec removeSelector: #validateVersionString:withDefaultVersionString:!MetacelloMCBaselineOfProjectSpec removeSelector: #repositoryVersionString!MetacelloMCBaselineOfProjectSpec removeSelector: #repositoryBranchName!MetacelloMCBaselineOfProjectSpec removeSelector: #projectLabel!MetacelloMCBaselineOfProjectSpec removeSelector: #mergeSpec:!MetacelloMCBaselineOfProjectSpec removeSelector: #mergeRepositoriesSpec:!MetacelloMCBaselineOfProjectSpec removeSelector: #mergeImportLoads:!MetacelloMCBaselineOfProjectSpec removeSelector: #isBaselineOfProjectSpec!MetacelloMCBaselineOfProjectSpec removeSelector: #hasConflictWithProjectSpec:!MetacelloMCBaselineOfProjectSpec removeSelector: #hasConflictWithConfigurationSpec:!MetacelloMCBaselineOfProjectSpec removeSelector: #hasClassName!MetacelloMCBaselineOfProjectSpec removeSelector: #ensureLoadUsing:!MetacelloMCBaselineOfProjectSpec removeSelector: #ensureConfigurationLoaded:ensured:!MetacelloMCBaselineOfProjectSpec removeSelector: #determineCurrentVersionForLoad!MetacelloMCBaselineOfProjectSpec removeSelector: #copyForRegistration:onWrite:!MetacelloMCBaselineOfProjectSpec removeSelector: #constructClassName!MetacelloMCBaselineOfProjectSpec removeSelector: #configHasVersionString!MetacelloMCBaselineOfProjectSpec removeSelector: #canUpgradeTo:!MetacelloMCBaselineOfProjectSpec removeSelector: #canDowngradeTo:!MetacelloMCBaselineOfProjectSpec removeSelector: #asProjectRegistration!MetacelloMCBaselineOfProjectSpec removeSelector: #asBaselineProjectSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCBaselineOfProjectSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCProjectSpec!MetacelloMemberSpec removeSelector: #removeFromMetacelloRepositories:!MetacelloMemberSpec removeSelector: #removeFromMetacelloPackages:!MetacelloMemberSpec removeSelector: #mergeIntoMetacelloRepositories:!MetacelloMemberSpec removeSelector: #mergeIntoMetacelloPackages:!MetacelloMemberSpec removeSelector: #addToMetacelloRepositories:!MetacelloMemberSpec removeSelector: #addToMetacelloPackages:!MetacelloBaselineConstructor removeSelector: #projectClass!MetacelloAbstractVersionConstructor removeSelector: #projectClass!MetacelloMCVersion removeSelector: #silently:!MetacelloMCVersion removeSelector: #repositoryOverrides:!MetacelloMCVersion removeSelector: #record:!MetacelloMCVersion removeSelector: #record!MetacelloMCVersion removeSelector: #packagesForSpecNamed:ifAbsent:!MetacelloMCVersion removeSelector: #packagesForSpecNamed:!MetacelloMCVersion removeSelector: #packages!MetacelloMCVersion removeSelector: #packageAndProjectNamesToLoad:loader:!MetacelloMCVersion removeSelector: #loaderPolicy:!MetacelloMCVersion removeSelector: #loaderPolicy!MetacelloMCVersion removeSelector: #loader:!MetacelloMCVersion removeSelector: #loadRequiredFromArray:!MetacelloMCVersion removeSelector: #load:!MetacelloMCVersion removeSelector: #load!MetacelloMCVersion removeSelector: #ignoreImage:!MetacelloMCVersion removeSelector: #fetchRequiredFromArray:!MetacelloMCVersion removeSelector: #fetch:!MetacelloMCVersion removeSelector: #fetch!MetacelloMCVersion removeSelector: #executeLoadFromArray:!MetacelloMCVersion removeSelector: #doRecordRequiredFromArray:!MetacelloMCVersion removeSelector: #doLoadRequiredFromArray:!MetacelloMCVersion removeSelector: #doFetchRequiredFromArray:!MetacelloMCVersion removeSelector: #defaultPackageNamesToLoad:!MetacelloMCVersion removeSelector: #defaultPackageNamesToLoad!MetacelloMCVersion removeSelector: #currentlyLoadedExtensionClassesInVersion!MetacelloMCVersion removeSelector: #currentlyLoadedClassesInVersion!MetacelloMCVersion removeSelector: #computeVersionStatus!MetacelloMCVersion removeSelector: #cacheRepository:!MetacelloMCVersion removeSelector: #allPackagesForSpecs:visited:!MetacelloMCVersion removeSelector: #allPackagesForSpecNamed:ifAbsent:!MetacelloMCVersion removeSelector: #allPackagesForSpecNamed:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCVersion!MCFileBasedRepository removeSelector: #versionInfoFromVersionNamed:!MCDirectoryRepository removeSelector: #asRepositorySpecFor:!MCRepository removeSelector: #projectVersion:!MCRepository removeSelector: #metacelloProjectClassFor:!MCRepository removeSelector: #asRepositorySpecFor:!GoferReference removeSelector: #matchesMetacelloGoferPackage:!MetacelloMCVersionValidator removeSelector: #warningReasonCodes!MetacelloMCVersionValidator removeSelector: #validateVersionTests:!MetacelloMCVersionValidator removeSelector: #validateVersionSpecForSymbolicVersion:symbolicVersion:!MetacelloMCVersionValidator removeSelector: #validateVersionSpec:!MetacelloMCVersionValidator removeSelector: #validateVersionLoad:loads:!MetacelloMCVersionValidator removeSelector: #validateProjectVersionLoad:loads:!MetacelloMCVersionValidator removeSelector: #validateProjectLoad!MetacelloMCVersionValidator removeSelector: #validateCleanLoadAndTestsForVersion:loads:!MetacelloMCVersionValidator removeSelector: #validateBaselineVersionSpec:!MetacelloMCVersionValidator removeSelector: #errorReasonCodes!MetacelloMCVersionValidator removeSelector: #criticalWarningReasonCodes!MetacelloMCVersionValidator class removeSelector: #validateConfigurationLoad:version:loads:!MetacelloMCVersionValidator class removeSelector: #validateConfigurationLoad:version:!MetacelloMCVersionValidator class removeSelector: #validateConfigurationLoad:!MetacelloMCVersionValidator class removeSelector: #populateReasonCodeDescriptions!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCVersionValidator!GoferVersionReference removeSelector: #metacelloPackageNameWithBranch!GoferVersionReference removeSelector: #matchesMetacelloGoferPackage:!GoferVersionReference removeSelector: #compare:using:!MetacelloRepositoriesSpec removeSelector: #repository:username:password:constructor:!MetacelloRepositoriesSpec removeSelector: #repository:username:password:!MetacelloRepositoriesSpec removeSelector: #repository:constructor:!MetacelloRepositoriesSpec removeSelector: #repository:!MetacelloRepositoriesSpec removeSelector: #remove:!MetacelloRepositoriesSpec removeSelector: #metacelloRegistrationHash!MetacelloRepositoriesSpec removeSelector: #merge:!MetacelloRepositoriesSpec removeSelector: #hasNoLoadConflicts:!MetacelloRepositoriesSpec removeSelector: #configMethodOn:indent:!MetacelloRepositoriesSpec removeSelector: #configMethodCascadeOn:indent:!MetacelloRepositoriesSpec removeSelector: #compareEqual:!MetacelloRepositoriesSpec removeSelector: #canUpgradeTo:!MetacelloRepositoriesSpec removeSelector: #add:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloRepositoriesSpec!BlockClosure removeSelector: #valueSupplyingMetacelloAnswers:!MetacelloMCVersionSpec removeSelector: #versionClass!MetacelloMCVersionSpec removeSelector: #updatedPackageSpecs!MetacelloMCVersionSpec removeSelector: #updateForSpawnMethod:!MetacelloMCVersionSpec removeSelector: #specsNamed:projectDo:packageDo:groupDo:!MetacelloMCVersionSpec removeSelector: #specListProjectDo:packageDo:groupDo:!MetacelloMCVersionSpec removeSelector: #repositorySpecs!MetacelloMCVersionSpec removeSelector: #repository:username:password:!MetacelloMCVersionSpec removeSelector: #repository:!MetacelloMCVersionSpec removeSelector: #repositoriesSpec!MetacelloMCVersionSpec removeSelector: #repositories:!MetacelloMCVersionSpec removeSelector: #repositories!MetacelloMCVersionSpec removeSelector: #removePackage:constructor:!MetacelloMCVersionSpec removeSelector: #postCopy!MetacelloMCVersionSpec removeSelector: #packagesNeedSavingVisited:into:!MetacelloMCVersionSpec removeSelector: #packages!MetacelloMCVersionSpec removeSelector: #packageSpecsInLoadOrderForMap:!MetacelloMCVersionSpec removeSelector: #packageNames!MetacelloMCVersionSpec removeSelector: #package:with:constructor:!MetacelloMCVersionSpec removeSelector: #package:overrides:constructor:!MetacelloMCVersionSpec removeSelector: #package:constructor:!MetacelloMCVersionSpec removeSelector: #nonOverridable!MetacelloMCVersionSpec removeSelector: #mergeSpec:!MetacelloMCVersionSpec removeSelector: #mergeMap!MetacelloMCVersionSpec removeSelector: #isSomethingLoadedAgainst:!MetacelloMCVersionSpec removeSelector: #isSomethingLoaded!MetacelloMCVersionSpec removeSelector: #isPossibleBaseline!MetacelloMCVersionSpec removeSelector: #isPartiallyCurrentAgainst:!MetacelloMCVersionSpec removeSelector: #isPartiallyCurrent!MetacelloMCVersionSpec removeSelector: #isLoadedToSpecAgainst:!MetacelloMCVersionSpec removeSelector: #isLoadedToSpec!MetacelloMCVersionSpec removeSelector: #isLoadedMatchConstraintsAgainst:!MetacelloMCVersionSpec removeSelector: #isLoadedMatchConstraints!MetacelloMCVersionSpec removeSelector: #isAllLoadedToSpecAgainst:!MetacelloMCVersionSpec removeSelector: #isAllLoadedToSpec!MetacelloMCVersionSpec removeSelector: #forceUpdatedPackageSpecs!MetacelloMCVersionSpec removeSelector: #difference:!MetacelloMCVersionSpec removeSelector: #currentlyLoadedExtensionClassesInVersion!MetacelloMCVersionSpec removeSelector: #currentlyLoadedClassesInVersion!MetacelloMCVersionSpec removeSelector: #configSpawnMethodOn:indent:!MetacelloMCVersionSpec removeSelector: #configMethodOn:last:indent:!MetacelloMCVersionSpec removeSelector: #computeVersionStatus:matchBlock:!MetacelloMCVersionSpec removeSelector: #computeVersionStatus:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCVersionSpec!MetacelloMCProject removeSelector: #versionSpecClass!MetacelloMCProject removeSelector: #updateProject:!MetacelloMCProject removeSelector: #updateProject!MetacelloMCProject removeSelector: #updatePackageRepositoriesFor:!MetacelloMCProject removeSelector: #setBaselineRepositoryDescription:!MetacelloMCProject removeSelector: #saveProject!MetacelloMCProject removeSelector: #repositorySpecClass!MetacelloMCProject removeSelector: #repositorySpec!MetacelloMCProject removeSelector: #repositoriesSpecClass!MetacelloMCProject removeSelector: #repositoriesSpec!MetacelloMCProject removeSelector: #projectSpecClass!MetacelloMCProject removeSelector: #projectPackage!MetacelloMCProject removeSelector: #projectForScriptEngine:unconditionalLoad:!MetacelloMCProject removeSelector: #pragmaKeywords!MetacelloMCProject removeSelector: #packagesNeedSaving:!MetacelloMCProject removeSelector: #packageSpecClass!MetacelloMCProject removeSelector: #packageSpec!MetacelloMCProject removeSelector: #goferCommitProject:!MetacelloMCProject removeSelector: #goferBranch:project:!MetacelloMCProject removeSelector: #fetchProject:!MetacelloMCProject removeSelector: #fetchProject!MetacelloMCProject removeSelector: #defaultLoaderClass!MetacelloMCProject removeSelector: #createRepository:!MetacelloMCProject removeSelector: #configurationOfProjectSpecClass!MetacelloMCProject removeSelector: #baselineOfProjectSpecClass!MetacelloMCProject removeSelector: #asConfigurationProject!MetacelloMCProject removeSelector: #asBaselineProject!MetacelloMCBaselineProject removeSelector: #versions!MetacelloMCBaselineProject removeSelector: #version!MetacelloMCBaselineProject removeSelector: #symbolicVersionSymbols!MetacelloMCBaselineProject removeSelector: #stableVersion!MetacelloMCBaselineProject removeSelector: #singletonVersionName!MetacelloMCBaselineProject removeSelector: #setBaselineRepositoryDescription:!MetacelloMCBaselineProject removeSelector: #projectForScriptEngine:unconditionalLoad:!MetacelloMCBaselineProject removeSelector: #latestVersionMatching:includedBlessings:excludedBlessings:!MetacelloMCBaselineProject removeSelector: #latestVersionMatching:includedBlessings:!MetacelloMCBaselineProject removeSelector: #latestVersionMatching:excludedBlessings:!MetacelloMCBaselineProject removeSelector: #latestVersionMatching:!MetacelloMCBaselineProject removeSelector: #latestVersion:!MetacelloMCBaselineProject removeSelector: #latestVersion!MetacelloMCBaselineProject removeSelector: #lastVersion!MetacelloMCBaselineProject removeSelector: #hasVersion:!MetacelloMCBaselineProject removeSelector: #development!MetacelloMCBaselineProject removeSelector: #currentVersionAgainst:!MetacelloMCBaselineProject removeSelector: #currentVersion!MetacelloMCBaselineProject removeSelector: #bleedingEdge!MetacelloMCBaselineProject removeSelector: #asConfigurationProject!MetacelloMCBaselineProject removeSelector: #asBaselineProject!MetacelloMCBaselineProject class removeSelector: #versionConstructorClass!MetacelloMCBaselineProject class removeSelector: #singletonVersionName!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCBaselineProject!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCProject!MCWorkingCopy removeSelector: #metacelloPackageNameWithBranch!MetacelloGroupSpec removeSelector: #resolveToPackagesIn:visited:!MetacelloGroupSpec removeSelector: #resolveToPackagesIn:into:visited:!MetacelloGroupSpec removeSelector: #resolveToPackagesIn:andProjects:visited:!MetacelloGroupSpec removeSelector: #resolveToPackagesIn:andProjects:into:visited:!MetacelloGroupSpec removeSelector: #resolveToLoadableSpec!MetacelloGroupSpec removeSelector: #loadUsing:gofer:!MetacelloGoferCommit removeSelector: #execute:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloGoferCommit!FileReference removeSelector: #asRepositorySpecFor:!MCDictionaryRepository removeSelector: #possiblyNewerVersionsOfAnyOf:!MCBitbucketRepository class removeSelector: #urlSchemes!MCBitbucketRepository class removeSelector: #basicFromUrl:!MCGitHubRepository class removeSelector: #urlSchemes!MCGitHubRepository class removeSelector: #basicFromUrl:!MetacelloPharoPlatform removeSelector: #tempFileFor:suffix:!MetacelloPharoPlatform removeSelector: #suspendSystemUpdateEventsDuring:!MetacelloPharoPlatform removeSelector: #string:includesSubstring:!MetacelloPharoPlatform removeSelector: #selectorForPragma:!MetacelloPharoPlatform removeSelector: #registerPackageNamed:!MetacelloPharoPlatform removeSelector: #recursiveDelete:!MetacelloPharoPlatform removeSelector: #readStreamOn:do:!MetacelloPharoPlatform removeSelector: #parentDirectoryOf:!MetacelloPharoPlatform removeSelector: #packageInfoFor:!MetacelloPharoPlatform removeSelector: #newVersionForWorkingCopy:!MetacelloPharoPlatform removeSelector: #fileHandleOn:!MetacelloPharoPlatform removeSelector: #fileFromPath:relativeTo:!MetacelloPharoPlatform removeSelector: #fileDirectoryClass!MetacelloPharoPlatform removeSelector: #extractRepositoryFrom:to:!MetacelloPharoPlatform removeSelector: #ensureDirectoryExists:!MetacelloPharoPlatform removeSelector: #downloadZipArchive:to:!MetacelloPharoPlatform removeSelector: #downloadJSON:username:pass:!MetacelloPharoPlatform removeSelector: #directoryFromPath:relativeTo:!MetacelloPharoPlatform removeSelector: #deleteFileNamed:!MetacelloPharoPlatform removeSelector: #defaultRepositoryDescription!MetacelloPharoPlatform removeSelector: #defaultDirectory!MetacelloPharoPlatform removeSelector: #compiler!MetacelloPharoPlatform class removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPharo30Platform!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPharoPlatform!MetacelloVersionNumber removeSelector: #~>!MetacelloVersionNumber removeSelector: #versionString!MetacelloVersionNumber removeSelector: #printOn:!MetacelloVersionNumber removeSelector: #match:!MetacelloVersionNumber removeSelector: #incrementVersionAt:!MetacelloVersionNumber removeSelector: #incrementPatchVersion!MetacelloVersionNumber removeSelector: #incrementMinorVersionNumber!MetacelloVersionNumber removeSelector: #incrementMinorVersion!MetacelloVersionNumber removeSelector: #incrementMajorVersion!MetacelloVersionNumber removeSelector: #hash!MetacelloVersionNumber removeSelector: #do:separatedBy:!MetacelloVersionNumber removeSelector: #do:!MetacelloVersionNumber removeSelector: #decrementVersionAt:!MetacelloVersionNumber removeSelector: #decrementPatchVersion!MetacelloVersionNumber removeSelector: #decrementMinorVersionNumber!MetacelloVersionNumber removeSelector: #decrementMinorVersion!MetacelloVersionNumber removeSelector: #decrementMajorVersion!MetacelloVersionNumber removeSelector: #copyFrom:to:!MetacelloVersionNumber removeSelector: #compareLessThan:!MetacelloVersionNumber removeSelector: #compareEqualTo:!MetacelloVersionNumber removeSelector: #collapseZeros!MetacelloVersionNumber removeSelector: #asString!MetacelloVersionNumber removeSelector: #asMetacelloVersionNumber!MetacelloVersionNumber removeSelector: #approximateBase!MetacelloVersionNumber removeSelector: #=!MetacelloVersionNumber removeSelector: #<!MetacelloVersionNumber class removeSelector: #fromString:!MetacelloVersionNumber class removeSelector: #extractNumericComponent:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionNumber!MetacelloVersion removeSelector: #~>!MetacelloVersion removeSelector: #versionString!MetacelloVersion removeSelector: #versionStatus:!MetacelloVersion removeSelector: #versionStatus!MetacelloVersion removeSelector: #versionSpec!MetacelloVersion removeSelector: #versionNumberFrom:!MetacelloVersion removeSelector: #versionNumber:!MetacelloVersion removeSelector: #versionNumber!MetacelloVersion removeSelector: #versionKey!MetacelloVersion removeSelector: #unload!MetacelloVersion removeSelector: #timestamp!MetacelloVersion removeSelector: #spec:!MetacelloVersion removeSelector: #spec!MetacelloVersion removeSelector: #resolveToLoadableSpecs:!MetacelloVersion removeSelector: #projects!MetacelloVersion removeSelector: #projectLabel!MetacelloVersion removeSelector: #project!MetacelloVersion removeSelector: #printOn:!MetacelloVersion removeSelector: #packageNamed:ifAbsent:!MetacelloVersion removeSelector: #packageNamed:!MetacelloVersion removeSelector: #name!MetacelloVersion removeSelector: #loader!MetacelloVersion removeSelector: #load:!MetacelloVersion removeSelector: #load!MetacelloVersion removeSelector: #isSomethingLoaded!MetacelloVersion removeSelector: #isPossibleBaseline!MetacelloVersion removeSelector: #isLoadedToSpec!MetacelloVersion removeSelector: #isLoadedMatchConstraints!MetacelloVersion removeSelector: #isAllLoadedToSpec!MetacelloVersion removeSelector: #importedVersions:!MetacelloVersion removeSelector: #importedVersions!MetacelloVersion removeSelector: #hash!MetacelloVersion removeSelector: #groups!MetacelloVersion removeSelector: #expandToLoadableSpecNames:!MetacelloVersion removeSelector: #difference:!MetacelloVersion removeSelector: #description!MetacelloVersion removeSelector: #computeVersionStatus!MetacelloVersion removeSelector: #blessing!MetacelloVersion removeSelector: #basicSpec!MetacelloVersion removeSelector: #author!MetacelloVersion removeSelector: #=!MetacelloVersion removeSelector: #<!MetacelloVersion class removeSelector: #fromString:!MetacelloVersion class removeSelector: #fromSpec:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersion!MetacelloSemanticVersionNumber removeSelector: #~>!MetacelloSemanticVersionNumber removeSelector: #versionString!MetacelloSemanticVersionNumber removeSelector: #versionComponents!MetacelloSemanticVersionNumber removeSelector: #printOn:!MetacelloSemanticVersionNumber removeSelector: #print:prefix:on:!MetacelloSemanticVersionNumber removeSelector: #preReleaseVersion:!MetacelloSemanticVersionNumber removeSelector: #preReleaseVersion!MetacelloSemanticVersionNumber removeSelector: #postCopy!MetacelloSemanticVersionNumber removeSelector: #normalVersion:!MetacelloSemanticVersionNumber removeSelector: #normalVersion!MetacelloSemanticVersionNumber removeSelector: #match:!MetacelloSemanticVersionNumber removeSelector: #incrementPatchVersion!MetacelloSemanticVersionNumber removeSelector: #incrementNormalVersionAt:!MetacelloSemanticVersionNumber removeSelector: #incrementMinorVersionNumber!MetacelloSemanticVersionNumber removeSelector: #incrementMinorVersion!MetacelloSemanticVersionNumber removeSelector: #incrementMajorVersion!MetacelloSemanticVersionNumber removeSelector: #hash!MetacelloSemanticVersionNumber removeSelector: #do:separatedBy:!MetacelloSemanticVersionNumber removeSelector: #do:!MetacelloSemanticVersionNumber removeSelector: #decrementPatchVersion!MetacelloSemanticVersionNumber removeSelector: #decrementNormalVersionAt:!MetacelloSemanticVersionNumber removeSelector: #decrementMinorVersionNumber!MetacelloSemanticVersionNumber removeSelector: #decrementMinorVersion!MetacelloSemanticVersionNumber removeSelector: #decrementMajorVersion!MetacelloSemanticVersionNumber removeSelector: #copyFrom:to:!MetacelloSemanticVersionNumber removeSelector: #compareLessThan:other:version:!MetacelloSemanticVersionNumber removeSelector: #compareLessThan:!MetacelloSemanticVersionNumber removeSelector: #compareEqualTo:other:!MetacelloSemanticVersionNumber removeSelector: #compareEqualTo:!MetacelloSemanticVersionNumber removeSelector: #buildVersion:!MetacelloSemanticVersionNumber removeSelector: #buildVersion!MetacelloSemanticVersionNumber removeSelector: #asString!MetacelloSemanticVersionNumber removeSelector: #asMetacelloSemanticVersionNumber!MetacelloSemanticVersionNumber removeSelector: #approximateBase!MetacelloSemanticVersionNumber removeSelector: #=!MetacelloSemanticVersionNumber removeSelector: #<!MetacelloSemanticVersionNumber class removeSelector: #validateVersionNumber:against:!MetacelloSemanticVersionNumber class removeSelector: #isSemanticIdentifier:!MetacelloSemanticVersionNumber class removeSelector: #integerFromString:!MetacelloSemanticVersionNumber class removeSelector: #fromString:forPattern:!MetacelloSemanticVersionNumber class removeSelector: #fromString:!MetacelloSemanticVersionNumber class removeSelector: #extractNumericComponent:forPattern:!MetacelloOldSemanticVersionNumber class removeSelector: #validateVersionNumber:against:!MetacelloOldSemanticVersionNumber class removeSelector: #integerFromString:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloOldSemanticVersionNumber!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSemanticVersionNumber!MetacelloMethodSectionPath removeSelector: #asMetacelloAttributePath!MetacelloMethodSectionPath removeSelector: #asAttributeOrPath!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMethodSectionPath!Collection removeSelector: #setRequiresInMetacelloPackage:!Collection removeSelector: #setLoadsInMetacelloProject:!Collection removeSelector: #setIncludesInMetacelloPackage:!Collection removeSelector: #setImportInVersionSpec:!Collection removeSelector: #setForVersion:withInMetacelloConfig:!Collection removeSelector: #setForDo:withInMetacelloConfig:!Collection removeSelector: #removeFromMetacelloPackages:!Collection removeSelector: #mergeIntoMetacelloPackages:!Collection removeSelector: #execute:against:!Collection removeSelector: #asMetacelloAttributePath!Collection removeSelector: #asMetacelloAttributeList!Collection removeSelector: #addToMetacelloPackages:!BlockClosure removeSelector: #setTimestampInMetacelloConfig:!BlockClosure removeSelector: #setProject:withInMetacelloConfig:!BlockClosure removeSelector: #setPackage:withInMetacelloConfig:!BlockClosure removeSelector: #setDescriptionInMetacelloConfig:!BlockClosure removeSelector: #setConfiguration:withInMetacelloConfig:!BlockClosure removeSelector: #setBlessingInMetacelloConfig:!BlockClosure removeSelector: #setBaseline:withInMetacelloConfig:!BlockClosure removeSelector: #setAuthorInMetacelloConfig:!BlockClosure removeSelector: #execute:against:!MetacelloValidationNotification removeSelector: #signal:!MetacelloValidationNotification removeSelector: #issue:!MetacelloValidationNotification removeSelector: #issue!MetacelloValidationNotification class removeSelector: #signal:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloValidationNotification!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloStackCacheNotification!MetacelloSkipDirtyPackageLoad removeSelector: #packageSpec:!MetacelloSkipDirtyPackageLoad removeSelector: #packageSpec!MetacelloSkipDirtyPackageLoad removeSelector: #defaultAction!MetacelloSkipDirtyPackageLoad class removeSelector: #signal:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSkipDirtyPackageLoad!MetacelloScriptProjectSpecNotification removeSelector: #projectSpec:!MetacelloScriptProjectSpecNotification removeSelector: #projectSpec!MetacelloScriptProjectSpecNotification removeSelector: #defaultAction!MetacelloProjectSpecLoadedNotification removeSelector: #handleResolutionFor:!MetacelloProjectSpecLoadedNotification removeSelector: #defaultAction!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectSpecLoadedNotification!MetacelloLookupProjectSpecForLoad removeSelector: #handleResolutionFor:!MetacelloLookupProjectSpecForLoad removeSelector: #defaultAction!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloLookupProjectSpecForLoad!MetacelloLookupProjectSpec removeSelector: #handleResolutionFor:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloLookupProjectSpec!MetacelloLookupBaselineSpecForEnsureLoad removeSelector: #handleResolutionFor:!MetacelloLookupBaselineSpecForEnsureLoad removeSelector: #defaultAction!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloLookupBaselineSpecForEnsureLoad!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptProjectSpecNotification!MetacelloScriptNotification removeSelector: #handleResolutionFor:!MetacelloScriptEnsureProjectLoadedForDevelopment removeSelector: #handleResolutionFor:!MetacelloScriptEnsureProjectLoadedForDevelopment removeSelector: #defaultAction!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptEnsureProjectLoadedForDevelopment!MetacelloResolveProjectUpgrade removeSelector: #useNew!MetacelloResolveProjectUpgrade removeSelector: #useLoaded!MetacelloResolveProjectUpgrade removeSelector: #useIncoming!MetacelloResolveProjectUpgrade removeSelector: #useExisting!MetacelloResolveProjectUpgrade removeSelector: #operationString!MetacelloResolveProjectUpgrade removeSelector: #newProjectRegistration:!MetacelloResolveProjectUpgrade removeSelector: #newProjectRegistration!MetacelloResolveProjectUpgrade removeSelector: #handleOnDownGrade:onUpgrade:!MetacelloResolveProjectUpgrade removeSelector: #existingProjectRegistration:!MetacelloResolveProjectUpgrade removeSelector: #existingProjectRegistration!MetacelloResolveProjectUpgrade removeSelector: #disallow!MetacelloResolveProjectUpgrade removeSelector: #defaultAction!MetacelloResolveProjectUpgrade removeSelector: #checkAllowed!MetacelloResolveProjectUpgrade removeSelector: #allowEvenIfLocked!MetacelloResolveProjectUpgrade removeSelector: #allow!MetacelloAllowProjectUpgrade removeSelector: #operationString!MetacelloAllowProjectUpgrade removeSelector: #handleResolutionFor:!MetacelloAllowProjectUpgrade removeSelector: #handleOnDownGrade:onUpgrade:!MetacelloAllowProjectUpgrade removeSelector: #defaultAction!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAllowProjectUpgrade!MetacelloAllowProjectDowngrade removeSelector: #operationString!MetacelloAllowProjectDowngrade removeSelector: #handleResolutionFor:!MetacelloAllowProjectDowngrade removeSelector: #handleOnDownGrade:onUpgrade:!MetacelloAllowProjectDowngrade removeSelector: #defaultAction!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAllowProjectDowngrade!MetacelloAllowLockedProjectChange removeSelector: #operationString:!MetacelloAllowLockedProjectChange removeSelector: #operationString!MetacelloAllowLockedProjectChange removeSelector: #honor!MetacelloAllowLockedProjectChange removeSelector: #handleResolutionFor:!MetacelloAllowLockedProjectChange removeSelector: #defaultAction!MetacelloAllowLockedProjectChange removeSelector: #checkAllowed!MetacelloAllowLockedProjectChange removeSelector: #break!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAllowLockedProjectChange!MetacelloAllowConflictingProjectUpgrade removeSelector: #operationString!MetacelloAllowConflictingProjectUpgrade removeSelector: #handleResolutionFor:!MetacelloAllowConflictingProjectUpgrade removeSelector: #defaultAction!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAllowConflictingProjectUpgrade!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloResolveProjectUpgrade!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptNotification!MetacelloScriptGitBasedDownloadNotification removeSelector: #versionString:!MetacelloScriptGitBasedDownloadNotification removeSelector: #versionString!MetacelloScriptGitBasedDownloadNotification removeSelector: #projectPath:!MetacelloScriptGitBasedDownloadNotification removeSelector: #projectPath!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptGitBasedDownloadNotification!MetacelloIgnorePackageLoaded removeSelector: #packageSpec:!MetacelloIgnorePackageLoaded removeSelector: #packageSpec!MetacelloIgnorePackageLoaded removeSelector: #defaultAction!MetacelloIgnorePackageLoaded class removeSelector: #signal:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloIgnorePackageLoaded!MetacelloErrorInProjectConstructionNotification removeSelector: #versionString:!MetacelloErrorInProjectConstructionNotification removeSelector: #versionString!MetacelloErrorInProjectConstructionNotification removeSelector: #exception:!MetacelloErrorInProjectConstructionNotification removeSelector: #exception!MetacelloErrorInProjectConstructionNotification removeSelector: #defaultAction!MetacelloErrorInProjectConstructionNotification class removeSelector: #versionString:exception:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloErrorInProjectConstructionNotification!MetacelloClearStackCacheNotification removeSelector: #signal:!MetacelloClearStackCacheNotification removeSelector: #cacheNames:!MetacelloClearStackCacheNotification removeSelector: #cacheNames!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloClearStackCacheNotification!MetacelloCleanNotification removeSelector: #version:!MetacelloCleanNotification removeSelector: #version!MetacelloCleanNotification removeSelector: #signal:!MetacelloCleanNotification class removeSelector: #signal:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCleanLoadNotification!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCleanLoadAndTestsNotification!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCleanNotification!MCRepository removeSelector: #repositoryVersionString!MCRepository removeSelector: #repositoryDescription!MCRepository removeSelector: #repositoryBranchName!MCRepository removeSelector: #flushForScriptGet!Integer removeSelector: #metacelloVersionComponentLessThan:!Integer removeSelector: #metacelloStringLessThanSelf:!Integer removeSelector: #metacelloSemanticVersionComponentLessThan:!Integer removeSelector: #metacelloSemanticStringLessThanSelf:!Integer removeSelector: #metacelloSemanticIntegerLessThanSelf:!Integer removeSelector: #metacelloIntegerLessThanSelf:!MetacelloVersionDoesNotExistError removeSelector: #versionString:!MetacelloVersionDoesNotExistError removeSelector: #versionString!MetacelloVersionDoesNotExistError removeSelector: #signal!MetacelloVersionDoesNotExistError removeSelector: #project:!MetacelloVersionDoesNotExistError removeSelector: #project!MetacelloVersionDoesNotExistError removeSelector: #possibleVersions!MetacelloVersionDoesNotExistError removeSelector: #description!MetacelloVersionDoesNotExistError class removeSelector: #project:versionString:!MetacelloVersionDefinitionError removeSelector: #exception:!MetacelloVersionDefinitionError removeSelector: #exception!MetacelloVersionDefinitionError removeSelector: #description!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionDefinitionError!MetacelloSymbolicVersionNotDefinedError removeSelector: #description!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSymbolicVersionNotDefinedError!MetacelloSymbolicVersionDoesNotExistError removeSelector: #possibleVersions!MetacelloSymbolicVersionDoesNotExistError removeSelector: #description!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSymbolicVersionDoesNotExistError!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionDoesNotExistError!MetacelloValidationFailure removeSelector: #issues:!MetacelloValidationFailure removeSelector: #issues!MetacelloValidationFailure class removeSelector: #issues:message:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloValidationFailure!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloUseUpgradeError!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloConflictingProjectError!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptingError!MetacelloProjectSpecLoadError removeSelector: #versionString!MetacelloProjectSpecLoadError removeSelector: #versionDoesNotExistException:!MetacelloProjectSpecLoadError removeSelector: #versionDoesNotExistException!MetacelloProjectSpecLoadError removeSelector: #projectSpec:!MetacelloProjectSpecLoadError removeSelector: #projectSpec!MetacelloProjectSpecLoadError removeSelector: #possibleVersions!MetacelloProjectSpecLoadError removeSelector: #isResumable!MetacelloProjectSpecLoadError class removeSelector: #projectSpec:!MetacelloProjectSpecLoadConflict removeSelector: #versionString!MetacelloProjectSpecLoadConflict removeSelector: #possibleVersions!MetacelloProjectSpecLoadConflict removeSelector: #isResumable!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectSpecLoadConflict!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectSpecLoadError!MetacelloPackageSpecResolutionError removeSelector: #signal!MetacelloPackageSpecResolutionError removeSelector: #repositoryString!MetacelloPackageSpecResolutionError removeSelector: #repositoryError:!MetacelloPackageSpecResolutionError removeSelector: #repositoryError!MetacelloPackageSpecResolutionError removeSelector: #repositories:!MetacelloPackageSpecResolutionError removeSelector: #repositories!MetacelloPackageSpecResolutionError removeSelector: #packageSpec:!MetacelloPackageSpecResolutionError removeSelector: #packageSpec!MetacelloPackageSpecResolutionError removeSelector: #description!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPackageSpecResolutionError!MetacelloNameNotDefinedError removeSelector: #isResumable!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloNameNotDefinedError!MetacelloCannotUpdateReleasedVersionError removeSelector: #isResumable!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCannotUpdateReleasedVersionError!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloBaseConfiguration!DateAndTime removeSelector: #setTimestampInMetacelloVersion:!DateAndTime removeSelector: #setTimestampInMetacelloConfig:!String removeSelector: #setTimestampInMetacelloVersion:!String removeSelector: #setTimestampInMetacelloConfig:!String removeSelector: #setRequiresInMetacelloPackage:!String removeSelector: #setProject:withInMetacelloConfig:!String removeSelector: #setPreLoadDoItInMetacelloSpec:!String removeSelector: #setPostLoadDoItInMetacelloSpec:!String removeSelector: #setPackage:withInMetacelloConfig:!String removeSelector: #setLoadsInMetacelloProject:!String removeSelector: #setIncludesInMetacelloPackage:!String removeSelector: #setImportInVersionSpec:!String removeSelector: #setDescriptionInMetacelloVersion:!String removeSelector: #setDescriptionInMetacelloConfig:!String removeSelector: #setBlessingInMetacelloVersion:!String removeSelector: #setBlessingInMetacelloConfig:!String removeSelector: #setAuthorInMetacelloVersion:!String removeSelector: #setAuthorInMetacelloConfig:!String removeSelector: #removeFromMetacelloPackages:!String removeSelector: #metacelloVersionComponentLessThan:!String removeSelector: #metacelloStringLessThanSelf:!String removeSelector: #metacelloSemanticVersionComponentLessThan:!String removeSelector: #metacelloSemanticStringLessThanSelf:!String removeSelector: #metacelloSemanticIntegerLessThanSelf:!String removeSelector: #metacelloIntegerLessThanSelf:!String removeSelector: #mergeIntoMetacelloPackages:!String removeSelector: #execute:against:!String removeSelector: #asMetacelloVersionNumber!String removeSelector: #asMetacelloSemanticVersionNumber!String removeSelector: #addToMetacelloPackages:!UndefinedObject removeSelector: #setTimestampInMetacelloVersion:!UndefinedObject removeSelector: #setProject:withInMetacelloConfig:!UndefinedObject removeSelector: #setPreLoadDoItInMetacelloSpec:!UndefinedObject removeSelector: #setPostLoadDoItInMetacelloSpec:!UndefinedObject removeSelector: #setDescriptionInMetacelloVersion:!UndefinedObject removeSelector: #setBlessingInMetacelloVersion:!UndefinedObject removeSelector: #setAuthorInMetacelloVersion:!UndefinedObject removeSelector: #registrationsCompareEqual:!UndefinedObject removeSelector: #metacelloRegistrationHash!UndefinedObject removeSelector: #asMetacelloVersionNumber!UndefinedObject removeSelector: #asMetacelloSemanticVersionNumber!Symbol removeSelector: #setPreLoadDoItInMetacelloSpec:!Symbol removeSelector: #setPostLoadDoItInMetacelloSpec:!Symbol removeSelector: #setForVersion:withInMetacelloConfig:!Symbol removeSelector: #setForDo:withInMetacelloConfig:!Symbol removeSelector: #asMetacelloAttributePath!Symbol removeSelector: #asMetacelloAttributeList!Object removeSelector: #metacelloVersionComponentLessThan:!Object removeSelector: #metacelloStringLessThanSelf:!Object removeSelector: #metacelloSemanticVersionComponentLessThan:!Object removeSelector: #metacelloSemanticStringLessThanSelf:!Object removeSelector: #metacelloSemanticIntegerLessThanSelf:!Object removeSelector: #metacelloIntegerLessThanSelf:!MetacelloVersionDiffReport removeSelector: #to:!MetacelloVersionDiffReport removeSelector: #to!MetacelloVersionDiffReport removeSelector: #removals:!MetacelloVersionDiffReport removeSelector: #removals!MetacelloVersionDiffReport removeSelector: #printOn:!MetacelloVersionDiffReport removeSelector: #modifications:!MetacelloVersionDiffReport removeSelector: #modifications!MetacelloVersionDiffReport removeSelector: #from:!MetacelloVersionDiffReport removeSelector: #from!MetacelloVersionDiffReport removeSelector: #configuration:!MetacelloVersionDiffReport removeSelector: #configuration!MetacelloVersionDiffReport removeSelector: #additions:!MetacelloVersionDiffReport removeSelector: #additions!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionDiffReport!MetacelloValidationWarning removeSelector: #label!MetacelloValidationWarning removeSelector: #isWarning!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloValidationWarning!MetacelloValidationIssue removeSelector: #reasonCode:!MetacelloValidationIssue removeSelector: #reasonCode!MetacelloValidationIssue removeSelector: #printOn:!MetacelloValidationIssue removeSelector: #label!MetacelloValidationIssue removeSelector: #isWarning!MetacelloValidationIssue removeSelector: #isError!MetacelloValidationIssue removeSelector: #isCriticalWarning!MetacelloValidationIssue removeSelector: #isCritical!MetacelloValidationIssue removeSelector: #explanation:!MetacelloValidationIssue removeSelector: #explanation!MetacelloValidationIssue removeSelector: #configurationClass:!MetacelloValidationIssue removeSelector: #configurationClass!MetacelloValidationIssue removeSelector: #callSite:!MetacelloValidationIssue removeSelector: #callSite!MetacelloValidationIssue class removeSelector: #configurationClass:reasonCode:callSite:explanation:!MetacelloValidationError removeSelector: #label!MetacelloValidationError removeSelector: #isError!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloValidationError!MetacelloValidationCriticalWarning removeSelector: #label!MetacelloValidationCriticalWarning removeSelector: #isCriticalWarning!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloValidationCriticalWarning!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloValidationIssue!MetacelloSpecLoader removeSelector: #unload!MetacelloSpecLoader removeSelector: #spec:!MetacelloSpecLoader removeSelector: #spec!MetacelloSpecLoader removeSelector: #project!MetacelloSpecLoader removeSelector: #loadType!MetacelloSpecLoader removeSelector: #load!MetacelloSpecLoader class removeSelector: #on:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSpecLoader!MetacelloVersionSpec removeSelector: #versionString:constructor:!MetacelloVersionSpec removeSelector: #versionString:!MetacelloVersionSpec removeSelector: #versionString!MetacelloVersionSpec removeSelector: #versionNumber!MetacelloVersionSpec removeSelector: #versionClass!MetacelloVersionSpec removeSelector: #timestamp:constructor:!MetacelloVersionSpec removeSelector: #timestamp:!MetacelloVersionSpec removeSelector: #timestamp!MetacelloVersionSpec removeSelector: #setTimestamp:!MetacelloVersionSpec removeSelector: #setPreLoadDoIt:!MetacelloVersionSpec removeSelector: #setPostLoadDoIt:!MetacelloVersionSpec removeSelector: #setImport:!MetacelloVersionSpec removeSelector: #setDescription:!MetacelloVersionSpec removeSelector: #setBlessing:!MetacelloVersionSpec removeSelector: #setAuthor:!MetacelloVersionSpec removeSelector: #resolveToLoadableSpecs:forLoad:map:!MetacelloVersionSpec removeSelector: #resolveToLoadableSpecs:!MetacelloVersionSpec removeSelector: #resolveToLoadableSpec:forLoad:forMap:packages:!MetacelloVersionSpec removeSelector: #repository:username:password:constructor:!MetacelloVersionSpec removeSelector: #repository:constructor:!MetacelloVersionSpec removeSelector: #repositories:constructor:!MetacelloVersionSpec removeSelector: #removeProject:constructor:!MetacelloVersionSpec removeSelector: #removeGroup:constructor:!MetacelloVersionSpec removeSelector: #projectLabel!MetacelloVersionSpec removeSelector: #projectDo:packageDo:groupDo:!MetacelloVersionSpec removeSelector: #project:with:constructor:!MetacelloVersionSpec removeSelector: #project:overrides:constructor:!MetacelloVersionSpec removeSelector: #project:copyFrom:with:constructor:!MetacelloVersionSpec removeSelector: #project:constructor:!MetacelloVersionSpec removeSelector: #preLoadDoIt:constructor:!MetacelloVersionSpec removeSelector: #preLoadDoIt:!MetacelloVersionSpec removeSelector: #preLoadDoIt!MetacelloVersionSpec removeSelector: #postLoadDoIt:constructor:!MetacelloVersionSpec removeSelector: #postLoadDoIt:!MetacelloVersionSpec removeSelector: #postLoadDoIt!MetacelloVersionSpec removeSelector: #postCopy!MetacelloVersionSpec removeSelector: #packagesSpec!MetacelloVersionSpec removeSelector: #packages:!MetacelloVersionSpec removeSelector: #packages!MetacelloVersionSpec removeSelector: #packageSpecsInLoadOrder!MetacelloVersionSpec removeSelector: #packageNames!MetacelloVersionSpec removeSelector: #packageNamed:ifAbsent:!MetacelloVersionSpec removeSelector: #packageNamed:forMap:ifAbsent:!MetacelloVersionSpec removeSelector: #packageNamed:forLoad:forMap:ifAbsent:!MetacelloVersionSpec removeSelector: #packageNamed:!MetacelloVersionSpec removeSelector: #nonOverridable!MetacelloVersionSpec removeSelector: #mergeSpec:!MetacelloVersionSpec removeSelector: #mergeMap!MetacelloVersionSpec removeSelector: #label!MetacelloVersionSpec removeSelector: #isPossibleBaseline!MetacelloVersionSpec removeSelector: #isPartiallyCurrent:useEquality:!MetacelloVersionSpec removeSelector: #importArray!MetacelloVersionSpec removeSelector: #import:provides:constructor:!MetacelloVersionSpec removeSelector: #import:provides:!MetacelloVersionSpec removeSelector: #import:constructor:!MetacelloVersionSpec removeSelector: #import:!MetacelloVersionSpec removeSelector: #import!MetacelloVersionSpec removeSelector: #group:with:constructor:!MetacelloVersionSpec removeSelector: #group:overrides:constructor:!MetacelloVersionSpec removeSelector: #getTimestamp!MetacelloVersionSpec removeSelector: #getPreLoadDoIt!MetacelloVersionSpec removeSelector: #getPostLoadDoIt!MetacelloVersionSpec removeSelector: #getDescription!MetacelloVersionSpec removeSelector: #getBlessing!MetacelloVersionSpec removeSelector: #getAuthor!MetacelloVersionSpec removeSelector: #expandToLoadableSpecNames:!MetacelloVersionSpec removeSelector: #difference:!MetacelloVersionSpec removeSelector: #description:constructor:!MetacelloVersionSpec removeSelector: #description:!MetacelloVersionSpec removeSelector: #description!MetacelloVersionSpec removeSelector: #deleteSpec:!MetacelloVersionSpec removeSelector: #defaultPackageNames!MetacelloVersionSpec removeSelector: #createVersion!MetacelloVersionSpec removeSelector: #configuration:with:constructor:!MetacelloVersionSpec removeSelector: #configSpawnMethodOn:indent:!MetacelloVersionSpec removeSelector: #configPackagesSpecMethodOn:indent:!MetacelloVersionSpec removeSelector: #configMethodValueOn:for:selector:last:indent:!MetacelloVersionSpec removeSelector: #configMethodOn:last:indent:!MetacelloVersionSpec removeSelector: #configMethodOn:indent:!MetacelloVersionSpec removeSelector: #configMethodOn:for:selector:last:indent:!MetacelloVersionSpec removeSelector: #configMethodBasicOn:last:indent:!MetacelloVersionSpec removeSelector: #blessing:constructor:!MetacelloVersionSpec removeSelector: #blessing:!MetacelloVersionSpec removeSelector: #blessing!MetacelloVersionSpec removeSelector: #baseline:with:constructor:!MetacelloVersionSpec removeSelector: #baseline:constructor:!MetacelloVersionSpec removeSelector: #author:constructor:!MetacelloVersionSpec removeSelector: #author:!MetacelloVersionSpec removeSelector: #author!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionSpec!MetacelloValueHolderSpec removeSelector: #value:constructor:!MetacelloValueHolderSpec removeSelector: #value:!MetacelloValueHolderSpec removeSelector: #value!MetacelloValueHolderSpec removeSelector: #setTimestampInMetacelloVersion:!MetacelloValueHolderSpec removeSelector: #setPreLoadDoItInMetacelloSpec:!MetacelloValueHolderSpec removeSelector: #setPostLoadDoItInMetacelloSpec:!MetacelloValueHolderSpec removeSelector: #setDescriptionInMetacelloVersion:!MetacelloValueHolderSpec removeSelector: #setBlessingInMetacelloVersion:!MetacelloValueHolderSpec removeSelector: #setAuthorInMetacelloVersion:!MetacelloValueHolderSpec removeSelector: #mergeMap!MetacelloValueHolderSpec removeSelector: #configMethodOn:indent:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloValueHolderSpec!MetacelloSpec removeSelector: #validateMergeForSpec:!MetacelloSpec removeSelector: #shouldBeMutable!MetacelloSpec removeSelector: #removeMember!MetacelloSpec removeSelector: #project!MetacelloSpec removeSelector: #printOn:!MetacelloSpec removeSelector: #preLoadDoItBlock!MetacelloSpec removeSelector: #preLoadDoIt!MetacelloSpec removeSelector: #postLoadDoItBlock!MetacelloSpec removeSelector: #postLoadDoIt!MetacelloSpec removeSelector: #postCopy!MetacelloSpec removeSelector: #nonOverridable!MetacelloSpec removeSelector: #mutable!MetacelloSpec removeSelector: #mergeSpec:!MetacelloSpec removeSelector: #mergeMember!MetacelloSpec removeSelector: #mergeMap!MetacelloSpec removeSelector: #mergeImportLoads:!MetacelloSpec removeSelector: #loader:!MetacelloSpec removeSelector: #loader!MetacelloSpec removeSelector: #label!MetacelloSpec removeSelector: #isMutable!MetacelloSpec removeSelector: #immutable!MetacelloSpec removeSelector: #for:!MetacelloSpec removeSelector: #doItBlock:!MetacelloSpec removeSelector: #copyOnWrite:!MetacelloSpec removeSelector: #copyMember!MetacelloSpec removeSelector: #configMethodOn:indent:!MetacelloSpec removeSelector: #configMethodOn:!MetacelloSpec removeSelector: #answers!MetacelloSpec removeSelector: #addMember!MetacelloSpec removeSelector: #aboutToCopy!MetacelloSpec class removeSelector: #platformClass!MetacelloSpec class removeSelector: #for:!MetacelloProjectSpec removeSelector: #versionString:constructor:!MetacelloProjectSpec removeSelector: #versionString:!MetacelloProjectSpec removeSelector: #versionString!MetacelloProjectSpec removeSelector: #versionOrNil!MetacelloProjectSpec removeSelector: #versionKey!MetacelloProjectSpec removeSelector: #version:constructor:!MetacelloProjectSpec removeSelector: #version!MetacelloProjectSpec removeSelector: #unregisterProject!MetacelloProjectSpec removeSelector: #setPreLoadDoIt:!MetacelloProjectSpec removeSelector: #setPostLoadDoIt:!MetacelloProjectSpec removeSelector: #setName:!MetacelloProjectSpec removeSelector: #setLoads:!MetacelloProjectSpec removeSelector: #resolveToLoadableSpec!MetacelloProjectSpec removeSelector: #registrationsCompareEqual:!MetacelloProjectSpec removeSelector: #registration!MetacelloProjectSpec removeSelector: #projectPackage!MetacelloProjectSpec removeSelector: #projectLabel!MetacelloProjectSpec removeSelector: #projectDo:packageDo:groupDo:!MetacelloProjectSpec removeSelector: #preLoadDoIt:constructor:!MetacelloProjectSpec removeSelector: #preLoadDoIt:!MetacelloProjectSpec removeSelector: #preLoadDoIt!MetacelloProjectSpec removeSelector: #postLoadDoIt:constructor:!MetacelloProjectSpec removeSelector: #postLoadDoIt:!MetacelloProjectSpec removeSelector: #postLoadDoIt!MetacelloProjectSpec removeSelector: #operator:constructor:!MetacelloProjectSpec removeSelector: #operator:!MetacelloProjectSpec removeSelector: #operator!MetacelloProjectSpec removeSelector: #name:constructor:!MetacelloProjectSpec removeSelector: #name:!MetacelloProjectSpec removeSelector: #name!MetacelloProjectSpec removeSelector: #metacelloRegistrationHash!MetacelloProjectSpec removeSelector: #mergeScriptLoads:!MetacelloProjectSpec removeSelector: #mergeMap!MetacelloProjectSpec removeSelector: #loads:constructor:!MetacelloProjectSpec removeSelector: #loads:!MetacelloProjectSpec removeSelector: #loads!MetacelloProjectSpec removeSelector: #loadListForVersion:!MetacelloProjectSpec removeSelector: #load!MetacelloProjectSpec removeSelector: #label!MetacelloProjectSpec removeSelector: #isLocked!MetacelloProjectSpec removeSelector: #hasRepository!MetacelloProjectSpec removeSelector: #hasNonVersionStringField!MetacelloProjectSpec removeSelector: #hasNoLoadConflicts:!MetacelloProjectSpec removeSelector: #hasLoadConflicts:!MetacelloProjectSpec removeSelector: #hasClassName!MetacelloProjectSpec removeSelector: #getRepositories!MetacelloProjectSpec removeSelector: #getPreLoadDoIt!MetacelloProjectSpec removeSelector: #getPostLoadDoIt!MetacelloProjectSpec removeSelector: #getOperator!MetacelloProjectSpec removeSelector: #getFile!MetacelloProjectSpec removeSelector: #getClassName!MetacelloProjectSpec removeSelector: #file!MetacelloProjectSpec removeSelector: #currentlyLoadedClassesInVersion!MetacelloProjectSpec removeSelector: #constructClassName!MetacelloProjectSpec removeSelector: #configShortCutMethodOn:member:indent:!MetacelloProjectSpec removeSelector: #configMethodOn:indent:!MetacelloProjectSpec removeSelector: #configMethodBodyOn:indent:fromShortCut:!MetacelloProjectSpec removeSelector: #configMethodBodyOn:indent:!MetacelloProjectSpec removeSelector: #configHasVersionString!MetacelloProjectSpec removeSelector: #compareVersionsEqual:!MetacelloProjectSpec removeSelector: #compareVersions:usingOperator:!MetacelloProjectSpec removeSelector: #compareEqual:!MetacelloProjectSpec removeSelector: #className:constructor:!MetacelloProjectSpec removeSelector: #className:!MetacelloProjectSpec removeSelector: #className!MetacelloProjectSpec removeSelector: #canUpgradeTo:!MetacelloProjectSpec removeSelector: #canDowngradeTo:!MetacelloProjectSpec removeSelector: #addToMetacelloPackages:!MetacelloGenericProjectSpec removeSelector: #repositorySpecs!MetacelloGenericProjectSpec removeSelector: #repositoryDescriptions!MetacelloGenericProjectSpec removeSelector: #repository:username:password:constructor:!MetacelloGenericProjectSpec removeSelector: #repository:username:password:!MetacelloGenericProjectSpec removeSelector: #repository:constructor:!MetacelloGenericProjectSpec removeSelector: #repository:!MetacelloGenericProjectSpec removeSelector: #repository!MetacelloGenericProjectSpec removeSelector: #repositories:constructor:!MetacelloGenericProjectSpec removeSelector: #repositories:!MetacelloGenericProjectSpec removeSelector: #repositories!MetacelloGenericProjectSpec removeSelector: #projectPackage:constructor:!MetacelloGenericProjectSpec removeSelector: #projectPackage:!MetacelloGenericProjectSpec removeSelector: #projectPackage!MetacelloGenericProjectSpec removeSelector: #postCopy!MetacelloGenericProjectSpec removeSelector: #nonOverridable!MetacelloGenericProjectSpec removeSelector: #name:!MetacelloGenericProjectSpec removeSelector: #metacelloRegistrationHash!MetacelloGenericProjectSpec removeSelector: #mergeSpec:!MetacelloGenericProjectSpec removeSelector: #mergeScriptRepository:!MetacelloGenericProjectSpec removeSelector: #mergeRepositoriesSpec:!MetacelloGenericProjectSpec removeSelector: #mergeMap!MetacelloGenericProjectSpec removeSelector: #loadVersion:!MetacelloGenericProjectSpec removeSelector: #load!MetacelloGenericProjectSpec removeSelector: #hasRepository!MetacelloGenericProjectSpec removeSelector: #hasNoLoadConflicts:!MetacelloGenericProjectSpec removeSelector: #getRepositories!MetacelloGenericProjectSpec removeSelector: #determineCurrentVersionForLoad!MetacelloGenericProjectSpec removeSelector: #compareEqual:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloGenericProjectSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectSpec!MetacelloRemoveMemberSpec removeSelector: #methodUpdateSelector!MetacelloRemoveMemberSpec removeSelector: #applyToList:!MetacelloRemoveMemberSpec removeSelector: #applyAdd:copy:merge:remove:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloRemoveMemberSpec!MetacelloMergeMemberSpec removeSelector: #methodUpdateSelector!MetacelloMergeMemberSpec removeSelector: #applyToList:!MetacelloMergeMemberSpec removeSelector: #applyAdd:copy:merge:remove:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMergeMemberSpec!MetacelloMemberSpec removeSelector: #spec:!MetacelloMemberSpec removeSelector: #spec!MetacelloMemberSpec removeSelector: #sourceName!MetacelloMemberSpec removeSelector: #name:!MetacelloMemberSpec removeSelector: #name!MetacelloMemberSpec removeSelector: #methodUpdateSelector!MetacelloMemberSpec removeSelector: #configMethodOn:indent:!MetacelloMemberSpec removeSelector: #configMethodCascadeOn:last:indent:!MetacelloMemberSpec removeSelector: #applyToList:!MetacelloMemberSpec removeSelector: #applyAdd:copy:merge:remove:!MetacelloCopyMemberSpec removeSelector: #sourceName:!MetacelloCopyMemberSpec removeSelector: #sourceName!MetacelloCopyMemberSpec removeSelector: #methodUpdateSelector!MetacelloCopyMemberSpec removeSelector: #applyToList:!MetacelloCopyMemberSpec removeSelector: #applyAdd:copy:merge:remove:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCopyMemberSpec!MetacelloAddMemberSpec removeSelector: #methodUpdateSelector!MetacelloAddMemberSpec removeSelector: #applyToList:!MetacelloAddMemberSpec removeSelector: #applyAdd:copy:merge:remove:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAddMemberSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMemberSpec!MetacelloPackagesSpec removeSelector: #sortPackageSpecs:packageSpec:groupLoops:for:!MetacelloPackagesSpec removeSelector: #slideIn:spec:baseIndex:seen:firstTime:for:!MetacelloPackagesSpec removeSelector: #remove:!MetacelloPackagesSpec removeSelector: #packageSpecsInLoadOrderFor:!MetacelloPackagesSpec removeSelector: #packageNamed:ifAbsent:!MetacelloPackagesSpec removeSelector: #merge:!MetacelloPackagesSpec removeSelector: #copy:to:!MetacelloPackagesSpec removeSelector: #configMethodOn:indent:!MetacelloPackagesSpec removeSelector: #applyIncludesTo:for:firstTime:for:!MetacelloPackagesSpec removeSelector: #add:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPackagesSpec!MetacelloMemberListSpec removeSelector: #specListSelect:!MetacelloMemberListSpec removeSelector: #specListDo:!MetacelloMemberListSpec removeSelector: #specListDetect:ifNone:!MetacelloMemberListSpec removeSelector: #specListDetect:!MetacelloMemberListSpec removeSelector: #select:!MetacelloMemberListSpec removeSelector: #remove:!MetacelloMemberListSpec removeSelector: #postCopy!MetacelloMemberListSpec removeSelector: #notEmpty!MetacelloMemberListSpec removeSelector: #mergeSpec:!MetacelloMemberListSpec removeSelector: #merge:!MetacelloMemberListSpec removeSelector: #mapRemove:into:!MetacelloMemberListSpec removeSelector: #mapMerge:into:!MetacelloMemberListSpec removeSelector: #mapCopy:into:!MetacelloMemberListSpec removeSelector: #mapAdd:into:!MetacelloMemberListSpec removeSelector: #map!MetacelloMemberListSpec removeSelector: #list:!MetacelloMemberListSpec removeSelector: #list!MetacelloMemberListSpec removeSelector: #isEmpty!MetacelloMemberListSpec removeSelector: #do:!MetacelloMemberListSpec removeSelector: #detect:ifNone:!MetacelloMemberListSpec removeSelector: #detect:!MetacelloMemberListSpec removeSelector: #deleteSpec:!MetacelloMemberListSpec removeSelector: #copy:to:!MetacelloMemberListSpec removeSelector: #copy:!MetacelloMemberListSpec removeSelector: #collect:!MetacelloMemberListSpec removeSelector: #clearMemberMap!MetacelloMemberListSpec removeSelector: #addMember:!MetacelloMemberListSpec removeSelector: #add:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMemberListSpec!MetacelloProjectReferenceSpec removeSelector: #versionString:!MetacelloProjectReferenceSpec removeSelector: #versionOrNil!MetacelloProjectReferenceSpec removeSelector: #version!MetacelloProjectReferenceSpec removeSelector: #requires:!MetacelloProjectReferenceSpec removeSelector: #repositorySpecs!MetacelloProjectReferenceSpec removeSelector: #repositories!MetacelloProjectReferenceSpec removeSelector: #relativeCurrentVersion!MetacelloProjectReferenceSpec removeSelector: #referencedSpec!MetacelloProjectReferenceSpec removeSelector: #projectReference:!MetacelloProjectReferenceSpec removeSelector: #projectReference!MetacelloProjectReferenceSpec removeSelector: #projectName!MetacelloProjectReferenceSpec removeSelector: #projectLabel!MetacelloProjectReferenceSpec removeSelector: #projectDo:packageDo:groupDo:!MetacelloProjectReferenceSpec removeSelector: #postCopy!MetacelloProjectReferenceSpec removeSelector: #nonOverridable!MetacelloProjectReferenceSpec removeSelector: #mergeSpec:!MetacelloProjectReferenceSpec removeSelector: #mergeMap!MetacelloProjectReferenceSpec removeSelector: #mergeImportLoads:!MetacelloProjectReferenceSpec removeSelector: #includes:!MetacelloProjectReferenceSpec removeSelector: #hasRepository!MetacelloProjectReferenceSpec removeSelector: #configMethodOn:indent:!MetacelloProjectReferenceSpec removeSelector: #configMethodCascadeOn:member:last:indent:!MetacelloProjectReferenceSpec removeSelector: #answers:!MetacelloProjectReferenceSpec removeSelector: #aboutToCopy!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectReferenceSpec!MetacelloGroupSpec removeSelector: #resolveSpecsForPackageOrdering:!MetacelloGroupSpec removeSelector: #requiresSpecsForPackageOrdering:!MetacelloGroupSpec removeSelector: #requires:!MetacelloGroupSpec removeSelector: #requiredSpecsForPackageOrdering:!MetacelloGroupSpec removeSelector: #projectDo:packageDo:groupDo:!MetacelloGroupSpec removeSelector: #includeSpecNamesForPackageOrdering:!MetacelloGroupSpec removeSelector: #configMethodOn:indent:!MetacelloGroupSpec removeSelector: #configMethodCascadeOn:member:last:indent:!MetacelloGroupSpec removeSelector: #answers:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloGroupSpec!MetacelloAbstractPackageSpec removeSelector: #specs:forPackageOrdering:!MetacelloAbstractPackageSpec removeSelector: #setRequires:!MetacelloAbstractPackageSpec removeSelector: #setIncludes:!MetacelloAbstractPackageSpec removeSelector: #setAnswers:!MetacelloAbstractPackageSpec removeSelector: #resolveSpecsForPackageOrdering:!MetacelloAbstractPackageSpec removeSelector: #requiresSpecsForPackageOrdering:!MetacelloAbstractPackageSpec removeSelector: #requires:!MetacelloAbstractPackageSpec removeSelector: #requires!MetacelloAbstractPackageSpec removeSelector: #requiredSpecsForPackageOrdering:!MetacelloAbstractPackageSpec removeSelector: #requiredSpecNamesForPackageOrdering:!MetacelloAbstractPackageSpec removeSelector: #removeFromMetacelloPackages:!MetacelloAbstractPackageSpec removeSelector: #referencedSpec!MetacelloAbstractPackageSpec removeSelector: #projectDo:packageDo:groupDo:!MetacelloAbstractPackageSpec removeSelector: #postCopy!MetacelloAbstractPackageSpec removeSelector: #nonOverridable!MetacelloAbstractPackageSpec removeSelector: #name:!MetacelloAbstractPackageSpec removeSelector: #name!MetacelloAbstractPackageSpec removeSelector: #mergeSpec:!MetacelloAbstractPackageSpec removeSelector: #mergeMap!MetacelloAbstractPackageSpec removeSelector: #mergeIntoMetacelloPackages:!MetacelloAbstractPackageSpec removeSelector: #label!MetacelloAbstractPackageSpec removeSelector: #includesForPackageOrdering!MetacelloAbstractPackageSpec removeSelector: #includes:!MetacelloAbstractPackageSpec removeSelector: #includes!MetacelloAbstractPackageSpec removeSelector: #includeSpecNamesForPackageOrdering:!MetacelloAbstractPackageSpec removeSelector: #hasRepository!MetacelloAbstractPackageSpec removeSelector: #configMethodOn:for:selector:cascading:cascade:indent:!MetacelloAbstractPackageSpec removeSelector: #configMethodCascadeOn:member:last:indent:!MetacelloAbstractPackageSpec removeSelector: #configMethodBodyOn:hasName:cascading:indent:!MetacelloAbstractPackageSpec removeSelector: #answers:!MetacelloAbstractPackageSpec removeSelector: #answers!MetacelloAbstractPackageSpec removeSelector: #addToMetacelloPackages:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAbstractPackageSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSpec!MetacelloScriptRegistryExecutor removeSelector: #reset!MetacelloScriptRegistryExecutor removeSelector: #remove!MetacelloScriptRegistryExecutor removeSelector: #projectSpecSelectBlock!MetacelloScriptRegistryExecutor removeSelector: #prime!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptRegistryExecutor!MetacelloScriptImageExecutor removeSelector: #projectSpecSelectBlock!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptImageExecutor!MetacelloScriptExecutor removeSelector: #versionArg:!MetacelloScriptExecutor removeSelector: #versionArg!MetacelloScriptExecutor removeSelector: #useCurrentVersion:!MetacelloScriptExecutor removeSelector: #unregister!MetacelloScriptExecutor removeSelector: #unlock!MetacelloScriptExecutor removeSelector: #singleRoot:!MetacelloScriptExecutor removeSelector: #singleRoot!MetacelloScriptExecutor removeSelector: #silently:!MetacelloScriptExecutor removeSelector: #roots!MetacelloScriptExecutor removeSelector: #repositoryOverrides:!MetacelloScriptExecutor removeSelector: #repositoryArg:!MetacelloScriptExecutor removeSelector: #repositoryArg!MetacelloScriptExecutor removeSelector: #register!MetacelloScriptExecutor removeSelector: #record:!MetacelloScriptExecutor removeSelector: #projectSpecSelectBlock!MetacelloScriptExecutor removeSelector: #projectSpecGenerator!MetacelloScriptExecutor removeSelector: #projectArg:!MetacelloScriptExecutor removeSelector: #projectArg!MetacelloScriptExecutor removeSelector: #options!MetacelloScriptExecutor removeSelector: #onWarning:!MetacelloScriptExecutor removeSelector: #onUpgrade:!MetacelloScriptExecutor removeSelector: #onLock:!MetacelloScriptExecutor removeSelector: #onDowngrade:!MetacelloScriptExecutor removeSelector: #onConflict:!MetacelloScriptExecutor removeSelector: #lock!MetacelloScriptExecutor removeSelector: #load:!MetacelloScriptExecutor removeSelector: #list!MetacelloScriptExecutor removeSelector: #ignoreImage:!MetacelloScriptExecutor removeSelector: #get!MetacelloScriptExecutor removeSelector: #fetch:!MetacelloScriptExecutor removeSelector: #executeString:do:!MetacelloScriptExecutor removeSelector: #executeCollection:do:!MetacelloScriptExecutor removeSelector: #executeBlock:do:!MetacelloScriptExecutor removeSelector: #execute:!MetacelloScriptExecutor removeSelector: #configurationArg:!MetacelloScriptExecutor removeSelector: #configurationArg!MetacelloScriptExecutor removeSelector: #classNameArg:!MetacelloScriptExecutor removeSelector: #classNameArg!MetacelloScriptExecutor removeSelector: #cacheRepository:!MetacelloScriptExecutor removeSelector: #baselineArg:!MetacelloScriptExecutor removeSelector: #baselineArg!MetacelloScriptExecutor removeSelector: #applyArgsToProjectSpec:!MetacelloScriptApiExecutor removeSelector: #projectSpecsFromRepositoryArg!MetacelloScriptApiExecutor removeSelector: #executeString:do:!MetacelloScriptApiExecutor removeSelector: #executeCollection:do:!MetacelloScriptApiExecutor removeSelector: #executeBlock:do:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptApiExecutor!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptExecutor!MetacelloScriptEngine removeSelector: #useCurrentVersion!MetacelloScriptEngine removeSelector: #unregister!MetacelloScriptEngine removeSelector: #unlock!MetacelloScriptEngine removeSelector: #silently!MetacelloScriptEngine removeSelector: #setDefaultsAndValidateProjectSpec!MetacelloScriptEngine removeSelector: #setDefaultsAndValidate:!MetacelloScriptEngine removeSelector: #root:!MetacelloScriptEngine removeSelector: #root!MetacelloScriptEngine removeSelector: #repositoryOverrides!MetacelloScriptEngine removeSelector: #repositories!MetacelloScriptEngine removeSelector: #register!MetacelloScriptEngine removeSelector: #record:!MetacelloScriptEngine removeSelector: #projectSpec:!MetacelloScriptEngine removeSelector: #projectSpec!MetacelloScriptEngine removeSelector: #projectName!MetacelloScriptEngine removeSelector: #options:!MetacelloScriptEngine removeSelector: #options!MetacelloScriptEngine removeSelector: #lookupProjectSpecFor:!MetacelloScriptEngine removeSelector: #lock!MetacelloScriptEngine removeSelector: #load:onProjectDownGrade:onProjectUpgrade:!MetacelloScriptEngine removeSelector: #load:!MetacelloScriptEngine removeSelector: #list!MetacelloScriptEngine removeSelector: #ignoreImage!MetacelloScriptEngine removeSelector: #handleWarning:!MetacelloScriptEngine removeSelector: #handleUpgrade:!MetacelloScriptEngine removeSelector: #handleProjectSpecLoaded:!MetacelloScriptEngine removeSelector: #handleNotificationsForAction:!MetacelloScriptEngine removeSelector: #handleLookupProjectSpecForLoad:!MetacelloScriptEngine removeSelector: #handleLookupProjectSpec:!MetacelloScriptEngine removeSelector: #handleLookupBaselineSpecForEnsureLoad:!MetacelloScriptEngine removeSelector: #handleLock:!MetacelloScriptEngine removeSelector: #handleEnsureProjectLoadedForDevelopment:!MetacelloScriptEngine removeSelector: #handleDowngrade:!MetacelloScriptEngine removeSelector: #handleConflict:!MetacelloScriptEngine removeSelector: #getConfigurationUnconditionalLoad:!MetacelloScriptEngine removeSelector: #getConfigurationProjectUnconditionalLoad:!MetacelloScriptEngine removeSelector: #getBaselineUnconditionalLoad:!MetacelloScriptEngine removeSelector: #getBaselineProjectUnconditionalLoad:!MetacelloScriptEngine removeSelector: #get!MetacelloScriptEngine removeSelector: #fetchRecord:required:!MetacelloScriptEngine removeSelector: #fetch:!MetacelloScriptEngine removeSelector: #defaultVersionString!MetacelloScriptEngine removeSelector: #defaultRepositoryDescription!MetacelloScriptEngine removeSelector: #cacheRepository!MetacelloScriptEngine class removeSelector: #defaultVersionString!MetacelloScriptEngine class removeSelector: #defaultRepositoryDescription:!MetacelloScriptEngine class removeSelector: #defaultRepositoryDescription!MetacelloScriptEngine class removeSelector: #configurationNameFrom:!MetacelloScriptEngine class removeSelector: #baselineNameFrom:!MetacelloScriptEngine class removeSelector: #baseNameOf:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptEngine!MetacelloProjectSpecGenerator removeSelector: #target:!MetacelloProjectSpecGenerator removeSelector: #target!MetacelloProjectSpecGenerator removeSelector: #projectSpecLookupBlock!MetacelloProjectSpecGenerator removeSelector: #projectSpecListBlock!MetacelloProjectSpecGenerator removeSelector: #projectSpecCreationBlock!MetacelloConfigurationSpecGenerator removeSelector: #projectSpecLookupBlock!MetacelloConfigurationSpecGenerator removeSelector: #projectSpecListBlock!MetacelloConfigurationSpecGenerator removeSelector: #projectSpecCreationBlock!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloConfigurationSpecGenerator!MetacelloBaselineSpecGenerator removeSelector: #projectSpecLookupBlock!MetacelloBaselineSpecGenerator removeSelector: #projectSpecListBlock!MetacelloBaselineSpecGenerator removeSelector: #projectSpecCreationBlock!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloBaselineSpecGenerator!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectSpecGenerator!MetacelloProjectSpecForLoad removeSelector: #useDetermineVersionForLoad:!MetacelloProjectSpecForLoad removeSelector: #useDetermineVersionForLoad!MetacelloProjectSpecForLoad removeSelector: #projectSpec:!MetacelloProjectSpecForLoad removeSelector: #projectSpec!MetacelloProjectSpecForLoad removeSelector: #performLoad!MetacelloProjectSpecForLoad removeSelector: #performCurrentVersionTestAgainst:operator:targetVersionStatus:using:!MetacelloProjectSpecForLoad removeSelector: #overrideProjectSpec:!MetacelloProjectSpecForLoad removeSelector: #overrideProjectSpec!MetacelloProjectSpecForLoad removeSelector: #hasOverride!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectSpecForLoad!MetacelloProjectRegistry removeSelector: #unregisterProjectRegistration:!MetacelloProjectRegistry removeSelector: #registrations!MetacelloProjectRegistry removeSelector: #registrationForExactClassNamed:ifAbsent:!MetacelloProjectRegistry removeSelector: #registrationForClassNamed:ifAbsent:!MetacelloProjectRegistry removeSelector: #registrationFor:ifPresent:ifAbsent:!MetacelloProjectRegistry removeSelector: #registerProjectRegistration:!MetacelloProjectRegistry removeSelector: #projectSpecs!MetacelloProjectRegistry removeSelector: #projectSpecForClassNamed:ifAbsent:!MetacelloProjectRegistry removeSelector: #primeRegistryProjectSpecRegistered:!MetacelloProjectRegistry removeSelector: #primeRegistryFromImage:baselineClasses:prioritizeConfiguration:!MetacelloProjectRegistry removeSelector: #primeRegistryFromImage:baselineClasses:!MetacelloProjectRegistry removeSelector: #primeRegistryFromImage:!MetacelloProjectRegistry removeSelector: #primeRegistryFromImage!MetacelloProjectRegistry removeSelector: #primeRegistryCurrentVersionFor:!MetacelloProjectRegistry removeSelector: #primeRegisterLoadedProjectSpec:!MetacelloProjectRegistry removeSelector: #postCopy!MetacelloProjectRegistry removeSelector: #isEmpty!MetacelloProjectRegistry removeSelector: #configurationRegistry!MetacelloProjectRegistry removeSelector: #configurationProjectSpecs!MetacelloProjectRegistry removeSelector: #baselineRegistry!MetacelloProjectRegistry removeSelector: #baselineProjectSpecs!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectRegistry!MetacelloProjectRegistrationVersionInfo removeSelector: #versionString:!MetacelloProjectRegistrationVersionInfo removeSelector: #versionString!MetacelloProjectRegistrationVersionInfo removeSelector: #setVersionString:!MetacelloProjectRegistrationVersionInfo removeSelector: #projectVersion:!MetacelloProjectRegistrationVersionInfo removeSelector: #projectVersion!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectRegistrationVersionInfo!MetacelloProjectRegistration removeSelector: #versionInfo:!MetacelloProjectRegistration removeSelector: #versionInfo!MetacelloProjectRegistration removeSelector: #version!MetacelloProjectRegistration removeSelector: #validate!MetacelloProjectRegistration removeSelector: #unregisterProject!MetacelloProjectRegistration removeSelector: #shouldBeMutable!MetacelloProjectRegistration removeSelector: #repositoryDescriptions!MetacelloProjectRegistration removeSelector: #registerProject!MetacelloProjectRegistration removeSelector: #projectVersion!MetacelloProjectRegistration removeSelector: #projectSpec!MetacelloProjectRegistration removeSelector: #projectName:!MetacelloProjectRegistration removeSelector: #projectName!MetacelloProjectRegistration removeSelector: #printOn:!MetacelloProjectRegistration removeSelector: #postCopy!MetacelloProjectRegistration removeSelector: #mutable!MetacelloProjectRegistration removeSelector: #merge:!MetacelloProjectRegistration removeSelector: #lookupConfigurationSpec!MetacelloProjectRegistration removeSelector: #lookupBaselineSpec!MetacelloProjectRegistration removeSelector: #locked:!MetacelloProjectRegistration removeSelector: #locked!MetacelloProjectRegistration removeSelector: #loadedInImage:!MetacelloProjectRegistration removeSelector: #loadedInImage!MetacelloProjectRegistration removeSelector: #isValid!MetacelloProjectRegistration removeSelector: #isMutable!MetacelloProjectRegistration removeSelector: #immutable!MetacelloProjectRegistration removeSelector: #hash!MetacelloProjectRegistration removeSelector: #hasLoadConflicts:!MetacelloProjectRegistration removeSelector: #currentlyLoadedClassesInProject!MetacelloProjectRegistration removeSelector: #currentVersionString!MetacelloProjectRegistration removeSelector: #currentBranchName!MetacelloProjectRegistration removeSelector: #copyOnWrite:!MetacelloProjectRegistration removeSelector: #configurationProjectSpecIfPresent:ifAbsent:!MetacelloProjectRegistration removeSelector: #configurationProjectSpecIfAbsent:!MetacelloProjectRegistration removeSelector: #configurationProjectSpec:!MetacelloProjectRegistration removeSelector: #configurationProjectSpec!MetacelloProjectRegistration removeSelector: #canUpgradeTo:!MetacelloProjectRegistration removeSelector: #canDowngradeTo:!MetacelloProjectRegistration removeSelector: #baselineProjectSpecIfPresent:ifAbsent:!MetacelloProjectRegistration removeSelector: #baselineProjectSpecIfAbsent:!MetacelloProjectRegistration removeSelector: #baselineProjectSpec:!MetacelloProjectRegistration removeSelector: #baselineProjectSpec!MetacelloProjectRegistration removeSelector: #baseName!MetacelloProjectRegistration removeSelector: #=!MetacelloProjectRegistration class removeSelector: #resetRegistry!MetacelloProjectRegistration class removeSelector: #registry:!MetacelloProjectRegistration class removeSelector: #registry!MetacelloProjectRegistration class removeSelector: #registrationForProjectSpec:ifAbsent:ifPresent:!MetacelloProjectRegistration class removeSelector: #registrationForClassNamed:ifAbsent:!MetacelloProjectRegistration class removeSelector: #registerProjectSpec:ifPresent:!MetacelloProjectRegistration class removeSelector: #projectSpecs!MetacelloProjectRegistration class removeSelector: #projectSpecForClassNamed:ifAbsent:!MetacelloProjectRegistration class removeSelector: #primeRegistryFromImage!MetacelloProjectRegistration class removeSelector: #fromMCConfigurationProjectSpec:!MetacelloProjectRegistration class removeSelector: #fromMCBaselineProjectSpec:!MetacelloProjectRegistration class removeSelector: #copyRegistryWhile:!MetacelloProjectRegistration class removeSelector: #copyRegistryRestoreOnErrorWhile:!MetacelloProjectRegistration class removeSelector: #configurationProjectSpecs!MetacelloProjectRegistration class removeSelector: #configurationClasses!MetacelloProjectRegistration class removeSelector: #classRemoved:!MetacelloProjectRegistration class removeSelector: #baselineProjectSpecs!MetacelloProjectRegistration class removeSelector: #baselineClasses!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectRegistration!MetacelloProject removeSelector: #versions!MetacelloProject removeSelector: #versionSpecClass!MetacelloProject removeSelector: #versionSpec!MetacelloProject removeSelector: #versionNumberClass:!MetacelloProject removeSelector: #versionNumberClass!MetacelloProject removeSelector: #version:ifAbsent:!MetacelloProject removeSelector: #version:!MetacelloProject removeSelector: #valueHolderSpecClass!MetacelloProject removeSelector: #valueHolderSpec!MetacelloProject removeSelector: #symbolicVersionSymbols!MetacelloProject removeSelector: #symbolicVersionMap:!MetacelloProject removeSelector: #symbolicVersionMap!MetacelloProject removeSelector: #stableVersion!MetacelloProject removeSelector: #sortedAndFilteredVersions!MetacelloProject removeSelector: #projectSpecClass!MetacelloProject removeSelector: #projectSpec!MetacelloProject removeSelector: #projectReferenceSpecClass!MetacelloProject removeSelector: #projectReferenceSpec!MetacelloProject removeSelector: #projectPlatformAttributes!MetacelloProject removeSelector: #projectForScriptEngine:unconditionalLoad:!MetacelloProject removeSelector: #projectForScriptEngine:!MetacelloProject removeSelector: #projectAttributes:!MetacelloProject removeSelector: #projectAttributes!MetacelloProject removeSelector: #project!MetacelloProject removeSelector: #printOn:!MetacelloProject removeSelector: #pragmaKeywords!MetacelloProject removeSelector: #platformAttributes!MetacelloProject removeSelector: #packagesSpecClass!MetacelloProject removeSelector: #packagesSpec!MetacelloProject removeSelector: #map:!MetacelloProject removeSelector: #map!MetacelloProject removeSelector: #lookupVersion:ifAbsent:!MetacelloProject removeSelector: #loaderClass:!MetacelloProject removeSelector: #loaderClass!MetacelloProject removeSelector: #loader:!MetacelloProject removeSelector: #loader!MetacelloProject removeSelector: #loadType:!MetacelloProject removeSelector: #loadType!MetacelloProject removeSelector: #load:!MetacelloProject removeSelector: #latestVersionMatching:includedBlessings:excludedBlessings:!MetacelloProject removeSelector: #latestVersionMatching:includedBlessings:!MetacelloProject removeSelector: #latestVersionMatching:excludedBlessings:!MetacelloProject removeSelector: #latestVersionMatching:!MetacelloProject removeSelector: #latestVersion:!MetacelloProject removeSelector: #latestVersion!MetacelloProject removeSelector: #lastVersion!MetacelloProject removeSelector: #label!MetacelloProject removeSelector: #hasVersion:!MetacelloProject removeSelector: #groupSpecClass!MetacelloProject removeSelector: #groupSpec!MetacelloProject removeSelector: #excludeFromLatestVersion!MetacelloProject removeSelector: #errorMap:!MetacelloProject removeSelector: #errorMap!MetacelloProject removeSelector: #development!MetacelloProject removeSelector: #defaultPlatformAttributes!MetacelloProject removeSelector: #defaultLoaderClass!MetacelloProject removeSelector: #defaultBlessing!MetacelloProject removeSelector: #currentVersionAgainst:!MetacelloProject removeSelector: #currentVersion!MetacelloProject removeSelector: #configurationOfProjectSpecClass!MetacelloProject removeSelector: #configurationOfProjectSpec!MetacelloProject removeSelector: #configuration:!MetacelloProject removeSelector: #configuration!MetacelloProject removeSelector: #bleedingEdge!MetacelloProject removeSelector: #baselineOfVersionSpecClass!MetacelloProject removeSelector: #baselineOfProjectSpecClass!MetacelloProject removeSelector: #baselineOfProjectSpec!MetacelloProject removeSelector: #attributes!MetacelloProject class removeSelector: #versionConstructorClass!MetacelloProject class removeSelector: #on:!MetacelloProject class removeSelector: #new!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProject!MetacelloPlatform removeSelector: #useStackCacheDuring:defaultDictionary:!MetacelloPlatform removeSelector: #transact:!MetacelloPlatform removeSelector: #timestamp!MetacelloPlatform removeSelector: #tempFileFor:suffix:!MetacelloPlatform removeSelector: #suspendSystemUpdateEventsDuring:!MetacelloPlatform removeSelector: #string:includesSubstring:!MetacelloPlatform removeSelector: #stackCacheFor:cacheClass:at:doing:!MetacelloPlatform removeSelector: #stackCacheFor:at:doing:!MetacelloPlatform removeSelector: #selectorForPragma:!MetacelloPlatform removeSelector: #registerPackageNamed:!MetacelloPlatform removeSelector: #reenableUndefinedSybolUpdates:!MetacelloPlatform removeSelector: #recursiveDelete:!MetacelloPlatform removeSelector: #readStreamOn:do:!MetacelloPlatform removeSelector: #processPID!MetacelloPlatform removeSelector: #primeStackCacheWith:doing:!MetacelloPlatform removeSelector: #primeStackCacheFor:doing:defaultDictionary:!MetacelloPlatform removeSelector: #parentDirectoryOf:!MetacelloPlatform removeSelector: #packageInfoFor:!MetacelloPlatform removeSelector: #newVersionForWorkingCopy:!MetacelloPlatform removeSelector: #globalNamed:ifAbsent:!MetacelloPlatform removeSelector: #globalNamed:!MetacelloPlatform removeSelector: #gitCommitShaFor:!MetacelloPlatform removeSelector: #gitBranchNameFor:!MetacelloPlatform removeSelector: #fileHandleOn:!MetacelloPlatform removeSelector: #fileDirectoryClass!MetacelloPlatform removeSelector: #extractTypeFromDescription:!MetacelloPlatform removeSelector: #extractRepositoryFrom:to:!MetacelloPlatform removeSelector: #ensureDirectoryExists:!MetacelloPlatform removeSelector: #downloadZipArchive:to:!MetacelloPlatform removeSelector: #downloadJSON:username:pass:!MetacelloPlatform removeSelector: #downloadJSON:eTagsCache:eTagsKey:username:pass:!MetacelloPlatform removeSelector: #downloadErrorFileNameFor:!MetacelloPlatform removeSelector: #do:displaying:!MetacelloPlatform removeSelector: #disableUndefinedSybolUpdates!MetacelloPlatform removeSelector: #directoryFromPath:relativeTo:!MetacelloPlatform removeSelector: #deleteFileNamed:!MetacelloPlatform removeSelector: #defaultTimeout!MetacelloPlatform removeSelector: #defaultRepositoryDescription!MetacelloPlatform removeSelector: #defaultPlatformAttributes!MetacelloPlatform removeSelector: #defaultPackageCache!MetacelloPlatform removeSelector: #defaultDirectory!MetacelloPlatform removeSelector: #createRepository:!MetacelloPlatform removeSelector: #copyClass:as:inCategory:!MetacelloPlatform removeSelector: #confirm:!MetacelloPlatform removeSelector: #collection:do:displaying:!MetacelloPlatform removeSelector: #clearPackageCache!MetacelloPlatform removeSelector: #clearCurrentVersionCache!MetacelloPlatform removeSelector: #bypassProgressBars:!MetacelloPlatform removeSelector: #bypassProgressBars!MetacelloPlatform removeSelector: #bypassGoferLoadUpdateCategories:!MetacelloPlatform removeSelector: #bypassGoferLoadUpdateCategories!MetacelloPlatform removeSelector: #authorName:!MetacelloPlatform removeSelector: #authorName!MetacelloPlatform class removeSelector: #unselect!MetacelloPlatform class removeSelector: #select!MetacelloPlatform class removeSelector: #initialize!MetacelloPlatform class removeSelector: #current!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPlatform!MetacelloVersionMethodSpec removeSelector: #versionString:!MetacelloVersionMethodSpec removeSelector: #methodSource!MetacelloVersionMethodSpec removeSelector: #methodSelectorAndPragma:imports:versionString:on:!MetacelloVersionMethodSpec removeSelector: #methodSection:pre:last:post:indent:!MetacelloVersionMethodSpec removeSelector: #imports:!MetacelloVersionMethodSpec removeSelector: #imports!MetacelloVersionMethodSpec removeSelector: #findMethodSection:sectionIndex:!MetacelloVersionMethodSpec removeSelector: #addMethodSection:versionSpec:!MetacelloBaselineOfMethodSpec removeSelector: #versionString!MetacelloBaselineOfMethodSpec removeSelector: #methodSource!MetacelloBaselineOfMethodSpec removeSelector: #methodSelectorAndPragma:imports:on:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloBaselineOfMethodSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionMethodSpec!MetacelloSymbolicVersionMethodSpec removeSelector: #versionString:!MetacelloSymbolicVersionMethodSpec removeSelector: #symbolicMethodSelectorAndPragma:symbolicVersionSymbol:on:!MetacelloSymbolicVersionMethodSpec removeSelector: #methodSource!MetacelloSymbolicVersionMethodSpec removeSelector: #addMethodSection:versionString:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSymbolicVersionMethodSpec!MetacelloMethodSpec removeSelector: #versionString:!MetacelloMethodSpec removeSelector: #versionString!MetacelloMethodSpec removeSelector: #selector:!MetacelloMethodSpec removeSelector: #selector!MetacelloMethodSpec removeSelector: #project:!MetacelloMethodSpec removeSelector: #project!MetacelloMethodSpec removeSelector: #methodSource!MetacelloMethodSpec removeSelector: #methodSections:!MetacelloMethodSpec removeSelector: #methodSections!MetacelloMethodSpec removeSelector: #compileMethod!MetacelloMethodSpec removeSelector: #category:!MetacelloMethodSpec removeSelector: #category!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMethodSpec!MetacelloVersionMethodSection removeSelector: #versionSpec:!MetacelloVersionMethodSection removeSelector: #versionSpec!MetacelloVersionMethodSection removeSelector: #topParent!MetacelloVersionMethodSection removeSelector: #printOn:!MetacelloVersionMethodSection removeSelector: #parent:!MetacelloVersionMethodSection removeSelector: #parent!MetacelloVersionMethodSection removeSelector: #methodSections!MetacelloVersionMethodSection removeSelector: #block:!MetacelloVersionMethodSection removeSelector: #block!MetacelloVersionMethodSection removeSelector: #attributePath!MetacelloVersionMethodSection removeSelector: #attributeOrPath!MetacelloVersionMethodSection removeSelector: #addMethodSection:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionMethodSection!MetacelloSymbolicVersionSpec removeSelector: #versionString:!MetacelloSymbolicVersionSpec removeSelector: #versionString!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSymbolicVersionSpec!MetacelloMethodSection removeSelector: #includesAttributeFrom:!MetacelloMethodSection removeSelector: #attributes:!MetacelloMethodSection removeSelector: #attributes!MetacelloMethodSection removeSelector: #attributePrintString!MetacelloMethodSection removeSelector: #attribute:!MetacelloMethodSection removeSelector: #attribute!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMethodSection!MetacelloVersionValidator removeSelector: #warningReasonCodes!MetacelloVersionValidator removeSelector: #visited:!MetacelloVersionValidator removeSelector: #visited!MetacelloVersionValidator removeSelector: #validationReport:!MetacelloVersionValidator removeSelector: #validationReport!MetacelloVersionValidator removeSelector: #validateVersionSpecForSymbolicVersion:symbolicVersion:!MetacelloVersionValidator removeSelector: #validateVersionSpec:!MetacelloVersionValidator removeSelector: #validateProjectVersion:!MetacelloVersionValidator removeSelector: #validateProjectCreationFrom:onError:!MetacelloVersionValidator removeSelector: #validateProject:version:!MetacelloVersionValidator removeSelector: #validateProject:!MetacelloVersionValidator removeSelector: #validateProject!MetacelloVersionValidator removeSelector: #validatePragmas!MetacelloVersionValidator removeSelector: #validateDoIts:versionString:errorMessage:!MetacelloVersionValidator removeSelector: #validateBaselineVersionSpec:!MetacelloVersionValidator removeSelector: #validateBaselineProject:!MetacelloVersionValidator removeSelector: #validateBaselineProject!MetacelloVersionValidator removeSelector: #validateBaselineOf!MetacelloVersionValidator removeSelector: #validate!MetacelloVersionValidator removeSelector: #recurse:!MetacelloVersionValidator removeSelector: #recurse!MetacelloVersionValidator removeSelector: #recordValidationWarning:versionString:callSite:reasonCode:!MetacelloVersionValidator removeSelector: #recordValidationWarning:callSite:reasonCode:!MetacelloVersionValidator removeSelector: #recordValidationError:versionString:callSite:reasonCode:!MetacelloVersionValidator removeSelector: #recordValidationError:callSite:reasonCode:!MetacelloVersionValidator removeSelector: #recordValidationCriticalWarning:versionString:callSite:reasonCode:!MetacelloVersionValidator removeSelector: #recordValidationCriticalWarning:callSite:reasonCode:!MetacelloVersionValidator removeSelector: #extractExcludedValidations!MetacelloVersionValidator removeSelector: #exludededValidations!MetacelloVersionValidator removeSelector: #errorReasonCodes!MetacelloVersionValidator removeSelector: #debug:!MetacelloVersionValidator removeSelector: #debug!MetacelloVersionValidator removeSelector: #criticalWarningReasonCodes!MetacelloVersionValidator removeSelector: #configurationClass:!MetacelloVersionValidator removeSelector: #configurationClass!MetacelloVersionValidator class removeSelector: #validateProject:version:debug:recurse:visited:!MetacelloVersionValidator class removeSelector: #validateProject:version:debug:recurse:!MetacelloVersionValidator class removeSelector: #validateProject:version:debug:!MetacelloVersionValidator class removeSelector: #validateProject:version:!MetacelloVersionValidator class removeSelector: #validateProject:recurse:!MetacelloVersionValidator class removeSelector: #validateProject:debug:recurse:!MetacelloVersionValidator class removeSelector: #validateProject:!MetacelloVersionValidator class removeSelector: #validateConfiguration:recurse:!MetacelloVersionValidator class removeSelector: #validateConfiguration:debug:recurse:!MetacelloVersionValidator class removeSelector: #validateConfiguration:!MetacelloVersionValidator class removeSelector: #validateBaseline:recurse:!MetacelloVersionValidator class removeSelector: #validateBaseline:debug:recurse:!MetacelloVersionValidator class removeSelector: #validateBaseline:!MetacelloVersionValidator class removeSelector: #reasonCodeDescriptions!MetacelloVersionValidator class removeSelector: #populateReasonCodeDescriptions!MetacelloVersionValidator class removeSelector: #descriptionForReasonCode:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionValidator!MetacelloVersionConstructor removeSelector: #verifyVersionImportPragmas:definedIn:!MetacelloVersionConstructor removeSelector: #validateVersionString:againstSpec:!MetacelloVersionConstructor removeSelector: #updatePackageMethodIn:sourceVersion:!MetacelloVersionConstructor removeSelector: #symbolicVersionResolverBlock!MetacelloVersionConstructor removeSelector: #specResolverBlock!MetacelloVersionConstructor removeSelector: #spawnPackageMethodIn:category:named:sourceVersion:targetVersion:blessing:!MetacelloVersionConstructor removeSelector: #prepareForMethodUpdate:sourceVersion:forceUpdate:generating:!MetacelloVersionConstructor removeSelector: #on:project:!MetacelloVersionConstructor removeSelector: #on:!MetacelloVersionConstructor removeSelector: #errorMap!MetacelloVersionConstructor removeSelector: #defaultSymbolicVersionResolverBlock:!MetacelloVersionConstructor removeSelector: #defaultSymbolicVersionResolverBlock!MetacelloVersionConstructor removeSelector: #commonDefaultSymbolicVersionResolverBlock!MetacelloVersionConstructor removeSelector: #collectDefaultSymbolicVersionsFromVersionPragmasFrom:into:using:!MetacelloVersionConstructor removeSelector: #collectAllVersionsFromVersionPragmasInto:using:!MetacelloVersionConstructor removeSelector: #collectAllVersionsFromVersionImportPragmasInto:using:satisfiedPragmas:!MetacelloVersionConstructor removeSelector: #collectAllSymbolicVersionsFromVersionPragmasInto:using:!MetacelloVersionConstructor removeSelector: #calculate:project:!MetacelloVersionConstructor class removeSelector: #updatePackageMethodIn:sourceVersion:!MetacelloVersionConstructor class removeSelector: #spawnPackageMethodIn:named:sourceVersion:targetVersion:blessing:!MetacelloVersionConstructor class removeSelector: #spawnPackageMethodIn:named:sourceVersion:targetVersion:!MetacelloVersionConstructor class removeSelector: #spawnPackageMethodIn:category:named:sourceVersion:targetVersion:blessing:!MetacelloVersionConstructor class removeSelector: #on:project:!MetacelloVersionConstructor class removeSelector: #on:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionConstructor!MetacelloToolBoxConstructor removeSelector: #setFor:version:!MetacelloToolBoxConstructor removeSelector: #setFor:do:!MetacelloToolBoxConstructor removeSelector: #reset!MetacelloToolBoxConstructor removeSelector: #methodSectionsInEvaluationOrder:do:!MetacelloToolBoxConstructor removeSelector: #methodSectionsDo:!MetacelloToolBoxConstructor removeSelector: #methodSections!MetacelloToolBoxConstructor removeSelector: #methodSectionAttributes!MetacelloToolBoxConstructor removeSelector: #methodSection:inEvaluationOrder:do:!MetacelloToolBoxConstructor removeSelector: #methodSection:do:!MetacelloToolBoxConstructor removeSelector: #extractSymbolicVersionSpecsFor:!MetacelloToolBoxConstructor removeSelector: #extractMethodSectionsFor:!MetacelloToolBoxConstructor removeSelector: #evaluateMethodSection:version:!MetacelloToolBoxBaselineConstructor removeSelector: #extractMethodSectionsForClass:!MetacelloToolBoxBaselineConstructor removeSelector: #extractMethodSectionsFor:!MetacelloToolBoxBaselineConstructor removeSelector: #extractBaselinePragmaFor:!MetacelloToolBoxBaselineConstructor removeSelector: #evaluateBaselineMethodSection:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloToolBoxBaselineConstructor!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloToolBoxConstructor!MetacelloBaselineConstructor removeSelector: #on:project:!MetacelloBaselineConstructor removeSelector: #on:!MetacelloBaselineConstructor removeSelector: #extractBaselinePragmaFor:!MetacelloBaselineConstructor removeSelector: #calculate:project:!MetacelloBaselineConstructor class removeSelector: #on:project:!MetacelloBaselineConstructor class removeSelector: #on:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloBaselineConstructor!MetacelloAbstractVersionConstructor removeSelector: #with:during:!MetacelloAbstractVersionConstructor removeSelector: #versionStringForVersion:!MetacelloAbstractVersionConstructor removeSelector: #versionStringForProject:!MetacelloAbstractVersionConstructor removeSelector: #versionString:!MetacelloAbstractVersionConstructor removeSelector: #versionForVersion:!MetacelloAbstractVersionConstructor removeSelector: #versionForProject:!MetacelloAbstractVersionConstructor removeSelector: #version:!MetacelloAbstractVersionConstructor removeSelector: #valueForValueHolder:!MetacelloAbstractVersionConstructor removeSelector: #value:!MetacelloAbstractVersionConstructor removeSelector: #validateDoItSelector:!MetacelloAbstractVersionConstructor removeSelector: #timestampForVersion:!MetacelloAbstractVersionConstructor removeSelector: #timestamp:!MetacelloAbstractVersionConstructor removeSelector: #symbolicVersion:!MetacelloAbstractVersionConstructor removeSelector: #symbolicVersion!MetacelloAbstractVersionConstructor removeSelector: #supplyingAnswersForPackage:!MetacelloAbstractVersionConstructor removeSelector: #supplyingAnswers:!MetacelloAbstractVersionConstructor removeSelector: #setTimestampWithString:!MetacelloAbstractVersionConstructor removeSelector: #setTimestampWithBlock:!MetacelloAbstractVersionConstructor removeSelector: #setProject:withString:!MetacelloAbstractVersionConstructor removeSelector: #setProject:withBlock:!MetacelloAbstractVersionConstructor removeSelector: #setProject:!MetacelloAbstractVersionConstructor removeSelector: #setPackage:withString:!MetacelloAbstractVersionConstructor removeSelector: #setPackage:withBlock:!MetacelloAbstractVersionConstructor removeSelector: #setFor:version:!MetacelloAbstractVersionConstructor removeSelector: #setFor:do:!MetacelloAbstractVersionConstructor removeSelector: #setDescriptionWithString:!MetacelloAbstractVersionConstructor removeSelector: #setDescriptionWithBlock:!MetacelloAbstractVersionConstructor removeSelector: #setConfiguration:withBlock:!MetacelloAbstractVersionConstructor removeSelector: #setBlessingWithString:!MetacelloAbstractVersionConstructor removeSelector: #setBlessingWithBlock:!MetacelloAbstractVersionConstructor removeSelector: #setBaseline:withBlock:!MetacelloAbstractVersionConstructor removeSelector: #setBaseline:!MetacelloAbstractVersionConstructor removeSelector: #setAuthorWithString:!MetacelloAbstractVersionConstructor removeSelector: #setAuthorWithBlock:!MetacelloAbstractVersionConstructor removeSelector: #root:!MetacelloAbstractVersionConstructor removeSelector: #root!MetacelloAbstractVersionConstructor removeSelector: #reset!MetacelloAbstractVersionConstructor removeSelector: #requiresForPackage:!MetacelloAbstractVersionConstructor removeSelector: #requires:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForVersion:username:password:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForVersion:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForSpec:username:password:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForSpec:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForRepositories:username:password:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForRepositories:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForProject:username:password:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForProject:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForPackage:username:password:!MetacelloAbstractVersionConstructor removeSelector: #repositoryForPackage:!MetacelloAbstractVersionConstructor removeSelector: #repository:username:password:!MetacelloAbstractVersionConstructor removeSelector: #repository:!MetacelloAbstractVersionConstructor removeSelector: #repositoriesForVersion:!MetacelloAbstractVersionConstructor removeSelector: #repositoriesForSpec:!MetacelloAbstractVersionConstructor removeSelector: #repositoriesForProject:!MetacelloAbstractVersionConstructor removeSelector: #repositoriesForPackage:!MetacelloAbstractVersionConstructor removeSelector: #repositories:!MetacelloAbstractVersionConstructor removeSelector: #removeProjectForVersion:!MetacelloAbstractVersionConstructor removeSelector: #removeProject:!MetacelloAbstractVersionConstructor removeSelector: #removePackageForVersion:!MetacelloAbstractVersionConstructor removeSelector: #removePackage:!MetacelloAbstractVersionConstructor removeSelector: #removeGroupForVersion:!MetacelloAbstractVersionConstructor removeSelector: #removeGroup:!MetacelloAbstractVersionConstructor removeSelector: #projectPackageForProject:!MetacelloAbstractVersionConstructor removeSelector: #projectPackage:!MetacelloAbstractVersionConstructor removeSelector: #projectForVersion:with:!MetacelloAbstractVersionConstructor removeSelector: #projectForVersion:overrides:!MetacelloAbstractVersionConstructor removeSelector: #projectForVersion:copyFrom:with:!MetacelloAbstractVersionConstructor removeSelector: #projectForVersion:!MetacelloAbstractVersionConstructor removeSelector: #project:with:!MetacelloAbstractVersionConstructor removeSelector: #project:overrides:!MetacelloAbstractVersionConstructor removeSelector: #project:copyFrom:with:!MetacelloAbstractVersionConstructor removeSelector: #project:!MetacelloAbstractVersionConstructor removeSelector: #project!MetacelloAbstractVersionConstructor removeSelector: #preLoadDoItForVersion:!MetacelloAbstractVersionConstructor removeSelector: #preLoadDoItForSpec:!MetacelloAbstractVersionConstructor removeSelector: #preLoadDoItForProject:!MetacelloAbstractVersionConstructor removeSelector: #preLoadDoItForPackage:!MetacelloAbstractVersionConstructor removeSelector: #preLoadDoIt:!MetacelloAbstractVersionConstructor removeSelector: #postLoadDoItForVersion:!MetacelloAbstractVersionConstructor removeSelector: #postLoadDoItForSpec:!MetacelloAbstractVersionConstructor removeSelector: #postLoadDoItForProject:!MetacelloAbstractVersionConstructor removeSelector: #postLoadDoItForPackage:!MetacelloAbstractVersionConstructor removeSelector: #postLoadDoIt:!MetacelloAbstractVersionConstructor removeSelector: #packageForVersion:with:!MetacelloAbstractVersionConstructor removeSelector: #packageForVersion:overrides:!MetacelloAbstractVersionConstructor removeSelector: #packageForVersion:!MetacelloAbstractVersionConstructor removeSelector: #package:with:!MetacelloAbstractVersionConstructor removeSelector: #package:overrides:!MetacelloAbstractVersionConstructor removeSelector: #package:!MetacelloAbstractVersionConstructor removeSelector: #operatorForProject:!MetacelloAbstractVersionConstructor removeSelector: #operator:!MetacelloAbstractVersionConstructor removeSelector: #nameForProject:!MetacelloAbstractVersionConstructor removeSelector: #name:!MetacelloAbstractVersionConstructor removeSelector: #loadsForProject:!MetacelloAbstractVersionConstructor removeSelector: #loads:!MetacelloAbstractVersionConstructor removeSelector: #includesForPackage:!MetacelloAbstractVersionConstructor removeSelector: #includes:!MetacelloAbstractVersionConstructor removeSelector: #importForVersion:provides:!MetacelloAbstractVersionConstructor removeSelector: #importForVersion:!MetacelloAbstractVersionConstructor removeSelector: #import:provides:!MetacelloAbstractVersionConstructor removeSelector: #import:!MetacelloAbstractVersionConstructor removeSelector: #groupForVersion:with:!MetacelloAbstractVersionConstructor removeSelector: #groupForVersion:overrides:!MetacelloAbstractVersionConstructor removeSelector: #group:with:!MetacelloAbstractVersionConstructor removeSelector: #group:overrides:!MetacelloAbstractVersionConstructor removeSelector: #for:version:!MetacelloAbstractVersionConstructor removeSelector: #for:do:!MetacelloAbstractVersionConstructor removeSelector: #fileForProject:!MetacelloAbstractVersionConstructor removeSelector: #fileForPackage:!MetacelloAbstractVersionConstructor removeSelector: #file:!MetacelloAbstractVersionConstructor removeSelector: #evaluatePragma:!MetacelloAbstractVersionConstructor removeSelector: #descriptionForVersion:!MetacelloAbstractVersionConstructor removeSelector: #description:!MetacelloAbstractVersionConstructor removeSelector: #configurationForVersion:with:!MetacelloAbstractVersionConstructor removeSelector: #configurationClass!MetacelloAbstractVersionConstructor removeSelector: #configuration:with:!MetacelloAbstractVersionConstructor removeSelector: #configuration:!MetacelloAbstractVersionConstructor removeSelector: #configuration!MetacelloAbstractVersionConstructor removeSelector: #classNameForProject:!MetacelloAbstractVersionConstructor removeSelector: #className:!MetacelloAbstractVersionConstructor removeSelector: #blessingForVersion:!MetacelloAbstractVersionConstructor removeSelector: #blessing:!MetacelloAbstractVersionConstructor removeSelector: #baselineForVersion:with:!MetacelloAbstractVersionConstructor removeSelector: #baselineForVersion:!MetacelloAbstractVersionConstructor removeSelector: #baseline:with:!MetacelloAbstractVersionConstructor removeSelector: #baseline:!MetacelloAbstractVersionConstructor removeSelector: #authorForVersion:!MetacelloAbstractVersionConstructor removeSelector: #author:!MetacelloAbstractVersionConstructor removeSelector: #attributeOrder!MetacelloAbstractVersionConstructor removeSelector: #attributeMap!MetacelloAbstractVersionConstructor removeSelector: #addAttribute:!MetacelloAbstractVersionConstructor class removeSelector: #symbolicMethodSelectorAndPragma:symbolicVersionSymbol:on:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAbstractVersionConstructor!MetacelloAbstractConstructor removeSelector: #extractVersionPragmas!MetacelloAbstractConstructor removeSelector: #extractVersionImportPragmas!MetacelloAbstractConstructor removeSelector: #extractSymbolicVersionPragmas!MetacelloAbstractConstructor removeSelector: #extractPragmas:into:!MetacelloAbstractConstructor removeSelector: #extractPragmas:for:into:!MetacelloAbstractConstructor removeSelector: #extractDefaultSymbolicVersionPragmas!MetacelloAbstractConstructor removeSelector: #extractCommonDefaultSymbolicVersionPragmas!MetacelloAbstractConstructor removeSelector: #extractAllVersionPragmas!MetacelloAbstractConstructor removeSelector: #configurationClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAbstractConstructor!Metacello removeSelector: #wiresong:!Metacello removeSelector: #version:!Metacello removeSelector: #unregister!Metacello removeSelector: #unlock!Metacello removeSelector: #swasource:!Metacello removeSelector: #swa:!Metacello removeSelector: #statements:!Metacello removeSelector: #statements!Metacello removeSelector: #ss3:!Metacello removeSelector: #squeaksource:!Metacello removeSelector: #squeaksource3:!Metacello removeSelector: #squeakfoundation:!Metacello removeSelector: #smalltalkhubUser:project:!Metacello removeSelector: #silently!Metacello removeSelector: #scriptExecutor!Metacello removeSelector: #saltypickle:!Metacello removeSelector: #repositoryOverrides:!Metacello removeSelector: #repository:!Metacello removeSelector: #renggli:!Metacello removeSelector: #register!Metacello removeSelector: #record:!Metacello removeSelector: #record!Metacello removeSelector: #project:!Metacello removeSelector: #onWarningLog!Metacello removeSelector: #onWarning:!Metacello removeSelector: #onUpgradeUseLoaded:!Metacello removeSelector: #onUpgradeUseLoaded!Metacello removeSelector: #onUpgrade:!Metacello removeSelector: #onLockBreak:!Metacello removeSelector: #onLockBreak!Metacello removeSelector: #onLock:!Metacello removeSelector: #onDowngradeUseIncoming:!Metacello removeSelector: #onDowngradeUseIncoming!Metacello removeSelector: #onDowngrade:!Metacello removeSelector: #onConflictUseLoaded!Metacello removeSelector: #onConflictUseIncoming:useLoaded:!Metacello removeSelector: #onConflictUseIncoming!Metacello removeSelector: #onConflict:!Metacello removeSelector: #locked!Metacello removeSelector: #lock!Metacello removeSelector: #load:!Metacello removeSelector: #load!Metacello removeSelector: #list!Metacello removeSelector: #impara:!Metacello removeSelector: #ignoreImage!Metacello removeSelector: #githubUser:project:commitish:path:!Metacello removeSelector: #get!Metacello removeSelector: #gemsource:!Metacello removeSelector: #filetreeDirectory:!Metacello removeSelector: #fetch:!Metacello removeSelector: #fetch!Metacello removeSelector: #executorSpec:!Metacello removeSelector: #executorSpec!Metacello removeSelector: #execute:args:!Metacello removeSelector: #croquet:!Metacello removeSelector: #configuration:!Metacello removeSelector: #className:!Metacello removeSelector: #cacheRepository:!Metacello removeSelector: #blueplane:!Metacello removeSelector: #bitbucketUser:project:commitish:path:!Metacello removeSelector: #baseline:!Metacello removeSelector: #addStatement:args:!Metacello class removeSelector: #scriptExecutorClass:!Metacello class removeSelector: #scriptExecutorClass!Metacello class removeSelector: #registry!Metacello class removeSelector: #registrations!Metacello class removeSelector: #image!Metacello class removeSelector: #classic!Smalltalk globals removeClassNamed: #AnObsoleteMetacello!ConfigurationOf removeSelector: #versionNumberClass!ConfigurationOf removeSelector: #versionDoesNotExistError:!ConfigurationOf removeSelector: #projectClass!ConfigurationOf removeSelector: #project:!ConfigurationOf removeSelector: #project!ConfigurationOf removeSelector: #defaultBleedingEdgeVersion!ConfigurationOf removeSelector: #customProjectAttributes!ConfigurationOf removeSelector: #bleedingEdge!ConfigurationOf class removeSelector: #validate!ConfigurationOf class removeSelector: #unloadMetacello!ConfigurationOf class removeSelector: #retry:retryCount:!ConfigurationOf class removeSelector: #retry:!ConfigurationOf class removeSelector: #project!ConfigurationOf class removeSelector: #ensureMetacello:!ConfigurationOf class removeSelector: #ensureMetacello!ConfigurationOf class removeSelector: #ensureGoferVersion:repositoryUrl:!ConfigurationOf class removeSelector: #bootstrapPackage:from:!ConfigurationOf class removeSelector: #bootstrapMetacelloFrom:!BaselineOf removeSelector: #versionNumberClass!BaselineOf removeSelector: #projectClass!BaselineOf class removeSelector: #validate!Smalltalk globals removeClassNamed: #AnObsoleteBaselineOf!Smalltalk globals removeClassNamed: #AnObsoleteConfigurationOf!MetacelloToolBoxTutorial removeSelector: #updateVersion10!MetacelloToolBoxTutorial removeSelector: #tutorial!MetacelloToolBoxTutorial removeSelector: #releaseVersion11PharoOnly!MetacelloToolBoxTutorial removeSelector: #releaseVersion10!MetacelloToolBoxTutorial removeSelector: #open11ForDevelopment!MetacelloToolBoxTutorial removeSelector: #open10ForDevelopment!MetacelloToolBoxTutorial removeSelector: #introductionText!MetacelloToolBoxTutorial removeSelector: #intro!MetacelloToolBoxTutorial removeSelector: #create11Baseline!MetacelloToolBoxTutorial removeSelector: #create10Baseline!MetacelloToolBoxTutorial class removeSelector: #title!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloToolBoxTutorial!MetacelloDevelopmentProcess removeSelector: #validateAndSaveConfiguration!MetacelloDevelopmentProcess removeSelector: #tutorial!MetacelloDevelopmentProcess removeSelector: #releaseVersion!MetacelloDevelopmentProcess removeSelector: #introductionText!MetacelloDevelopmentProcess removeSelector: #integrateCodeContributions!MetacelloDevelopmentProcess removeSelector: #createNewDevelopmentVersion!MetacelloDevelopmentProcess removeSelector: #createDevelopmentVersion!MetacelloDevelopmentProcess removeSelector: #createConfigurationAndBaseline!MetacelloDevelopmentProcess removeSelector: #compareVersions!MetacelloDevelopmentProcess removeSelector: #checkpointSave!MetacelloDevelopmentProcess class removeSelector: #title!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloDevelopmentProcess!MetacelloConfigurationTutorialPart2 removeSelector: #tutorial!MetacelloConfigurationTutorialPart2 removeSelector: #lesson14!MetacelloConfigurationTutorialPart2 removeSelector: #lesson13!MetacelloConfigurationTutorialPart2 removeSelector: #lesson12!MetacelloConfigurationTutorialPart2 removeSelector: #lesson11!MetacelloConfigurationTutorialPart2 removeSelector: #lesson10!MetacelloConfigurationTutorialPart2 removeSelector: #lesson07!MetacelloConfigurationTutorialPart2 removeSelector: #introductionText!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloConfigurationTutorialPart2!MetacelloConfigurationTutorialPart1 removeSelector: #tutorial!MetacelloConfigurationTutorialPart1 removeSelector: #lesson13!MetacelloConfigurationTutorialPart1 removeSelector: #lesson12DoIts!MetacelloConfigurationTutorialPart1 removeSelector: #lesson11Timestamp!MetacelloConfigurationTutorialPart1 removeSelector: #lesson11Descripton!MetacelloConfigurationTutorialPart1 removeSelector: #lesson11Blessing!MetacelloConfigurationTutorialPart1 removeSelector: #lesson11Author!MetacelloConfigurationTutorialPart1 removeSelector: #lesson11!MetacelloConfigurationTutorialPart1 removeSelector: #lesson10!MetacelloConfigurationTutorialPart1 removeSelector: #lesson08!MetacelloConfigurationTutorialPart1 removeSelector: #lesson07!MetacelloConfigurationTutorialPart1 removeSelector: #lesson06!MetacelloConfigurationTutorialPart1 removeSelector: #lesson05!MetacelloConfigurationTutorialPart1 removeSelector: #lesson04!MetacelloConfigurationTutorialPart1 removeSelector: #lesson03!MetacelloConfigurationTutorialPart1 removeSelector: #lesson02!MetacelloConfigurationTutorialPart1 removeSelector: #lesson01!MetacelloConfigurationTutorialPart1 removeSelector: #introductionText!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloConfigurationTutorialPart1!MetacelloTutorialConfig removeSelector: #version13:!MetacelloTutorialConfig removeSelector: #version12:!MetacelloTutorialConfig removeSelector: #version11:!MetacelloTutorialConfig removeSelector: #version10:!MetacelloTutorialConfig removeSelector: #version08:!MetacelloTutorialConfig removeSelector: #version07:!MetacelloTutorialConfig removeSelector: #version06:!MetacelloTutorialConfig removeSelector: #version05:!MetacelloTutorialConfig removeSelector: #version04:!MetacelloTutorialConfig removeSelector: #version03:!MetacelloTutorialConfig removeSelector: #version02:!MetacelloTutorialConfig removeSelector: #version01:!MetacelloTutorialConfig removeSelector: #project!MetacelloTutorialConfig removeSelector: #preloadForCore!MetacelloTutorialConfig removeSelector: #postloadForCore:package:!MetacelloTutorialConfig removeSelector: #lesson14!MetacelloTutorialConfig removeSelector: #lesson13!MetacelloTutorialConfig removeSelector: #lesson12DoIts!MetacelloTutorialConfig removeSelector: #lesson11Timestamp!MetacelloTutorialConfig removeSelector: #lesson11Descripton!MetacelloTutorialConfig removeSelector: #lesson11Blessing!MetacelloTutorialConfig removeSelector: #lesson11Author!MetacelloTutorialConfig removeSelector: #lesson11!MetacelloTutorialConfig removeSelector: #lesson10!MetacelloTutorialConfig removeSelector: #lesson08!MetacelloTutorialConfig removeSelector: #lesson07!MetacelloTutorialConfig removeSelector: #lesson06!MetacelloTutorialConfig removeSelector: #lesson05!MetacelloTutorialConfig removeSelector: #lesson04!MetacelloTutorialConfig removeSelector: #lesson03!MetacelloTutorialConfig removeSelector: #lesson02!MetacelloTutorialConfig removeSelector: #lesson01!MetacelloTutorialConfig removeSelector: #baseline13:!MetacelloTutorialConfig removeSelector: #baseline10:!MetacelloTutorialConfig removeSelector: #baseline07:!MetacelloTutorialConfig class removeSelector: #project!MetacelloTutorialConfig class removeSelector: #isMetacelloConfig!MetacelloTutorialConfig class removeSelector: #ensureMetacello!MetacelloTutorialConfig class removeSelector: #bootstrapPackage:from:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloTutorialConfig!MetacelloProjectRefTutorialConfig removeSelector: #version14:!MetacelloProjectRefTutorialConfig removeSelector: #version13:!MetacelloProjectRefTutorialConfig removeSelector: #version12:!MetacelloProjectRefTutorialConfig removeSelector: #version11:!MetacelloProjectRefTutorialConfig removeSelector: #version10:!MetacelloProjectRefTutorialConfig removeSelector: #version07:!MetacelloProjectRefTutorialConfig removeSelector: #project!MetacelloProjectRefTutorialConfig removeSelector: #lesson14!MetacelloProjectRefTutorialConfig removeSelector: #lesson13!MetacelloProjectRefTutorialConfig removeSelector: #lesson12!MetacelloProjectRefTutorialConfig removeSelector: #lesson11!MetacelloProjectRefTutorialConfig removeSelector: #lesson10!MetacelloProjectRefTutorialConfig removeSelector: #lesson07!MetacelloProjectRefTutorialConfig removeSelector: #baseline14:!MetacelloProjectRefTutorialConfig removeSelector: #baseline12:!MetacelloProjectRefTutorialConfig removeSelector: #baseline11:!MetacelloProjectRefTutorialConfig removeSelector: #baseline10:!MetacelloProjectRefTutorialConfig removeSelector: #baseline07:!MetacelloProjectRefTutorialConfig class removeSelector: #project!MetacelloProjectRefTutorialConfig class removeSelector: #isMetacelloConfig!MetacelloProjectRefTutorialConfig class removeSelector: #ensureMetacello!MetacelloProjectRefTutorialConfig class removeSelector: #bootstrapPackage:from:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectRefTutorialConfig!MetacelloStackCacheTestCase removeSelector: #testPrimeStackCache!MetacelloStackCacheTestCase removeSelector: #testMixedStack!MetacelloStackCacheTestCase removeSelector: #testDirectReturn!MetacelloStackCacheTestCase removeSelector: #testDefaultDictionary!MetacelloStackCacheTestCase removeSelector: #testCollectionCacheKey!MetacelloStackCacheTestCase removeSelector: #testClearCache!MetacelloStackCacheTestCase removeSelector: #testCachedReturn!MetacelloStackCacheTestCase removeSelector: #testCacheNil!MetacelloStackCacheTestCase removeSelector: #mixedStackCall!MetacelloStackCacheTestCase removeSelector: #mixedStack!MetacelloStackCacheTestCase removeSelector: #directReturnOfValue!MetacelloStackCacheTestCase removeSelector: #collectionCacheKey!MetacelloStackCacheTestCase removeSelector: #cachedReturnOfValue!MetacelloStackCacheTestCase removeSelector: #cacheNil!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloStackCacheTestCase!MetacelloVersionSpecTestCase removeSelector: #testVersionSpecCreateVersion!MetacelloVersionSpecTestCase removeSelector: #testVersionSpec!MetacelloVersionSpecTestCase removeSelector: #testVersionMergeSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionSpecTestCase!MetacelloValueHolderSpecTestCase removeSelector: #testValueHolderSpec!MetacelloValueHolderSpecTestCase removeSelector: #testValueHolderMergeSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloValueHolderSpecTestCase!MetacelloSpecTestCase removeSelector: #versionSpec!MetacelloSpecTestCase removeSelector: #valueHolderSpec!MetacelloSpecTestCase removeSelector: #projectWith:!MetacelloSpecTestCase removeSelector: #projectSpec!MetacelloSpecTestCase removeSelector: #projectReferenceSpec!MetacelloSpecTestCase removeSelector: #projectClass!MetacelloSpecTestCase removeSelector: #project!MetacelloSpecTestCase removeSelector: #packagesSpec!MetacelloSpecTestCase removeSelector: #groupSpec!MetacelloProjectSpecTestCase removeSelector: #testProjectSpec!MetacelloProjectSpecTestCase removeSelector: #testProjectMergeSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectSpecTestCase!MetacelloProjectReferenceSpecTestCase removeSelector: #testProjectReferenceSpec!MetacelloProjectReferenceSpecTestCase removeSelector: #testProjectReferenceMergeSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloProjectReferenceSpecTestCase!MetacelloPackagesSpecTestCase removeSelector: #testRemoveProjectB!MetacelloPackagesSpecTestCase removeSelector: #testRemoveProjectA!MetacelloPackagesSpecTestCase removeSelector: #testRemoveGroupC!MetacelloPackagesSpecTestCase removeSelector: #testRemoveGroupB!MetacelloPackagesSpecTestCase removeSelector: #testRemoveGroupA!MetacelloPackagesSpecTestCase removeSelector: #testMergeProjectB!MetacelloPackagesSpecTestCase removeSelector: #testMergeProjectA!MetacelloPackagesSpecTestCase removeSelector: #testMergeGroupB!MetacelloPackagesSpecTestCase removeSelector: #testMergeGroupA!MetacelloPackagesSpecTestCase removeSelector: #testCopyToProject!MetacelloPackagesSpecTestCase removeSelector: #testCopyToGroup!MetacelloPackagesSpecTestCase removeSelector: #testAddProjectB!MetacelloPackagesSpecTestCase removeSelector: #testAddProjectA!MetacelloPackagesSpecTestCase removeSelector: #testAddGroupB!MetacelloPackagesSpecTestCase removeSelector: #testAddGroupA!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPackagesSpecTestCase!MetacelloGroupSpecTestCase removeSelector: #testGroupSpec!MetacelloGroupSpecTestCase removeSelector: #testGroupMergeSpec!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloGroupSpecTestCase!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSpecTestCase!MetacelloCoreVersionQueryTestCase removeSelector: #testDifference!MetacelloCoreVersionQueryTestCase removeSelector: #testBaseline10ResolveToLoadableSpecs01!MetacelloCoreVersionQueryTestCase removeSelector: #testBaseline10Projects!MetacelloCoreVersionQueryTestCase removeSelector: #testBaseline10Groups!MetacelloCoreVersionQueryTestCase removeSelector: #projectWith:!MetacelloCoreVersionQueryTestCase removeSelector: #project!MetacelloCoreVersionQueryTestCase removeSelector: #baseline20:!MetacelloCoreVersionQueryTestCase removeSelector: #baseline11:!MetacelloCoreVersionQueryTestCase removeSelector: #baseline10:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCoreVersionQueryTestCase!MetacelloCoreSymbolicVersionTest removeSelector: #version10:!MetacelloCoreSymbolicVersionTest removeSelector: #testStableVersionMethod!MetacelloCoreSymbolicVersionTest removeSelector: #testBleedingEdgeMethod!MetacelloCoreSymbolicVersionTest removeSelector: #testBasicStableVersion!MetacelloCoreSymbolicVersionTest removeSelector: #testBasicBleedingEdgeVersion!MetacelloCoreSymbolicVersionTest removeSelector: #stableVersion:!MetacelloCoreSymbolicVersionTest removeSelector: #projectWith:!MetacelloCoreSymbolicVersionTest removeSelector: #project!MetacelloCoreSymbolicVersionTest removeSelector: #bleedingEdge:!MetacelloCoreSymbolicVersionTest removeSelector: #baseline20:!MetacelloCoreSymbolicVersionTest removeSelector: #baseline10:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCoreSymbolicVersionTest!MetacelloCoreIssue125TestCase removeSelector: #testForDoListNotActive!MetacelloCoreIssue125TestCase removeSelector: #testForDoListAttribute1Atrribute2Active!MetacelloCoreIssue125TestCase removeSelector: #testForDoListAtrribute2Active!MetacelloCoreIssue125TestCase removeSelector: #testForDoListAtrribute1Active!MetacelloCoreIssue125TestCase removeSelector: #projectWith:!MetacelloCoreIssue125TestCase removeSelector: #project!MetacelloCoreIssue125TestCase removeSelector: #baseline300:!MetacelloCoreIssue125TestCase removeSelector: #baseline200:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCoreIssue125TestCase!MetacelloVersionNumberTestCase removeSelector: #versionClass!MetacelloVersionNumberTestCase removeSelector: #testVersion24!MetacelloVersionNumberTestCase removeSelector: #testVersion21!MetacelloVersionNumberTestCase removeSelector: #testVersion20!MetacelloVersionNumberTestCase removeSelector: #testVersion19!MetacelloVersionNumberTestCase removeSelector: #testVersion18!MetacelloVersionNumberTestCase removeSelector: #testVersion17!MetacelloVersionNumberTestCase removeSelector: #testVersion16!MetacelloVersionNumberTestCase removeSelector: #testVersion15!MetacelloVersionNumberTestCase removeSelector: #testVersion13!MetacelloVersionNumberTestCase removeSelector: #testVersion12!MetacelloVersionNumberTestCase removeSelector: #testVersion11!MetacelloVersionNumberTestCase removeSelector: #testVersion10!MetacelloVersionNumberTestCase removeSelector: #testVersion09!MetacelloVersionNumberTestCase removeSelector: #testVersion08!MetacelloVersionNumberTestCase removeSelector: #testVersion07!MetacelloVersionNumberTestCase removeSelector: #testVersion06!MetacelloVersionNumberTestCase removeSelector: #testVersion05!MetacelloVersionNumberTestCase removeSelector: #testVersion03!MetacelloVersionNumberTestCase removeSelector: #testStandardMatch!MetacelloVersionNumberTestCase removeSelector: #testSpecialMatch!MetacelloVersionNumberTestCase removeSelector: #testInvalidSpecialMatch!MetacelloVersionNumberTestCase removeSelector: #testIncrementDecrementVersionNumber!MetacelloVersionNumberTestCase removeSelector: #testCollapseZeros!MetacelloVersionNumberTestCase removeSelector: #testApproxVersion03!MetacelloVersionNumberTestCase removeSelector: #testApproxVersion02!MetacelloVersionNumberTestCase removeSelector: #testApproxVersion01!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloVersionNumberTestCase!MetacelloSemanticVersionNumberTestCase removeSelector: #versionClass!MetacelloSemanticVersionNumberTestCase removeSelector: #validateSemanticVersionStrings:!MetacelloSemanticVersionNumberTestCase removeSelector: #testVersion19!MetacelloSemanticVersionNumberTestCase removeSelector: #testVersion18!MetacelloSemanticVersionNumberTestCase removeSelector: #testVersion17!MetacelloSemanticVersionNumberTestCase removeSelector: #testVersion16!MetacelloSemanticVersionNumberTestCase removeSelector: #testVersion15!MetacelloSemanticVersionNumberTestCase removeSelector: #testVersion12!MetacelloSemanticVersionNumberTestCase removeSelector: #testVersion10!MetacelloSemanticVersionNumberTestCase removeSelector: #testVersion09!MetacelloSemanticVersionNumberTestCase removeSelector: #testVersion05!MetacelloSemanticVersionNumberTestCase removeSelector: #testStandardMatch!MetacelloSemanticVersionNumberTestCase removeSelector: #testSpecialMatch!MetacelloSemanticVersionNumberTestCase removeSelector: #testSemanticVersioningSubsetCompliance!MetacelloSemanticVersionNumberTestCase removeSelector: #testSemanticVersioningSpecItem12!MetacelloSemanticVersionNumberTestCase removeSelector: #testSemanticVersioningSpecItem11!MetacelloSemanticVersionNumberTestCase removeSelector: #testSemanticVersioningSpecItem10!MetacelloSemanticVersionNumberTestCase removeSelector: #testSemanticVersioning!MetacelloSemanticVersionNumberTestCase removeSelector: #testPrinting!MetacelloSemanticVersionNumberTestCase removeSelector: #testLessThanComparison!MetacelloSemanticVersionNumberTestCase removeSelector: #testIssue392!MetacelloSemanticVersionNumberTestCase removeSelector: #testInvalidSpecialMatch!MetacelloSemanticVersionNumberTestCase removeSelector: #testEqualityComparison!MetacelloSemanticVersionNumberTestCase removeSelector: #sampleVersionStrings!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloSemanticVersionNumberTestCase!MetacelloCommonVersionNumberTestCase removeSelector: #versionClass!MetacelloCommonVersionNumberTestCase removeSelector: #testVersion25!MetacelloCommonVersionNumberTestCase removeSelector: #testVersion23!MetacelloCommonVersionNumberTestCase removeSelector: #testVersion22!MetacelloCommonVersionNumberTestCase removeSelector: #testVersion14!MetacelloCommonVersionNumberTestCase removeSelector: #testVersion04!MetacelloCommonVersionNumberTestCase removeSelector: #testVersion02!MetacelloCommonVersionNumberTestCase removeSelector: #testVersion01!MetacelloCommonVersionNumberTestCase removeSelector: #testIncrementDecrementVersionNumber!MetacelloCommonVersionNumberTestCase removeSelector: #testIncrementDecrementVersion!MetacelloCommonVersionNumberTestCase removeSelector: #testAlphaNumericVersion4!MetacelloCommonVersionNumberTestCase removeSelector: #testAlphaNumericVersion3!MetacelloCommonVersionNumberTestCase removeSelector: #testAlphaNumericVersion2!MetacelloCommonVersionNumberTestCase removeSelector: #testAlphaNumericVersion1!MetacelloCommonVersionNumberTestCase removeSelector: #defaultVersion1!MetacelloCommonVersionNumberTestCase class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCommonVersionNumberTestCase!MCRepositoryGroup removeSelector: #removeIdenticalRepository:!Gofer removeSelector: #metacelloUnload!Gofer removeSelector: #metacelloLoad!Gofer removeSelector: #metacelloCleanup!MetacelloDictionaryRepositoryTest removeSelector: #tempRepositories!MetacelloDictionaryRepositoryTest removeSelector: #tearDownPackages:!MetacelloDictionaryRepositoryTest removeSelector: #tearDown!MetacelloDictionaryRepositoryTest removeSelector: #setUp!MetacelloDictionaryRepositoryTest removeSelector: #runCase!MetacelloDictionaryRepositoryTest removeSelector: #projectWith:!MetacelloDictionaryRepositoryTest removeSelector: #project!MetacelloDictionaryRepositoryTest removeSelector: #monticelloRepository!MetacelloDictionaryRepositoryTest removeSelector: #loadType!MetacelloDictionaryRepositoryTest removeSelector: #hasPackage:!MetacelloDictionaryRepositoryTest removeSelector: #doSilently!MetacelloDictionaryRepositoryTest removeSelector: #defaultTimeout!MetacelloDictionaryRepositoryTest removeSelector: #configurationRepository!MetacelloDictionaryRepositoryTest removeSelector: #alternateRepository!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloDictionaryRepositoryTest!MetacelloTestsGoferCleanup removeSelector: #cleanupProtocols:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloTestsGoferCleanup!MetacelloScriptingTestCase removeSelector: #tearDownRepositories!MetacelloScriptingTestCase removeSelector: #setUpRepositoryContents:sourceRepo:targetRepo:!MetacelloScriptingTestCase removeSelector: #setUpRepositories!MetacelloScriptingTestCase removeSelector: #samplePath!MetacelloScriptingTestCase removeSelector: #externalPath!MetacelloScriptingTestCase removeSelector: #configurationPath!MetacelloExternalScriptingTestCase removeSelector: #tearDownRepositories!MetacelloExternalScriptingTestCase removeSelector: #setUpRepositoryContents!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloExternalScriptingTestCase!MetacelloBasicScriptingTestCase removeSelector: #tearDownPackageList!MetacelloBasicScriptingTestCase removeSelector: #setUpRepositoryContents!MetacelloBasicScriptingTestCase removeSelector: #sampleRepositoryContents!MetacelloBasicScriptingTestCase removeSelector: #externalRepositoryContents!MetacelloBasicScriptingTestCase removeSelector: #configurationRepositoryContents!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloBasicScriptingTestCase!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptingTestCase!MetacelloScriptingStdTstHarness removeSelector: #verifyPackageNotLoaded:!MetacelloScriptingStdTstHarness removeSelector: #verify:version:!MetacelloScriptingStdTstHarness removeSelector: #verify:loadedFrom:!MetacelloScriptingStdTstHarness removeSelector: #validateProjects:!MetacelloScriptingStdTstHarness removeSelector: #validate:expConfigVersion:expConfigRepo:expBaselineClassName:expBaselineVersion:expBaselineRepo:!MetacelloScriptingStdTstHarness removeSelector: #unloadPackage:!MetacelloScriptingStdTstHarness removeSelector: #tearDownRepositories!MetacelloScriptingStdTstHarness removeSelector: #tearDownPackages!MetacelloScriptingStdTstHarness removeSelector: #tearDownPackageList!MetacelloScriptingStdTstHarness removeSelector: #tearDown!MetacelloScriptingStdTstHarness removeSelector: #setUpRepositoryContents!MetacelloScriptingStdTstHarness removeSelector: #setUpRepositories!MetacelloScriptingStdTstHarness removeSelector: #setUp!MetacelloScriptingStdTstHarness removeSelector: #runCase!MetacelloScriptingStdTstHarness removeSelector: #hasPackage:!MetacelloScriptingStdTstHarness removeSelector: #doSilently!MetacelloScriptingStdTstHarness removeSelector: #disableUndefinedSymbolTracking!MetacelloScriptingStdTstHarness removeSelector: #defaultTimeout!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptingStdTstHarness!MetacelloIssueTestCase removeSelector: #tearDownPackageNames!MetacelloIssueTestCase removeSelector: #tearDown!MetacelloIssueTestCase removeSelector: #setUp!MetacelloIssueTestCase removeSelector: #runCase!MetacelloIssueTestCase removeSelector: #projectWith:!MetacelloIssueTestCase removeSelector: #projectName!MetacelloIssueTestCase removeSelector: #projectClass!MetacelloIssueTestCase removeSelector: #project!MetacelloIssueTestCase removeSelector: #monticelloRepository!MetacelloIssueTestCase removeSelector: #hasPackage:!MetacelloIssueTestCase removeSelector: #configurationRepository!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloIssueTestCase!MetacelloTestsGoferUnload removeSelector: #unloadClasses:!MetacelloTestsGoferUnload removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloTestsGoferUnload!MetacelloRepositorySpecTestCase removeSelector: #testRepositorySpec!MetacelloRepositorySpecTestCase removeSelector: #testRepositoryMergeSpec!MetacelloRepositorySpecTestCase removeSelector: #projectClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloRepositorySpecTestCase!MetacelloRepositoriesSpecTestCase removeSelector: #testRemoveD!MetacelloRepositoriesSpecTestCase removeSelector: #testRemoveC!MetacelloRepositoriesSpecTestCase removeSelector: #testRemoveB!MetacelloRepositoriesSpecTestCase removeSelector: #testRemoveA!MetacelloRepositoriesSpecTestCase removeSelector: #testMergeC!MetacelloRepositoriesSpecTestCase removeSelector: #testMergeB!MetacelloRepositoriesSpecTestCase removeSelector: #testMergeA!MetacelloRepositoriesSpecTestCase removeSelector: #testCopyTo!MetacelloRepositoriesSpecTestCase removeSelector: #testAddF!MetacelloRepositoriesSpecTestCase removeSelector: #testAddE!MetacelloRepositoriesSpecTestCase removeSelector: #testAddC!MetacelloRepositoriesSpecTestCase removeSelector: #testAddB!MetacelloRepositoriesSpecTestCase removeSelector: #testAddA!MetacelloRepositoriesSpecTestCase removeSelector: #projectClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloRepositoriesSpecTestCase!MetacelloPlatformTestCase removeSelector: #testTempFileFor!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPlatformTestCase!MetacelloPackageSpecTestCase removeSelector: #testPackageSpec!MetacelloPackageSpecTestCase removeSelector: #testPackageMergeSpec!MetacelloPackageSpecTestCase removeSelector: #projectClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloPackageSpecTestCase!MetacelloMCVersionSpecTestCase removeSelector: #testMCVersionSpec!MetacelloMCVersionSpecTestCase removeSelector: #testMCVersionMergeSpec!MetacelloMCVersionSpecTestCase removeSelector: #projectClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCVersionSpecTestCase!MetacelloMCValueHolderSpecTestCase removeSelector: #projectClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCValueHolderSpecTestCase!MetacelloMCProjectSpecTestCase removeSelector: #testMCProjectSpec!MetacelloMCProjectSpecTestCase removeSelector: #testMCProjectMergeSpec!MetacelloMCProjectSpecTestCase removeSelector: #projectClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCProjectSpecTestCase!MetacelloMCProjectReferenceSpecTestCase removeSelector: #projectClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCProjectReferenceSpecTestCase!MetacelloMCPackagesSpecTestCase removeSelector: #testRemovePackageD!MetacelloMCPackagesSpecTestCase removeSelector: #testRemovePackageC!MetacelloMCPackagesSpecTestCase removeSelector: #testRemovePackageB!MetacelloMCPackagesSpecTestCase removeSelector: #testRemovePackageA!MetacelloMCPackagesSpecTestCase removeSelector: #testMergePackageD!MetacelloMCPackagesSpecTestCase removeSelector: #testMergePackageB!MetacelloMCPackagesSpecTestCase removeSelector: #testMergePackageA!MetacelloMCPackagesSpecTestCase removeSelector: #testCopyToPackage!MetacelloMCPackagesSpecTestCase removeSelector: #testAddPackageD!MetacelloMCPackagesSpecTestCase removeSelector: #testAddPackageC!MetacelloMCPackagesSpecTestCase removeSelector: #testAddPackageB!MetacelloMCPackagesSpecTestCase removeSelector: #testAddPackageA!MetacelloMCPackagesSpecTestCase removeSelector: #projectClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCPackagesSpecTestCase!MetacelloMCGroupSpecTestCase removeSelector: #projectClass!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCGroupSpecTestCase!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloTestsMCPackage!MetacelloScriptingResource removeSelector: #versionOfXXX:!MetacelloScriptingResource removeSelector: #versionOfXX:!MetacelloScriptingResource removeSelector: #versionOfX091:!MetacelloScriptingResource removeSelector: #versionOfX090:!MetacelloScriptingResource removeSelector: #versionOfMariano:!MetacelloScriptingResource removeSelector: #versionOfIV:!MetacelloScriptingResource removeSelector: #versionOfExternal091:!MetacelloScriptingResource removeSelector: #versionOfExternal090:!MetacelloScriptingResource removeSelector: #versionNumberClass!MetacelloScriptingResource removeSelector: #version10NestedIssue84:!MetacelloScriptingResource removeSelector: #version10Issue84:!MetacelloScriptingResource removeSelector: #version10Issue59:!MetacelloScriptingResource removeSelector: #version10Issue47:!MetacelloScriptingResource removeSelector: #version100Issue339:!MetacelloScriptingResource removeSelector: #version09Issue32:!MetacelloScriptingResource removeSelector: #unstableVersionOfX:!MetacelloScriptingResource removeSelector: #stableVersionOfX:!MetacelloScriptingResource removeSelector: #setUpSampleCore!MetacelloScriptingResource removeSelector: #setUpRepositories!MetacelloScriptingResource removeSelector: #setUpMarianosImage!MetacelloScriptingResource removeSelector: #setUpLockConfigurations!MetacelloScriptingResource removeSelector: #setUpIssue399CoreSampledkh2:!MetacelloScriptingResource removeSelector: #setUpIssue399CoreSampledkh1!MetacelloScriptingResource removeSelector: #setUpIssue399CoreExternaldkh1!MetacelloScriptingResource removeSelector: #setUpIssue399!MetacelloScriptingResource removeSelector: #setUpInvalidConfigurations!MetacelloScriptingResource removeSelector: #setUpExternalCoreX!MetacelloScriptingResource removeSelector: #setUpExternalCore!MetacelloScriptingResource removeSelector: #setUpConfigurationOfExternaldkh2!MetacelloScriptingResource removeSelector: #setUpConfigurationOfExternaldkh1!MetacelloScriptingResource removeSelector: #setUpConfigurationOfExternalXdkh2:!MetacelloScriptingResource removeSelector: #setUpConfigurationOfExternalXdkh1!MetacelloScriptingResource removeSelector: #setUpConfigurationOfExternalXXX!MetacelloScriptingResource removeSelector: #setUpConfigurationOfExternalXX!MetacelloScriptingResource removeSelector: #setUpConfigurationOfExternalX!MetacelloScriptingResource removeSelector: #setUpConfigurationOfExternalIV!MetacelloScriptingResource removeSelector: #setUpConfigurationOfConflict!MetacelloScriptingResource removeSelector: #setUpConfigurationNextedIssue84dkh2:!MetacelloScriptingResource removeSelector: #setUpConfigurationNextedIssue84dkh1!MetacelloScriptingResource removeSelector: #setUpConfigurationNextedIssue84!MetacelloScriptingResource removeSelector: #setUpConfigurationIssue84!MetacelloScriptingResource removeSelector: #setUpConfigurationIssue59!MetacelloScriptingResource removeSelector: #setUpConfigurationIssue339!MetacelloScriptingResource removeSelector: #setUpConfigurationIssue32!MetacelloScriptingResource removeSelector: #setUpConfigurationExternalRefdkh2:!MetacelloScriptingResource removeSelector: #setUpConfigurationExternalRefdkh1!MetacelloScriptingResource removeSelector: #setUpConfigurationExternalRef!MetacelloScriptingResource removeSelector: #setUpConfiguration63!MetacelloScriptingResource removeSelector: #setUpConfiguration181!MetacelloScriptingResource removeSelector: #setUpBaselineOfExternalXXX!MetacelloScriptingResource removeSelector: #setUpBaselineOfExternalXX!MetacelloScriptingResource removeSelector: #setUpBaselineOfExternalX!MetacelloScriptingResource removeSelector: #setUpBaselineIssue399Cypress!MetacelloScriptingResource removeSelector: #setUpBaselineIssue399!MetacelloScriptingResource removeSelector: #setUpBaselineIssue32!MetacelloScriptingResource removeSelector: #setUpBaselineIssue215!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceXX!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceXIII!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceXII!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceXI!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceVIII!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceVII!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceVI!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceV!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceIX!MetacelloScriptingResource removeSelector: #setUpBaselineGithubReferenceIV!MetacelloScriptingResource removeSelector: #setUp!MetacelloScriptingResource removeSelector: #sampleRepository!MetacelloScriptingResource removeSelector: #sampleAuthorName!MetacelloScriptingResource removeSelector: #projectClass!MetacelloScriptingResource removeSelector: #preloadDoIt!MetacelloScriptingResource removeSelector: #postloadDoIt!MetacelloScriptingResource removeSelector: #lockConfiguration15:!MetacelloScriptingResource removeSelector: #lockConfiguration14:!MetacelloScriptingResource removeSelector: #lockConfiguration13:!MetacelloScriptingResource removeSelector: #lockConfiguration12:!MetacelloScriptingResource removeSelector: #lockConfiguration11:!MetacelloScriptingResource removeSelector: #lockConfiguration10:!MetacelloScriptingResource removeSelector: #isSample!MetacelloScriptingResource removeSelector: #isExternal!MetacelloScriptingResource removeSelector: #invalidConfiguration30:!MetacelloScriptingResource removeSelector: #invalidConfiguration20:!MetacelloScriptingResource removeSelector: #invalidConfiguration10:!MetacelloScriptingResource removeSelector: #externalRepository!MetacelloScriptingResource removeSelector: #externalBaselineXXX:!MetacelloScriptingResource removeSelector: #externalBaselineXX:!MetacelloScriptingResource removeSelector: #externalBaselineX:!MetacelloScriptingResource removeSelector: #externalAuthorName!MetacelloScriptingResource removeSelector: #customProjectAttributes!MetacelloScriptingResource removeSelector: #conflictOf21:!MetacelloScriptingResource removeSelector: #conflictOf20:!MetacelloScriptingResource removeSelector: #conflictOf12:!MetacelloScriptingResource removeSelector: #conflictOf11:!MetacelloScriptingResource removeSelector: #conflictOf10:!MetacelloScriptingResource removeSelector: #configurationRepository!MetacelloScriptingResource removeSelector: #configurationGithubReferenceXXX:!MetacelloScriptingResource removeSelector: #configurationGithubReferenceXX:!MetacelloScriptingResource removeSelector: #configurationGithubReferenceX:!MetacelloScriptingResource removeSelector: #configurationGithubReferenceV:!MetacelloScriptingResource removeSelector: #configurationGithubReferenceIV:!MetacelloScriptingResource removeSelector: #configurationExternalRef092:!MetacelloScriptingResource removeSelector: #configurationExternalRef091:!MetacelloScriptingResource removeSelector: #configurationExternalRef090:!MetacelloScriptingResource removeSelector: #configuration098Issue215:!MetacelloScriptingResource removeSelector: #configuration097Issue185:!MetacelloScriptingResource removeSelector: #configuration096Issue185:!MetacelloScriptingResource removeSelector: #configuration095Issue185:!MetacelloScriptingResource removeSelector: #configuration094Issue185:!MetacelloScriptingResource removeSelector: #configuration093Issue185:!MetacelloScriptingResource removeSelector: #configuration092Issue63:!MetacelloScriptingResource removeSelector: #configuration092Issue181:!MetacelloScriptingResource removeSelector: #configuration091Issue63:!MetacelloScriptingResource removeSelector: #configuration091Issue181:!MetacelloScriptingResource removeSelector: #baselineIssue399:!MetacelloScriptingResource removeSelector: #baselineIssue32:!MetacelloScriptingResource removeSelector: #baselineIssue215:!MetacelloScriptingResource removeSelector: #baselineGithubReferenceXX:!MetacelloScriptingResource removeSelector: #baselineGithubReferenceVII:!MetacelloScriptingResource removeSelector: #baselineGithubReferenceVI:!MetacelloScriptingResource removeSelector: #baselineGithubReferenceV:!MetacelloScriptingResource removeSelector: #baselineGithubReferenceIV:!MetacelloScriptingResource class removeSelector: #externalCustomSHA!MetacelloScriptingResource class removeSelector: #externalCustomIssue234ShortSHA!MetacelloScriptingResource class removeSelector: #externalCustomIssue234ShortMasterSHA!MetacelloScriptingResource class removeSelector: #externalCustomIssue185SHA4!MetacelloScriptingResource class removeSelector: #externalCustomIssue185SHA3!MetacelloScriptingResource class removeSelector: #externalCustomIssue185SHA2!MetacelloScriptingResource class removeSelector: #externalCustomIssue185SHA1!MetacelloScriptingResource class removeSelector: #externalCustomIssue185SHA!MetacelloScriptingResource class removeSelector: #externalCustomIssue181SHA!MetacelloScriptingResource class removeSelector: #externalConfigurationSHA!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloScriptingResource!MetacelloMonticelloResource removeSelector: #versionReferences!MetacelloMonticelloResource removeSelector: #setUpVersionReferences!MetacelloMonticelloResource removeSelector: #setUpMonticelloRepository!MetacelloMonticelloResource removeSelector: #setUp!MetacelloMonticelloResource removeSelector: #monticelloRepository!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMonticelloResource!MetacelloIssue108Resource removeSelector: #versionReferences!MetacelloIssue108Resource removeSelector: #setUpVersionReferences!MetacelloIssue108Resource removeSelector: #setUpMonticelloRepository!MetacelloIssue108Resource removeSelector: #setUp!MetacelloIssue108Resource removeSelector: #monticelloRepository!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloIssue108Resource!MetacelloConfigurationResource removeSelector: #version50Issue119:!MetacelloConfigurationResource removeSelector: #version44Issue119:!MetacelloConfigurationResource removeSelector: #version43SymbolicMethodSourceSymbolic!MetacelloConfigurationResource removeSelector: #version43Symbolic:!MetacelloConfigurationResource removeSelector: #version43Issue119:!MetacelloConfigurationResource removeSelector: #version42SymbolicMethodSourceSymbolic!MetacelloConfigurationResource removeSelector: #version42Symbolic:!MetacelloConfigurationResource removeSelector: #version42Issue119:!MetacelloConfigurationResource removeSelector: #version41SymbolicMethodSourceSymbolic!MetacelloConfigurationResource removeSelector: #version41Symbolic:!MetacelloConfigurationResource removeSelector: #version41Issue119:!MetacelloConfigurationResource removeSelector: #version40SymbolicMethodSourceSymbolic!MetacelloConfigurationResource removeSelector: #version40Symbolic:!MetacelloConfigurationResource removeSelector: #version40Issue119:!MetacelloConfigurationResource removeSelector: #version30Issue156:!MetacelloConfigurationResource removeSelector: #version30Issue125:!MetacelloConfigurationResource removeSelector: #version30Issue119:!MetacelloConfigurationResource removeSelector: #version21Issue283:!MetacelloConfigurationResource removeSelector: #version21Issue171:!MetacelloConfigurationResource removeSelector: #version20Issue283:!MetacelloConfigurationResource removeSelector: #version20Issue171:!MetacelloConfigurationResource removeSelector: #version20Issue156:!MetacelloConfigurationResource removeSelector: #version20Issue119:!MetacelloConfigurationResource removeSelector: #version135ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version134ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version133ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version132ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version131ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version130ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version129ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version128ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version127ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version126ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version125ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version124ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version123ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version122ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version121ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version120ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version11Issue156:!MetacelloConfigurationResource removeSelector: #version11Issue136:!MetacelloConfigurationResource removeSelector: #version11Issue115:!MetacelloConfigurationResource removeSelector: #version119ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version118ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version117ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version116ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version115ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version114ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version113ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version112ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version111ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version110ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version10MetacelloExample:!MetacelloConfigurationResource removeSelector: #version10Issue156:!MetacelloConfigurationResource removeSelector: #version10Issue136:!MetacelloConfigurationResource removeSelector: #version10Issue119:!MetacelloConfigurationResource removeSelector: #version10Issue115:!MetacelloConfigurationResource removeSelector: #version109ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version108ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version107ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version106ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version105ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version104ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version103ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version102ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version101ProjectToolBox:!MetacelloConfigurationResource removeSelector: #version100ProjectToolBox:!MetacelloConfigurationResource removeSelector: #symbolicVersionExplicitlyDoesNotExistProjectToolBox:!MetacelloConfigurationResource removeSelector: #stableVersionDMethodSourceSymbolic!MetacelloConfigurationResource removeSelector: #stableVersionD:!MetacelloConfigurationResource removeSelector: #stableVersionC:!MetacelloConfigurationResource removeSelector: #stableVersion283B:!MetacelloConfigurationResource removeSelector: #stableVersion283A:!MetacelloConfigurationResource removeSelector: #setUpMonticelloRepository!MetacelloConfigurationResource removeSelector: #setUpIssue95!MetacelloConfigurationResource removeSelector: #setUpIssue77D!MetacelloConfigurationResource removeSelector: #setUpIssue77C!MetacelloConfigurationResource removeSelector: #setUpIssue77B!MetacelloConfigurationResource removeSelector: #setUpIssue77!MetacelloConfigurationResource removeSelector: #setUpIssue156ConfigurationOfProjectSoo!MetacelloConfigurationResource removeSelector: #setUpIssue156ConfigurationOfProjectGoo!MetacelloConfigurationResource removeSelector: #setUpIssue156ConfigurationOfGoo!MetacelloConfigurationResource removeSelector: #setUpIssue156BaselineOfGoo!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfSymbolic!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectToolBox!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectLoop!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue95!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue283dkh2:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue283dkh1!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue283!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue171dkh2:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue171dkh1!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue171!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue156!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue154dkh1!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue154!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue136dkh2:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue136dkh1!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue136!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue125!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue119dkh7:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue119dkh6:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue119dkh5:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue119dkh4:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue119dkh3:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue119dkh2:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue119dkh1!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue119!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue115dkh2:!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue115dkh1!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue115!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectInfinite!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectFum!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectFoe!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectFie!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectFee!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfProjectConfigIssue283dkh1!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfMetacelloExampledkh1!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfFum!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfFoo!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfFix!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfFeaux!MetacelloConfigurationResource removeSelector: #setUpConfigurationOfFan!MetacelloConfigurationResource removeSelector: #setUp!MetacelloConfigurationResource removeSelector: #projectVersion20Issue283:!MetacelloConfigurationResource removeSelector: #projectVersion10Issue283:!MetacelloConfigurationResource removeSelector: #projectMethodSource!MetacelloConfigurationResource removeSelector: #projectClassMethodSource!MetacelloConfigurationResource removeSelector: #project!MetacelloConfigurationResource removeSelector: #preloadDoItMethodSource!MetacelloConfigurationResource removeSelector: #preloadDoIt!MetacelloConfigurationResource removeSelector: #postloadDoIt!MetacelloConfigurationResource removeSelector: #monticelloRepository!MetacelloConfigurationResource removeSelector: #bleedingEdgeVersion:!MetacelloConfigurationResource removeSelector: #bleedingEdge206B:!MetacelloConfigurationResource removeSelector: #bleedingEdge206A:!MetacelloConfigurationResource removeSelector: #baselineVersion40Issue119:!MetacelloConfigurationResource removeSelector: #baselineVersion30Issue154:!MetacelloConfigurationResource removeSelector: #baselineVersion30Issue125:!MetacelloConfigurationResource removeSelector: #baselineVersion30Issue119:!MetacelloConfigurationResource removeSelector: #baselineVersion21Issue171:!MetacelloConfigurationResource removeSelector: #baselineVersion20Issue171:!MetacelloConfigurationResource removeSelector: #baselineVersion20Issue154:!MetacelloConfigurationResource removeSelector: #baselineVersion20Issue125:!MetacelloConfigurationResource removeSelector: #baselineVersion20Issue119:!MetacelloConfigurationResource removeSelector: #baselineVersion13Issue154:!MetacelloConfigurationResource removeSelector: #baselineVersion12Issue154:!MetacelloConfigurationResource removeSelector: #baselineVersion124ProjectToolBox:!MetacelloConfigurationResource removeSelector: #baselineVersion11Issue154:!MetacelloConfigurationResource removeSelector: #baselineVersion113ProjectToolBox:!MetacelloConfigurationResource removeSelector: #baselineVersion10MetacelloExample:!MetacelloConfigurationResource removeSelector: #baselineVersion10Issue154:!MetacelloConfigurationResource removeSelector: #baselineVersion10Issue136:!MetacelloConfigurationResource removeSelector: #baselineVersion10Issue119:!MetacelloConfigurationResource removeSelector: #baselineVersion10Issue115:!MetacelloConfigurationResource removeSelector: #baselineGooIssue156Baseline:!MetacelloConfigurationResource removeSelector: #baselineGoo500Issue156Configuration:!MetacelloConfigurationResource removeSelector: #baselineGoo400Issue156Configuration:!MetacelloConfigurationResource removeSelector: #baselineGoo300Issue156Configuration:!MetacelloConfigurationResource removeSelector: #baseline61MethodSourceFix!MetacelloConfigurationResource removeSelector: #baseline61Fix:!MetacelloConfigurationResource removeSelector: #baseline60MethodSourceFix!MetacelloConfigurationResource removeSelector: #baseline60Fix:!MetacelloConfigurationResource removeSelector: #baseline50MethodSourceFoo!MetacelloConfigurationResource removeSelector: #baseline50MethodSourceFan!MetacelloConfigurationResource removeSelector: #baseline50Foo:!MetacelloConfigurationResource removeSelector: #baseline50Fan:!MetacelloConfigurationResource removeSelector: #baseline40ProjectLoop:!MetacelloConfigurationResource removeSelector: #baseline40ProjectIssue95:!MetacelloConfigurationResource removeSelector: #baseline40ProjectInfinite:!MetacelloConfigurationResource removeSelector: #baseline40ProjectFum:!MetacelloConfigurationResource removeSelector: #baseline40ProjectFoe:!MetacelloConfigurationResource removeSelector: #baseline40ProjectFie:!MetacelloConfigurationResource removeSelector: #baseline40ProjectFee:!MetacelloConfigurationResource removeSelector: #baseline40MethodSourceProjectLoop!MetacelloConfigurationResource removeSelector: #baseline40MethodSourceProjectIssue95!MetacelloConfigurationResource removeSelector: #baseline40MethodSourceProjectInfinite!MetacelloConfigurationResource removeSelector: #baseline40MethodSourceProjectFum!MetacelloConfigurationResource removeSelector: #baseline40MethodSourceProjectFoe!MetacelloConfigurationResource removeSelector: #baseline40MethodSourceProjectFee!MetacelloConfigurationResource removeSelector: #baseline40MethodSourceFoo!MetacelloConfigurationResource removeSelector: #baseline40MethodSourceFeaux!MetacelloConfigurationResource removeSelector: #baseline40MethodSourceFan!MetacelloConfigurationResource removeSelector: #baseline40Foo:!MetacelloConfigurationResource removeSelector: #baseline40Feaux:!MetacelloConfigurationResource removeSelector: #baseline40Fan:!MetacelloConfigurationResource removeSelector: #baseline35ProjectFie:!MetacelloConfigurationResource removeSelector: #baseline35MethodSourceFoo!MetacelloConfigurationResource removeSelector: #baseline35MethodSourceFan!MetacelloConfigurationResource removeSelector: #baseline35Foo:!MetacelloConfigurationResource removeSelector: #baseline35Fan:!MetacelloConfigurationResource removeSelector: #baseline30MethodSourceFoo!MetacelloConfigurationResource removeSelector: #baseline30MethodSourceFan!MetacelloConfigurationResource removeSelector: #baseline30Foo:!MetacelloConfigurationResource removeSelector: #baseline30Fan:!MetacelloConfigurationResource removeSelector: #baseline25ProjectFie:!MetacelloConfigurationResource removeSelector: #baseline20MethodSourceFoo!MetacelloConfigurationResource removeSelector: #baseline20MethodSourceFan!MetacelloConfigurationResource removeSelector: #baseline20Foo:!MetacelloConfigurationResource removeSelector: #baseline20Fan:!MetacelloConfigurationResource removeSelector: #baseline15ProjectFie:!MetacelloConfigurationResource removeSelector: #baseline13MethodSourceC!MetacelloConfigurationResource removeSelector: #baseline13C:!MetacelloConfigurationResource removeSelector: #baseline12MethodSourceC!MetacelloConfigurationResource removeSelector: #baseline12C:!MetacelloConfigurationResource removeSelector: #baseline10ProjectFum:!MetacelloConfigurationResource removeSelector: #baseline10MethodSourceD!MetacelloConfigurationResource removeSelector: #baseline10MethodSourceB!MetacelloConfigurationResource removeSelector: #baseline10D:!MetacelloConfigurationResource removeSelector: #baseline10B:!MetacelloConfigurationResource class removeSelector: #projectAttributes:!MetacelloConfigurationResource class removeSelector: #projectAttributes!MetacelloConfigurationResource class removeSelector: #project!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloConfigurationResource!MetacelloAtomicMonticelloResource removeSelector: #versionReferences!MetacelloAtomicMonticelloResource removeSelector: #setUpVersionReferences!MetacelloAtomicMonticelloResource removeSelector: #setUpNewerDependency!MetacelloAtomicMonticelloResource removeSelector: #setUpMonticelloRepository!MetacelloAtomicMonticelloResource removeSelector: #setUpDependency!MetacelloAtomicMonticelloResource removeSelector: #setUp!MetacelloAtomicMonticelloResource removeSelector: #monticelloRepository!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAtomicMonticelloResource!MetacelloAtomicConfigurationResource removeSelector: #version51Umbrella:!MetacelloAtomicConfigurationResource removeSelector: #version51MethodSourceUmbrella!MetacelloAtomicConfigurationResource removeSelector: #version51MethodSourceFoo!MetacelloAtomicConfigurationResource removeSelector: #version51Foo:!MetacelloAtomicConfigurationResource removeSelector: #version50Umbrella:!MetacelloAtomicConfigurationResource removeSelector: #version50MethodSourceUmbrella!MetacelloAtomicConfigurationResource removeSelector: #version50MethodSourceFoo!MetacelloAtomicConfigurationResource removeSelector: #version50Foo:!MetacelloAtomicConfigurationResource removeSelector: #version20MethodSourceFoo!MetacelloAtomicConfigurationResource removeSelector: #version20Foo:!MetacelloAtomicConfigurationResource removeSelector: #setUpMonticelloRepository!MetacelloAtomicConfigurationResource removeSelector: #setUpConfigurationOfUmbrellaB!MetacelloAtomicConfigurationResource removeSelector: #setUpConfigurationOfUmbrellaA!MetacelloAtomicConfigurationResource removeSelector: #setUpConfigurationOfProjectIssue86!MetacelloAtomicConfigurationResource removeSelector: #setUpConfigurationOfLinearFoo!MetacelloAtomicConfigurationResource removeSelector: #setUpConfigurationOfAtomicFoo!MetacelloAtomicConfigurationResource removeSelector: #setUpConfigurationOfAtomicFan!MetacelloAtomicConfigurationResource removeSelector: #setUp!MetacelloAtomicConfigurationResource removeSelector: #projectMethodSource!MetacelloAtomicConfigurationResource removeSelector: #projectClassMethodSource!MetacelloAtomicConfigurationResource removeSelector: #project!MetacelloAtomicConfigurationResource removeSelector: #postLoad31baselineMethodSource!MetacelloAtomicConfigurationResource removeSelector: #postLoad31baseline!MetacelloAtomicConfigurationResource removeSelector: #monticelloRepository!MetacelloAtomicConfigurationResource removeSelector: #linearProjectMethodSource!MetacelloAtomicConfigurationResource removeSelector: #baseline62ProjectIssue86:!MetacelloAtomicConfigurationResource removeSelector: #baseline62MethodSourceProjectIssue86!MetacelloAtomicConfigurationResource removeSelector: #baseline62MethodSourceFoo!MetacelloAtomicConfigurationResource removeSelector: #baseline62Foo:!MetacelloAtomicConfigurationResource removeSelector: #baseline61ProjectIssue86:!MetacelloAtomicConfigurationResource removeSelector: #baseline61MethodSourceProjectIssue86!MetacelloAtomicConfigurationResource removeSelector: #baseline61MethodSourceFoo!MetacelloAtomicConfigurationResource removeSelector: #baseline61Foo:!MetacelloAtomicConfigurationResource removeSelector: #baseline60ProjectIssue86:!MetacelloAtomicConfigurationResource removeSelector: #baseline60MethodSourceProjectIssue86!MetacelloAtomicConfigurationResource removeSelector: #baseline60MethodSourceFoo!MetacelloAtomicConfigurationResource removeSelector: #baseline60Foo:!MetacelloAtomicConfigurationResource removeSelector: #baseline31MethodSourceFan!MetacelloAtomicConfigurationResource removeSelector: #baseline31Fan:!MetacelloAtomicConfigurationResource removeSelector: #baseline25MethodSourceFoo!MetacelloAtomicConfigurationResource removeSelector: #baseline25Foo:!MetacelloAtomicConfigurationResource removeSelector: #baseline20MethodSourceFoo!MetacelloAtomicConfigurationResource removeSelector: #baseline20MethodSourceFan!MetacelloAtomicConfigurationResource removeSelector: #baseline20Foo:!MetacelloAtomicConfigurationResource removeSelector: #baseline20Fan:!MetacelloAtomicConfigurationResource class removeSelector: #project!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAtomicConfigurationResource!MetacelloAlternateResource removeSelector: #versionReferences!MetacelloAlternateResource removeSelector: #setUpVersionReferences!MetacelloAlternateResource removeSelector: #setUpMonticelloRepository!MetacelloAlternateResource removeSelector: #setUp!MetacelloAlternateResource removeSelector: #monticelloRepository!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloAlternateResource!MetacelloMCTestsAbstractConfig removeSelector: #project!MetacelloExampleProjectConfig removeSelector: #baseline10:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloExampleProjectConfig!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloMCTestsAbstractConfig!MetacelloRepositorySqueakCommonTestCase removeSelector: #testHttpRepository!MetacelloRepositorySqueakCommonTestCase removeSelector: #testFtpRepository!MetacelloRepositorySqueakCommonTestCase removeSelector: #testFileTreeRepository!MetacelloRepositorySqueakCommonTestCase removeSelector: #testDirectoryRepository!MetacelloRepositorySqueakCommonTestCase removeSelector: #testDictionaryRepository!MetacelloRepositorySqueakCommonTestCase removeSelector: #testAsRepositorySpecFor!MetacelloRepositorySqueakCommonTestCase removeSelector: #tearDown!MetacelloRepositorySqueakCommonTestCase removeSelector: #setUp!MetacelloRepositorySqueakCommonTestCase removeSelector: #project!MetacelloRepositorySqueakCommonTestCase removeSelector: #directoryForPlatform!MetacelloRepositorySqueakCommonTestCase removeSelector: #baseline16:!MetacelloRepositorySqueakCommonTestCase removeSelector: #baseline15:!MetacelloRepositorySqueakCommonTestCase removeSelector: #baseline14:!MetacelloRepositorySqueakCommonTestCase removeSelector: #baseline13:!MetacelloRepositorySqueakCommonTestCase removeSelector: #baseline10:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloRepositorySqueakCommonTestCase!MCFtpRepository removeSelector: #host!MCFtpRepository removeSelector: #directory!RegexHelp class removeSelector: #whatsNew!RegexHelp class removeSelector: #usage!RegexHelp class removeSelector: #syntax!RegexHelp class removeSelector: #pages!RegexHelp class removeSelector: #license!RegexHelp class removeSelector: #introduction!RegexHelp class removeSelector: #implementationNotes!RegexHelp class removeSelector: #bookName!RegexAPIDocumentation class removeSelector: #helpPackages!RegexAPIDocumentation class removeSelector: #builder!RegexAPIDocumentation class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteRegexAPIDocumentation!Smalltalk globals removeClassNamed: #AnObsoleteRegexHelp!AnnouncementsTutorial class removeSelector: #step3!AnnouncementsTutorial class removeSelector: #step2!AnnouncementsTutorial class removeSelector: #step1!AnnouncementsTutorial class removeSelector: #pages!AnnouncementsTutorial class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteAnnouncementsTutorial!AnnouncementsHelp class removeSelector: #pages!AnnouncementsHelp class removeSelector: #links!AnnouncementsHelp class removeSelector: #introduction!AnnouncementsHelp class removeSelector: #bookName!AnnouncementsAPIDocumentation class removeSelector: #helpPackages!AnnouncementsAPIDocumentation class removeSelector: #builder!AnnouncementsAPIDocumentation class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteAnnouncementsAPIDocumentation!Smalltalk globals removeClassNamed: #AnObsoleteAnnouncementsHelp!RBRefactoringClassesHelp class removeSelector: #rootHelpClass!Smalltalk globals removeClassNamed: #AnObsoleteRBRefactoringClassesHelp!RBClassesHelp class removeSelector: #rootHelpClass!RBClassesHelp class removeSelector: #buildClassHierarchyHelpFrom:!RBClassesHelp class removeSelector: #asHelpTopic!RBBrowserEnvironmentsClassesHelp class removeSelector: #rootHelpClass!Smalltalk globals removeClassNamed: #AnObsoleteRBBrowserEnvironmentsClassesHelp!RBASTClassesHelp class removeSelector: #rootHelpClass!Smalltalk globals removeClassNamed: #AnObsoleteRBASTClassesHelp!Smalltalk globals removeClassNamed: #AnObsoleteRBClassesHelp!RefactoringHelp class removeSelector: #pages!RefactoringHelp class removeSelector: #overview!RefactoringHelp class removeSelector: #coreComponents!RefactoringHelp class removeSelector: #bookName!RefactoringHelp class removeSelector: #bookDescription!RefactoringHelp class removeSelector: #about!RBRefactoringExamplesHelp class removeSelector: #restrictedEnvironmentExample!RBRefactoringExamplesHelp class removeSelector: #refactoringOptions!RBRefactoringExamplesHelp class removeSelector: #pages!RBRefactoringExamplesHelp class removeSelector: #overview!RBRefactoringExamplesHelp class removeSelector: #firstExample!RBRefactoringExamplesHelp class removeSelector: #combineOperationsExample!RBRefactoringExamplesHelp class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteRBRefactoringExamplesHelp!RBRefactoringCoreHelp class removeSelector: #patternParserExamples!RBRefactoringCoreHelp class removeSelector: #patternParser!RBRefactoringCoreHelp class removeSelector: #pages!RBRefactoringCoreHelp class removeSelector: #overviewParser!RBRefactoringCoreHelp class removeSelector: #overview!RBRefactoringCoreHelp class removeSelector: #browserEnvironments!RBRefactoringCoreHelp class removeSelector: #bookName!RBRefactoringCoreHelp class removeSelector: #astVisiting!RBRefactoringCoreHelp class removeSelector: #astContent!Smalltalk globals removeClassNamed: #AnObsoleteRBRefactoringCoreHelp!RBCoreClassesHelp class removeSelector: #pages!RBCoreClassesHelp class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteRBCoreClassesHelp!RBBrowserSupportHelp class removeSelector: #pages!RBBrowserSupportHelp class removeSelector: #overview!RBBrowserSupportHelp class removeSelector: #bookName!RBBrowserSourceRefactoringHelp class removeSelector: #splitCascadeRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #renameTemporaryRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #pages!RBBrowserSourceRefactoringHelp class removeSelector: #moveVariableDefinitionRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #moveTemporaryToInstvarRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #inlineTemporaryRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #inlineMethodRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #inlineMethodFromComponentRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #extractToTemporaryRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #extractMethodToComponentRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #extractMethodRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #createCascadeRefactoring!RBBrowserSourceRefactoringHelp class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteRBBrowserSourceRefactoringHelp!RBBrowserMethodRefactoringHelp class removeSelector: #renameMethodRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #removeParameterRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #removeMethodRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #pushUpMethodRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #pushDownpMethodRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #pages!RBBrowserMethodRefactoringHelp class removeSelector: #moveToClassRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #moveMethodRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #inlineTargeSendsRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #inlineParameterRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #deprecateMethodRefactoring!RBBrowserMethodRefactoringHelp class removeSelector: #bookName!RBBrowserMethodRefactoringHelp class removeSelector: #addParameterRefactoring!Smalltalk globals removeClassNamed: #AnObsoleteRBBrowserMethodRefactoringHelp!RBBrowserVariableRefactoringHelp class removeSelector: #renameVariableRefactoring!RBBrowserVariableRefactoringHelp class removeSelector: #removeVariableRefactoring!RBBrowserVariableRefactoringHelp class removeSelector: #pushDownVariableRefactoring!RBBrowserVariableRefactoringHelp class removeSelector: #pullUpVariableRefactoring!RBBrowserVariableRefactoringHelp class removeSelector: #pages!RBBrowserVariableRefactoringHelp class removeSelector: #moveToVariableRefactoring!RBBrowserVariableRefactoringHelp class removeSelector: #bookName!RBBrowserVariableRefactoringHelp class removeSelector: #addVariableRefactoring!RBBrowserVariableRefactoringHelp class removeSelector: #accessorVariableRefactoring!RBBrowserVariableRefactoringHelp class removeSelector: #abstractVariableRefactoring!Smalltalk globals removeClassNamed: #AnObsoleteRBBrowserVariableRefactoringHelp!RBBrowserClassRefactoringHelp class removeSelector: #splitClassRefactoring!RBBrowserClassRefactoringHelp class removeSelector: #renameClassRefactoring!RBBrowserClassRefactoringHelp class removeSelector: #removeClassRefactoring!RBBrowserClassRefactoringHelp class removeSelector: #realizeClassRefactoring!RBBrowserClassRefactoringHelp class removeSelector: #pages!RBBrowserClassRefactoringHelp class removeSelector: #insertSuperclassRefactoring!RBBrowserClassRefactoringHelp class removeSelector: #insertSubclassRefactoring!RBBrowserClassRefactoringHelp class removeSelector: #generateSuperclassRefactoring!RBBrowserClassRefactoringHelp class removeSelector: #generateSubclassRefactoring!RBBrowserClassRefactoringHelp class removeSelector: #generateAccessorRefactoring!RBBrowserClassRefactoringHelp class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteRBBrowserClassRefactoringHelp!Smalltalk globals removeClassNamed: #AnObsoleteRBBrowserSupportHelp!Smalltalk globals removeClassNamed: #AnObsoleteRefactoringHelp!SUnitTutorial class removeSelector: #step5!SUnitTutorial class removeSelector: #step4!SUnitTutorial class removeSelector: #step3!SUnitTutorial class removeSelector: #step2!SUnitTutorial class removeSelector: #step1!SUnitTutorial class removeSelector: #pages!SUnitTutorial class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteSUnitTutorial!SUnitHelp class removeSelector: #running!SUnitHelp class removeSelector: #pages!SUnitHelp class removeSelector: #links!SUnitHelp class removeSelector: #introduction!SUnitHelp class removeSelector: #bookName!SUnitAPIDocumentation class removeSelector: #helpPackages!SUnitAPIDocumentation class removeSelector: #builder!SUnitAPIDocumentation class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteSUnitAPIDocumentation!Smalltalk globals removeClassNamed: #AnObsoleteSUnitHelp!PharoWelcomePage class removeSelector: #title!PharoWelcomePage class removeSelector: #openForRelease!PharoWelcomePage class removeSelector: #open!Smalltalk globals removeClassNamed: #AnObsoletePharoWelcomePage!PharoEnvironmentHelp class removeSelector: #wikiStyleHelp!Smalltalk globals removeClassNamed: #AnObsoletePharoEnvironmentHelp!WelcomeHelp class removeSelector: #welcome!WelcomeHelp class removeSelector: #useExternalPackages!WelcomeHelp class removeSelector: #pages!WelcomeHelp class removeSelector: #openForRelease!WelcomeHelp class removeSelector: #open!WelcomeHelp class removeSelector: #learn!WelcomeHelp class removeSelector: #gettingHelp!WelcomeHelp class removeSelector: #exploreEnvironment!WelcomeHelp class removeSelector: #documentation!WelcomeHelp class removeSelector: #changeLog!WelcomeHelp class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteWelcomeHelp!PharoTutorialHelpTutorialBuilder removeSelector: #buildTutorialTopicFor:!PharoTutorialHelpTutorialBuilder removeSelector: #build!PharoTutorialHelpTutorialBuilder class removeSelector: #new!Smalltalk globals removeClassNamed: #AnObsoletePharoTutorialHelpTutorialBuilder!PharoTutorialsHelp class removeSelector: #menuCommandOn:!PharoTutorialsHelp class removeSelector: #builder!PharoTutorialsHelp class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoletePharoTutorialsHelp!PharoTutorialHelp class removeSelector: #pages!PharoTutorialHelp class removeSelector: #listOfTutorials!PharoTutorialHelp class removeSelector: #introduction!PharoTutorialHelp class removeSelector: #createATutorial!PharoTutorialHelp class removeSelector: #canHaveSyntaxHighlighting!PharoTutorialHelp class removeSelector: #bookName!PharoTutorialAPIHelp class removeSelector: #helpPackages!PharoTutorialAPIHelp class removeSelector: #builder!PharoTutorialAPIHelp class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoletePharoTutorialAPIHelp!Smalltalk globals removeClassNamed: #AnObsoletePharoTutorialHelp!ImportingResourceHelp class removeSelector: #pages!ImportingResourceHelp class removeSelector: #overview!ImportingResourceHelp class removeSelector: #importingIcon!ImportingResourceHelp class removeSelector: #encodingAndDecodingImage!ImportingResourceHelp class removeSelector: #encodingAndDecoding!ImportingResourceHelp class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteImportingResourceHelp!RenrakuRuleHelp class removeSelector: #runningRules!RenrakuRuleHelp class removeSelector: #pages!RenrakuRuleHelp class removeSelector: #bookName!RenrakuRuleHelp class removeSelector: #bookDescription!RenrakuSpecialRulesHelp class removeSelector: #rewriteRules!RenrakuSpecialRulesHelp class removeSelector: #pages!RenrakuSpecialRulesHelp class removeSelector: #matchRules!RenrakuSpecialRulesHelp class removeSelector: #bookName!RenrakuSpecialRulesHelp class removeSelector: #bookDescription!Smalltalk globals removeClassNamed: #AnObsoleteRenrakuSpecialRulesHelp!RenrakuRuleCreationHelp class removeSelector: #testing!RenrakuRuleCreationHelp class removeSelector: #subclass!RenrakuRuleCreationHelp class removeSelector: #resetCache!RenrakuRuleCreationHelp class removeSelector: #pages!RenrakuRuleCreationHelp class removeSelector: #nameRationale!RenrakuRuleCreationHelp class removeSelector: #interestInEntities!RenrakuRuleCreationHelp class removeSelector: #groupSeverity!RenrakuRuleCreationHelp class removeSelector: #checking!RenrakuRuleCreationHelp class removeSelector: #bookName!RenrakuRuleCreationHelp class removeSelector: #bookDescription!RenrakuRuleCreationHelp class removeSelector: #advancedChecking!Smalltalk globals removeClassNamed: #AnObsoleteRenrakuRuleCreationHelp!Smalltalk globals removeClassNamed: #AnObsoleteRenrakuRuleHelp!RenrakuMigrationHelp class removeSelector: #rewriteRules!RenrakuMigrationHelp class removeSelector: #parsetreeRules!RenrakuMigrationHelp class removeSelector: #pages!RenrakuMigrationHelp class removeSelector: #genericRules!RenrakuMigrationHelp class removeSelector: #bookName!RenrakuMigrationHelp class removeSelector: #bookDescription!Smalltalk globals removeClassNamed: #AnObsoleteRenrakuMigrationHelp!RenrakuHelp class removeSelector: #topicForClass:!RenrakuHelp class removeSelector: #readInHelpBrowser!RenrakuHelp class removeSelector: #pages!RenrakuHelp class removeSelector: #bookName!RenrakuHelp class removeSelector: #bookDescription!RenrakuCritiqueHelp class removeSelector: #pages!RenrakuCritiqueHelp class removeSelector: #bookName!RenrakuCritiqueHelp class removeSelector: #bookDescription!RenrakuCritiqueExamplesHelp class removeSelector: #trivial!RenrakuCritiqueExamplesHelp class removeSelector: #transformation!RenrakuCritiqueExamplesHelp class removeSelector: #replaceNode!RenrakuCritiqueExamplesHelp class removeSelector: #refactoring!RenrakuCritiqueExamplesHelp class removeSelector: #pages!RenrakuCritiqueExamplesHelp class removeSelector: #missingMethod!RenrakuCritiqueExamplesHelp class removeSelector: #bookName!RenrakuCritiqueExamplesHelp class removeSelector: #bookDescription!Smalltalk globals removeClassNamed: #AnObsoleteRenrakuCritiqueExamplesHelp!RenrakuCritiqueDesignHelp class removeSelector: #rule!RenrakuCritiqueDesignHelp class removeSelector: #pages!RenrakuCritiqueDesignHelp class removeSelector: #hierarchy!RenrakuCritiqueDesignHelp class removeSelector: #entity!RenrakuCritiqueDesignHelp class removeSelector: #bookName!RenrakuCritiqueDesignHelp class removeSelector: #bookDescription!RenrakuCritiqueDesignHelp class removeSelector: #autofix!RenrakuCritiqueDesignHelp class removeSelector: #actions!RenrakuCritiqueDesignHelp class removeSelector: #actionRef!Smalltalk globals removeClassNamed: #AnObsoleteRenrakuCritiqueDesignHelp!Smalltalk globals removeClassNamed: #AnObsoleteRenrakuCritiqueHelp!Smalltalk globals removeClassNamed: #AnObsoleteRenrakuHelp!Smalltalk globals removeClassNamed: #AnObsoleteManifestSpecHelp!TheHeartOfSpec class removeSelector: #widgetInstantiation!TheHeartOfSpec class removeSelector: #pages!TheHeartOfSpec class removeSelector: #layouts!TheHeartOfSpec class removeSelector: #intro!TheHeartOfSpec class removeSelector: #initializeWidgets!TheHeartOfSpec class removeSelector: #initializePresenter!TheHeartOfSpec class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteTheHeartOfSpec!SpecLayouts class removeSelector: #rows!SpecLayouts class removeSelector: #pages!SpecLayouts class removeSelector: #intro!SpecLayouts class removeSelector: #columnsAndRows!SpecLayouts class removeSelector: #columns!SpecLayouts class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteSpecLayouts!SpecHelpTopics class removeSelector: #terminology!SpecHelpTopics class removeSelector: #pages!SpecHelpTopics class removeSelector: #key!SpecHelpTopics class removeSelector: #introduction!SpecHelpTopics class removeSelector: #bookName!SpecExamples class removeSelector: #secondExample!SpecExamples class removeSelector: #pages!SpecExamples class removeSelector: #moreExamples!SpecExamples class removeSelector: #firstExample!SpecExamples class removeSelector: #bookName!Smalltalk globals removeClassNamed: #AnObsoleteSpecExamples!Smalltalk globals removeClassNamed: #AnObsoleteSpecHelpTopics!BIConfigurableFormatterFormattingTest removeSelector: #formatterClass!BIConfigurableFormatterFormattingTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteBIConfigurableFormatterFormattingTest!FileDialogWindowTest removeSelector: #testIssue6406!Smalltalk globals removeClassNamed: #AnObsoleteFileDialogWindowTest!Smalltalk globals removeClassNamed: #AnObsoleteMockTutorial2!MockTutorial removeSelector: #tutorial!MockTutorial removeSelector: #thirdLesson!MockTutorial removeSelector: #secondLesson!MockTutorial removeSelector: #firstLesson!Smalltalk globals removeClassNamed: #AnObsoleteMockTutorial!MockLessonView removeSelector: #title!MockLessonView removeSelector: #showTutorialNode:!MockLessonView removeSelector: #showLesson:withTitle:!MockLessonView removeSelector: #lesson!MockLessonView removeSelector: #isOpenInWindow!Smalltalk globals removeClassNamed: #AnObsoleteMockLessonView!TutorialPlayerTestWithMockTutorial removeSelector: #testSizeReturnsThree!TutorialPlayerTestWithMockTutorial removeSelector: #testResetTutorialGoBackToFirstLesson!TutorialPlayerTestWithMockTutorial removeSelector: #testNavigation!TutorialPlayerTestWithMockTutorial removeSelector: #testCurrentLessonIsFirstOneAtCreation!TutorialPlayerTestWithMockTutorial removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTutorialPlayerTestWithMockTutorial!TutorialPlayerTestTutorialAccessor removeSelector: #testWithMockTutorial!TutorialPlayerTestTutorialAccessor removeSelector: #testDefaultsToSmalltalkSyntaxTutorial!Smalltalk globals removeClassNamed: #AnObsoleteTutorialPlayerTestTutorialAccessor!PharoTutorialTestNavigation removeSelector: #testShowingLessonBySelector!PharoTutorialTestNavigation removeSelector: #testShowingLessonByIndex!PharoTutorialTestNavigation removeSelector: #testShowFirstLessonOnGo!PharoTutorialTestNavigation removeSelector: #testSequenceNextNextPreviousOpenSecondLesson!PharoTutorialTestNavigation removeSelector: #testSequenceNextNextOpenThirdLesson!PharoTutorialTestNavigation removeSelector: #testNextOpenSecondLesson!PharoTutorialTestNavigation removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoletePharoTutorialTestNavigation!PharoTutorialTestGoOnMockTutorial removeSelector: #testNextShouldGoToSecondLesson!PharoTutorialTestGoOnMockTutorial removeSelector: #testLastThenPreviousShouldGoToSecondLesson!PharoTutorialTestGoOnMockTutorial removeSelector: #testLastThenFirstShouldGoToFirstLesson!PharoTutorialTestGoOnMockTutorial removeSelector: #testLastShouldGoToThirdLesson!PharoTutorialTestGoOnMockTutorial removeSelector: #testFirstLessonShouldBeDisplayed!PharoTutorialTestGoOnMockTutorial removeSelector: #tearDown!PharoTutorialTestGoOnMockTutorial removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoletePharoTutorialTestGoOnMockTutorial!PharoTutorialTestGo removeSelector: #testGoTwiceUseSameLessonView!PharoTutorialTestGo removeSelector: #testGoTwiceShowLessonViewIfNotVisible!PharoTutorialTestGo removeSelector: #testGoOpenSmalltalkSyntaxTutorial!PharoTutorialTestGo removeSelector: #testGoOnMockTutorial!PharoTutorialTestGo removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoletePharoTutorialTestGo!PharoTutorialHelpTutorialBuilderTest removeSelector: #testInstantiation!PharoTutorialHelpTutorialBuilderTest removeSelector: #testBuild!Smalltalk globals removeClassNamed: #AnObsoletePharoTutorialHelpTutorialBuilderTest!PharoTutorialHelpTest removeSelector: #testPages!PharoTutorialHelpTest removeSelector: #testListOfTutorials!PharoTutorialHelpTest removeSelector: #testIntroduction!PharoTutorialHelpTest removeSelector: #testCreateATutorial!PharoTutorialHelpTest removeSelector: #testBookName!Smalltalk globals removeClassNamed: #AnObsoletePharoTutorialHelpTest!!Trait method!testedTutorial	"Returns an instance of an AbstractTutorial subclass"	^ self explicitRequirement! !PharoSyntaxTutorialTest removeSelector: #testedTutorial!!Trait method!testEachSelectorExists	self testedTutorial tutorial do: [:aSelector|		self assert: (self tutorial respondsTo: aSelector) 	]! !PharoSyntaxTutorialTest removeSelector: #testEachSelectorExists!PharoSyntaxTutorialTest removeSelector: #testDivideTwoByZeroSignalsZeroDivide!Smalltalk globals removeClassNamed: #AnObsoletePharoSyntaxTutorialTest!LessonTestInstanciation removeSelector: #testTitleLessonCreation!LessonTestInstanciation removeSelector: #testNewLessonHaveEmptyStringForTitleLesson!Smalltalk globals removeClassNamed: #AnObsoleteLessonTestInstanciation!!Trait method!testedTutorial	"Returns an instance of an AbstractTutorial subclass"	^ self explicitRequirement! !HowToMakeYourOwnTutorialTest removeSelector: #testedTutorial!!Trait method!testEachSelectorExists	self testedTutorial tutorial do: [:aSelector|		self assert: (self tutorial respondsTo: aSelector) 	]! !HowToMakeYourOwnTutorialTest removeSelector: #testEachSelectorExists!Smalltalk globals removeClassNamed: #AnObsoleteHowToMakeYourOwnTutorialTest!AbstractTutorialTest removeSelector: #testTutorialsReturnsAllButMockTutorial!AbstractTutorialTest removeSelector: #testTutorialRaisesShouldBeImplemented!AbstractTutorialTest removeSelector: #testTitleHumanizeClassName!AbstractTutorialTest removeSelector: #testLessonsReturnsAllLessonInstances!Smalltalk globals removeClassNamed: #AnObsoleteAbstractTutorialTest!TTutorialTest removeSelector: #testedTutorial!TTutorialTest removeSelector: #testSizeReturnsNumberOfSelectors!TTutorialTest removeSelector: #testNotEmpty!TTutorialTest removeSelector: #testLessonAtReturnsCorrespondingLesson!TTutorialTest removeSelector: #testEachSelectorReturnsALesson!TTutorialTest removeSelector: #testEachSelectorExists!Smalltalk globals removeClassNamed: #AnObsoleteTTutorialTest!SugsNautilusContextTests removeSelector: #testContextForNautilusItsANautilusContext!Smalltalk globals removeClassNamed: #AnObsoleteSugsNautilusContextTests!ManifestWriteBarrierTests class removeSelector: #ruleRBBadMessageRuleV1FalsePositive!Smalltalk globals removeClassNamed: #AnObsoleteManifestWriteBarrierTests!WriteBarrierStub removeSelector: #var1:!WriteBarrierStub removeSelector: #var10:!WriteBarrierStub removeSelector: #var10!WriteBarrierStub removeSelector: #var1!Smalltalk globals removeClassNamed: #AnObsoleteWriteBarrierStub!WriteBarrierAnotherStub removeSelector: #var1:!WriteBarrierAnotherStub removeSelector: #var10:!WriteBarrierAnotherStub removeSelector: #var10!WriteBarrierAnotherStub removeSelector: #var1!Smalltalk globals removeClassNamed: #AnObsoleteWriteBarrierAnotherStub!WriteBarrierTest removeSelector: #testSetIsReadOnlySuccessProxy!WriteBarrierTest removeSelector: #testSetIsReadOnlySuccess!WriteBarrierTest removeSelector: #testSetIsReadOnlyImmediateProxy!WriteBarrierTest removeSelector: #testSetIsReadOnlyImmediate!WriteBarrierTest removeSelector: #testSetIsReadOnlyFailureProxy!WriteBarrierTest removeSelector: #testSetIsReadOnlyFailure!WriteBarrierTest removeSelector: #testRetryingInstVarModification!WriteBarrierTest removeSelector: #testProxyObject:initialState:tuples:!WriteBarrierTest removeSelector: #testObject:initialState:tuples:setReadOnlyBlock:!WriteBarrierTest removeSelector: #testObject:initialState:tuples:!WriteBarrierTest removeSelector: #testMutateWideSymbolUsingPrivateAtPut!WriteBarrierTest removeSelector: #testMutateWideStringUsingWordAtPut!WriteBarrierTest removeSelector: #testMutateWideStringUsingAtPut!WriteBarrierTest removeSelector: #testMutateVariableObject!WriteBarrierTest removeSelector: #testMutateObjectLastInstVarWithManyVars!WriteBarrierTest removeSelector: #testMutateObjectInstVarUsingInstVarAtPut!WriteBarrierTest removeSelector: #testMutateObjectInstVarUsingBasicAtPut!WriteBarrierTest removeSelector: #testMutateObjectInstVarUsingAtPut!WriteBarrierTest removeSelector: #testMutateObjectInstVarShouldCatchRightFailure!WriteBarrierTest removeSelector: #testMutateObjectFirstInstVarWithManyVars!WriteBarrierTest removeSelector: #testMutateObjectClass!WriteBarrierTest removeSelector: #testMutateIVObject!WriteBarrierTest removeSelector: #testMutateByteSymbolUsingPrivateAtPut!WriteBarrierTest removeSelector: #testMutateByteStringyUsingByteAtPut!WriteBarrierTest removeSelector: #testMutateByteStringyUsingAtPut!WriteBarrierTest removeSelector: #testMutateByteArrayUsingFloatAtPut!WriteBarrierTest removeSelector: #testMutateByteArrayUsingDoubleAtPut!WriteBarrierTest removeSelector: #testMutateByteArrayUsingByteAtPut!WriteBarrierTest removeSelector: #testBasicWritable!WriteBarrierTest removeSelector: #testBasicReadOnly!WriteBarrierTest removeSelector: #testBasicProxyWritable!WriteBarrierTest removeSelector: #testBasicProxyReadOnly!WriteBarrierTest removeSelector: #maybeReadOnlyObjects!WriteBarrierTest removeSelector: #expectedFailures!WriteBarrierTest removeSelector: #alwaysWritableObjects!WriteBarrierTest removeSelector: #alwaysReadOnlyObjects!WriteBarrierTest class removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteWriteBarrierTest!FFICalloutObjectForTest removeSelector: #strcpy:!FFICalloutObjectForTest removeSelector: #primStrcpy:size:!FFICalloutObjectForTest removeSelector: #primStrcpy:!FFICalloutObjectForTest removeSelector: #primFree!FFICalloutObjectForTest removeSelector: #handle:!FFICalloutObjectForTest removeSelector: #handle!FFICalloutObjectForTest removeSelector: #free!FFICalloutObjectForTest class removeSelector: #primObject:strcpy:!FFICalloutObjectForTest class removeSelector: #primCreate:!FFICalloutObjectForTest class removeSelector: #asExternalTypeOn:!Smalltalk globals removeClassNamed: #AnObsoleteFFICalloutObjectForTest!FFICalloutMethodBuilderTestContext removeSelector: #trailer!FFICalloutMethodBuilderTestContext removeSelector: #selector:!FFICalloutMethodBuilderTestContext removeSelector: #selector!FFICalloutMethodBuilderTestContext removeSelector: #methodClass:!FFICalloutMethodBuilderTestContext removeSelector: #methodClass!FFICalloutMethodBuilderTestContext removeSelector: #method!FFICalloutMethodBuilderTestContext removeSelector: #argumentNames:!FFICalloutMethodBuilderTestContext removeSelector: #argumentNames!Smalltalk globals removeClassNamed: #AnObsoleteFFICalloutMethodBuilderTestContext!FFITestPackedStructure removeSelector: #short:!FFITestPackedStructure removeSelector: #short!FFITestPackedStructure removeSelector: #long:!FFITestPackedStructure removeSelector: #long!FFITestPackedStructure removeSelector: #int64:!FFITestPackedStructure removeSelector: #int64!FFITestPackedStructure removeSelector: #float:!FFITestPackedStructure removeSelector: #float!FFITestPackedStructure removeSelector: #double:!FFITestPackedStructure removeSelector: #double!FFITestPackedStructure removeSelector: #byte:!FFITestPackedStructure removeSelector: #byte!FFITestPackedStructure class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestPackedStructure!FFITestUnion removeSelector: #short:!FFITestUnion removeSelector: #short!FFITestUnion removeSelector: #long:!FFITestUnion removeSelector: #long!FFITestUnion removeSelector: #int64:!FFITestUnion removeSelector: #int64!FFITestUnion removeSelector: #float:!FFITestUnion removeSelector: #float!FFITestUnion removeSelector: #double:!FFITestUnion removeSelector: #double!FFITestUnion removeSelector: #byte:!FFITestUnion removeSelector: #byte!FFITestUnion class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestUnion!FFITypesTests removeSelector: #unsigned8ByteNumbers!FFITypesTests removeSelector: #unsigned4ByteNumbers!FFITypesTests removeSelector: #unsigned2ByteNumbers!FFITypesTests removeSelector: #unsigned1ByteNumbers!FFITypesTests removeSelector: #testUnsignedLongLong!FFITypesTests removeSelector: #testUnsignedLong!FFITypesTests removeSelector: #testUnsigned4ByteIntegers!FFITypesTests removeSelector: #testUnsigned2ByteIntegers!FFITypesTests removeSelector: #testUnsigned1ByteIntegers!FFITypesTests removeSelector: #testSignedLongLong!FFITypesTests removeSelector: #testSignedLong!FFITypesTests removeSelector: #testSignedAtWithDiferentSizes!FFITypesTests removeSelector: #testSigned4ByteIntegers!FFITypesTests removeSelector: #testSigned2ByteIntegers!FFITypesTests removeSelector: #testSigned1ByteIntegers!FFITypesTests removeSelector: #signed8ByteNumbers!FFITypesTests removeSelector: #signed4ByteNumbers!FFITypesTests removeSelector: #signed2ByteNumbers!FFITypesTests removeSelector: #signed1ByteNumbers!Smalltalk globals removeClassNamed: #AnObsoleteFFITypesTests!FFITypeArrayTests removeSelector: #testStructureRead!FFITypeArrayTests removeSelector: #testExternalAtPutFloat!FFITypeArrayTests removeSelector: #testExternalAtPut!FFITypeArrayTests removeSelector: #testExternalAt!FFITypeArrayTests removeSelector: #testAtPut!FFITypeArrayTests removeSelector: #testAt!Smalltalk globals removeClassNamed: #AnObsoleteFFITypeArrayTests!FFIOpaqueObjectTests removeSelector: #testParseAsPointer!FFIOpaqueObjectTests removeSelector: #testParseAsBigArityPointer!FFIOpaqueObjectTests removeSelector: #testDereferencedExternalObjectError!FFIOpaqueObjectTests removeSelector: #newParser!FFIOpaqueObjectTests removeSelector: #ffiInstVarArgument:generator:!FFIOpaqueObjectTests removeSelector: #ffiBindingOf:!Smalltalk globals removeClassNamed: #AnObsoleteFFIOpaqueObjectTests!FFIFunctionParserTests removeSelector: #testParseFunctionNoArguments!FFIFunctionParserTests removeSelector: #testParseFunction!FFIFunctionParserTests removeSelector: #testParseAnonymousFunctionNoArguments!FFIFunctionParserTests removeSelector: #testParseAnonymousFunction!FFIFunctionParserTests removeSelector: #newParser!Smalltalk globals removeClassNamed: #AnObsoleteFFIFunctionParserTests!FFIExternalValueHolderTests removeSelector: #testCreateValueHolder!FFIExternalValueHolderTests removeSelector: #testCall!FFIExternalValueHolderTests removeSelector: #getTime:!Smalltalk globals removeClassNamed: #AnObsoleteFFIExternalValueHolderTests!FFIExternalUnionTests removeSelector: #testUnionAccess!Smalltalk globals removeClassNamed: #AnObsoleteFFIExternalUnionTests!FFIExternalStructureTests removeSelector: #testStructWithPointerAccess!FFIExternalStructureTests removeSelector: #testStructWithArray!FFIExternalStructureTests removeSelector: #testStructAccess!FFIExternalStructureTests removeSelector: #testNestedStructureWithArray!FFIExternalStructureTests removeSelector: #testNestedStructure!FFIExternalStructureTests removeSelector: #testFlatStructureLayoutSysVAMD64PostProcess2!FFIExternalStructureTests removeSelector: #testFlatStructureLayoutSysVAMD64PostProcess!FFIExternalStructureTests removeSelector: #testFlatStructureLayout2!FFIExternalStructureTests removeSelector: #testFlatStructureLayout!FFIExternalStructureTests removeSelector: #testExternallyAllocatedStructure!FFIExternalStructureTests removeSelector: #testExternallyAllocatedNestedStructure!FFIExternalStructureTests removeSelector: #testExternalStructWithArray!Smalltalk globals removeClassNamed: #AnObsoleteFFIExternalStructureTests!FFIExternalStructurePlatformTests removeSelector: #testStructureHasCorrectSize64bits!FFIExternalStructurePlatformTests removeSelector: #testStructureHasCorrectSize32bits!FFIExternalStructurePlatformTests removeSelector: #testStructureHasCorrectOffsets64bits!FFIExternalStructurePlatformTests removeSelector: #testStructureHasCorrectOffsets32bits!FFIExternalStructurePlatformTests removeSelector: #is64bit!FFIExternalStructurePlatformTests removeSelector: #is32bit!Smalltalk globals removeClassNamed: #AnObsoleteFFIExternalStructurePlatformTests!FFIExternalStructureFieldParserTests removeSelector: #testParseFieldsStructure!FFIExternalStructureFieldParserTests removeSelector: #setUp!FFIExternalStructureFieldParserTests removeSelector: #newParser!Smalltalk globals removeClassNamed: #AnObsoleteFFIExternalStructureFieldParserTests!FFIExternalPackedStructureTests removeSelector: #testStructAccess!FFIExternalPackedStructureTests removeSelector: #testExternallyAllocatedStructure!Smalltalk globals removeClassNamed: #AnObsoleteFFIExternalPackedStructureTests!FFIExternalEnumerationTests removeSelector: #testReturn!FFIExternalEnumerationTests removeSelector: #testNewError!FFIExternalEnumerationTests removeSelector: #testFromInteger!FFIExternalEnumerationTests removeSelector: #testEnumIncludes!FFIExternalEnumerationTests removeSelector: #testEnumIdents!FFIExternalEnumerationTests removeSelector: #testCall!FFIExternalEnumerationTests removeSelector: #ffiTestReturn:format:to:!FFIExternalEnumerationTests removeSelector: #ffiTestCall:format:to:!FFIExternalEnumerationTests removeSelector: #enumClass!Smalltalk globals removeClassNamed: #AnObsoleteFFIExternalEnumerationTests!FFIExternalArrayTests removeSelector: #testResolveType!FFIExternalArrayTests removeSelector: #testExternalAtPutFloat!FFIExternalArrayTests removeSelector: #testExternalAtPut!FFIExternalArrayTests removeSelector: #testExternalAt!FFIExternalArrayTests removeSelector: #testAtPut!FFIExternalArrayTests removeSelector: #testAt!Smalltalk globals removeClassNamed: #AnObsoleteFFIExternalArrayTests!FFIConstantHandleTests removeSelector: #testReturn!FFIConstantHandleTests removeSelector: #testCall!FFIConstantHandleTests removeSelector: #getTimeReturnConstantHandle:!FFIConstantHandleTests removeSelector: #getTime:!Smalltalk globals removeClassNamed: #AnObsoleteFFIConstantHandleTests!FFICalloutTests removeSelector: #testParseOptions!FFICalloutTests removeSelector: #testBuildingFnSpec!FFICalloutTests removeSelector: #setUp!FFICalloutTests removeSelector: #ffiBindingOf:!FFICalloutTests removeSelector: #checkTypeSelf:class:arity:!FFICalloutTests removeSelector: #checkType:class:value:!FFICalloutTests removeSelector: #checkType:class:arity:argument:!Smalltalk globals removeClassNamed: #AnObsoleteFFICalloutTests!FFICalloutMethodBuilderTest removeSelector: #testCallWithSelf!FFICalloutMethodBuilderTest removeSelector: #testCallWithPointerPointer!FFICalloutMethodBuilderTest removeSelector: #testCallWithPointer!FFICalloutMethodBuilderTest removeSelector: #testCallWithObject!FFICalloutMethodBuilderTest removeSelector: #testCallWithConstant!FFICalloutMethodBuilderTest removeSelector: #testCallSimple!FFICalloutMethodBuilderTest removeSelector: #testCallReturningEnumeration!FFICalloutMethodBuilderTest removeSelector: #testCallCreateObject!FFICalloutMethodBuilderTest removeSelector: #testAllAtomicTypesCall!FFICalloutMethodBuilderTest removeSelector: #setUp!FFICalloutMethodBuilderTest removeSelector: #builder!Smalltalk globals removeClassNamed: #AnObsoleteFFICalloutMethodBuilderTest!FFICalloutAPITests removeSelector: #testVoidPointer!FFICalloutAPITests removeSelector: #testPrintString!FFICalloutAPITests removeSelector: #testLongLongs!FFICalloutAPITests removeSelector: #testIntCall!FFICalloutAPITests removeSelector: #testFloatCall!FFICalloutAPITests removeSelector: #testDoubleCall!FFICalloutAPITests removeSelector: #testCharPointer!FFICalloutAPITests removeSelector: #testCharCall!FFICalloutAPITests removeSelector: #testCallWithSelfParameter!FFICalloutAPITests removeSelector: #testCallWithObjectParameter!FFICalloutAPITests removeSelector: #testCallWithObjectCreation!FFICalloutAPITests removeSelector: #testCallWithConstParameter!FFICalloutAPITests removeSelector: #testCallWithAllConstParameter!FFICalloutAPITests removeSelector: #testByteArrayToExternalAddress!FFICalloutAPITests removeSelector: #runCase!FFICalloutAPITests removeSelector: #resetFFIMethods!FFICalloutAPITests removeSelector: #primStr:cat:!FFICalloutAPITests removeSelector: #primMemMoveFrom:to:size:!FFICalloutAPITests removeSelector: #primFromByteArray:toExternalAddress:size:!FFICalloutAPITests removeSelector: #method2!FFICalloutAPITests removeSelector: #method1!FFICalloutAPITests removeSelector: #ffiToLower:!FFICalloutAPITests removeSelector: #ffiTestContantFormat:value:to:!FFICalloutAPITests removeSelector: #ffiTestConstantFormat:to:!FFICalloutAPITests removeSelector: #ffiLongLongAbs:!FFICalloutAPITests removeSelector: #ffiLibraryName!FFICalloutAPITests removeSelector: #ffiIntAbs:!FFICalloutAPITests removeSelector: #ffiFloatAbs:!FFICalloutAPITests removeSelector: #ffiDoubleAbs:!FFICalloutAPITests removeSelector: #ffiCopyString:to:!FFICalloutAPITests removeSelector: #ffiCalloutClass!Smalltalk globals removeClassNamed: #AnObsoleteFFICalloutAPITests!FFICallbackTests removeSelector: #wordResult:!FFICallbackTests removeSelector: #testEnumerationReturnValue!FFICallbackTests removeSelector: #testCqsortWithByteArray!FFICallbackTests removeSelector: #testCqsort!FFICallbackTests removeSelector: #intregargsp!FFICallbackTests removeSelector: #floatregargsp!Smalltalk globals removeClassNamed: #AnObsoleteFFICallbackTests!FFITestStructureSmallIntFloatStructure removeSelector: #z:!FFITestStructureSmallIntFloatStructure removeSelector: #z!FFITestStructureSmallIntFloatStructure removeSelector: #y:!FFITestStructureSmallIntFloatStructure removeSelector: #y!FFITestStructureSmallIntFloatStructure removeSelector: #x:!FFITestStructureSmallIntFloatStructure removeSelector: #x!FFITestStructureSmallIntFloatStructure removeSelector: #w:!FFITestStructureSmallIntFloatStructure removeSelector: #w!FFITestStructureSmallIntFloatStructure class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestStructureSmallIntFloatStructure!FFITestStructureSmallFloatStructure removeSelector: #z:!FFITestStructureSmallFloatStructure removeSelector: #z!FFITestStructureSmallFloatStructure removeSelector: #y:!FFITestStructureSmallFloatStructure removeSelector: #y!FFITestStructureSmallFloatStructure removeSelector: #x:!FFITestStructureSmallFloatStructure removeSelector: #x!FFITestStructureSmallFloatStructure removeSelector: #w:!FFITestStructureSmallFloatStructure removeSelector: #w!FFITestStructureSmallFloatStructure class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestStructureSmallFloatStructure!FFITestStructureByPlatform removeSelector: #pointer:!FFITestStructureByPlatform removeSelector: #pointer!FFITestStructureByPlatform removeSelector: #long:!FFITestStructureByPlatform removeSelector: #long!FFITestStructureByPlatform class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestStructureByPlatform!FFITestStructure removeSelector: #ulong:!FFITestStructure removeSelector: #ulong!FFITestStructure removeSelector: #short:!FFITestStructure removeSelector: #short!FFITestStructure removeSelector: #long:!FFITestStructure removeSelector: #long!FFITestStructure removeSelector: #int64:!FFITestStructure removeSelector: #int64!FFITestStructure removeSelector: #float:!FFITestStructure removeSelector: #float!FFITestStructure removeSelector: #double:!FFITestStructure removeSelector: #double!FFITestStructure removeSelector: #byte:!FFITestStructure removeSelector: #byte!FFITestStructure class removeSelector: #initialize!FFITestStructure class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestStructure!FFITestPointerStructure removeSelector: #two:!FFITestPointerStructure removeSelector: #two!FFITestPointerStructure removeSelector: #pointer:!FFITestPointerStructure removeSelector: #pointer!FFITestPointerStructure removeSelector: #one:!FFITestPointerStructure removeSelector: #one!FFITestPointerStructure removeSelector: #nestedPointer:!FFITestPointerStructure removeSelector: #nestedPointer!FFITestPointerStructure class removeSelector: #initialize!FFITestPointerStructure class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestPointerStructure!FFITestNestingStructureWithArray removeSelector: #nested:!FFITestNestingStructureWithArray removeSelector: #nested!FFITestNestingStructureWithArray class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestNestingStructureWithArray!FFITestNestingStructure removeSelector: #two:!FFITestNestingStructure removeSelector: #two!FFITestNestingStructure removeSelector: #one:!FFITestNestingStructure removeSelector: #one!FFITestNestingStructure removeSelector: #nested:!FFITestNestingStructure removeSelector: #nested!FFITestNestingStructure class removeSelector: #initialize!FFITestNestingStructure class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestNestingStructure!FFITestArrayStructure removeSelector: #char5:!FFITestArrayStructure removeSelector: #char5!FFITestArrayStructure removeSelector: #byte10:!FFITestArrayStructure removeSelector: #byte10!FFITestArrayStructure class removeSelector: #initialize!FFITestArrayStructure class removeSelector: #fieldsDesc!Smalltalk globals removeClassNamed: #AnObsoleteFFITestArrayStructure!FFITestEnumeration class removeSelector: #initialize!FFITestEnumeration class removeSelector: #enumDecl!FFITestEnumeration class removeSelector: #DDD!FFITestEnumeration class removeSelector: #CCC!FFITestEnumeration class removeSelector: #BBB!FFITestEnumeration class removeSelector: #AAA!Smalltalk globals removeClassNamed: #AnObsoleteFFITestEnumeration!FFICalloutMethodBuilderTestRecuestor removeSelector: #loaderFromMethodArgsNamed:!Smalltalk globals removeClassNamed: #AnObsoleteFFICalloutMethodBuilderTestRecuestor!BlockClosure removeSelector: #fuelValueWithoutNotifications!BlockClosure removeSelector: #assertWellMaterializedInto:in:!FLSimpleStackTest removeSelector: #testPush!FLSimpleStackTest removeSelector: #testPop!FLSimpleStackTest removeSelector: #testIsEmpty!FLSimpleStackTest removeSelector: #testGrow!FLSimpleStackTest removeSelector: #testCapacity!Smalltalk globals removeClassNamed: #AnObsoleteFLSimpleStackTest!FLWeakObjectsTest removeSelector: #testWeakWithStrongReferenceFromGraph2!FLWeakObjectsTest removeSelector: #testWeakWithStrongReferenceFromGraph!FLWeakObjectsTest removeSelector: #testWeakAndNoStrongReferenceFromGraph!FLWeakObjectsTest removeSelector: #testAssociationWithWeakFinalizationList!FLWeakObjectsTest removeSelector: #testAssociationWithWeak!Smalltalk globals removeClassNamed: #AnObsoleteFLWeakObjectsTest!FLVersionTest removeSelector: #testSameVersion!FLVersionTest removeSelector: #testBadVersion!Smalltalk globals removeClassNamed: #AnObsoleteFLVersionTest!FLUserGuidesTest removeSelector: #testShowingProgressBar!FLUserGuidesTest removeSelector: #testPluggableSubstitution!FLUserGuidesTest removeSelector: #testMemoryStream!FLUserGuidesTest removeSelector: #testGZip!FLUserGuidesTest removeSelector: #testFileStream!FLUserGuidesTest removeSelector: #testFileShortcuts!FLUserGuidesTest removeSelector: #testDemo!FLUserGuidesTest removeSelector: #testConsiderGlobal!FLUserGuidesTest removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoleteFLUserGuidesTest!FLTraitSerializationTest removeSelector: #newSecondaryTrait!FLTraitSerializationTest removeSelector: #newInstanceFrom:!FLTraitSerializationTest removeSelector: #newClassOrTrait!Smalltalk globals removeClassNamed: #AnObsoleteFLGlobalTraitSerializationTest!Smalltalk globals removeClassNamed: #AnObsoleteFLTraitSerializationTest!FLSortedCollectionSerializationTest removeSelector: #testSortedCollectionWithInstanceVariableReferenceChange!FLSortedCollectionSerializationTest removeSelector: #testSortedCollectionWithInstanceVariableReference!FLSortedCollectionSerializationTest removeSelector: #testSortedCollectionWithClassVariableReference!FLSortedCollectionSerializationTest removeSelector: #testSortedCollectionWithClassVariableChanges!FLSortedCollectionSerializationTest removeSelector: #testSortedCollection!FLSortedCollectionSerializationTest removeSelector: #sortedBlockClosureWithInstanceVariable!FLSortedCollectionSerializationTest removeSelector: #classVariableForTesting:!FLSortedCollectionSerializationTest removeSelector: #classVariableForTesting!FLSortedCollectionSerializationTest class removeSelector: #sortedCollectionForTestingWithClassVariable!Smalltalk globals removeClassNamed: #AnObsoleteFLSortedCollectionSerializationTest!FLSingletonTest removeSelector: #testSingletonMaterializationEnforcedNoInstance!FLSingletonTest removeSelector: #testSingletonMaterializationEnforced!FLSingletonTest removeSelector: #testSingletonMaterialization!FLSingletonTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteFLSingletonTest!FLSignatureTest removeSelector: #testSameSignature!FLSignatureTest removeSelector: #testBadSignature!Smalltalk globals removeClassNamed: #AnObsoleteFLSignatureTest!FLSerializationTest removeSelector: #withNotificationsNewClassWithInstanceVariableNames:!FLSerializationTest removeSelector: #withNotificationsNewClass!FLSerializationTest removeSelector: #useStandardFileStream!FLSerializationTest removeSelector: #useMultiByteFileStream!FLSerializationTest removeSelector: #useMemoryStream!FLSerializationTest removeSelector: #useInMemorySerializationStream!FLSerializationTest removeSelector: #useGzipInMemoryStream!FLSerializationTest removeSelector: #useBinaryFileStream!FLSerializationTest removeSelector: #traits!FLSerializationTest removeSelector: #traitNamePrefix!FLSerializationTest removeSelector: #tearDownTraits!FLSerializationTest removeSelector: #tearDownInstanceVariables!FLSerializationTest removeSelector: #tearDownGlobalVariables!FLSerializationTest removeSelector: #tearDownClassFactory!FLSerializationTest removeSelector: #tearDown!FLSerializationTest removeSelector: #streamFactory!FLSerializationTest removeSelector: #setUpSerializer!FLSerializationTest removeSelector: #setUpMaterializer!FLSerializationTest removeSelector: #setUpClassFactory!FLSerializationTest removeSelector: #setUp!FLSerializationTest removeSelector: #serializer!FLSerializationTest removeSelector: #serialize:!FLSerializationTest removeSelector: #serializationOf:includes:!FLSerializationTest removeSelector: #serializationOf:!FLSerializationTest removeSelector: #resultOfSerializeAndMaterializeMethodDictionary:!FLSerializationTest removeSelector: #resultOfSerializeAndMaterializeMethod:!FLSerializationTest removeSelector: #resultOfSerializeAndMaterializeCompiledMethod:!FLSerializationTest removeSelector: #resultOfSerializeAndMaterialize:!FLSerializationTest removeSelector: #removeFromSystem:!FLSerializationTest removeSelector: #newTraitSuffixed:!FLSerializationTest removeSelector: #newTraitNamed:inCategory:!FLSerializationTest removeSelector: #newSubclassOf:instanceVariableNames:classVariableNames:!FLSerializationTest removeSelector: #newSubclassNamed:of:instanceVariableNames:classVariableNames:!FLSerializationTest removeSelector: #newClassInCategory:!FLSerializationTest removeSelector: #newClass!FLSerializationTest removeSelector: #materializer!FLSerializationTest removeSelector: #materializedObjects!FLSerializationTest removeSelector: #materialized!FLSerializationTest removeSelector: #materializationHeader!FLSerializationTest removeSelector: #materialization!FLSerializationTest removeSelector: #deleteFileNamed:!FLSerializationTest removeSelector: #cleanUpTraits!FLSerializationTest removeSelector: #classFactory!FLSerializationTest removeSelector: #assertSerializationIdentityOf:!FLSerializationTest removeSelector: #assertSerializationEqualityOrIdentityOf:!FLSerializationTest removeSelector: #assertSerializationEqualityOf:!FLSerializationTest removeSelector: #analyzer!FLSerializationTest class removeSelector: #packageNamesUnderTest!FLPluggableSubstitutionTest removeSelector: #testUniqueSubstitution!FLPluggableSubstitutionTest removeSelector: #testTransientPairLeft!FLPluggableSubstitutionTest removeSelector: #testTransientPair!FLPluggableSubstitutionTest removeSelector: #testSubstituteUndefinedObjectInPresenceOfNil!FLPluggableSubstitutionTest removeSelector: #testSubstituteTrueInPresenceOfTheTrueInstance!FLPluggableSubstitutionTest removeSelector: #testSubstituteCharacterInPresenceOfSomeCharacter!FLPluggableSubstitutionTest removeSelector: #testSubstituteByItself!FLPluggableSubstitutionTest removeSelector: #testSubstitute:inPresenceOf:!FLPluggableSubstitutionTest removeSelector: #testSimple!FLPluggableSubstitutionTest removeSelector: #testPrivateExcludedAndWithConflicts!FLPluggableSubstitutionTest removeSelector: #testPrivateExcluded!FLPluggableSubstitutionTest removeSelector: #testLowercaseSomeSymbols!FLPluggableSubstitutionTest removeSelector: #testAvoidRecursion!Smalltalk globals removeClassNamed: #AnObsoleteFLPluggableSubstitutionTest!FLHookedSubstitutionTest removeSelector: #testTransientByNil!FLHookedSubstitutionTest removeSelector: #testSubstituteByItself!FLHookedSubstitutionTest removeSelector: #testProxyInsideObjectByTarget!FLHookedSubstitutionTest removeSelector: #testProxyByTargetInsideObjectAndAnalisysIsPropagated!FLHookedSubstitutionTest removeSelector: #testProxyByTargetAnalisysIsPropagated!FLHookedSubstitutionTest removeSelector: #testProxyByTarget!FLHookedSubstitutionTest removeSelector: #testObjectByProxyThatBecomesItsContent!FLHookedSubstitutionTest removeSelector: #testClassWithCachedValueByNil!FLHookedSubstitutionTest removeSelector: #testAvoidRecursion!Smalltalk globals removeClassNamed: #AnObsoleteFLHookedSubstitutionTest!FLHeaderSerializationTest removeSelector: #testPreMaterializationActions!FLHeaderSerializationTest removeSelector: #testPostMaterializationActions!FLHeaderSerializationTest removeSelector: #testJustMaterializeHeader!FLHeaderSerializationTest removeSelector: #testAdditionalObjects!Smalltalk globals removeClassNamed: #AnObsoleteFLHeaderSerializationTest!FLHashedCollectionSerializationTest removeSelector: #testSetRehash!FLHashedCollectionSerializationTest removeSelector: #testDictionaryRehash!Smalltalk globals removeClassNamed: #AnObsoleteFLHashedCollectionSerializationTest!FLGlobalSendSerializationTest removeSelector: #testGlobalNotFound!FLGlobalSendSerializationTest removeSelector: #testBasic!Smalltalk globals removeClassNamed: #AnObsoleteFLGlobalSendSerializationTest!FLGlobalEnvironmentTest removeSelector: #testGlobalMetaclassNotFound!FLGlobalEnvironmentTest removeSelector: #testGlobalMetaclass!FLGlobalEnvironmentTest removeSelector: #testGlobalClassNotFound!FLGlobalEnvironmentTest removeSelector: #testGlobalClass!FLGlobalEnvironmentTest removeSelector: #testDontConsiderCustomGlobal!FLGlobalEnvironmentTest removeSelector: #testConsiderCustomGlobalNotFound!FLGlobalEnvironmentTest removeSelector: #testConsiderCustomGlobal!FLGlobalEnvironmentTest removeSelector: #testCompiledMethodChanged!FLGlobalEnvironmentTest removeSelector: #testCompiledMethod!FLGlobalEnvironmentTest removeSelector: #testClassSideCompiledMethod!FLGlobalEnvironmentTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteFLGlobalEnvironmentTest!FLContextSerializationTest removeSelector: #testDoIt!FLContextSerializationTest removeSelector: #testContextWithTemp!FLContextSerializationTest removeSelector: #testContextWithSender!FLContextSerializationTest removeSelector: #testContextWithNilPc!FLContextSerializationTest removeSelector: #testContextWithClosureContextWithOutPointerTesting!FLContextSerializationTest removeSelector: #testContextWithClosureAndSender!FLContextSerializationTest removeSelector: #testContextWithClosure!FLContextSerializationTest removeSelector: #testContextThisContext!FLContextSerializationTest removeSelector: #testContext!FLContextSerializationTest removeSelector: #setUp!FLContextSerializationTest class removeSelector: #thisContextSample!FLContextSerializationTest class removeSelector: #blockClosureContextWithOutPointerTesting!FLContextSerializationTest class removeSelector: #blockClosureContextTestingWithSender:!FLContextSerializationTest class removeSelector: #blockClosureContextTesting!Smalltalk globals removeClassNamed: #AnObsoleteFLContextSerializationTest!FLCompiledMethodSerializationTest removeSelector: #useNotInstalled!FLCompiledMethodSerializationTest removeSelector: #useInstalled!FLCompiledMethodSerializationTest removeSelector: #useDoIt!FLCompiledMethodSerializationTest removeSelector: #testNotInstalled!FLCompiledMethodSerializationTest removeSelector: #testInstalledModified!FLCompiledMethodSerializationTest removeSelector: #testInstalled!FLCompiledMethodSerializationTest removeSelector: #testDoIt!FLCompiledMethodSerializationTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteFLCompiledMethodSerializationTest!FLMigrationTest removeSelector: #testVariableRename!FLMigrationTest removeSelector: #testVariableRemoved!FLMigrationTest removeSelector: #testVariableOrderChange!FLMigrationTest removeSelector: #testVariableInsertion!FLMigrationTest removeSelector: #testSuperclassChange!FLMigrationTest removeSelector: #testFormatFixedToVariable!FLMigrationTest removeSelector: #testClassRename!FLMigrationTest removeSelector: #testClassAndVariableRename!FLMigrationTest removeSelector: #testChangeInSuperclass!FLMigrationTest removeSelector: #testBadDestinationVariableRename!FLMigrationTest removeSelector: #redefined:with:!Smalltalk globals removeClassNamed: #AnObsoleteFLMigrationTest!FLIgnoredVariablesTest removeSelector: #testTwoIgnoredVariables!FLIgnoredVariablesTest removeSelector: #testOneIgnoredVariable!FLIgnoredVariablesTest removeSelector: #testIgnoredValueIsNotMaterialized!FLIgnoredVariablesTest removeSelector: #testAllVariablesIgnored!Smalltalk globals removeClassNamed: #AnObsoleteFLIgnoredVariablesTest!FLGlobalClassSerializationTest removeSelector: #testInstanceOfAnObsoleteClass!Smalltalk globals removeClassNamed: #AnObsoleteFLGlobalClassSerializationTest!FLClassSerializationTest removeSelector: #newSecondaryTrait!FLClassSerializationTest removeSelector: #newInstanceFrom:!FLClassSerializationTest removeSelector: #newClassWithInstanceVariableNames:superclass:!FLClassSerializationTest removeSelector: #newClassWithInstanceVariableNames:!FLClassSerializationTest removeSelector: #newClassOrTraitWithSuperClass:!FLClassSerializationTest removeSelector: #newClassOrTrait!FLClassSerializationTest removeSelector: #during:rename:as:!Smalltalk globals removeClassNamed: #AnObsoleteFLClassSerializationTest!FLBlockClosureSerializationTest removeSelector: #testNestedBlockClosure!FLBlockClosureSerializationTest removeSelector: #testBlockClosureWithThreeArguments!FLBlockClosureSerializationTest removeSelector: #testBlockClosureWithTempVariableRead!FLBlockClosureSerializationTest removeSelector: #testBlockClosureWithSelfSend!FLBlockClosureSerializationTest removeSelector: #testBlockClosureWithClassVariableRead!FLBlockClosureSerializationTest removeSelector: #testBlockClosureRemoved!FLBlockClosureSerializationTest removeSelector: #testBlockClosureChangeSameBytecodes!FLBlockClosureSerializationTest removeSelector: #testBlockClosureChangeDifferentBytecodes!FLBlockClosureSerializationTest class removeSelector: #blockClosureWithTempVariableRead!FLBlockClosureSerializationTest class removeSelector: #blockClosureWithSelfSend!Smalltalk globals removeClassNamed: #AnObsoleteFLBlockClosureSerializationTest!FLStandardFileStreamSerializationTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteFLStandardFileStreamSerializationTest!FLProcessSerializationTest removeSelector: #testSerializingShortDelay!FLProcessSerializationTest removeSelector: #setUpSerializer!Smalltalk globals removeClassNamed: #AnObsoleteFLProcessSerializationTest!FLInMemoryBasicSerializationTest removeSelector: #testStringGlobalsAndClosure!FLInMemoryBasicSerializationTest removeSelector: #testConsiderCustomWideSymbolGlobal!FLInMemoryBasicSerializationTest removeSelector: #testConsiderCustomGlobal!FLInMemoryBasicSerializationTest removeSelector: #serialize:!FLInMemoryBasicSerializationTest removeSelector: #materialized!FLInMemoryBasicSerializationTest removeSelector: #materialization!FLInMemoryBasicSerializationTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteFLInMemoryBasicSerializationTest!FLGZippedBasicSerializationTest removeSelector: #testWideString!FLGZippedBasicSerializationTest removeSelector: #testPairs!FLGZippedBasicSerializationTest removeSelector: #testCompleteBinaryTree!FLGZippedBasicSerializationTest removeSelector: #testByteArray!FLGZippedBasicSerializationTest removeSelector: #setUp!FLGZippedBasicSerializationTest removeSelector: #expectedFailures!FLGZippedBasicSerializationTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteFLGZippedBasicSerializationTest!FLBinaryFileStreamSerializationTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteFLBinaryFileStreamSerializationTest!FLBasicSerializationTest removeSelector: #testWriteStream!FLBasicSerializationTest removeSelector: #testWordArray!FLBasicSerializationTest removeSelector: #testWideStringGlobal!FLBasicSerializationTest removeSelector: #testWideStringClassName!FLBasicSerializationTest removeSelector: #testWideString!FLBasicSerializationTest removeSelector: #testWideAndByteCharacters!FLBasicSerializationTest removeSelector: #testUUID!FLBasicSerializationTest removeSelector: #testTrue!FLBasicSerializationTest removeSelector: #testTime!FLBasicSerializationTest removeSelector: #testSystemDictionary!FLBasicSerializationTest removeSelector: #testSymbol!FLBasicSerializationTest removeSelector: #testString!FLBasicSerializationTest removeSelector: #testSmalltalkGlobals!FLBasicSerializationTest removeSelector: #testSmallIntegerNegative!FLBasicSerializationTest removeSelector: #testSmallIntegerMinValue!FLBasicSerializationTest removeSelector: #testSmallIntegerMaxValue!FLBasicSerializationTest removeSelector: #testSmallInteger!FLBasicSerializationTest removeSelector: #testSharedReferences!FLBasicSerializationTest removeSelector: #testSetWithSetElement!FLBasicSerializationTest removeSelector: #testSetWithNil!FLBasicSerializationTest removeSelector: #testSetElement!FLBasicSerializationTest removeSelector: #testSet!FLBasicSerializationTest removeSelector: #testScaledDecimal!FLBasicSerializationTest removeSelector: #testRunArray!FLBasicSerializationTest removeSelector: #testRemoteString!FLBasicSerializationTest removeSelector: #testRecursiveArray!FLBasicSerializationTest removeSelector: #testRectangle!FLBasicSerializationTest removeSelector: #testReadStream!FLBasicSerializationTest removeSelector: #testPoint!FLBasicSerializationTest removeSelector: #testPair!FLBasicSerializationTest removeSelector: #testOrderedCollection!FLBasicSerializationTest removeSelector: #testNotSerializableObject!FLBasicSerializationTest removeSelector: #testNil!FLBasicSerializationTest removeSelector: #testNestedDictionary!FLBasicSerializationTest removeSelector: #testMethodDictionary!FLBasicSerializationTest removeSelector: #testLotsOfNils!FLBasicSerializationTest removeSelector: #testLotsOfCharacters!FLBasicSerializationTest removeSelector: #testLargePositiveInteger!FLBasicSerializationTest removeSelector: #testLargeNegativeInteger!FLBasicSerializationTest removeSelector: #testInterval!FLBasicSerializationTest removeSelector: #testGradientFillStyle!FLBasicSerializationTest removeSelector: #testGlobalMetaclass!FLBasicSerializationTest removeSelector: #testGlobalClass!FLBasicSerializationTest removeSelector: #testFuelReplacement!FLBasicSerializationTest removeSelector: #testFraction!FLBasicSerializationTest removeSelector: #testFloat!FLBasicSerializationTest removeSelector: #testFalse!FLBasicSerializationTest removeSelector: #testExecuteAfterMaterialization!FLBasicSerializationTest removeSelector: #testExceptions!FLBasicSerializationTest removeSelector: #testEmptySet!FLBasicSerializationTest removeSelector: #testEmptyOrderedCollection!FLBasicSerializationTest removeSelector: #testEmptyDictionary!FLBasicSerializationTest removeSelector: #testEmptyArray!FLBasicSerializationTest removeSelector: #testDuration!FLBasicSerializationTest removeSelector: #testDontConsiderCustomGlobal!FLBasicSerializationTest removeSelector: #testDictionary!FLBasicSerializationTest removeSelector: #testDateOffsetsChanging!FLBasicSerializationTest removeSelector: #testDateOffsets!FLBasicSerializationTest removeSelector: #testDateAndTime!FLBasicSerializationTest removeSelector: #testDate!FLBasicSerializationTest removeSelector: #testCyclicLinksInArray!FLBasicSerializationTest removeSelector: #testCyclicLinks!FLBasicSerializationTest removeSelector: #testCyclicLink!FLBasicSerializationTest removeSelector: #testCyclicIdentitySet!FLBasicSerializationTest removeSelector: #testConsiderCustomWideSymbolGlobal!FLBasicSerializationTest removeSelector: #testConsiderCustomGlobal!FLBasicSerializationTest removeSelector: #testCompiledMethod!FLBasicSerializationTest removeSelector: #testColorArray!FLBasicSerializationTest removeSelector: #testColor!FLBasicSerializationTest removeSelector: #testClassSideCompiledMethod!FLBasicSerializationTest removeSelector: #testCharacter!FLBasicSerializationTest removeSelector: #testByteArrays!FLBasicSerializationTest removeSelector: #testBitmap!FLBasicSerializationTest removeSelector: #testBag!FLBasicSerializationTest removeSelector: #testAssociation!FLBasicSerializationTest removeSelector: #testArray!FLBasicSerializationTest removeSelector: #testAllRangeOfIntegers!FLBasicSerializationTest removeSelector: #tearDown!FLBasicSerializationTest removeSelector: #setUp!FLBasicSerializationTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteFLBasicSerializationTest!Smalltalk globals removeClassNamed: #AnObsoleteFLSerializationTest!FLIndexStreamTest removeSelector: #testNextIndexPut!FLIndexStreamTest removeSelector: #testNextIndex!FLIndexStreamTest removeSelector: #testCreation!FLIndexStreamTest removeSelector: #indexStreamOn:digits:!Smalltalk globals removeClassNamed: #AnObsoleteFLIndexStreamTest!Class removeSelector: #renameSilently:!PositionableStream class removeSelector: #with:do:!ClassDescription removeSelector: #duringTestCompileSilently:storeSource:classified:!ClassDescription removeSelector: #duringTestCompileSilently:storeSource:!ClassDescription removeSelector: #duringTestCompileSilently:classified:!ClassDescription removeSelector: #duringTestCompileSilently:!CompiledMethod removeSelector: #sizeWithoutTrailer!CompiledMethod removeSelector: #isEqualRegardlessTrailerTo:!TraitDescription removeSelector: #duringTestCompileSilently:storeSource:classified:!TraitDescription removeSelector: #duringTestCompileSilently:storeSource:!TraitDescription removeSelector: #duringTestCompileSilently:classified:!TraitDescription removeSelector: #duringTestCompileSilently:!MethodDictionary removeSelector: #isEqualRegardlessMethodsTrailerTo:!Context removeSelector: #initializeWith:stackPtr:method:receiver:sender:!Context removeSelector: #assertWellMaterializedInto:in:!FLDelayedSerializationMock removeSelector: #run!Smalltalk globals removeClassNamed: #AnObsoleteFLDelayedSerializationMock!FLDelayedSerializerMock removeSelector: #setDefaultSerialization!Smalltalk globals removeClassNamed: #AnObsoleteFLDelayedSerializerMock!Trait removeSelector: #renameSilently:!FLStreamStrategy removeSelector: #writeStreamDo:!FLStreamStrategy removeSelector: #tearDown!FLStreamStrategy removeSelector: #readStreamDo:!FLStreamStrategy removeSelector: #fuelAccept:!FLMultiByteStreamStrategy removeSelector: #writeStreamDo:!FLMultiByteStreamStrategy removeSelector: #readStreamDo:!Smalltalk globals removeClassNamed: #AnObsoleteFLMultiByteStreamStrategy!FLGZipStrategy removeSelector: #writeStreamDo:!FLGZipStrategy removeSelector: #readStreamDo:!FLGZipStrategy removeSelector: #initializeWith:!FLGZipStrategy class removeSelector: #newWithTarget:!Smalltalk globals removeClassNamed: #AnObsoleteFLGZipStrategy!FLFileStreamStrategy removeSelector: #writeStreamDo:!FLFileStreamStrategy removeSelector: #tearDown!FLFileStreamStrategy removeSelector: #readStreamDo:!FLFileStreamStrategy removeSelector: #initializeWith:!FLFileStreamStrategy removeSelector: #fileStreamClass!FLFileStreamStrategy removeSelector: #fileName!FLFileStreamStrategy class removeSelector: #newWithStandardFileStream!FLFileStreamStrategy class removeSelector: #newWithMultiByteFileStream!FLFileStreamStrategy class removeSelector: #newWithBinaryFileStream!FLFileStreamStrategy class removeSelector: #newWith:!FLFileStreamStrategy class removeSelector: #new!FLBinaryFileStreamStrategy removeSelector: #writeStreamDo:!FLBinaryFileStreamStrategy removeSelector: #readStreamDo:!Smalltalk globals removeClassNamed: #AnObsoleteFLBinaryFileStreamStrategy!Smalltalk globals removeClassNamed: #AnObsoleteFLFileStreamStrategy!FLByteArrayStreamStrategy removeSelector: #writeStreamDo:!FLByteArrayStreamStrategy removeSelector: #readStreamDo:!Smalltalk globals removeClassNamed: #AnObsoleteFLByteArrayStreamStrategy!Smalltalk globals removeClassNamed: #AnObsoleteFLStreamStrategy!FLSingletonMockEnforced class removeSelector: #fuelNew!Smalltalk globals removeClassNamed: #AnObsoleteFLSingletonMockEnforced!FLSingletonMock removeSelector: #reference:!FLSingletonMock removeSelector: #reference!FLSingletonMock class removeSelector: #reset!FLSingletonMock class removeSelector: #new!FLSingletonMock class removeSelector: #instance!Smalltalk globals removeClassNamed: #AnObsoleteFLSingletonMock!FLReplacementMock removeSelector: #ignoreMe!FLReplacementMock removeSelector: #fuelReplacement!FLReplacementMock removeSelector: #dontIgnoreMe!FLReplacementMock removeSelector: #=!FLReplacementClassMock class removeSelector: #fuelReplacement!Smalltalk globals removeClassNamed: #AnObsoleteFLReplacementClassMock!Smalltalk globals removeClassNamed: #AnObsoleteFLReplacementMock!FLProxyThatBecomesItsContent removeSelector: #initializeWith:!FLProxyThatBecomesItsContent removeSelector: #fuelAfterMaterialization!FLProxyThatBecomesItsContent class removeSelector: #newWith:!Smalltalk globals removeClassNamed: #AnObsoleteFLProxyThatBecomesItsContent!FLPerson removeSelector: #id:!FLPerson removeSelector: #id!FLPerson removeSelector: #hash!FLPerson removeSelector: #=!Smalltalk globals removeClassNamed: #AnObsoleteFLPerson!FLWeakClassMock removeSelector: #instVar1:!FLWeakClassMock removeSelector: #instVar1!Smalltalk globals removeClassNamed: #AnObsoleteFLWeakClassMock!FLPair removeSelector: #right:!FLPair removeSelector: #right!FLPair removeSelector: #printOn:!FLPair removeSelector: #methodWithTemp!FLPair removeSelector: #method2!FLPair removeSelector: #method1!FLPair removeSelector: #left:!FLPair removeSelector: #left!FLPair removeSelector: #hash!FLPair removeSelector: #=!Smalltalk globals removeClassNamed: #AnObsoleteFLPair!FLNotSerializableMock removeSelector: #fuelAccept:!Smalltalk globals removeClassNamed: #AnObsoleteFLNotSerializableMock!FLGlobalSendNotPresentMock removeSelector: #fuelAccept:!Smalltalk globals removeClassNamed: #AnObsoleteFLGlobalSendNotPresentMock!FLGlobalSendMock removeSelector: #printOn:!FLGlobalSendMock removeSelector: #initializeWith:!FLGlobalSendMock removeSelector: #hash!FLGlobalSendMock removeSelector: #fuelAccept:!FLGlobalSendMock removeSelector: #contents:!FLGlobalSendMock removeSelector: #contents!FLGlobalSendMock removeSelector: #=!FLGlobalSendMock class removeSelector: #newWith:!FLGlobalSendMock class removeSelector: #newInstanceToSerialize!FLGlobalSendMock class removeSelector: #newInstanceToMaterialize!Smalltalk globals removeClassNamed: #AnObsoleteFLGlobalSendMock!FLClassWithRecursiveSubstitution removeSelector: #index:!FLClassWithRecursiveSubstitution removeSelector: #index!FLClassWithRecursiveSubstitution removeSelector: #fuelAccept:!Smalltalk globals removeClassNamed: #AnObsoleteFLClassWithRecursiveSubstitution!FLTGlobalClassOrTraitSerializationTest removeSelector: #testPreservesIdentity!FLTGlobalClassOrTraitSerializationTest removeSelector: #testObsolete!FLTGlobalClassOrTraitSerializationTest removeSelector: #testNotFoundAfterRename!FLTGlobalClassOrTraitSerializationTest removeSelector: #testNotFoundAfterRemoval!FLTGlobalClassOrTraitSerializationTest removeSelector: #testMethodPreservesIdentity!FLTGlobalClassOrTraitSerializationTest removeSelector: #testMethodNotFoundAfterRemoval!FLTGlobalClassOrTraitSerializationTest removeSelector: #testClassSidePreservesIdentity!FLTGlobalClassOrTraitSerializationTest removeSelector: #testClassSideObsolete!FLTGlobalClassOrTraitSerializationTest removeSelector: #testClassSideMethodPreservesIdentity!FLTGlobalClassOrTraitSerializationTest removeSelector: #testClassSideMethodNotFoundAfterRemoval!Smalltalk globals removeClassNamed: #AnObsoleteFLTGlobalClassOrTraitSerializationTest!LogicalFontManager removeSelector: #identityIncludesFontProvider:!LogicalFontManagerTest removeSelector: #testHasCurrentFreeTypeFontProvider!LogicalFontManagerTest removeSelector: #currentProviderOrError!Smalltalk globals removeClassNamed: #AnObsoleteLogicalFontManagerTest!GLMScrollListBrickTest removeSelector: #testInfinity!GLMScrollListBrickTest removeSelector: #testExample!GLMScrollListBrickTest removeSelector: #testEmptyList!GLMScrollListBrickTest removeSelector: #testDifferentHeights!GLMScrollListBrickTest removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoleteGLMScrollListBrickTest!GLMBrickTests removeSelector: #testTwoShrinkInShrinkChange!GLMBrickTests removeSelector: #testTwoDependsOnParentInsideStatic!GLMBrickTests removeSelector: #testTopMarginParentDependency!GLMBrickTests removeSelector: #testTopMarginMyselfDependency!GLMBrickTests removeSelector: #testShrinkWrapInStaticWithNeighbours!GLMBrickTests removeSelector: #testShrinkInShrinkChange!GLMBrickTests removeSelector: #testRightMarginParentDependency!GLMBrickTests removeSelector: #testRightMarginMyselfDependency!GLMBrickTests removeSelector: #testRightFloatingMySelfDependencyWithMargin!GLMBrickTests removeSelector: #testRightFloatingMySelfDependency!GLMBrickTests removeSelector: #testOneStaticBrick!GLMBrickTests removeSelector: #testOneDependsOnParentOneStaticInsideStatic!GLMBrickTests removeSelector: #testOneDependsOnParentOneDependsOnChildrenInsideStatic!GLMBrickTests removeSelector: #testMinWidthOneStatic!GLMBrickTests removeSelector: #testMinHeightTwoParentDependencies!GLMBrickTests removeSelector: #testMinHeightOneStatic!GLMBrickTests removeSelector: #testMinAndMaxHeightTwoParentDependenciesReverse!GLMBrickTests removeSelector: #testMinAndMaxHeightTwoParentDependencies!GLMBrickTests removeSelector: #testMaxWidthOneStatic!GLMBrickTests removeSelector: #testMaxHeightTwoParentDependencies!GLMBrickTests removeSelector: #testMaxHeightOneStatic!GLMBrickTests removeSelector: #testMarkerOneStaticWidth!GLMBrickTests removeSelector: #testMarkerOneStaticInStaticWidth!GLMBrickTests removeSelector: #testMarkerOneStaticInStaticHeight!GLMBrickTests removeSelector: #testMarkerOneStaticInParentWidth!GLMBrickTests removeSelector: #testMarkerOneStaticInParentHeight!GLMBrickTests removeSelector: #testMarkerOneStaticInChildrenWidth!GLMBrickTests removeSelector: #testMarkerOneStaticInChildrenHeight!GLMBrickTests removeSelector: #testMarkerOneStaticHeight!GLMBrickTests removeSelector: #testMarkerOneParentWidth!GLMBrickTests removeSelector: #testMarkerOneParentInStaticWidth!GLMBrickTests removeSelector: #testMarkerOneParentInStaticHeight!GLMBrickTests removeSelector: #testMarkerOneParentInParentWidth!GLMBrickTests removeSelector: #testMarkerOneParentInParentHeight!GLMBrickTests removeSelector: #testMarkerOneParentHeight!GLMBrickTests removeSelector: #testMarkerOneChildrenWidth!GLMBrickTests removeSelector: #testMarkerOneChildrenInStaticWidth!GLMBrickTests removeSelector: #testMarkerOneChildrenInStaticHeight!GLMBrickTests removeSelector: #testMarkerOneChildrenInParentWidth!GLMBrickTests removeSelector: #testMarkerOneChildrenInParentHeight!GLMBrickTests removeSelector: #testMarkerOneChildrenInChildrenWidth!GLMBrickTests removeSelector: #testMarkerOneChildrenInChildrenHeight!GLMBrickTests removeSelector: #testMarkerOneChildrenHeight!GLMBrickTests removeSelector: #testLeftMarginParentDependency!GLMBrickTests removeSelector: #testLeftMarginMyselfDependency!GLMBrickTests removeSelector: #testLeftMarginChangeMyselfDependency!GLMBrickTests removeSelector: #testLeftFloatingMySelfDependencyWithMargin!GLMBrickTests removeSelector: #testLeftFloatingMySelfDependency!GLMBrickTests removeSelector: #testFullAlignCenterShrinkWrapInSpaceFill!GLMBrickTests removeSelector: #testFreshBrickIsDirty!GLMBrickTests removeSelector: #testFillBrickInsideStatic!GLMBrickTests removeSelector: #testEmptyBrickDependsOnChildren!GLMBrickTests removeSelector: #testChangeChildrenInParentAndSubchildren!GLMBrickTests removeSelector: #testChangeChildrenInParent!GLMBrickTests removeSelector: #testBrickDependsOnChildrenOneStatic!GLMBrickTests removeSelector: #testBottomMarginParentDependency!GLMBrickTests removeSelector: #testBottomMarginMyselfDependency!GLMBrickTests removeSelector: #test100StaticBricksInsideEachOtherIndideStatic!GLMBrickTests removeSelector: #test100FillBricksInsideEachOtherIndideStatic!GLMBrickTests removeSelector: #test100DependsOnChildrenBricksInsideOneStatic!GLMBrickTests removeSelector: #staticWidth!GLMBrickTests removeSelector: #staticSmallWidth!GLMBrickTests removeSelector: #staticSmallHeight!GLMBrickTests removeSelector: #staticSmallExtent!GLMBrickTests removeSelector: #staticHeight!GLMBrickTests removeSelector: #staticExtent!GLMBrickTests removeSelector: #setUp!GLMBrickTests removeSelector: #newBrickWithStaticExtent!GLMBrickTests removeSelector: #newBrickWithSmallStaticExtent!GLMBrickTests removeSelector: #newBrickWithFullFill!GLMBrickTests removeSelector: #newBrickWithFullDependsOnChildren!GLMBrickTests removeSelector: #newBrickFullHeightAndWidthDependsOnParent:!GLMBrickTests removeSelector: #markFullyClean:!GLMBrickTests removeSelector: #assertWidthDirty:!GLMBrickTests removeSelector: #assertWidthClean:!GLMBrickTests removeSelector: #assertHeightDirty:!GLMBrickTests removeSelector: #assertHeightClean:!GLMBrickTests removeSelector: #assertBrickDirty:!GLMBrickTests removeSelector: #assertBrickClean:!GLMBrickTests removeSelector: #assertAllSubbricksAreDirty:!GLMBrickTests removeSelector: #assertAllSubbricksAreClean:!Smalltalk globals removeClassNamed: #AnObsoleteGLMBrickTests!SlotExamplePerson removeSelector: #name:!SlotExamplePerson removeSelector: #name!SlotExamplePerson removeSelector: #initialize!SlotExamplePerson removeSelector: #directedMovies:!SlotExamplePerson removeSelector: #directedMovies!SlotExamplePerson removeSelector: #actedInMovies:!SlotExamplePerson removeSelector: #actedInMovies!SlotExamplePerson class removeSelector: #named:!Smalltalk globals removeClassNamed: #AnObsoleteSlotExamplePerson!SlotExampleMovie removeSelector: #removeActor:!SlotExampleMovie removeSelector: #name:!SlotExampleMovie removeSelector: #name!SlotExampleMovie removeSelector: #initialize!SlotExampleMovie removeSelector: #director:!SlotExampleMovie removeSelector: #director!SlotExampleMovie removeSelector: #addActor:!SlotExampleMovie removeSelector: #actors:!SlotExampleMovie removeSelector: #actors!SlotExampleMovie class removeSelector: #named:!Smalltalk globals removeClassNamed: #AnObsoleteSlotExampleMovie!TestSharedPool class removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteTestSharedPool!TemporaryVariableTest removeSelector: #testWriteTemporaryVariablesMethod!TemporaryVariableTest removeSelector: #testTemporaryVariablesMethod!TemporaryVariableTest removeSelector: #testTemporaryVariablesBlock!TemporaryVariableTest removeSelector: #testReadTemporaryVariablesMethod!TemporaryVariableTest removeSelector: #testPropertyContextPersistent!TemporaryVariableTest removeSelector: #testPropertyBlockPersistent!TemporaryVariableTest removeSelector: #testPropertyAtPutPersistent!TemporaryVariableTest removeSelector: #testPropertyAtPut!TemporaryVariableTest removeSelector: #testHasTemporaryVariablesMethod!TemporaryVariableTest removeSelector: #testHasTemporaryVariablesBlock!Smalltalk globals removeClassNamed: #AnObsoleteTemporaryVariableTest!SlotTest removeSelector: #testRemoveProperty!SlotTest removeSelector: #testPropertyAtPut!SlotTest removeSelector: #testNotWrittenInMethodWhenItIsOnlyRead!SlotTest removeSelector: #testNotReadInMethod!SlotTest removeSelector: #testIsWrittenInMethod!SlotTest removeSelector: #testIsReadInMethod!SlotTest removeSelector: #testAsSlotCollection!Smalltalk globals removeClassNamed: #AnObsoleteSlotTest!SlotExampleMovieAndPersonTest removeSelector: #testSetMovieDirectorTwice!SlotExampleMovieAndPersonTest removeSelector: #testSetMovieDirectorInvalid!SlotExampleMovieAndPersonTest removeSelector: #testSetMovieDirector!SlotExampleMovieAndPersonTest removeSelector: #testSetAndUnsetMovieDirector!SlotExampleMovieAndPersonTest removeSelector: #testSetAndRemoveMovieDirector!SlotExampleMovieAndPersonTest removeSelector: #testNewPerson!SlotExampleMovieAndPersonTest removeSelector: #testNewMovie!SlotExampleMovieAndPersonTest removeSelector: #testChangeMovieDirector!SlotExampleMovieAndPersonTest removeSelector: #testAddMovieDirectorTwice!SlotExampleMovieAndPersonTest removeSelector: #testAddMovieDirectorInvalid!SlotExampleMovieAndPersonTest removeSelector: #testAddMovieDirector!SlotExampleMovieAndPersonTest removeSelector: #testAddAndRemoveActors!SlotExampleMovieAndPersonTest removeSelector: #testAddActors!Smalltalk globals removeClassNamed: #AnObsoleteSlotExampleMovieAndPersonTest!UnlimitedInstanceVariableSlotTest removeSelector: #testExampleTwoIvarSlots!UnlimitedInstanceVariableSlotTest removeSelector: #testExampleIvarSlot!Smalltalk globals removeClassNamed: #AnObsoleteUnlimitedInstanceVariableSlotTest!SlotTraitsTest removeSelector: #testTraitUsersAfterMetaclassReshape!SlotTraitsTest removeSelector: #testTraitUsersAfterClassReshape!SlotTraitsTest removeSelector: #testRemoveTrait!SlotTraitsTest removeSelector: #testRemoveClassTrait!SlotTraitsTest removeSelector: #testModifyTraitComposition!SlotTraitsTest removeSelector: #testModifyClassTraitComposition!SlotTraitsTest removeSelector: #testClassWithTrait2!SlotTraitsTest removeSelector: #testClassWithTrait!SlotTraitsTest removeSelector: #testClassWithClassTrait!Smalltalk globals removeClassNamed: #AnObsoleteSlotTraitsTest!SlotSilentTest removeSelector: #runCase!SlotMigrationTest removeSelector: #testSwitchSlotsAndMigrate!SlotMigrationTest removeSelector: #testSuperclassChangeLayoutType!SlotMigrationTest removeSelector: #testShiftSlotAndMigrate!SlotMigrationTest removeSelector: #testReshapeSuperSuperClass!SlotMigrationTest removeSelector: #testReshapePointerToByteVariablePropagatesToDeepHierarchy!SlotMigrationTest removeSelector: #testReshapeClassPropagatesToDeepHierarchy!SlotMigrationTest removeSelector: #testReshapeByteVariableToPointerPropagatesToDeepHierarchy!SlotMigrationTest removeSelector: #testRemoveTestSlot!SlotMigrationTest removeSelector: #testRemoveSlotAndMigrate!SlotMigrationTest removeSelector: #testRedefineSuperclass!SlotMigrationTest removeSelector: #testMigrateTestSlot!SlotMigrationTest removeSelector: #testChangingFormatKeepsMethod!SlotMigrationTest removeSelector: #testChangeSuperclass!SlotMigrationTest removeSelector: #testChangeLayoutTypeToByte!SlotMigrationTest removeSelector: #testChangeLayoutTypeFromByte!SlotMigrationTest removeSelector: #testAddTestSlot!SlotMigrationTest removeSelector: #testAddSlotPropagateAndMigrate!SlotMigrationTest removeSelector: #testAddSlotAndMigrate!SlotMigrationTest removeSelector: #testAddSharedVariableKeepSubclasses!Smalltalk globals removeClassNamed: #AnObsoleteSlotMigrationTest!SlotMethodRecompilationTest removeSelector: #traitMethodBinding!SlotMethodRecompilationTest removeSelector: #traitMethod!SlotMethodRecompilationTest removeSelector: #testTraitMethodClassBindingShouldBeClassBinding!SlotMethodRecompilationTest removeSelector: #testMethodClassBindingShouldBeClassBinding!SlotMethodRecompilationTest removeSelector: #testClassReshapeShouldKeepClassBindingForTraitMethods!SlotMethodRecompilationTest removeSelector: #testClassReshapeShouldKeepClassBinding!SlotMethodRecompilationTest removeSelector: #setUp!SlotMethodRecompilationTest removeSelector: #reshapeClass!SlotMethodRecompilationTest removeSelector: #methodBinding!SlotMethodRecompilationTest removeSelector: #method!Smalltalk globals removeClassNamed: #AnObsoleteSlotMethodRecompilationTest!SlotLayoutExtensionTest removeSelector: #testWordCannotExtendPointerWithFields!SlotLayoutExtensionTest removeSelector: #testWordCannotExtendByte!SlotLayoutExtensionTest removeSelector: #testWordCanExtendWord!SlotLayoutExtensionTest removeSelector: #testVariableCannotExtendWord!SlotLayoutExtensionTest removeSelector: #testVariableCannotExtendByte!SlotLayoutExtensionTest removeSelector: #testVariableCanExtendVariable!SlotLayoutExtensionTest removeSelector: #testVariableCanExtendPointer!SlotLayoutExtensionTest removeSelector: #testPointerWithVariableExtensionIsNowVariable!SlotLayoutExtensionTest removeSelector: #testPointerCannotExtendWord!SlotLayoutExtensionTest removeSelector: #testPointerCannotExtendByte!SlotLayoutExtensionTest removeSelector: #testPointerCanExtendVariable!SlotLayoutExtensionTest removeSelector: #testPointerCanExtendPointer!SlotLayoutExtensionTest removeSelector: #testInstanceVariableNamesMetaclassInterface!SlotLayoutExtensionTest removeSelector: #testCompiledMethodCanBeExtended!SlotLayoutExtensionTest removeSelector: #testByteCannotExtendWord!SlotLayoutExtensionTest removeSelector: #testByteCannotExtendPointerWithFields!SlotLayoutExtensionTest removeSelector: #testByteCanExtendByte!SlotLayoutExtensionTest removeSelector: #shouldnt:extendWith:!SlotLayoutExtensionTest removeSelector: #should:extendWith:!Smalltalk globals removeClassNamed: #AnObsoleteSlotLayoutExtensionTest!SlotLayoutEqualityTest removeSelector: #testLayoutWithSlotsNotEquals!SlotLayoutEqualityTest removeSelector: #testLayoutWithSlotsEquals!SlotLayoutEqualityTest removeSelector: #testLayoutNotEquals!SlotLayoutEqualityTest removeSelector: #testLayoutEquals!SlotLayoutEqualityTest removeSelector: #assertClassBuiltWith:isNotEqualToClassBuiltWith:!SlotLayoutEqualityTest removeSelector: #assertClassBuiltWith:isEqualToClassBuiltWith:!SlotLayoutEqualityTest class removeSelector: #defaultTimeLimit!Smalltalk globals removeClassNamed: #AnObsoleteSlotLayoutEqualityTest!SlotIntegrationTest removeSelector: #testSmallIntegerLayout!SlotIntegrationTest removeSelector: #testSlotsAreInitializedWithDefiningAnonimousClass!SlotIntegrationTest removeSelector: #testSlotScopeParallelism!SlotIntegrationTest removeSelector: #testSlotNamedIfFoundIfNone!SlotIntegrationTest removeSelector: #testReshapeClassWithClassSlot!SlotIntegrationTest removeSelector: #testReshapeClassPropagatesToDeepHierarchyClassInterface!SlotIntegrationTest removeSelector: #testRemoveInstVarNamedWithTrait2!SlotIntegrationTest removeSelector: #testRemoveInstVarNamedClassInterface!SlotIntegrationTest removeSelector: #testRemoveInstVarNamed!SlotIntegrationTest removeSelector: #testCopyPreservesLayout!SlotIntegrationTest removeSelector: #testCompiledMethodLayout!SlotIntegrationTest removeSelector: #testAnonymousSubclass!SlotIntegrationTest removeSelector: #testAddInstVarNamedWithTrait2!SlotIntegrationTest removeSelector: #testAddInstVarNamedWithTrait!SlotIntegrationTest removeSelector: #testAddInstVarNamedClassInterface!SlotIntegrationTest removeSelector: #testAddInstVarNamed!SlotIntegrationTest removeSelector: #testAddAndRemoveInstVarNamedWithTrait2!SlotIntegrationTest removeSelector: #testAddAndAddInstVarNamedWithTrait2!Smalltalk globals removeClassNamed: #AnObsoleteSlotIntegrationTest!SlotExampleTest removeSelector: #testPharoClassInstallerExample!SlotExampleTest removeSelector: #testExampleTwoSlotWithState!SlotExampleTest removeSelector: #testExampleSlotWithState!SlotExampleTest removeSelector: #testExampleSlotWithDefaultValue!SlotExampleTest removeSelector: #testExampleClassSide!SlotExampleTest removeSelector: #testAccessorInstanceVariableSlot!Smalltalk globals removeClassNamed: #AnObsoleteSlotExampleTest!SlotErrorsTest removeSelector: #testValidateClassName!SlotErrorsTest removeSelector: #testSlotWithReservedName!SlotErrorsTest removeSelector: #testSlotDuplicationConflict!SlotErrorsTest removeSelector: #testIndirectCircularHierarchyError!SlotErrorsTest removeSelector: #testDirectCircularHierarchyError!SlotErrorsTest removeSelector: #testDangerousClassesEnabling!SlotErrorsTest removeSelector: #testDangerousClassesConditions!SlotErrorsTest removeSelector: #testClassSlotWithReservedName!SlotErrorsTest removeSelector: #testClassSlotDuplicationConflict!SlotErrorsTest removeSelector: #testClassNameWithInvalidCharacter!SlotErrorsTest removeSelector: #testClassNameMustBeSymbol!SlotErrorsTest removeSelector: #testClassNameMustBeCapitalized!SlotErrorsTest removeSelector: #testCannotBeRecompiled!SlotErrorsTest removeSelector: #expectedFailures!SlotErrorsTest removeSelector: #assertInvalidClassName:!Smalltalk globals removeClassNamed: #AnObsoleteSlotErrorsTest!SlotEnvironmentTest removeSelector: #testBasicEnvironment!Smalltalk globals removeClassNamed: #AnObsoleteSlotEnvironmentTest!SlotBasicTest removeSelector: #testWithoutSharedVariables!SlotBasicTest removeSelector: #testWithoutSharedPools!SlotBasicTest removeSelector: #testWithoutClassSlots!SlotBasicTest removeSelector: #testWithSharedVariable!SlotBasicTest removeSelector: #testWithSharedPool!SlotBasicTest removeSelector: #testWithClassSlots!SlotBasicTest removeSelector: #testSwitchClassSlotAndMigrate!SlotBasicTest removeSelector: #testRemoveSharedVariable!SlotBasicTest removeSelector: #testRemoveSharedPool!SlotBasicTest removeSelector: #testRemoveClassSlotAndMigrate!SlotBasicTest removeSelector: #testNewWeakClass!SlotBasicTest removeSelector: #testNewVariableWordClass!SlotBasicTest removeSelector: #testNewVariableByteClass!SlotBasicTest removeSelector: #testNewPointerClassWithSlots!SlotBasicTest removeSelector: #testNewPointerClass!SlotBasicTest removeSelector: #testNewCompiledMethodClass!SlotBasicTest removeSelector: #testClassWithCommentAndStamp!SlotBasicTest removeSelector: #testClassWithComment!SlotBasicTest removeSelector: #testBasicClassBuilding!SlotBasicTest removeSelector: #testAddSharedVariable!SlotBasicTest removeSelector: #testAddSharedPool!SlotBasicTest removeSelector: #testAddClassSlotAndMigrate!Smalltalk globals removeClassNamed: #AnObsoleteSlotBasicTest!PropertySlotTest removeSelector: #testRemovePropertySlot2!PropertySlotTest removeSelector: #testRemovePropertySlot!PropertySlotTest removeSelector: #testCreateClassWithTwoPropertySlots!PropertySlotTest removeSelector: #testCreateClassWithPropertySlotAddSecond!PropertySlotTest removeSelector: #testCreateClassWithPropertySlot!Smalltalk globals removeClassNamed: #AnObsoletePropertySlotTest!ExampleClassVariableTest removeSelector: #testMigrateClassVar!ExampleClassVariableTest removeSelector: #testCreateClassWithTwoClassVariable!ExampleClassVariableTest removeSelector: #testCreateClassWithClassVariable!Smalltalk globals removeClassNamed: #AnObsoleteExampleClassVariableTest!BooleanSlotTest removeSelector: #testExampleTwoBooleanSlotsRemoveOne!BooleanSlotTest removeSelector: #testExampleTwoBooleanSlots!BooleanSlotTest removeSelector: #testExampleBooleanSlot!Smalltalk globals removeClassNamed: #AnObsoleteBooleanSlotTest!Smalltalk globals removeClassNamed: #AnObsoleteSlotSilentTest!SlotClassVariableTest removeSelector: #testSlotIsPersistedAfterRebuildOfClass!SlotClassVariableTest removeSelector: #testClassVariableDoesNotDuplicatesSubclassesOfSuperclass!SlotClassVariableTest removeSelector: #testAccessorInstanceVariableSlotGeneratesAccessors!Smalltalk globals removeClassNamed: #AnObsoleteSlotClassVariableTest!SlotClassBuilderTest removeSelector: #yetYetAnotherClassName!SlotClassBuilderTest removeSelector: #yetAnotherClassName!SlotClassBuilderTest removeSelector: #tearDown!SlotClassBuilderTest removeSelector: #makeWithLayout:andSlots:!SlotClassBuilderTest removeSelector: #makeWithLayout:!SlotClassBuilderTest removeSelector: #make:!SlotClassBuilderTest removeSelector: #layoutClassesWithSlots!SlotClassBuilderTest removeSelector: #layoutClasses!SlotClassBuilderTest removeSelector: #cleanUpTrait:!SlotClassBuilderTest removeSelector: #assertTraitIntegrity!SlotClassBuilderTest removeSelector: #anotherClassName!SlotClassBuilderTest removeSelector: #anotherCategory!SlotClassBuilderTest removeSelector: #aClassName!SlotClassBuilderTest removeSelector: #aCategory!SlotAnnouncementsTest removeSelector: #testWeakClassWithTraitCreatedShouldntAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testWeakClassWhenTraitCompositionChangedShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testVariableWordClassWithTraitCreatedShouldntAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testVariableWordClassWhenTraitCompositionChangedShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testVariableClassWithTraitCreatedShouldntAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testVariableClassWhenTraitCompositionChangedShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testVariableByteClassWithTraitCreatedShouldntAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testVariableByteClassWhenTraitCompositionChangedShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testSlotAdditionShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testSameCommentDoesNotAnnounce!SlotAnnouncementsTest removeSelector: #testLayoutChangeShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testFixedClassWithTraitCreatedShouldntAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testFixedClassWhenTraitCompositionChangedShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testEmptyCommentDoesNotAnnounce!SlotAnnouncementsTest removeSelector: #testCreateWithCommentDoesAnnounce!SlotAnnouncementsTest removeSelector: #testCreateAndChangeWithoutCommentDoesNotAnnounce!SlotAnnouncementsTest removeSelector: #testCreateAndChangeWithCommentDoesAnnounceBoth!SlotAnnouncementsTest removeSelector: #testClassRecategorizationShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testClassCreationShouldAnnounceClassAdded!SlotAnnouncementsTest removeSelector: #testClassAddedToNewCategoryShouldAnnounceCategoryAdded!SlotAnnouncementsTest removeSelector: #testChangeInSuperclassShouldNotAnnounceSubclassModified!SlotAnnouncementsTest removeSelector: #testChangeInSharedVariablesShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testChangeInSharedVariablesAndSharedPoolsShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #testChangeInSharedPoolShouldAnnounceClassModified!SlotAnnouncementsTest removeSelector: #tearDown!SlotAnnouncementsTest removeSelector: #subscribeOn:!SlotAnnouncementsTest removeSelector: #setUp!SlotAnnouncementsTest removeSelector: #collectedAnnouncements!SlotAnnouncementsTest removeSelector: #collectedAnnouncementClasses!Smalltalk globals removeClassNamed: #AnObsoleteSlotAnnouncementsTest!Smalltalk globals removeClassNamed: #AnObsoleteSlotClassBuilderTest!RelationSlotTest removeSelector: #testNotEquals!RelationSlotTest removeSelector: #testEquals!RelationSlotTest removeSelector: #testDefinitionWithoutInverse!RelationSlotTest removeSelector: #testDefinitionWithClass!RelationSlotTest removeSelector: #testDefinition!Smalltalk globals removeClassNamed: #AnObsoleteRelationSlotTest!RelationSetTest removeSelector: #testSelect!RelationSetTest removeSelector: #testCopy!Smalltalk globals removeClassNamed: #AnObsoleteRelationSetTest!GlobalVariableTest removeSelector: #testRemoveProperty!GlobalVariableTest removeSelector: #testPropertyAtPut!GlobalVariableTest removeSelector: #testNotWrittenInMethod!GlobalVariableTest removeSelector: #testIsReadInMethod!Smalltalk globals removeClassNamed: #AnObsoleteGlobalVariableTest!ClassVariableTest removeSelector: #testRemoveProperty!ClassVariableTest removeSelector: #testPropertyAtPut!ClassVariableTest removeSelector: #testNotWrittenInMethodWhenItIsOnlyRead!ClassVariableTest removeSelector: #testNotReadInMethod!ClassVariableTest removeSelector: #testIsWrittenInMethod!ClassVariableTest removeSelector: #testIsReadInMethod!Smalltalk globals removeClassNamed: #AnObsoleteClassVariableTest!TTwo removeSelector: #two!Smalltalk globals removeClassNamed: #AnObsoleteTTwo!TOne removeSelector: #one!TOne classTrait removeSelector: #classOne!Smalltalk globals removeClassNamed: #AnObsoleteTOne!ManifestIssueTrackingTests removeSelector: #ruleVariableAssignedLiteralRuleV1FalsePositive!ManifestIssueTrackingTests removeSelector: #ruleBadMessageRuleV1FalsePositive!Smalltalk globals removeClassNamed: #AnObsoleteManifestIssueTrackingTests!PharoIssueTest removeSelector: #testTrackerUrl!PharoIssueTest removeSelector: #testSlice!PharoIssueTest removeSelector: #testSettingTitle!PharoIssueTest removeSelector: #testNumber!PharoIssueTest removeSelector: #testHeaderString!PharoIssueTest removeSelector: #testCreating!PharoIssueTest removeSelector: #testAutoTitle!PharoIssueTest removeSelector: #setUp!PharoIssueTest class removeSelector: #defaultTimeLimit!Smalltalk globals removeClassNamed: #AnObsoletePharoIssueTest!Smalltalk globals removeClassNamed: #AnObsoleteUnreferencedSharedPool!UserOfFooSharedPool removeSelector: #simpleMethod!Smalltalk globals removeClassNamed: #AnObsoleteUserOfFooSharedPool!Smalltalk globals removeClassNamed: #AnObsoleteFooSharedPool!Smalltalk globals removeClassNamed: #AnObsoleteMOPTestClassD!!Trait method!c	^ 'Trait2>>c'! !MOPTestClassC removeSelector: #c!Smalltalk globals removeClassNamed: #AnObsoleteMOPTestClassC!Smalltalk globals removeClassNamed: #AnObsoleteMOPTestClassB!Smalltalk globals removeClassNamed: #AnObsoleteMOPTestClassA!ObjectsAsMethodsExample removeSelector: #run:with:in:!ObjectsAsMethodsExample removeSelector: #answer42!ObjectsAsMethodsExample removeSelector: #add:with:!Smalltalk globals removeClassNamed: #AnObsoleteObjectsAsMethodsExample!AbstractObjectsAsMethod removeSelector: #selector:!AbstractObjectsAsMethod removeSelector: #pragmas!AbstractObjectsAsMethod removeSelector: #package!AbstractObjectsAsMethod removeSelector: #origin!AbstractObjectsAsMethod removeSelector: #methodClass:!AbstractObjectsAsMethod removeSelector: #flushCache!Smalltalk globals removeClassNamed: #AnObsoleteAbstractObjectsAsMethod!SystemDictionaryTest removeSelector: #testUnCategorizedMethods!SystemDictionaryTest removeSelector: #testSmalltalkSelfEvaluating!SystemDictionaryTest removeSelector: #testSmalltalkPrintString!SystemDictionaryTest removeSelector: #testSmalltalkAsString!SystemDictionaryTest removeSelector: #testSetOrganizationSetBackPointer!SystemDictionaryTest removeSelector: #testOtherInstancesOfSystemDictionarySelfEvaluating!SystemDictionaryTest removeSelector: #testOtherInstancesOfSystemDictionaryPrintString!SystemDictionaryTest removeSelector: #testOtherInstancesOfSystemDictionaryAsString!SystemDictionaryTest removeSelector: #testOrganizationPerInstance!SystemDictionaryTest removeSelector: #testEnvironmentOfOrganization!SystemDictionaryTest removeSelector: #testClassOrTraitNamedReturnsNilForGlobals!SystemDictionaryTest removeSelector: #testClassOrTraitNamedReturnsClassForClasses!SystemDictionaryTest removeSelector: #testClassComment!SystemDictionaryTest removeSelector: #classToBeTested!SystemDictionaryTest removeSelector: #canBeUnhealthy!SystemDictionaryTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteSystemDictionaryTest!STCommandLineHandlerTest removeSelector: #testSelectSourceFiles!STCommandLineHandlerTest removeSelector: #testLoadSourceFiles!STCommandLineHandlerTest removeSelector: #testInstallSourceFilesFail!STCommandLineHandlerTest removeSelector: #testCommandLineHandlerCondition!STCommandLineHandlerTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteSTCommandLineHandlerTest!FileStreamTest removeSelector: #testReadIntoStartingAtCountNotAll!FileStreamTest removeSelector: #testReadIntoStartingAtCountBufferedNotAll!FileStreamTest removeSelector: #testReadIntoStartingAtCountBufferedAll!FileStreamTest removeSelector: #testReadIntoStartingAtCountAll!FileStreamTest removeSelector: #testNextLine!FileStreamTest removeSelector: #testNextChunkOutOfBounds!FileStreamTest removeSelector: #testFileTruncation!FileStreamTest removeSelector: #testDetectFileDo!FileStreamTest removeSelector: #testCachingNextChunkPut!FileStreamTest removeSelector: #doTestsForReading:intoBufferWithSize:startingAt:fromFileOfSize:offsetBy:!Smalltalk globals removeClassNamed: #AnObsoleteFileStreamTest!EventManagerTest removeSelector: #testTwoArgumentEvent!EventManagerTest removeSelector: #testSingleValueSupplier!EventManagerTest removeSelector: #testReturnValueWithOneListener!EventManagerTest removeSelector: #testReturnValueWithNoListeners!EventManagerTest removeSelector: #testReturnValueWithManyListeners!EventManagerTest removeSelector: #testRemoveActionsWithReceiver!EventManagerTest removeSelector: #testRemoveActionsTwiceForEvent!EventManagerTest removeSelector: #testRemoveActionsForEvent!EventManagerTest removeSelector: #testOneArgumentEvent!EventManagerTest removeSelector: #testNoArgumentEventDependentSuppliedArguments!EventManagerTest removeSelector: #testNoArgumentEventDependentSuppliedArgument!EventManagerTest removeSelector: #testNoArgumentEvent!EventManagerTest removeSelector: #testMultipleValueSuppliersEventHasArguments!EventManagerTest removeSelector: #testMultipleValueSuppliers!EventManagerTest removeSelector: #testCopy!EventManagerTest removeSelector: #testBlockReceiverTwoArgs!EventManagerTest removeSelector: #testBlockReceiverOneArg!EventManagerTest removeSelector: #testBlockReceiverNoArgs!EventManagerTest removeSelector: #tearDown!EventManagerTest removeSelector: #setUp!EventManagerTest removeSelector: #heardEvent!EventManagerTest removeSelector: #getTrue:!EventManagerTest removeSelector: #getTrue!EventManagerTest removeSelector: #getFalse:!EventManagerTest removeSelector: #getFalse!EventManagerTest removeSelector: #addArg1:addArg2:!Smalltalk globals removeClassNamed: #AnObsoleteEventManagerTest!UUIDTest removeSelector: #testString36!UUIDTest removeSelector: #testString!UUIDTest removeSelector: #testNilUUID!UUIDTest removeSelector: #testComparison!UUIDTest removeSelector: #testBasic!Smalltalk globals removeClassNamed: #AnObsoleteUUIDTest!UUIDPrimitivesTest removeSelector: #testUniqueness!UUIDPrimitivesTest removeSelector: #testOrder!UUIDPrimitivesTest removeSelector: #testDuplicationsKinda!UUIDPrimitivesTest removeSelector: #testCreationNodeBased!UUIDPrimitivesTest removeSelector: #testCreationNil!UUIDPrimitivesTest removeSelector: #testCreationFromStringNotNil!UUIDPrimitivesTest removeSelector: #testCreationFromString36WithNillUUID!UUIDPrimitivesTest removeSelector: #testCreationFromString36With0!UUIDPrimitivesTest removeSelector: #testCreationFromString36NotNil!UUIDPrimitivesTest removeSelector: #testCreationFromString!UUIDPrimitivesTest removeSelector: #testCreationEquality!UUIDPrimitivesTest removeSelector: #testCreation!UUIDPrimitivesTest removeSelector: #testComparison!Smalltalk globals removeClassNamed: #AnObsoleteUUIDPrimitivesTest!TraitsTestCase removeSelector: #tearDown!TraitsTestCase removeSelector: #t9!TraitsTestCase removeSelector: #t8!TraitsTestCase removeSelector: #t6!TraitsTestCase removeSelector: #t5!TraitsTestCase removeSelector: #t4!TraitsTestCase removeSelector: #t3!TraitsTestCase removeSelector: #t2!TraitsTestCase removeSelector: #t12!TraitsTestCase removeSelector: #t11!TraitsTestCase removeSelector: #t10!TraitsTestCase removeSelector: #t1!TraitsTestCase removeSelector: #setUp!TraitsTestCase removeSelector: #resourceClassesAndTraits!TraitsTestCase removeSelector: #createdClassesAndTraits!TraitsTestCase removeSelector: #createTraitNamed:uses:!TraitsTestCase removeSelector: #createClassNamed:superclass:uses:!TraitsTestCase removeSelector: #categoryName!TraitsTestCase removeSelector: #c9!TraitsTestCase removeSelector: #c8!TraitsTestCase removeSelector: #c7!TraitsTestCase removeSelector: #c6!TraitsTestCase removeSelector: #c5!TraitsTestCase removeSelector: #c4!TraitsTestCase removeSelector: #c3!TraitsTestCase removeSelector: #c2!TraitsTestCase removeSelector: #c11!TraitsTestCase removeSelector: #c10!TraitsTestCase removeSelector: #c1!TraitsTestCase removeSelector: #assertPrints:like:!TraitsTestCase class removeSelector: #resources!TraitsTestCase class removeSelector: #isUnitTest!TraitTest removeSelector: #testUsersWithClassChanges!TraitTest removeSelector: #testUsers!TraitTest removeSelector: #testTraitsUsersSanity!TraitTest removeSelector: #testTraitsMethodClassSanity!TraitTest removeSelector: #testTraitRemoval!TraitTest removeSelector: #testTraitCompositionRespectsParenthesis!TraitTest removeSelector: #testRequirement!TraitTest removeSelector: #testRemoveFromSystem!TraitTest removeSelector: #testPrintingClassSide!TraitTest removeSelector: #testPrinting!TraitTest removeSelector: #testOriginWithRequiredMethodInTraitChain!TraitTest removeSelector: #testOriginWithRequiredMethod!TraitTest removeSelector: #testOrigin!TraitTest removeSelector: #testMarkerMethods!TraitTest removeSelector: #testLocalMethodWithSameCodeInTrait!TraitTest removeSelector: #testIsUsed!TraitTest removeSelector: #testIsRootInEnvironment!TraitTest removeSelector: #testExplicitRequirementWithSuperclassImplementatiosAlwaysReturnsTheCorrectValue!TraitTest removeSelector: #testExplicitRequirementWithSuperclassImplementationAndAnotherTrait!TraitTest removeSelector: #testExplicitRequirementWithSuperclassImplementation!TraitTest removeSelector: #testExplicitRequirementTakesPrecedenceOverTraitImplementation!TraitTest removeSelector: #testExplicitRequirementInClassAlwaysTakesPrecedence!TraitTest removeSelector: #testExplicitRequirementDoesNotTakePrecedenceInDeepHierarchy!TraitTest removeSelector: #testExplicitRequirementDoesNotTakePrecedenceEvenWhenAddingTraits!TraitTest removeSelector: #testExplicitRequirement!TraitTest removeSelector: #testErrorClassCreation!TraitTest removeSelector: #testCompositionCopy!TraitTest removeSelector: #testComposedBy!TraitTest removeSelector: #testAllClassVarNames!TraitTest removeSelector: #testAddAndRemoveMethodsInClassOrTrait!TraitTest removeSelector: #testAddAndRemoveMethodsFromSubtraits!TraitTest removeSelector: #createTrait!TraitTest removeSelector: #createClassUsing:!Smalltalk globals removeClassNamed: #AnObsoleteTraitTest!TraitPureBehaviorTest removeSelector: #traitOrClassOfSelector!TraitPureBehaviorTest removeSelector: #testUpdateWhenLocalMethodRemoved!TraitPureBehaviorTest removeSelector: #testTraitsAccessor!TraitPureBehaviorTest removeSelector: #testTraitCompositionWithCycles!TraitPureBehaviorTest removeSelector: #testTraitCompositionModifications!TraitPureBehaviorTest removeSelector: #testSuperSends!TraitPureBehaviorTest removeSelector: #testReshapeClass!TraitPureBehaviorTest removeSelector: #testRemovingMethods!TraitPureBehaviorTest removeSelector: #testPropagationWhenTraitCompositionModifications!TraitPureBehaviorTest removeSelector: #testPropagationOfChangesInTraitsToAliasMethodsWhenOriginalMethodIsExcluded!TraitPureBehaviorTest removeSelector: #testPropagationOfChangesInTraitsToAliasMethods!TraitPureBehaviorTest removeSelector: #testPropagationOfChangesInTraits!TraitPureBehaviorTest removeSelector: #testOwnMethodsTakePrecedenceOverTraitsMethods!TraitPureBehaviorTest removeSelector: #testMethodClass!TraitPureBehaviorTest removeSelector: #testMethodCategoryReorganization!TraitPureBehaviorTest removeSelector: #testLocalSelectors!TraitPureBehaviorTest removeSelector: #testIsLocalAliasSelector!TraitPureBehaviorTest removeSelector: #testIsAliasSelector!TraitPureBehaviorTest removeSelector: #testClassesWithTraits!TraitPureBehaviorTest removeSelector: #testChangeSuperclass!Smalltalk globals removeClassNamed: #AnObsoleteTraitPureBehaviorTest!TraitMethodDescriptionTest removeSelector: #testInitialize!TraitMethodDescriptionTest removeSelector: #testConflictingCategories!TraitMethodDescriptionTest removeSelector: #testConflictMethodCreation!TraitMethodDescriptionTest removeSelector: #testCategories!TraitMethodDescriptionTest removeSelector: #testArgumentNames!Smalltalk globals removeClassNamed: #AnObsoleteTraitMethodDescriptionTest!TraitFileOutTest removeSelector: #testRemovingMethods!TraitFileOutTest removeSelector: #testRecompiling!TraitFileOutTest removeSelector: #testFileOutTrait!TraitFileOutTest removeSelector: #testFileOutCategory!TraitFileOutTest removeSelector: #tearDown!TraitFileOutTest removeSelector: #setUp!TraitFileOutTest removeSelector: #categoryName!Smalltalk globals removeClassNamed: #AnObsoleteTraitFileOutTest!TraitCompositionTest removeSelector: #testSyntacticEqualsWithExclusion!TraitCompositionTest removeSelector: #testSyntacticEqualsWithComposition!TraitCompositionTest removeSelector: #testSyntacticEqualsWithComplexCompositions!TraitCompositionTest removeSelector: #testSyntacticEqualsWithAlias!TraitCompositionTest removeSelector: #testSumWithParenthesis!TraitCompositionTest removeSelector: #testSum!TraitCompositionTest removeSelector: #testPrinting!TraitCompositionTest removeSelector: #testOriginSelectorOf!TraitCompositionTest removeSelector: #testInvalidComposition!TraitCompositionTest removeSelector: #testEmptyTrait!TraitCompositionTest removeSelector: #testCompositionFromArray!TraitCompositionTest removeSelector: #testClassMethodsTakePrecedenceOverTraitsMethods!TraitCompositionTest removeSelector: #testAliasCompositions!Smalltalk globals removeClassNamed: #AnObsoleteTraitCompositionTest!ClassTraitTest removeSelector: #testUsers!ClassTraitTest removeSelector: #testIsClassOrTrait!ClassTraitTest removeSelector: #testInitialization!ClassTraitTest removeSelector: #testConflictsAliasesAndExclusions!ClassTraitTest removeSelector: #testChanges!Smalltalk globals removeClassNamed: #AnObsoleteClassTraitTest!Smalltalk globals removeClassNamed: #AnObsoleteTraitsTestCase!TimeMeasuringTest removeSelector: #workingCopyPredicate!TimeMeasuringTest removeSelector: #versionInformation!TimeMeasuringTest removeSelector: #versionInfoForWorkingCopiesThat:!TimeMeasuringTest removeSelector: #setToDebug!TimeMeasuringTest removeSelector: #runCase!TimeMeasuringTest removeSelector: #reportPerformance!TimeMeasuringTest removeSelector: #openDebuggerOnFailingTestMethod!TimeMeasuringTest removeSelector: #measure:!TimeMeasuringTest removeSelector: #initialize!TimeMeasuringTest removeSelector: #debug!Smalltalk globals removeClassNamed: #AnObsoleteTimeMeasuringTest!TestObjectsAsMethods removeSelector: #testDNU!TestObjectsAsMethods removeSelector: #testAnswer42!TestObjectsAsMethods removeSelector: #testAddNumbers!TestObjectsAsMethods removeSelector: #tearDown!TestObjectsAsMethods removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTestObjectsAsMethods!SystemSettings removeSelector: #testOpening!Smalltalk globals removeClassNamed: #AnObsoleteSystemSettings!SystemOrganizerTest removeSelector: #testThatExistingPackagenamesDoesNotContainIllegalCharacters!SystemOrganizerTest removeSelector: #testDefaultEnvironment!SystemOrganizerTest removeSelector: #testDefault!Smalltalk globals removeClassNamed: #AnObsoleteSystemOrganizerTest!SystemNavigationTest removeSelector: #testRetrievingCategoriesInAPackage!SystemNavigationTest removeSelector: #testIsUnsentMessage!SystemNavigationTest removeSelector: #testIsMessageSentInSystemWithTheSelectorInsideAnArray!SystemNavigationTest removeSelector: #testIsMessageSentInSystemWithClassesActuallySendngTheMessage!SystemNavigationTest removeSelector: #testIsMessageSentInSystemAnswersMethodReference!SystemNavigationTest removeSelector: #testAllSendersOfReturnsExistingMethods!SystemNavigationTest removeSelector: #testAllSendersOfASelector!SystemNavigationTest removeSelector: #testAllReferencesToPoolWhenNoRefences!SystemNavigationTest removeSelector: #testAllReferencesToPool!SystemNavigationTest removeSelector: #testAllExistingProtocolsFor!SystemNavigationTest removeSelector: #testAllClassesUsingSharedPool!SystemNavigationTest removeSelector: #tearDown!SystemNavigationTest removeSelector: #systemNavigationToTest!SystemNavigationTest removeSelector: #setUp!SystemNavigationTest removeSelector: #organizationToTest!SystemNavigationTest removeSelector: #environmentToTest!SystemNavigationTest removeSelector: #createSystemNavigationToTest!SystemNavigationTest removeSelector: #createMethodNamed:realParent:!SystemNavigationTest removeSelector: #createClassFactory!SystemNavigationTest removeSelector: #classFactory!SystemNavigationTest class removeSelector: #isUnitTest!SystemNavigationOnNewlyCreatedEnvironmentTest removeSelector: #testEnsureDefaultEnvironmentNotUsed!SystemNavigationOnNewlyCreatedEnvironmentTest removeSelector: #testAllReferencesToPool!SystemNavigationOnNewlyCreatedEnvironmentTest removeSelector: #createSystemNavigationToTest!SystemNavigationOnNewlyCreatedEnvironmentTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteSystemNavigationOnNewlyCreatedEnvironmentTest!Smalltalk globals removeClassNamed: #AnObsoleteSystemNavigationTest!SystemAnnouncerTest removeSelector: #testSuspendAllWhileStoringNested!SystemAnnouncerTest removeSelector: #testSuspendAllWhileStoring!SystemAnnouncerTest removeSelector: #testSuspendAllWhile!SystemAnnouncerTest removeSelector: #testProtocolRemoved!SystemAnnouncerTest removeSelector: #testProtocolAdded!SystemAnnouncerTest removeSelector: #tearDown!SystemAnnouncerTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSystemAnnouncerTest!SystemAnnouncerLiveTest removeSelector: #testSaneSubscriptionSize!SystemAnnouncerLiveTest removeSelector: #testOnlyWeakSubscriptions!SystemAnnouncerLiveTest removeSelector: #testNoDeadSubscriptions!Smalltalk globals removeClassNamed: #AnObsoleteSystemAnnouncerLiveTest!SourceFileArrayTest removeSelector: #testTimeStamp!SourceFileArrayTest removeSelector: #testSourcesFileStream!SourceFileArrayTest removeSelector: #testSourcesFileAddressRange!SourceFileArrayTest removeSelector: #testSourcePointerFromFileIndexAndPosition!SourceFileArrayTest removeSelector: #testProtocol!SourceFileArrayTest removeSelector: #testForkedWrite!SourceFileArrayTest removeSelector: #testForkedRead!SourceFileArrayTest removeSelector: #testFilePositionFromSourcePointer!SourceFileArrayTest removeSelector: #testFileIndexFromSourcePointer!SourceFileArrayTest removeSelector: #testChangesFileStream!SourceFileArrayTest removeSelector: #testChangesFileAddressRange!SourceFileArrayTest removeSelector: #testAddressRange!SourceFileArrayTest removeSelector: #ensureChangesFileOpenedInProcess!Smalltalk globals removeClassNamed: #AnObsoleteSourceFileArrayTest!SmalltalkImageTest removeSelector: #writeToLogWithFileNamed:!SmalltalkImageTest removeSelector: #testOpenLog!SmalltalkImageTest removeSelector: #testExtractTwoArgsWithAndWithoutMinus!SmalltalkImageTest removeSelector: #testExtractOneArgWithMinusThenArgsWithout!SmalltalkImageTest removeSelector: #testExtractOneArgWithMinus!SmalltalkImageTest removeSelector: #testExtractOneArgNoMinus!SmalltalkImageTest removeSelector: #testExtractNil!SmalltalkImageTest removeSelector: #testExtractEmpty!SmalltalkImageTest removeSelector: #testExtractAllKinds!Smalltalk globals removeClassNamed: #AnObsoleteSmalltalkImageTest!ObjectFinalizerTests removeSelector: #testFinalizationOfMultipleResources!Smalltalk globals removeClassNamed: #AnObsoleteObjectFinalizerTests!OSPlatformTest removeSelector: #testStartUpList!OSPlatformTest removeSelector: #testNewFileInWorkingDirectory!OSPlatformTest removeSelector: #testCurrentWorkingDirectoryWithBufferSize!OSPlatformTest removeSelector: #testCurrentWorkingDirectory!OSPlatformTest removeSelector: #testAPI!Smalltalk globals removeClassNamed: #AnObsoleteOSPlatformTest!OSEnvironmentTest removeSelector: #testValues!OSEnvironmentTest removeSelector: #testKeys!OSEnvironmentTest removeSelector: #testEnvironmentFor!OSEnvironmentTest removeSelector: #testAtPut!OSEnvironmentTest removeSelector: #testAssociations!OSEnvironmentTest removeSelector: #testAsDictionary!OSEnvironmentTest removeSelector: #instance!Smalltalk globals removeClassNamed: #AnObsoleteOSEnvironmentTest!MOPTraitTest removeSelector: #testSelector!MOPTraitTest removeSelector: #testOrigin!MOPTraitTest removeSelector: #testClass!Smalltalk globals removeClassNamed: #AnObsoleteMOPTraitTest!EphemeronTests removeSelector: #testInterconnectedEphemeronsAreNotCollectedIfTheOtherKeyIsReferencedFromTheOutside!EphemeronTests removeSelector: #testInterconnectedEphemeronsAreNotCollectedIfAKeyIsReferencedFromTheOutside!EphemeronTests removeSelector: #testInterconnectedEphemeronsAreCollectedIfKeysAreNotReferencedFromTheOutside!EphemeronTests removeSelector: #testEphemeronKeyIsNotFinalizedWhenKeyIsHoldStrongly!EphemeronTests removeSelector: #testEphemeronKeyIsFinalizedWhenKeyIsNotHoldStrongly!EphemeronTests removeSelector: #testEphemeronIsRemovedFromRegistryUponFinalization!EphemeronTests removeSelector: #testEphemeronIsNotRemovedFromRegistryUponFinalizationIfKeyIsReferenced!EphemeronTests removeSelector: #testEphemeronAreNotFinalizedIfCollected!Smalltalk globals removeClassNamed: #AnObsoleteEphemeronTests!CommandLineHandlerTest removeSelector: #testSelectHandlersCodeLoader!CommandLineHandlerTest removeSelector: #testResponsibilitySt!CommandLineHandlerTest removeSelector: #testResponsibilityEval!CommandLineHandlerTest removeSelector: #testResponsibilityDefault!CommandLineHandlerTest removeSelector: #testBasicCommandlineHandler!CommandLineHandlerTest removeSelector: #argumentsWith:!Smalltalk globals removeClassNamed: #AnObsoleteCommandLineHandlerTest!CommandLineArgumentsTest removeSelector: #testParameterAt!CommandLineArgumentsTest removeSelector: #testOptionAtifAbsent!CommandLineArgumentsTest removeSelector: #testOptionAt!CommandLineArgumentsTest removeSelector: #testHasParameters!CommandLineArgumentsTest removeSelector: #testHasOption!CommandLineArgumentsTest removeSelector: #testHasFilesTyped!CommandLineArgumentsTest removeSelector: #testAllParameters!CommandLineArgumentsTest removeSelector: #testAllFileTyped!CommandLineArgumentsTest removeSelector: #tesOptionAt!CommandLineArgumentsTest removeSelector: #setUp!CommandLineArgumentsTest removeSelector: #parameters!CommandLineArgumentsTest removeSelector: #commandLine!Smalltalk globals removeClassNamed: #AnObsoleteCommandLineArgumentsTest!ClassRenameFixTest removeSelector: #verifyRenameEvent:!ClassRenameFixTest removeSelector: #testRenameClassUsingClass!ClassRenameFixTest removeSelector: #tearDown!ClassRenameFixTest removeSelector: #setUp!ClassRenameFixTest removeSelector: #renameClassUsing:!ClassRenameFixTest removeSelector: #removeEverythingInSetFromSystem:!ClassRenameFixTest removeSelector: #newUniqueClassName!Smalltalk globals removeClassNamed: #AnObsoleteClassRenameFixTest!ChunkImportTestCase removeSelector: #testImportString!ChunkImportTestCase removeSelector: #testImportFromReadStream!ChunkImportTestCase removeSelector: #testImportAMethodWithSpacesInItsCategory!ChunkImportTestCase removeSelector: #testImportAMethodWithNoTimestamp!ChunkImportTestCase removeSelector: #testImportAMethodWithLangTag!ChunkImportTestCase removeSelector: #testImportAMethod!ChunkImportTestCase removeSelector: #testImportAClassCommentWithExclamationMarks!ChunkImportTestCase removeSelector: #testImportAClassComment!ChunkImportTestCase removeSelector: #testImportAClassCategory!ChunkImportTestCase removeSelector: #testImportAClass!ChunkImportTestCase removeSelector: #testExportAMethodWithLangTag!ChunkImportTestCase removeSelector: #importAClass!Smalltalk globals removeClassNamed: #AnObsoleteChunkImportTestCase!ChangeSetClassChangesTest removeSelector: #testRenaming!ChangeSetClassChangesTest removeSelector: #testInitialChangeSet!ChangeSetClassChangesTest removeSelector: #testChangeClassCategoryAddsNewChangeRecord!ChangeSetClassChangesTest removeSelector: #testChangeClassCategory!ChangeSetClassChangesTest removeSelector: #testAddInstanceVariableAddsNewChangeRecord!ChangeSetClassChangesTest removeSelector: #testAddInstanceVariable!ChangeSetClassChangesTest removeSelector: #tearDown!ChangeSetClassChangesTest removeSelector: #setUp!ChangeSetClassChangesTest removeSelector: #isDefinition:equivalentTo:!ChangeSetClassChangesTest removeSelector: #deleteRenamedClass!ChangeSetClassChangesTest removeSelector: #deleteClass!ChangeSetClassChangesTest removeSelector: #categoryNameForTemporaryClasses!Smalltalk globals removeClassNamed: #AnObsoleteChangeSetClassChangesTest!BecomeTest removeSelector: #testBecomeIdentityHash!BecomeTest removeSelector: #testBecomeHash!BecomeTest removeSelector: #testBecomeForwardIdentityHash!BecomeTest removeSelector: #testBecomeForwardHash!BecomeTest removeSelector: #testBecomeForwardDontCopyIdentityHash!BecomeTest removeSelector: #testBecomeForwardCopyIdentityHash!BecomeTest removeSelector: #testBecomeForward!BecomeTest removeSelector: #testBecome!Smalltalk globals removeClassNamed: #AnObsoleteBecomeTest!BaseStreamTest removeSelector: #testReadOnlyFileNamed!BaseStreamTest removeSelector: #testFileNamed!BaseStreamTest removeSelector: #testFileName!BaseStreamTest removeSelector: #baseStreamType!BaseStreamTest class removeSelector: #isUnitTest!BaseStreamTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteBaseStreamTest!AuthorTest removeSelector: #testUniqueness!Smalltalk globals removeClassNamed: #AnObsoleteAuthorTest!SystemVersion class removeSelector: #fromVersionString:!TraitsResource removeSelector: #tearDown!TraitsResource removeSelector: #t9:!TraitsResource removeSelector: #t9!TraitsResource removeSelector: #t8:!TraitsResource removeSelector: #t8!TraitsResource removeSelector: #t6:!TraitsResource removeSelector: #t6!TraitsResource removeSelector: #t5:!TraitsResource removeSelector: #t5!TraitsResource removeSelector: #t4:!TraitsResource removeSelector: #t4!TraitsResource removeSelector: #t3:!TraitsResource removeSelector: #t3!TraitsResource removeSelector: #t2:!TraitsResource removeSelector: #t2!TraitsResource removeSelector: #t1:!TraitsResource removeSelector: #t12:!TraitsResource removeSelector: #t12!TraitsResource removeSelector: #t11:!TraitsResource removeSelector: #t11!TraitsResource removeSelector: #t10:!TraitsResource removeSelector: #t10!TraitsResource removeSelector: #t1!TraitsResource removeSelector: #setUpTwoLevelRequiresFixture!TraitsResource removeSelector: #setUpTrivialRequiresFixture!TraitsResource removeSelector: #setUpTranslatingRequiresFixture!TraitsResource removeSelector: #setUp!TraitsResource removeSelector: #createdClassesAndTraits!TraitsResource removeSelector: #createTraitNamed:uses:!TraitsResource removeSelector: #createClassNamed:superclass:uses:!TraitsResource removeSelector: #categoryName!TraitsResource removeSelector: #c9:!TraitsResource removeSelector: #c9!TraitsResource removeSelector: #c8:!TraitsResource removeSelector: #c8!TraitsResource removeSelector: #c7:!TraitsResource removeSelector: #c7!TraitsResource removeSelector: #c6:!TraitsResource removeSelector: #c6!TraitsResource removeSelector: #c5:!TraitsResource removeSelector: #c5!TraitsResource removeSelector: #c4:!TraitsResource removeSelector: #c4!TraitsResource removeSelector: #c3:!TraitsResource removeSelector: #c3!TraitsResource removeSelector: #c2:!TraitsResource removeSelector: #c2!TraitsResource removeSelector: #c1:!TraitsResource removeSelector: #c11:!TraitsResource removeSelector: #c11!TraitsResource removeSelector: #c10:!TraitsResource removeSelector: #c10!TraitsResource removeSelector: #c1!Smalltalk globals removeClassNamed: #AnObsoleteTraitsResource!Trait3 removeSelector: #c3!!Trait method!c	^ 'Trait2>>c'! !Trait3 removeSelector: #c!Smalltalk globals removeClassNamed: #AnObsoleteTrait3!Trait2 removeSelector: #c2!Trait2 removeSelector: #c!Smalltalk globals removeClassNamed: #AnObsoleteTrait2!Trait1 removeSelector: #c1!Trait1 removeSelector: #c!Smalltalk globals removeClassNamed: #AnObsoleteTrait1!TestInWorldMorph removeSelector: #outOfWorldCount!TestInWorldMorph removeSelector: #outOfWorld:!TestInWorldMorph removeSelector: #intoWorldCount!TestInWorldMorph removeSelector: #intoWorld:!TestInWorldMorph removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteTestInWorldMorph!DelaySchedulerBackgroundWorkerMorph removeSelector: #stepTime!DelaySchedulerBackgroundWorkerMorph removeSelector: #step!DelaySchedulerBackgroundWorkerMorph removeSelector: #initialize!DelaySchedulerBackgroundWorkerMorph removeSelector: #delete!Smalltalk globals removeClassNamed: #AnObsoleteDelaySchedulerBackgroundWorkerMorph!TextMorphTest removeSelector: #testInitialize!Smalltalk globals removeClassNamed: #AnObsoleteTextMorphTest!DelayExperimentalSemaphoreScheduler removeSelector: #unschedule:!DelayExperimentalSemaphoreScheduler removeSelector: #schedule:!DelayExperimentalSemaphoreScheduler removeSelector: #initialize!DelayExperimentalSemaphoreScheduler removeSelector: #handleTimerEvent:!Smalltalk globals removeClassNamed: #AnObsoleteDelayExperimentalSemaphoreScheduler!DelayExperimentalCourageousScheduler removeSelector: #unschedule:!DelayExperimentalCourageousScheduler removeSelector: #schedule:!Smalltalk globals removeClassNamed: #AnObsoleteDelayExperimentalCourageousScheduler!WindowAnnouncementTest removeSelector: #testWindowLabelling!WindowAnnouncementTest removeSelector: #testWindowCreationAndDeletion!WindowAnnouncementTest removeSelector: #testWindowCreation!WindowAnnouncementTest removeSelector: #testScrolling!WindowAnnouncementTest removeSelector: #testResizingClosing!WindowAnnouncementTest removeSelector: #testResizing!WindowAnnouncementTest removeSelector: #testMoving!WindowAnnouncementTest removeSelector: #testCollapsing!WindowAnnouncementTest removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoleteWindowAnnouncementTest!SupplyAnswerTests removeSelector: #testInform!SupplyAnswerTests removeSelector: #testFillInTheBlank!SupplyAnswerTests removeSelector: #testChooseDirectory!Smalltalk globals removeClassNamed: #AnObsoleteSupplyAnswerTests!PaginatedMorphTreeMorphTests removeSelector: #testPager!Smalltalk globals removeClassNamed: #AnObsoletePaginatedMorphTreeMorphTests!StickynessBugsTest removeSelector: #testForTiltedStickyness!Smalltalk globals removeClassNamed: #AnObsoleteStickynessBugsTest!RenderBugsTest removeSelector: #testTestTime!RenderBugsTest removeSelector: #testSetForward!RenderBugsTest removeSelector: #testNilExtensionOnDraw!RenderBugsTest removeSelector: #testHeading!RenderBugsTest removeSelector: #testForward!RenderBugsTest removeSelector: #shouldntTakeLong:!RenderBugsTest removeSelector: #long!Smalltalk globals removeClassNamed: #AnObsoleteRenderBugsTest!MorphicUIBugTest removeSelector: #tearDown!MorphicUIBugTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteMorphicUIBugTest!MorphicEventHandlerTest removeSelector: #testTwoEventHandlersAreAttached!MorphicEventHandlerTest removeSelector: #testMouseLeaveFromMorph!MorphicEventHandlerTest removeSelector: #testMouseEnterFromMorph!MorphicEventHandlerTest removeSelector: #testMouseEnterDraggingFromMorph!MorphicEventHandlerTest removeSelector: #testKeyStrokeFromMorph!MorphicEventHandlerTest removeSelector: #testDoubleClickTimeoutFromMorph!MorphicEventHandlerTest removeSelector: #testDoubleClickFromMorph!MorphicEventHandlerTest removeSelector: #testClickFromMorph!MorphicEventHandlerTest removeSelector: #tearDown!MorphicEventHandlerTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteMorphicEventHandlerTest!MorphTreeMorphTests removeSelector: #testUpdatingSelectionsOnUpdateWithRemoval!MorphTreeMorphTests removeSelector: #testUpdatingSelectionsOnUpdate!MorphTreeMorphTests removeSelector: #testMaintainingSelectionsOnUpdate!MorphTreeMorphTests removeSelector: #testLeakingSelectionsOnUpdate!MorphTreeMorphTests removeSelector: #testLastClickedMorphSetUponUpdateList!Smalltalk globals removeClassNamed: #AnObsoleteMorphTreeMorphTests!PolygonMorphTest removeSelector: #testBoundsBug1035!Smalltalk globals removeClassNamed: #AnObsoletePolygonMorphTest!MorphTest removeSelector: #testOpenInWorld!MorphTest removeSelector: #testIsMorph!MorphTest removeSelector: #testIntoWorldTransferToNewGuy!MorphTest removeSelector: #testIntoWorldDeleteOutOfWorld!MorphTest removeSelector: #testIntoWorldCollapseOutOfWorld!MorphTest removeSelector: #testHaloIsDisable!MorphTest removeSelector: #testExtent!MorphTest removeSelector: #testBoundingBoxOfSubmorphs!MorphTest removeSelector: #tearDown!MorphTest removeSelector: #setUp!CircleMorphTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteCircleMorphTest!Smalltalk globals removeClassNamed: #AnObsoleteMorphTest!MCPTest removeSelector: #testTop!MCPTest removeSelector: #defaultTop!MCPTest removeSelector: #defaultBounds!Smalltalk globals removeClassNamed: #AnObsoleteMCPTest!LayoutFrameTest removeSelector: #testTransformReturnEmptyRectangleWhenNotPossibleToPlace!LayoutFrameTest removeSelector: #testTransformReturnASubArea!LayoutFrameTest removeSelector: #testTransform!LayoutFrameTest removeSelector: #testSpaceFill!LayoutFrameTest removeSelector: #testRightBottomQuadrant!LayoutFrameTest removeSelector: #testLeftTopAligned!LayoutFrameTest removeSelector: #testInset!LayoutFrameTest removeSelector: #testIdentity!LayoutFrameTest removeSelector: #testAsLayoutFrame!Smalltalk globals removeClassNamed: #AnObsoleteLayoutFrameTest!TextLineTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTextLineTest!TextAnchorTest removeSelector: #testMorphInline!TextAnchorTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTextAnchorTest!SystemVersionTest removeSelector: #testVersionIsCompatible!SystemVersionTest removeSelector: #testVersion!SystemVersionTest removeSelector: #testSystemVersion!SystemVersionTest removeSelector: #testSmalltalkVersionEqualsCurrentVersion!SystemVersionTest removeSelector: #testParsingFromVersionString!SystemVersionTest removeSelector: #testMajorMinorWithSeparatingString!SystemVersionTest removeSelector: #testMajorMinorVersion!SystemVersionTest removeSelector: #testInstanceCreationMajorMinorSuffixBuildWithoutSuffix!SystemVersionTest removeSelector: #testInstanceCreationMajorMinorSuffixBuildCommitHash!SystemVersionTest removeSelector: #testInstanceCreationMajorMinorSuffixBuild!SystemVersionTest removeSelector: #testInstanceCreationMajorMinorSuffix!SystemVersionTest removeSelector: #testInstanceCreationMajorMinor!SystemVersionTest removeSelector: #testInstanceCreation!SystemVersionTest removeSelector: #testDottedMajorMinor!SystemVersionTest removeSelector: #testDoNotBreakSmalltalkVersion!SystemVersionTest removeSelector: #testCommitHashShort!SystemVersionTest removeSelector: #testCalculationOfHighestUpdate!SystemVersionTest removeSelector: #checkIsCompatibleWithResultOfVersionMessage:!Smalltalk globals removeClassNamed: #AnObsoleteSystemVersionTest!MethodQueryTest removeSelector: #testReferencedClasses!Smalltalk globals removeClassNamed: #AnObsoleteMethodQueryTest!ClassQueryTest removeSelector: #testReferencedClasses!ClassQueryTest removeSelector: #testAllCallsOnASymbol!ClassQueryTest removeSelector: #testAllCallsOn!Smalltalk globals removeClassNamed: #AnObsoleteClassQueryTest!TonelWriterTest removeSelector: #testWriteSnapshot!TonelWriterTest removeSelector: #testWriteMethodDefinitionOn!TonelWriterTest removeSelector: #testWriteClassDefinitionOn!TonelWriterTest removeSelector: #testSplitMethodSourceInto!TonelWriterTest removeSelector: #expectedMCSnapshotTestExtensionSt!TonelWriterTest removeSelector: #expectedMCMockClassAClassSt!TonelWriterTest removeSelector: #expectedMCMockASubclassClassSt!Smalltalk globals removeClassNamed: #AnObsoleteTonelWriterTest!TonelSourceScannerTest removeSelector: #testScanMethodWithTerminatingBrackets!TonelSourceScannerTest removeSelector: #testScanMethodWithParserErrors!TonelSourceScannerTest removeSelector: #testScanMethodWithLotsOfSpecials!TonelSourceScannerTest removeSelector: #testScanForStringIfMatch!TonelSourceScannerTest removeSelector: #testScanForLiteralArrayIfMatch!TonelSourceScannerTest removeSelector: #testScanForCommentIfMatch!TonelSourceScannerTest removeSelector: #testScan!Smalltalk globals removeClassNamed: #AnObsoleteTonelSourceScannerTest!TonelScannerTest removeSelector: #testRemoveFromEnclosingStartEnd!Smalltalk globals removeClassNamed: #AnObsoleteTonelScannerTest!TonelReaderTest removeSelector: #testLoadSelectorWithComments!TonelReaderTest removeSelector: #testLoadDefinitions!TonelReaderTest removeSelector: #newMemoryFileSystemSnapshot:!TonelReaderTest removeSelector: #mockSnapshotWithCommentsInSelector!TonelReaderTest removeSelector: #mockSnapshot!TonelReaderTest removeSelector: #assertOrganisationDefinition:and:!TonelReaderTest removeSelector: #assertMethodDefinition:and:!TonelReaderTest removeSelector: #assertDefinition:and:!TonelReaderTest removeSelector: #assertClassDefinition:and:!TonelReaderTest class removeSelector: #mockSnapshotSTONWithCommentsInSelector!TonelReaderTest class removeSelector: #mockSnapshotSTON!Smalltalk globals removeClassNamed: #AnObsoleteTonelReaderTest!TonelParserTest removeSelector: #testTypeDef!TonelParserTest removeSelector: #testType!TonelParserTest removeSelector: #testMethodDefList!TonelParserTest removeSelector: #testMethodDef!TonelParserTest removeSelector: #testMethodBodyWithSquareBracketInsideLiteralArray!TonelParserTest removeSelector: #testMethodBodyWithCommentNextToDollarCharLiteral!TonelParserTest removeSelector: #testMethodBody!TonelParserTest removeSelector: #testMethod!TonelParserTest removeSelector: #testMetadata!TonelParserTest removeSelector: #testExtractSelectorWithComments!TonelParserTest removeSelector: #testExtractSelector!TonelParserTest removeSelector: #testComment!TonelParserTest removeSelector: #shouldParse:rule:raise:!TonelParserTest removeSelector: #parse:rule:!TonelParserTest removeSelector: #assertParse:rule:equals:!Smalltalk globals removeClassNamed: #AnObsoleteTonelParserTest!TonelRepositoryTest removeSelector: #testLoadAllFileNames!TonelRepositoryTest removeSelector: #testCanCreateTonelRepositoryFromUrl!TonelRepositoryTest removeSelector: #tearDown!TonelRepositoryTest removeSelector: #setUp!TonelRepositoryTest removeSelector: #newMemoryFileSystem!Smalltalk globals removeClassNamed: #AnObsoleteTonelRepositoryTest!STONTestAssociation removeSelector: #value:!STONTestAssociation removeSelector: #timestamp!STONTestAssociation removeSelector: #now!STONTestAssociation removeSelector: #key:value:!Smalltalk globals removeClassNamed: #AnObsoleteSTONTestAssociation!STONTestUser3 removeSelector: #stonShouldWriteNilInstVars!STONTestUser3 class removeSelector: #stonName!STONTestUser3 class removeSelector: #stonAllInstVarNames!Smalltalk globals removeClassNamed: #AnObsoleteSTONTestUser3!STONTestUser2 removeSelector: #stonOn:!STONTestUser2 removeSelector: #fromSton:!STONTestUser2 class removeSelector: #stonName!Smalltalk globals removeClassNamed: #AnObsoleteSTONTestUser2!STONTestUser removeSelector: #username:!STONTestUser removeSelector: #username!STONTestUser removeSelector: #password:!STONTestUser removeSelector: #password!STONTestUser removeSelector: #initialize!STONTestUser removeSelector: #hash!STONTestUser removeSelector: #enabled:!STONTestUser removeSelector: #enabled!STONTestUser removeSelector: #=!STONTestUser class removeSelector: #stonName!STONTestUser class removeSelector: #dummy!Smalltalk globals removeClassNamed: #AnObsoleteSTONTestUser!STONTestDomainObject removeSelector: #tags:!STONTestDomainObject removeSelector: #tags!STONTestDomainObject removeSelector: #modified:!STONTestDomainObject removeSelector: #modified!STONTestDomainObject removeSelector: #integer:!STONTestDomainObject removeSelector: #integer!STONTestDomainObject removeSelector: #initialize!STONTestDomainObject removeSelector: #hash!STONTestDomainObject removeSelector: #float:!STONTestDomainObject removeSelector: #float!STONTestDomainObject removeSelector: #description:!STONTestDomainObject removeSelector: #description!STONTestDomainObject removeSelector: #created:!STONTestDomainObject removeSelector: #created!STONTestDomainObject removeSelector: #color:!STONTestDomainObject removeSelector: #color!STONTestDomainObject removeSelector: #bytes:!STONTestDomainObject removeSelector: #bytes!STONTestDomainObject removeSelector: #boolean:!STONTestDomainObject removeSelector: #boolean!STONTestDomainObject removeSelector: #=!STONTestDomainObject class removeSelector: #stonName!STONTestDomainObject class removeSelector: #dummy!Smalltalk globals removeClassNamed: #AnObsoleteSTONTestDomainObject!STONTestMap removeSelector: #printElementsOn:!STONTestMap class removeSelector: #stonName!STONTestMap class removeSelector: #classTreeExtended:!STONTestMap class removeSelector: #classTreeExtended!STONTestMap class removeSelector: #classTree:!STONTestMap class removeSelector: #classTree!Smalltalk globals removeClassNamed: #AnObsoleteSTONTestMap!STONWriterTests removeSelector: #testUserNil!STONWriterTests removeSelector: #testUser3Nil!STONWriterTests removeSelector: #testUser2!STONWriterTests removeSelector: #testUser!STONWriterTests removeSelector: #testTime!STONWriterTests removeSelector: #testSymbolAsString!STONWriterTests removeSelector: #testSymbol!STONWriterTests removeSelector: #testString!STONWriterTests removeSelector: #testRestrictedClassesInJsonMode!STONWriterTests removeSelector: #testReferenceSharingIgnore!STONWriterTests removeSelector: #testReferenceSharingError!STONWriterTests removeSelector: #testReferenceSharing!STONWriterTests removeSelector: #testReferenceCycle!STONWriterTests removeSelector: #testPoint!STONWriterTests removeSelector: #testOrderedCollection!STONWriterTests removeSelector: #testNull!STONWriterTests removeSelector: #testNonBMPCharacterEncoding!STONWriterTests removeSelector: #testNil!STONWriterTests removeSelector: #testMetaclass!STONWriterTests removeSelector: #testMap!STONWriterTests removeSelector: #testList!STONWriterTests removeSelector: #testKeepingNewLines!STONWriterTests removeSelector: #testIsSimpleSymbol!STONWriterTests removeSelector: #testInteger!STONWriterTests removeSelector: #testIdentityDictionary!STONWriterTests removeSelector: #testFloat!STONWriterTests removeSelector: #testEmptyDictionaryPretty!STONWriterTests removeSelector: #testEmptyArrayPretty!STONWriterTests removeSelector: #testDoubleQuotedString!STONWriterTests removeSelector: #testDictionaryWithComplexKeys!STONWriterTests removeSelector: #testDictionary!STONWriterTests removeSelector: #testDateAndTime!STONWriterTests removeSelector: #testDate!STONWriterTests removeSelector: #testCustomNewline!STONWriterTests removeSelector: #testClass!STONWriterTests removeSelector: #testByteArray!STONWriterTests removeSelector: #testBoolean!STONWriterTests removeSelector: #testAssociation!STONWriterTests removeSelector: #serializePretty:!STONWriterTests removeSelector: #serializeJson:!STONWriterTests removeSelector: #serializeAsciiOnly:!STONWriterTests removeSelector: #serialize:!Smalltalk globals removeClassNamed: #AnObsoleteSTONWriterTests!STONWriteReadTests removeSelector: #testUser2!STONWriteReadTests removeSelector: #testUser!STONWriteReadTests removeSelector: #testUUIDs!STONWriteReadTests removeSelector: #testTextAndRunArray!STONWriteReadTests removeSelector: #testSymbols!STONWriteReadTests removeSelector: #testStrings!STONWriteReadTests removeSelector: #testSpecialCharacters!STONWriteReadTests removeSelector: #testSmallIntegers!STONWriteReadTests removeSelector: #testSmallDictionary!STONWriteReadTests removeSelector: #testPrimitives!STONWriteReadTests removeSelector: #testOrderedDictionary!STONWriteReadTests removeSelector: #testJsonMode!STONWriteReadTests removeSelector: #testIntervals!STONWriteReadTests removeSelector: #testFloats!STONWriteReadTests removeSelector: #testFileSystemSupport!STONWriteReadTests removeSelector: #testEmpty!STONWriteReadTests removeSelector: #testDomainObject!STONWriteReadTests removeSelector: #testDatesAndTimes!STONWriteReadTests removeSelector: #testCustomAssociations!STONWriteReadTests removeSelector: #testCollections!STONWriteReadTests removeSelector: #testClasses!STONWriteReadTests removeSelector: #testCharacters!STONWriteReadTests removeSelector: #testAssociations!STONWriteReadTests removeSelector: #serializeJson:!STONWriteReadTests removeSelector: #serializeAndMaterializeJsonMode:!STONWriteReadTests removeSelector: #serializeAndMaterialize:!STONWriteReadTests removeSelector: #serialize:!STONWriteReadTests removeSelector: #materialize:!STONWriteReadCommentsTests removeSelector: #serialize:!STONWriteReadCommentsTests removeSelector: #materialize:!Smalltalk globals removeClassNamed: #AnObsoleteSTONWriteReadCommentsTests!STONWritePrettyPrinterReadTests removeSelector: #serializeJson:!STONWritePrettyPrinterReadTests removeSelector: #serialize:!Smalltalk globals removeClassNamed: #AnObsoleteSTONWritePrettyPrinterReadTests!STONWriteAsciiOnlyReadTests removeSelector: #serializeJson:!STONWriteAsciiOnlyReadTests removeSelector: #serialize:!Smalltalk globals removeClassNamed: #AnObsoleteSTONWriteAsciiOnlyReadTests!STONLargeWriteReadTests removeSelector: #serializeJson:!STONLargeWriteReadTests removeSelector: #serialize:!STONLargeWriteReadTests removeSelector: #materialize:!Smalltalk globals removeClassNamed: #AnObsoleteSTONLargeWriteReadTests!Smalltalk globals removeClassNamed: #AnObsoleteSTONWriteReadTests!STONTests removeSelector: #testToString!STONTests removeSelector: #testRoomExitCycles!STONTests removeSelector: #testPrettyPrinting!STONTests removeSelector: #testFromStringWithComments!STONTests removeSelector: #testFromString!STONTests class removeSelector: #write:toFileNamed:!STONTests class removeSelector: #readFromFileNamed:!STONTests class removeSelector: #fastWrite:toFileNamed:!STONTests class removeSelector: #fastReadFromFileNamed:!Smalltalk globals removeClassNamed: #AnObsoleteSTONTests!STONReaderTests removeSelector: #testWideSymbol!STONReaderTests removeSelector: #testWhitespace!STONReaderTests removeSelector: #testUser2!STONReaderTests removeSelector: #testUser!STONReaderTests removeSelector: #testUnknownClasses!STONReaderTests removeSelector: #testTime!STONReaderTests removeSelector: #testSymbol!STONReaderTests removeSelector: #testString!STONReaderTests removeSelector: #testStreaming!STONReaderTests removeSelector: #testSetWithReferenceElements!STONReaderTests removeSelector: #testSetWithIndirectReferenceElements!STONReaderTests removeSelector: #testReferenceSharing!STONReaderTests removeSelector: #testReferenceCycle!STONReaderTests removeSelector: #testPoint!STONReaderTests removeSelector: #testOrderedCollection!STONReaderTests removeSelector: #testObject!STONReaderTests removeSelector: #testNull!STONReaderTests removeSelector: #testNonBMPCharacterDecoding!STONReaderTests removeSelector: #testNil!STONReaderTests removeSelector: #testNewSymbol!STONReaderTests removeSelector: #testMultiple!STONReaderTests removeSelector: #testMetaclass!STONReaderTests removeSelector: #testMap!STONReaderTests removeSelector: #testList!STONReaderTests removeSelector: #testJsonString!STONReaderTests removeSelector: #testInteger!STONReaderTests removeSelector: #testIllegalCharacterEscapes!STONReaderTests removeSelector: #testIdentityDictionary!STONReaderTests removeSelector: #testFloat!STONReaderTests removeSelector: #testError!STONReaderTests removeSelector: #testDictionaryWithReferenceKeys!STONReaderTests removeSelector: #testDictionaryWithIndirectReferenceKeys!STONReaderTests removeSelector: #testDictionaryWithComplexKeys!STONReaderTests removeSelector: #testDictionary!STONReaderTests removeSelector: #testDeepStructure!STONReaderTests removeSelector: #testDateAndTime!STONReaderTests removeSelector: #testDate!STONReaderTests removeSelector: #testConvertingNewLines!STONReaderTests removeSelector: #testClassWithUnderscore!STONReaderTests removeSelector: #testClass!STONReaderTests removeSelector: #testCharacter!STONReaderTests removeSelector: #testByteArray!STONReaderTests removeSelector: #testBoolean!STONReaderTests removeSelector: #testAssociation!STONReaderTests removeSelector: #materialize:!Smalltalk globals removeClassNamed: #AnObsoleteSTONReaderTests!STONJSONTests removeSelector: #testUnknown!STONJSONTests removeSelector: #testStrings!STONJSONTests removeSelector: #testShared!STONJSONTests removeSelector: #testNull!STONJSONTests removeSelector: #testMaps!STONJSONTests removeSelector: #testLists!STONJSONTests removeSelector: #testIntegers!STONJSONTests removeSelector: #testFloats!STONJSONTests removeSelector: #testCircular!STONJSONTests removeSelector: #testBooleans!Smalltalk globals removeClassNamed: #AnObsoleteSTONJSONTests!STONCStyleCommentsSkipStreamTests removeSelector: #testSingleLineComment!STONCStyleCommentsSkipStreamTests removeSelector: #testSTON!STONCStyleCommentsSkipStreamTests removeSelector: #testNonComment!STONCStyleCommentsSkipStreamTests removeSelector: #testMultiLineComment!STONCStyleCommentsSkipStreamTests removeSelector: #testCommentInString!Smalltalk globals removeClassNamed: #AnObsoleteSTONCStyleCommentsSkipStreamTests!Delay class removeSelector: #testCaseSupportTimingSemaphore!TestLocalVariable removeSelector: #default!Smalltalk globals removeClassNamed: #AnObsoleteTestLocalVariable!TestInheritableVariable class removeSelector: #isInheritable!TestInheritableVariable class removeSelector: #enabled!TestInheritableVariable class removeSelector: #enable!TestInheritableVariable class removeSelector: #disable!Smalltalk globals removeClassNamed: #AnObsoleteTestInheritableVariable!Smalltalk globals removeClassNamed: #AnObsoleteTestDynamicVariable!YearMonthWeekTest removeSelector: #testYearPrintOn!YearMonthWeekTest removeSelector: #testWeekPrintOn!YearMonthWeekTest removeSelector: #testStartDay!YearMonthWeekTest removeSelector: #testMonthPrintOn!YearMonthWeekTest removeSelector: #testIsLeapYear!YearMonthWeekTest removeSelector: #testIndexOfDay!YearMonthWeekTest removeSelector: #testDaysInYear!YearMonthWeekTest removeSelector: #testDaysInMonth!YearMonthWeekTest removeSelector: #tearDown!YearMonthWeekTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteYearMonthWeekTest!UnicodeTest removeSelector: #unicodeCategoryTableLookup:!UnicodeTest removeSelector: #testRNG!UnicodeTest removeSelector: #testNonCharacterPositive!UnicodeTest removeSelector: #testNonCharacterNegative!UnicodeTest removeSelector: #testIsUppercase!UnicodeTest removeSelector: #testIsTitlecaseLetter!UnicodeTest removeSelector: #testIsSurrogateOther!UnicodeTest removeSelector: #testIsSpacingCombiningMark!UnicodeTest removeSelector: #testIsSpaceSeparator!UnicodeTest removeSelector: #testIsPrivateOther!UnicodeTest removeSelector: #testIsParagraphSeparator!UnicodeTest removeSelector: #testIsOtherSymbol!UnicodeTest removeSelector: #testIsOtherPunctuation!UnicodeTest removeSelector: #testIsOtherNumber!UnicodeTest removeSelector: #testIsOtherLetter!UnicodeTest removeSelector: #testIsOpenPunctuation!UnicodeTest removeSelector: #testIsNonspacingMark!UnicodeTest removeSelector: #testIsModifierSymbol!UnicodeTest removeSelector: #testIsMathSymbol!UnicodeTest removeSelector: #testIsLowercase!UnicodeTest removeSelector: #testIsLineSeparator!UnicodeTest removeSelector: #testIsLetterNumber!UnicodeTest removeSelector: #testIsLetterModifier!UnicodeTest removeSelector: #testIsLetter!UnicodeTest removeSelector: #testIsInitialQuote!UnicodeTest removeSelector: #testIsFormatOther!UnicodeTest removeSelector: #testIsFinalQuote!UnicodeTest removeSelector: #testIsEnclosingMark!UnicodeTest removeSelector: #testIsDigit!UnicodeTest removeSelector: #testIsDecimalDigit!UnicodeTest removeSelector: #testIsDashPunctuation!UnicodeTest removeSelector: #testIsCurrencySymbol!UnicodeTest removeSelector: #testIsControlOther!UnicodeTest removeSelector: #testIsConnectorPunctuation!UnicodeTest removeSelector: #testIsClosePunctuation!UnicodeTest removeSelector: #testIsCasedLetter!UnicodeTest removeSelector: #setUp!UnicodeTest removeSelector: #checkCorrespondanceOf:and:!UnicodeTest removeSelector: #aRandomSelectionOfCodePointsDo:!UnicodeTest removeSelector: #aRandomSelectionOfCharactersDo:!UnicodeTest class removeSelector: #resources!Smalltalk globals removeClassNamed: #AnObsoleteUnicodeTest!TimespanDoTest removeSelector: #testYearsDo!TimespanDoTest removeSelector: #testWeeksDo!TimespanDoTest removeSelector: #testNext!TimespanDoTest removeSelector: #testMonthsDo!TimespanDoTest removeSelector: #testEveryDo!TimespanDoTest removeSelector: #testDoWithWhen!TimespanDoTest removeSelector: #testDoWith!TimespanDoTest removeSelector: #testDatesDo!TimespanDoTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTimespanDoTest!TimespanDoSpanAYearTest removeSelector: #testYearsDo!TimespanDoSpanAYearTest removeSelector: #testWeeksDo!TimespanDoSpanAYearTest removeSelector: #testNext!TimespanDoSpanAYearTest removeSelector: #testMonthsDo!TimespanDoSpanAYearTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTimespanDoSpanAYearTest!TestValueWithinFix removeSelector: #valueWithinNonLocalReturn!TestValueWithinFix removeSelector: #testValueWithinTimingRepeat!TestValueWithinFix removeSelector: #testValueWithinTimingNestedOuter!TestValueWithinFix removeSelector: #testValueWithinTimingNestedInner!TestValueWithinFix removeSelector: #testValueWithinTimingBasic!TestValueWithinFix removeSelector: #testValueWithinNonLocalReturnFixSimply!TestValueWithinFix removeSelector: #testValueWithinNonLocalReturnFixReal!Smalltalk globals removeClassNamed: #AnObsoleteTestValueWithinFix!SizeInMemoryTest removeSelector: #testSizeInMemorySmallIntegers!SizeInMemoryTest removeSelector: #testSizeInMemoryOfCharacters!SizeInMemoryTest removeSelector: #testSizeInMemoryOfByteObjects!SizeInMemoryTest removeSelector: #testSizeInMemoryNormalClasses!SizeInMemoryTest removeSelector: #testSizeInMemoryLargeInstances!SizeInMemoryTest removeSelector: #testSizeInMemoryCompactClasses!SizeInMemoryTest removeSelector: #paddedByteStringSize:!SizeInMemoryTest removeSelector: #headerSize!SizeInMemoryTest removeSelector: #align64Bits:!Smalltalk globals removeClassNamed: #AnObsoleteSizeInMemoryTest!SelfEvaluatingObjectTest removeSelector: #testArray!SelfEvaluatingObjectTest removeSelector: #assertCode:print:!Smalltalk globals removeClassNamed: #AnObsoleteSelfEvaluatingObjectTest!RecursionStopperTest removeSelector: #threadSafe!RecursionStopperTest removeSelector: #testWithRecursion!RecursionStopperTest removeSelector: #testThreadSafe!RecursionStopperTest removeSelector: #testNoRecursion!RecursionStopperTest removeSelector: #testMixedMethod!RecursionStopperTest removeSelector: #tearDown!RecursionStopperTest removeSelector: #setUp!RecursionStopperTest removeSelector: #recursion!RecursionStopperTest removeSelector: #mixedMethod!Smalltalk globals removeClassNamed: #AnObsoleteRecursionStopperTest!ProcessTest removeSelector: #waitForProcessTermination:!ProcessTest removeSelector: #testYield!ProcessTest removeSelector: #testTerminationShouldProceedEnsureBlocks!ProcessTest removeSelector: #testTerminationShouldProceedAllEnsureBlocksIfSomeWasFailed!ProcessTest removeSelector: #testTerminateActive!ProcessTest removeSelector: #testSchedulingSamePriorityFirstComeFirstServed!ProcessTest removeSelector: #testSchedulingHigherPriorityServedFirst!ProcessTest removeSelector: #testNewProcessWith!ProcessTest removeSelector: #testNewProcess!ProcessTest removeSelector: #testIsTerminatingNormalTermination!ProcessTest removeSelector: #testIsTerminatingForcedTerminationWithoutRunning!ProcessTest removeSelector: #testIsTerminatingForcedTermination!ProcessTest removeSelector: #testIsSelfEvaluating!ProcessTest removeSelector: #testInjectingMultipleExceptionHandlersIntoRunningProcess!ProcessTest removeSelector: #testInjectingMultipleExceptionHandlersIntoNotRunningProcess!ProcessTest removeSelector: #testInjectingExceptionHandlerIntoRunningProcess!ProcessTest removeSelector: #testInjectingExceptionHandlerIntoProcessWithArg!ProcessTest removeSelector: #testInjectingExceptionHandlerIntoNotRunningProcess!ProcessTest removeSelector: #testInjectingExceptionHandlerFromProcessItself!ProcessTest removeSelector: #testForkAtHigherPriority!ProcessTest removeSelector: #testFork!Smalltalk globals removeClassNamed: #AnObsoleteProcessTest!ProcessTerminateBug removeSelector: #testUnwindFromForeignProcess!ProcessTerminateBug removeSelector: #testUnwindFromActiveProcess!ProcessTerminateBug removeSelector: #testTerminationDuringUnwind!ProcessTerminateBug removeSelector: #testSchedulerTermination!Smalltalk globals removeClassNamed: #AnObsoleteProcessTerminateBug!ProcessSpecificTest removeSelector: #testLocalVariable!ProcessSpecificTest removeSelector: #testInheritingExecutionEnvironment!ProcessSpecificTest removeSelector: #testInheritableVariable!ProcessSpecificTest removeSelector: #testExecutionEnvironment!ProcessSpecificTest removeSelector: #testDynamicVariableRemovedAfterUse!ProcessSpecificTest removeSelector: #testDynamicVariableBlockReturnValue!ProcessSpecificTest removeSelector: #testDynamicVariableAccessFromDifferentProcess!ProcessSpecificTest removeSelector: #testDynamicVariable!ProcessSpecificTest removeSelector: #checkLocal:!ProcessSpecificTest removeSelector: #checkDynamic:!Smalltalk globals removeClassNamed: #AnObsoleteProcessSpecificTest!PragmaTest removeSelector: #testHash!PragmaTest removeSelector: #testEqual!PragmaTest removeSelector: #testCopy!PragmaTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoletePragmaTest!MutexTest removeSelector: #waitProcessTermination:!MutexTest removeSelector: #waitProcessSuspend:!MutexTest removeSelector: #waitProcessLock:!MutexTest removeSelector: #waitLastProcessTerminate!MutexTest removeSelector: #waitLastProcessSuspend!MutexTest removeSelector: #waitLastProcessLock!MutexTest removeSelector: #waitFor:!MutexTest removeSelector: #testTwoRecursiveCriticalsShouldNotWaitEachOther!MutexTest removeSelector: #testTwoCriticalsShouldWaitEachOther!MutexTest removeSelector: #testTerminatingBlockedCriticalWhichWasSignalledButNotResumedYet!MutexTest removeSelector: #testTerminatingBlockedCriticalSectionShouldNotUnblockAnotherWaitingSection!MutexTest removeSelector: #testTerminatedCriticalSectionShouldUnblockWaitingOne!MutexTest removeSelector: #testFailedCriticalSectionShouldUnblockWaitingOne!MutexTest removeSelector: #testExecutionCriticalSection!MutexTest removeSelector: #tearDown!MutexTest removeSelector: #setUp!MutexTest removeSelector: #fork:at:!MutexTest removeSelector: #fork:!Smalltalk globals removeClassNamed: #AnObsoleteMutexTest!MonitorTest removeSelector: #testWaitMaxMilliseconds!MonitorTest removeSelector: #testExample2!MonitorTest removeSelector: #testExample1!Smalltalk globals removeClassNamed: #AnObsoleteMonitorTest!LocalRecursionStopperTest removeSelector: #testWithRecursion!LocalRecursionStopperTest removeSelector: #testWithComplexRecursion!LocalRecursionStopperTest removeSelector: #testNoRecursion!LocalRecursionStopperTest removeSelector: #testMixedMethod!LocalRecursionStopperTest removeSelector: #tearDown!LocalRecursionStopperTest removeSelector: #setUp!LocalRecursionStopperTest removeSelector: #recursion!LocalRecursionStopperTest removeSelector: #mixedMethod!LocalRecursionStopperTest removeSelector: #complexRecursionLastCall!LocalRecursionStopperTest removeSelector: #complexRecursionFirstCall!LocalRecursionStopperTest removeSelector: #complexRecursion!Smalltalk globals removeClassNamed: #AnObsoleteLocalRecursionStopperTest!IntegerTest removeSelector: #testTwoComplementRightShift!IntegerTest removeSelector: #testTwoComplementBitLogicWithCarry!IntegerTest removeSelector: #testStringAsNumber!IntegerTest removeSelector: #testStoreOn!IntegerTest removeSelector: #testSqrtFloor!IntegerTest removeSelector: #testSqrtErrorConditions!IntegerTest removeSelector: #testRounding!IntegerTest removeSelector: #testRomanPrinting!IntegerTest removeSelector: #testReciprocalModulo!IntegerTest removeSelector: #testReadFromWithError!IntegerTest removeSelector: #testReadFrom!IntegerTest removeSelector: #testRaisedToErrorConditions!IntegerTest removeSelector: #testPrintStringHex!IntegerTest removeSelector: #testPrintStringBase!IntegerTest removeSelector: #testPrintSeparatedByEverySignedOn!IntegerTest removeSelector: #testPrintOnBaseShowRadix!IntegerTest removeSelector: #testPrimesUpTo!IntegerTest removeSelector: #testPositiveIntegerPrinting!IntegerTest removeSelector: #testNumberOfDigits!IntegerTest removeSelector: #testNthRootTruncated!IntegerTest removeSelector: #testNthRootExactness!IntegerTest removeSelector: #testNthRootErrorConditions!IntegerTest removeSelector: #testNthRoot!IntegerTest removeSelector: #testNew!IntegerTest removeSelector: #testNegativeIntegerPrinting!IntegerTest removeSelector: #testLowBit!IntegerTest removeSelector: #testLog!IntegerTest removeSelector: #testLn!IntegerTest removeSelector: #testLargePrimesUpTo!IntegerTest removeSelector: #testIsProbablyPrime!IntegerTest removeSelector: #testIsPrime2!IntegerTest removeSelector: #testIsPrime!IntegerTest removeSelector: #testIsPowerOfTwoM6873!IntegerTest removeSelector: #testIsPowerOfTwo!IntegerTest removeSelector: #testIsInteger!IntegerTest removeSelector: #testIntegerReadsOkFromString!IntegerTest removeSelector: #testIntegerReadsOkFromStream!IntegerTest removeSelector: #testIntegerReadsNotOkFromString!IntegerTest removeSelector: #testIntegerReadsNotOkFromStream!IntegerTest removeSelector: #testIntegerPadding!IntegerTest removeSelector: #testIntegerHex!IntegerTest removeSelector: #testHighBitOfMagnitude!IntegerTest removeSelector: #testHighBit!IntegerTest removeSelector: #testHex!IntegerTest removeSelector: #testFloorLog!IntegerTest removeSelector: #testExactSqrt!IntegerTest removeSelector: #testExactRaisedTo!IntegerTest removeSelector: #testEven!IntegerTest removeSelector: #testDigitsAccess!IntegerTest removeSelector: #testDifferentBases!IntegerTest removeSelector: #testDegreeSin!IntegerTest removeSelector: #testDegreeCos!IntegerTest removeSelector: #testCrossSumBase!IntegerTest removeSelector: #testCreationFromBytes3!IntegerTest removeSelector: #testCreationFromBytes2!IntegerTest removeSelector: #testCreationFromBytes1!IntegerTest removeSelector: #testBitXor!IntegerTest removeSelector: #testBitString!IntegerTest removeSelector: #testBitShift!IntegerTest removeSelector: #testBitOr!IntegerTest removeSelector: #testBitMask!IntegerTest removeSelector: #testBitLogic!IntegerTest removeSelector: #testBitClear!IntegerTest removeSelector: #testBitAt!IntegerTest removeSelector: #testBitAnd!IntegerTest removeSelector: #testBigReceiverInexactSqrt!IntegerTest removeSelector: #testBigReceiverInexactNthRoot!IntegerTest removeSelector: #testBenchFib!IntegerTest removeSelector: #testBadBase!IntegerTest removeSelector: #testAsStringWithCommas!IntegerTest removeSelector: #testAsSmallerPowerOfTwo!IntegerTest removeSelector: #testAsLargerPowerOfTwo!IntegerTest removeSelector: #assert:classAndValueEquals:!Smalltalk globals removeClassNamed: #AnObsoleteIntegerTest!IntegerDigitLogicTest removeSelector: #testShiftOneLeftThenRight!IntegerDigitLogicTest removeSelector: #testShiftMinusOne1LeftThenRight!IntegerDigitLogicTest removeSelector: #testNNegatedEqualsNComplementedPlusOne!IntegerDigitLogicTest removeSelector: #testNBitAndNNegatedEqualsN!IntegerDigitLogicTest removeSelector: #testMixedSignDigitLogic!IntegerDigitLogicTest removeSelector: #testLargeShift!IntegerDigitLogicTest removeSelector: #testAndSingleBitWithMinusOne!Smalltalk globals removeClassNamed: #AnObsoleteIntegerDigitLogicTest!InstructionClientTest removeSelector: #testInstructions!Smalltalk globals removeClassNamed: #AnObsoleteInstructionClientTest!InstVarRefLocatorTest removeSelector: #testInstructions!InstVarRefLocatorTest removeSelector: #testExample2!InstVarRefLocatorTest removeSelector: #testExample1!InstVarRefLocatorTest removeSelector: #hasInstVarRef:!InstVarRefLocatorTest removeSelector: #example2!InstVarRefLocatorTest removeSelector: #example1!Smalltalk globals removeClassNamed: #AnObsoleteInstVarRefLocatorTest!IVsAndClassVarNamesConflictTest removeSelector: #testOneCanProceedWhenIntroducingClasseVariablesBeginingWithLowerCaseCharacters!IVsAndClassVarNamesConflictTest removeSelector: #testOneCanProceedWhenIntroducingCapitalizedInstanceVariables!IVsAndClassVarNamesConflictTest removeSelector: #tearDown!IVsAndClassVarNamesConflictTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteIVsAndClassVarNamesConflictTest!ExceptionTests removeSelector: #testTimeoutWithZeroDuration!ExceptionTests removeSelector: #testSimpleReturn!ExceptionTests removeSelector: #testSimpleRetryUsing!ExceptionTests removeSelector: #testSimpleRetry!ExceptionTests removeSelector: #testSimpleResume!ExceptionTests removeSelector: #testSimpleResignalAs!ExceptionTests removeSelector: #testSimplePass!ExceptionTests removeSelector: #testSimpleOuter!ExceptionTests removeSelector: #testSimpleIsNested!ExceptionTests removeSelector: #testSimpleEnsureTestWithUparrow!ExceptionTests removeSelector: #testSimpleEnsureTestWithNotification!ExceptionTests removeSelector: #testSimpleEnsureTestWithError!ExceptionTests removeSelector: #testSimpleEnsure!ExceptionTests removeSelector: #testSignalWithTag!ExceptionTests removeSelector: #testSignalFromHandlerActionTest!ExceptionTests removeSelector: #testResumablePass!ExceptionTests removeSelector: #testResumableOuter!ExceptionTests removeSelector: #testResumableFallOffTheEndHandler!ExceptionTests removeSelector: #testNonResumablePass!ExceptionTests removeSelector: #testNonResumableOuter!ExceptionTests removeSelector: #testNonResumableFallOffTheEndHandler!ExceptionTests removeSelector: #testNoTimeout!ExceptionTests removeSelector: #testHandlingWithSeveralExclusionsAndExceptionSetsHandling!ExceptionTests removeSelector: #testHandlingWithSeveralExclusions!ExceptionTests removeSelector: #testHandlingWithExclusion!ExceptionTests removeSelector: #testHandlingWhenThereIsSomeExclusionButDontApplies!ExceptionTests removeSelector: #testHandlingExceptionSetWithExclusion!ExceptionTests removeSelector: #testHandlerFromAction!ExceptionTests removeSelector: #testHandlerContext!ExceptionTests removeSelector: #testDoubleResume!ExceptionTests removeSelector: #testDoublePassOuter!ExceptionTests removeSelector: #testDoubleOuterPass!ExceptionTests removeSelector: #assertSuccess:!Smalltalk globals removeClassNamed: #AnObsoleteExceptionTests!DosTimestampTest removeSelector: #testTimesAreLocal!DosTimestampTest removeSelector: #testFromDateAndTime!DosTimestampTest removeSelector: #testAsDateAndTime!Smalltalk globals removeClassNamed: #AnObsoleteDosTimestampTest!DependentsArrayTest removeSelector: #testSize!Smalltalk globals removeClassNamed: #AnObsoleteDependentsArrayTest!DelayTest removeSelector: #testSemaphoreTimeout!DelayTest removeSelector: #testSemaphoreNoTimeout!DelayTest removeSelector: #testMultiSchedule!DelayTest removeSelector: #testMultiProcessWaitOnSameDelay!DelayTest removeSelector: #testBounds!Smalltalk globals removeClassNamed: #AnObsoleteDelayTest!DelayNullSchedulerTest removeSelector: #testNullDelay!Smalltalk globals removeClassNamed: #AnObsoleteDelayNullSchedulerTest!DelayMillisecondSchedulerTest removeSelector: #testTestInterferenceWithSystemTimingSemaphore!DelayMillisecondSchedulerTest removeSelector: #testMillisecondsToGo!DelayMillisecondSchedulerTest removeSelector: #testForSeconds!DelayMillisecondSchedulerTest removeSelector: #testForMilliseconds!DelayMillisecondSchedulerTest removeSelector: #testDurationMoreThanMaxTicks!DelayMillisecondSchedulerTest removeSelector: #testDurationLessThanMaxTicks!DelayMillisecondSchedulerTest removeSelector: #tearDown!DelayMillisecondSchedulerTest removeSelector: #busyWaitMilliseconds:!Smalltalk globals removeClassNamed: #AnObsoleteDelayMillisecondSchedulerTest!DelayTicklessSchedulerTest removeSelector: #testDurationMoreThanMaxTicks!DelayTicklessSchedulerTest removeSelector: #delaySchedulerClass!DelayTicklessSchedulerTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteDelayTicklessSchedulerTest!DelayMicrosecondSchedulerTest removeSelector: #testTestInterferenceWithSystemTimingSemaphore!DelayMicrosecondSchedulerTest removeSelector: #testMillisecondsToGo!DelayMicrosecondSchedulerTest removeSelector: #testForSeconds!DelayMicrosecondSchedulerTest removeSelector: #testForMilliseconds!DelayMicrosecondSchedulerTest removeSelector: #testDurationMoreThanMaxTicks!DelayMicrosecondSchedulerTest removeSelector: #testDurationLessThanMaxTicks!DelayMicrosecondSchedulerTest removeSelector: #tearDown!DelayMicrosecondSchedulerTest removeSelector: #delaySchedulerClass!DelayMicrosecondSchedulerTest removeSelector: #busyWaitMilliseconds:!Smalltalk globals removeClassNamed: #AnObsoleteDelayMicrosecondSchedulerTest!DateParsingTests removeSelector: #testParsingYYYYPatternWithWrongNumberOrDigitsShouldFails!DateParsingTests removeSelector: #testParsingYYPatternWithWrongNumberOrDigitsShouldFails!DateParsingTests removeSelector: #testParsingYYPatternReturnsASecondMillenaryYear!DateParsingTests removeSelector: #testParsingYPatternWithTwoDigitsReturnsASecondMillenaryYear!DateParsingTests removeSelector: #testParsingYPatternWithSingleDigitReturnsASecondMillenaryYear!DateParsingTests removeSelector: #testParsingYPatternWithFiveDigits!DateParsingTests removeSelector: #testParsingPatternWithTrailingCharacterFails!DateParsingTests removeSelector: #testParsingPatternWithExtraCharacter!DateParsingTests removeSelector: #testParsingMPatternWithTwoDigitSucceeds!DateParsingTests removeSelector: #testParsingMPatternWithSingleDigitSucceeds!DateParsingTests removeSelector: #testParsingMPatternWithIncorrectMonthFails!DateParsingTests removeSelector: #testParsingMMPatternWithSingleDigitFails!DateParsingTests removeSelector: #testParsingMMPatternWithIncorrectMonthFails!DateParsingTests removeSelector: #testParsingDPatternWithTwoDigitSucceeds!DateParsingTests removeSelector: #testParsingDPatternWithSingleDigitSucceeds!DateParsingTests removeSelector: #testParsingDPatternWithIncorrectDayFails!DateParsingTests removeSelector: #testParsingDDPatternWithSingleDigitFails!DateParsingTests removeSelector: #testParsingDDPatternWithIncorrectDaysFails!DateParsingTests removeSelector: #testDefaultParsingSucceeds!DateParsingTests removeSelector: #testCanEscapeSpecialCharacters!DateParsingTests removeSelector: #reading:pattern:!DateParsingTests removeSelector: #dateParserClass!DateParsingTests removeSelector: #assertReading:as:raise:!DateParsingTests removeSelector: #assertReading:as:equals:!Smalltalk globals removeClassNamed: #AnObsoleteDateParsingTests!DateAndTimeUnixEpochTest removeSelector: #testYesterday!DateAndTimeUnixEpochTest removeSelector: #testYearMonthDayHourMinuteSecondNanosSecondOffset!DateAndTimeUnixEpochTest removeSelector: #testYearMonthDayHourMinuteSecond!DateAndTimeUnixEpochTest removeSelector: #testYearMonthDay!DateAndTimeUnixEpochTest removeSelector: #testYearDayHourMinuteSecond!DateAndTimeUnixEpochTest removeSelector: #testYearDay!DateAndTimeUnixEpochTest removeSelector: #testYear!DateAndTimeUnixEpochTest removeSelector: #testUtcOffset!DateAndTimeUnixEpochTest removeSelector: #testTommorrow!DateAndTimeUnixEpochTest removeSelector: #testToday!DateAndTimeUnixEpochTest removeSelector: #testToByDo!DateAndTimeUnixEpochTest removeSelector: #testToBy!DateAndTimeUnixEpochTest removeSelector: #testTo!DateAndTimeUnixEpochTest removeSelector: #testTimeZone!DateAndTimeUnixEpochTest removeSelector: #testTicksOffset!DateAndTimeUnixEpochTest removeSelector: #testTicks!DateAndTimeUnixEpochTest removeSelector: #testSeconds!DateAndTimeUnixEpochTest removeSelector: #testSecond!DateAndTimeUnixEpochTest removeSelector: #testPrintOn!DateAndTimeUnixEpochTest removeSelector: #testPlus!DateAndTimeUnixEpochTest removeSelector: #testOffset!DateAndTimeUnixEpochTest removeSelector: #testNow!DateAndTimeUnixEpochTest removeSelector: #testNoon!DateAndTimeUnixEpochTest removeSelector: #testNanoSecond!DateAndTimeUnixEpochTest removeSelector: #testMonth!DateAndTimeUnixEpochTest removeSelector: #testMinutes!DateAndTimeUnixEpochTest removeSelector: #testMinute!DateAndTimeUnixEpochTest removeSelector: #testMinus!DateAndTimeUnixEpochTest removeSelector: #testMidnight!DateAndTimeUnixEpochTest removeSelector: #testMiddleOf!DateAndTimeUnixEpochTest removeSelector: #testMeridianAbbreviation!DateAndTimeUnixEpochTest removeSelector: #testLessThan!DateAndTimeUnixEpochTest removeSelector: #testJulianDayNumber!DateAndTimeUnixEpochTest removeSelector: #testIsLeapYear!DateAndTimeUnixEpochTest removeSelector: #testHour12!DateAndTimeUnixEpochTest removeSelector: #testHour!DateAndTimeUnixEpochTest removeSelector: #testHash!DateAndTimeUnixEpochTest removeSelector: #testFromString!DateAndTimeUnixEpochTest removeSelector: #testFromSeconds!DateAndTimeUnixEpochTest removeSelector: #testFirstDayOfMonth!DateAndTimeUnixEpochTest removeSelector: #testEpoch!DateAndTimeUnixEpochTest removeSelector: #testDuration!DateAndTimeUnixEpochTest removeSelector: #testDaysLeftInYear!DateAndTimeUnixEpochTest removeSelector: #testDaysInYear!DateAndTimeUnixEpochTest removeSelector: #testDaysInMonth!DateAndTimeUnixEpochTest removeSelector: #testDayOfYear!DateAndTimeUnixEpochTest removeSelector: #testDayOfWeek!DateAndTimeUnixEpochTest removeSelector: #testDayOfMonth!DateAndTimeUnixEpochTest removeSelector: #testDayMonthYearDo!DateAndTimeUnixEpochTest removeSelector: #testDay!DateAndTimeUnixEpochTest removeSelector: #testDateTime!DateAndTimeUnixEpochTest removeSelector: #testCurrent!DateAndTimeUnixEpochTest removeSelector: #testAsYear!DateAndTimeUnixEpochTest removeSelector: #testAsWeek!DateAndTimeUnixEpochTest removeSelector: #testAsUTC!DateAndTimeUnixEpochTest removeSelector: #testAsTime!DateAndTimeUnixEpochTest removeSelector: #testAsSeconds!DateAndTimeUnixEpochTest removeSelector: #testAsNanoSeconds!DateAndTimeUnixEpochTest removeSelector: #testAsMonth!DateAndTimeUnixEpochTest removeSelector: #testAsLocal!DateAndTimeUnixEpochTest removeSelector: #testAsDuration!DateAndTimeUnixEpochTest removeSelector: #testAsDateAndTime!DateAndTimeUnixEpochTest removeSelector: #testAsDate!DateAndTimeUnixEpochTest removeSelector: #tearDown!DateAndTimeUnixEpochTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteDateAndTimeUnixEpochTest!DateAndTimeLeapTest removeSelector: #testYearMonthDayHourMinuteSecond!DateAndTimeLeapTest removeSelector: #testYearDayHourMinuteSecond!DateAndTimeLeapTest removeSelector: #testYear!DateAndTimeLeapTest removeSelector: #testUtcOffset!DateAndTimeLeapTest removeSelector: #testTimeZone!DateAndTimeLeapTest removeSelector: #testTicksOffset!DateAndTimeLeapTest removeSelector: #testTicks!DateAndTimeLeapTest removeSelector: #testSeconds!DateAndTimeLeapTest removeSelector: #testSecond!DateAndTimeLeapTest removeSelector: #testPrintOn!DateAndTimeLeapTest removeSelector: #testOffset!DateAndTimeLeapTest removeSelector: #testNoon!DateAndTimeLeapTest removeSelector: #testNanoSecond!DateAndTimeLeapTest removeSelector: #testMonth!DateAndTimeLeapTest removeSelector: #testMinutes!DateAndTimeLeapTest removeSelector: #testMinute!DateAndTimeLeapTest removeSelector: #testMidnight!DateAndTimeLeapTest removeSelector: #testMiddleOf!DateAndTimeLeapTest removeSelector: #testMeridianAbbreviation!DateAndTimeLeapTest removeSelector: #testLessThan!DateAndTimeLeapTest removeSelector: #testIsLeapYear!DateAndTimeLeapTest removeSelector: #testHour12!DateAndTimeLeapTest removeSelector: #testHour!DateAndTimeLeapTest removeSelector: #testFromString!DateAndTimeLeapTest removeSelector: #testFirstDayOfMonth!DateAndTimeLeapTest removeSelector: #testDaysLeftInYear!DateAndTimeLeapTest removeSelector: #testDaysInYear!DateAndTimeLeapTest removeSelector: #testDaysInMonth!DateAndTimeLeapTest removeSelector: #testDayOfYear!DateAndTimeLeapTest removeSelector: #testDayOfWeek!DateAndTimeLeapTest removeSelector: #testDayOfMonth!DateAndTimeLeapTest removeSelector: #testDayMonthYearDo!DateAndTimeLeapTest removeSelector: #testDay!DateAndTimeLeapTest removeSelector: #testAsYear!DateAndTimeLeapTest removeSelector: #testAsWeek!DateAndTimeLeapTest removeSelector: #testAsUTC!DateAndTimeLeapTest removeSelector: #testAsTime!DateAndTimeLeapTest removeSelector: #testAsSeconds!DateAndTimeLeapTest removeSelector: #testAsNanoSeconds!DateAndTimeLeapTest removeSelector: #testAsMonth!DateAndTimeLeapTest removeSelector: #testAsLocal!DateAndTimeLeapTest removeSelector: #testAsDuration!DateAndTimeLeapTest removeSelector: #testAsDate!DateAndTimeLeapTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteDateAndTimeLeapTest!DateAndTimeEpochTest removeSelector: #testYesterday!DateAndTimeEpochTest removeSelector: #testYearMonthDayHourMinuteSecondNanosSecondOffset!DateAndTimeEpochTest removeSelector: #testYearMonthDayHourMinuteSecond!DateAndTimeEpochTest removeSelector: #testYearMonthDay!DateAndTimeEpochTest removeSelector: #testYearDayHourMinuteSecond!DateAndTimeEpochTest removeSelector: #testYearDay!DateAndTimeEpochTest removeSelector: #testYear!DateAndTimeEpochTest removeSelector: #testUtcOffset!DateAndTimeEpochTest removeSelector: #testTommorrow!DateAndTimeEpochTest removeSelector: #testToday!DateAndTimeEpochTest removeSelector: #testToByDo!DateAndTimeEpochTest removeSelector: #testToBy!DateAndTimeEpochTest removeSelector: #testTo!DateAndTimeEpochTest removeSelector: #testTimeZone!DateAndTimeEpochTest removeSelector: #testTicksOffset!DateAndTimeEpochTest removeSelector: #testTicks!DateAndTimeEpochTest removeSelector: #testSeconds!DateAndTimeEpochTest removeSelector: #testSecond!DateAndTimeEpochTest removeSelector: #testPrintOn!DateAndTimeEpochTest removeSelector: #testPlus!DateAndTimeEpochTest removeSelector: #testOffset!DateAndTimeEpochTest removeSelector: #testNow!DateAndTimeEpochTest removeSelector: #testNoon!DateAndTimeEpochTest removeSelector: #testNew!DateAndTimeEpochTest removeSelector: #testNanoSecond!DateAndTimeEpochTest removeSelector: #testMonth!DateAndTimeEpochTest removeSelector: #testMinutes!DateAndTimeEpochTest removeSelector: #testMinute!DateAndTimeEpochTest removeSelector: #testMinus!DateAndTimeEpochTest removeSelector: #testMidnight!DateAndTimeEpochTest removeSelector: #testMiddleOf!DateAndTimeEpochTest removeSelector: #testMeridianAbbreviation!DateAndTimeEpochTest removeSelector: #testLessThan!DateAndTimeEpochTest removeSelector: #testJulianDayNumber!DateAndTimeEpochTest removeSelector: #testIsLeapYear!DateAndTimeEpochTest removeSelector: #testHour12!DateAndTimeEpochTest removeSelector: #testHour!DateAndTimeEpochTest removeSelector: #testHash!DateAndTimeEpochTest removeSelector: #testFromString!DateAndTimeEpochTest removeSelector: #testFromSeconds!DateAndTimeEpochTest removeSelector: #testFirstDayOfMonth!DateAndTimeEpochTest removeSelector: #testEpoch!DateAndTimeEpochTest removeSelector: #testDuration!DateAndTimeEpochTest removeSelector: #testDaysLeftInYear!DateAndTimeEpochTest removeSelector: #testDaysInYear!DateAndTimeEpochTest removeSelector: #testDaysInMonth!DateAndTimeEpochTest removeSelector: #testDayOfYear!DateAndTimeEpochTest removeSelector: #testDayOfWeek!DateAndTimeEpochTest removeSelector: #testDayOfMonth!DateAndTimeEpochTest removeSelector: #testDayMonthYearDo!DateAndTimeEpochTest removeSelector: #testDay!DateAndTimeEpochTest removeSelector: #testDateTime!DateAndTimeEpochTest removeSelector: #testCurrent!DateAndTimeEpochTest removeSelector: #testAsYear!DateAndTimeEpochTest removeSelector: #testAsWeek!DateAndTimeEpochTest removeSelector: #testAsUTC!DateAndTimeEpochTest removeSelector: #testAsTime!DateAndTimeEpochTest removeSelector: #testAsSeconds!DateAndTimeEpochTest removeSelector: #testAsNanoSeconds!DateAndTimeEpochTest removeSelector: #testAsMonth!DateAndTimeEpochTest removeSelector: #testAsLocal!DateAndTimeEpochTest removeSelector: #testAsDuration!DateAndTimeEpochTest removeSelector: #testAsDateAndTime!DateAndTimeEpochTest removeSelector: #testAsDate!DateAndTimeEpochTest removeSelector: #tearDown!DateAndTimeEpochTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteDateAndTimeEpochTest!DateAndTimeDosEpochTest removeSelector: #testYesterday!DateAndTimeDosEpochTest removeSelector: #testYearMonthDayHourMinuteSecondNanosSecondOffset!DateAndTimeDosEpochTest removeSelector: #testYearMonthDayHourMinuteSecond!DateAndTimeDosEpochTest removeSelector: #testYearMonthDay!DateAndTimeDosEpochTest removeSelector: #testYearDayHourMinuteSecond!DateAndTimeDosEpochTest removeSelector: #testYearDay!DateAndTimeDosEpochTest removeSelector: #testYear!DateAndTimeDosEpochTest removeSelector: #testUtcOffset!DateAndTimeDosEpochTest removeSelector: #testTommorrow!DateAndTimeDosEpochTest removeSelector: #testToday!DateAndTimeDosEpochTest removeSelector: #testToByDo!DateAndTimeDosEpochTest removeSelector: #testToBy!DateAndTimeDosEpochTest removeSelector: #testTo!DateAndTimeDosEpochTest removeSelector: #testTimeZone!DateAndTimeDosEpochTest removeSelector: #testTicksOffset!DateAndTimeDosEpochTest removeSelector: #testTicks!DateAndTimeDosEpochTest removeSelector: #testSeconds!DateAndTimeDosEpochTest removeSelector: #testSecond!DateAndTimeDosEpochTest removeSelector: #testPrintOn!DateAndTimeDosEpochTest removeSelector: #testPlus!DateAndTimeDosEpochTest removeSelector: #testOffset!DateAndTimeDosEpochTest removeSelector: #testNow!DateAndTimeDosEpochTest removeSelector: #testNoon!DateAndTimeDosEpochTest removeSelector: #testNanoSecond!DateAndTimeDosEpochTest removeSelector: #testMonth!DateAndTimeDosEpochTest removeSelector: #testMinutes!DateAndTimeDosEpochTest removeSelector: #testMinute!DateAndTimeDosEpochTest removeSelector: #testMinus!DateAndTimeDosEpochTest removeSelector: #testMidnight!DateAndTimeDosEpochTest removeSelector: #testMiddleOf!DateAndTimeDosEpochTest removeSelector: #testMeridianAbbreviation!DateAndTimeDosEpochTest removeSelector: #testLessThan!DateAndTimeDosEpochTest removeSelector: #testJulianDayNumber!DateAndTimeDosEpochTest removeSelector: #testIsLeapYear!DateAndTimeDosEpochTest removeSelector: #testHour12!DateAndTimeDosEpochTest removeSelector: #testHour!DateAndTimeDosEpochTest removeSelector: #testHash!DateAndTimeDosEpochTest removeSelector: #testFromString!DateAndTimeDosEpochTest removeSelector: #testFromSeconds!DateAndTimeDosEpochTest removeSelector: #testFirstDayOfMonth!DateAndTimeDosEpochTest removeSelector: #testEpoch!DateAndTimeDosEpochTest removeSelector: #testDuration!DateAndTimeDosEpochTest removeSelector: #testDaysLeftInYear!DateAndTimeDosEpochTest removeSelector: #testDaysInYear!DateAndTimeDosEpochTest removeSelector: #testDaysInMonth!DateAndTimeDosEpochTest removeSelector: #testDayOfYear!DateAndTimeDosEpochTest removeSelector: #testDayOfWeek!DateAndTimeDosEpochTest removeSelector: #testDayOfMonth!DateAndTimeDosEpochTest removeSelector: #testDayMonthYearDo!DateAndTimeDosEpochTest removeSelector: #testDay!DateAndTimeDosEpochTest removeSelector: #testDateTime!DateAndTimeDosEpochTest removeSelector: #testCurrent!DateAndTimeDosEpochTest removeSelector: #testAsYear!DateAndTimeDosEpochTest removeSelector: #testAsWeek!DateAndTimeDosEpochTest removeSelector: #testAsUTC!DateAndTimeDosEpochTest removeSelector: #testAsTime!DateAndTimeDosEpochTest removeSelector: #testAsSeconds!DateAndTimeDosEpochTest removeSelector: #testAsNanoSeconds!DateAndTimeDosEpochTest removeSelector: #testAsMonth!DateAndTimeDosEpochTest removeSelector: #testAsLocal!DateAndTimeDosEpochTest removeSelector: #testAsDuration!DateAndTimeDosEpochTest removeSelector: #testAsDateAndTime!DateAndTimeDosEpochTest removeSelector: #testAsDate!DateAndTimeDosEpochTest removeSelector: #tearDown!DateAndTimeDosEpochTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteDateAndTimeDosEpochTest!ContinuationTest removeSelector: #testSimplestCallCC!ContinuationTest removeSelector: #testSimpleCallCC!ContinuationTest removeSelector: #testReentrant!ContinuationTest removeSelector: #testMethodTemps!ContinuationTest removeSelector: #testBlockVars!ContinuationTest removeSelector: #testBlockTemps!ContinuationTest removeSelector: #testBlockEscape!ContinuationTest removeSelector: #callcc:!Smalltalk globals removeClassNamed: #AnObsoleteContinuationTest!ContextTest removeSelector: #verifyJumpWithSelector:!ContextTest removeSelector: #testSourceNodeExecutedWhenContextIsJustAtStartpc!ContextTest removeSelector: #testSourceNodeExecuted!ContextTest removeSelector: #testSetUp!ContextTest removeSelector: #testReturn!ContextTest removeSelector: #testMethodIsBottomContext!ContextTest removeSelector: #testMethodContext!ContextTest removeSelector: #testLookupSymbol!ContextTest removeSelector: #testJump!ContextTest removeSelector: #testFindContextSuchThat!ContextTest removeSelector: #testClosureRestart!ContextTest removeSelector: #testCannotReturn!ContextTest removeSelector: #testActivateReturnValue!ContextTest removeSelector: #setUp!ContextTest removeSelector: #privRestartBlockTest!ContextTest removeSelector: #privRestartBlockArgsNoRemoteTempsTest!ContextTest removeSelector: #privRestartArgBlockTest!ContextTest class removeSelector: #contextWithTempForTesting!Smalltalk globals removeClassNamed: #AnObsoleteContextTest!CompiledMethodTrailerTest removeSelector: #testEncodingZeroSourcePointer!CompiledMethodTrailerTest removeSelector: #testEncodingVarLengthSourcePointer!CompiledMethodTrailerTest removeSelector: #testEncodingSourcePointer!CompiledMethodTrailerTest removeSelector: #testEncodingNoTrailer!CompiledMethodTrailerTest removeSelector: #testEmbeddingSourceCode:!CompiledMethodTrailerTest removeSelector: #testEmbeddingSourceCode!CompiledMethodTrailerTest removeSelector: #testEmbeddingCompressedSourceCode!Smalltalk globals removeClassNamed: #AnObsoleteCompiledMethodTrailerTest!CodeSimulationTests removeSelector: #veryBasicAt:!CodeSimulationTests removeSelector: #testTranscriptPrintingWithOpenedTranscriptExists!CodeSimulationTests removeSelector: #testTranscriptPrinting!CodeSimulationTests removeSelector: #testHaltWithHaltHandler!CodeSimulationTests removeSelector: #testHalt!CodeSimulationTests removeSelector: #testGoodSimulation!CodeSimulationTests removeSelector: #testErrorWithErrorHandler!CodeSimulationTests removeSelector: #testErrorToken!CodeSimulationTests removeSelector: #testErrorCodeNotFoundIndexed!CodeSimulationTests removeSelector: #testErrorCodeNotFound!CodeSimulationTests removeSelector: #testError!CodeSimulationTests removeSelector: #testDNU!CodeSimulationTests removeSelector: #runSimulated:!CodeSimulationTests removeSelector: #methodWithTranscript!CodeSimulationTests removeSelector: #methodWithHalt!CodeSimulationTests removeSelector: #methodWithError!CodeSimulationTests removeSelector: #indexedBasicAt:!Smalltalk globals removeClassNamed: #AnObsoleteCodeSimulationTests!ClassOrganizationTest removeSelector: #testRemoveNonExistingProtocol!ClassOrganizationTest removeSelector: #testRemoveCategory!ClassOrganizationTest removeSelector: #testListAtCategoryNamed!ClassOrganizationTest removeSelector: #testCategories!ClassOrganizationTest removeSelector: #testAddCategory!ClassOrganizationTest removeSelector: #tearDown!ClassOrganizationTest removeSelector: #setUp!ClassOrganizationTest removeSelector: #runCase!ClassOrganizationTest removeSelector: #organization!Smalltalk globals removeClassNamed: #AnObsoleteClassOrganizationTest!ClassHierarchyTest removeSelector: #testSubclasses!ClassHierarchyTest removeSelector: #testSubclassInstVar!ClassHierarchyTest removeSelector: #testObjectFormatInstSize!ClassHierarchyTest class removeSelector: #fixSubclasses!ClassHierarchyTest class removeSelector: #fixSlotScope!Smalltalk globals removeClassNamed: #AnObsoleteClassHierarchyTest!BlockClosuresTestCase removeSelector: #testSharedClosureEnvironment!BlockClosuresTestCase removeSelector: #testReentrantBlockOldEnvironmentWithBlockArguement!BlockClosuresTestCase removeSelector: #testReentrantBlockOldEnvironment!BlockClosuresTestCase removeSelector: #testReentrantBlock!BlockClosuresTestCase removeSelector: #testNestedLoopsExample1!BlockClosuresTestCase removeSelector: #testGpsExample2!BlockClosuresTestCase removeSelector: #testGpsExample1!BlockClosuresTestCase removeSelector: #testExample2!BlockClosuresTestCase removeSelector: #testExample1!BlockClosuresTestCase removeSelector: #testContinuationExample3!BlockClosuresTestCase removeSelector: #testContinuationExample2!BlockClosuresTestCase removeSelector: #testContinuationExample1!BlockClosuresTestCase removeSelector: #testCannotReturn!BlockClosuresTestCase removeSelector: #nestedLoopsExample:!BlockClosuresTestCase removeSelector: #gpsExample2:!BlockClosuresTestCase removeSelector: #gpsExample1:!BlockClosuresTestCase removeSelector: #example2:!BlockClosuresTestCase removeSelector: #example1:!BlockClosuresTestCase removeSelector: #continuationExample3:!BlockClosuresTestCase removeSelector: #continuationExample2:!BlockClosuresTestCase removeSelector: #continuationExample1:!BlockClosuresTestCase removeSelector: #constructSharedClosureEnvironmentInDeadFrame!BlockClosuresTestCase removeSelector: #constructFibonacciBlockWithBlockArgumentInDeadFrame!BlockClosuresTestCase removeSelector: #constructFibonacciBlockInDeadFrame!BlockClosuresTestCase removeSelector: #constructCannotReturnBlockInDeadFrame!BlockClosuresTestCase removeSelector: #comment!Smalltalk globals removeClassNamed: #AnObsoleteBlockClosuresTestCase!BlockClosureTest removeSelector: #testValueWithPossibleArgument!BlockClosureTest removeSelector: #testValueWithPossibleArgs!BlockClosureTest removeSelector: #testValueWithExitContinue!BlockClosureTest removeSelector: #testValueWithExitBreak!BlockClosureTest removeSelector: #testValueWithArguments!BlockClosureTest removeSelector: #testTallyMethods!BlockClosureTest removeSelector: #testTallyInstructions!BlockClosureTest removeSelector: #testSuppressInformUsingStringMatchOptions!BlockClosureTest removeSelector: #testSuppressInform!BlockClosureTest removeSelector: #testSupplySpecificAnswerToQuestion!BlockClosureTest removeSelector: #testSupplySeveralAnswersToSeveralQuestions!BlockClosureTest removeSelector: #testSupplySameAnswerToAllQuestions!BlockClosureTest removeSelector: #testSupplyAnswerUsingTraditionalMatchOfQuestion!BlockClosureTest removeSelector: #testSupplyAnswerUsingRegexMatchOfQuestion!BlockClosureTest removeSelector: #testSupplyAnswerUsingOnlySubstringOfQuestion!BlockClosureTest removeSelector: #testSupplyAnswerThroughNestedBlocks!BlockClosureTest removeSelector: #testSupplyAnswerOfFillInTheBlankUsingDefaultAnswer!BlockClosureTest removeSelector: #testSupplyAnswerOfFillInTheBlank!BlockClosureTest removeSelector: #testSourceNodeOptimized!BlockClosureTest removeSelector: #testSetUp!BlockClosureTest removeSelector: #testRunSimulated!BlockClosureTest removeSelector: #testOneArgument!BlockClosureTest removeSelector: #testOnForkSplit!BlockClosureTest removeSelector: #testOnForkErrorTakesLessThanOneSecond!BlockClosureTest removeSelector: #testOnForkErrorReturnsNil!BlockClosureTest removeSelector: #testOnForkErrorOnSeparateProcess!BlockClosureTest removeSelector: #testOnForkErrorExecutesBlock!BlockClosureTest removeSelector: #testOnFork!BlockClosureTest removeSelector: #testNoArguments!BlockClosureTest removeSelector: #testNew!BlockClosureTest removeSelector: #testCullCullCullCull!BlockClosureTest removeSelector: #testCullCullCull!BlockClosureTest removeSelector: #testCullCull!BlockClosureTest removeSelector: #testCull!BlockClosureTest removeSelector: #testCannotReturn!BlockClosureTest removeSelector: #testBenchFor!BlockClosureTest removeSelector: #setUp!BlockClosureTest removeSelector: #blockWithNonLocalReturn:!Smalltalk globals removeClassNamed: #AnObsoleteBlockClosureTest!BenchmarkResultTest removeSelector: #testSimple!BenchmarkResultTest removeSelector: #testOneOverTwo!BenchmarkResultTest removeSelector: #testOne!BenchmarkResultTest removeSelector: #testEmpty!Smalltalk globals removeClassNamed: #AnObsoleteBenchmarkResultTest!BasicBehaviorClassMetaclassTest removeSelector: #testSuperclass!BasicBehaviorClassMetaclassTest removeSelector: #testObjectAllSubclasses!BasicBehaviorClassMetaclassTest removeSelector: #testMetaclassSuperclassHierarchy!BasicBehaviorClassMetaclassTest removeSelector: #testMetaclassSuperclass!BasicBehaviorClassMetaclassTest removeSelector: #testMetaclassPointOfCircularity!BasicBehaviorClassMetaclassTest removeSelector: #testMetaclassNumberOfInstances!BasicBehaviorClassMetaclassTest removeSelector: #testMetaclassName!BasicBehaviorClassMetaclassTest removeSelector: #testMetaclass!BasicBehaviorClassMetaclassTest removeSelector: #testBehaviorClassClassDescriptionMetaclassHierarchy!Smalltalk globals removeClassNamed: #AnObsoleteBasicBehaviorClassMetaclassTest!Latin1CharsetTest removeSelector: #classUnderTest!Smalltalk globals removeClassNamed: #AnObsoleteLatin1CharsetTest!AsciiCharsetTest removeSelector: #testIsUppercase!AsciiCharsetTest removeSelector: #testIsTitlecaseLetter!AsciiCharsetTest removeSelector: #testIsSurrogateOther!AsciiCharsetTest removeSelector: #testIsSpacingCombiningMark!AsciiCharsetTest removeSelector: #testIsSpaceSeparator!AsciiCharsetTest removeSelector: #testIsPrivateOther!AsciiCharsetTest removeSelector: #testIsParagraphSeparator!AsciiCharsetTest removeSelector: #testIsOtherSymbol!AsciiCharsetTest removeSelector: #testIsOtherPunctuation!AsciiCharsetTest removeSelector: #testIsOtherNumber!AsciiCharsetTest removeSelector: #testIsOtherLetter!AsciiCharsetTest removeSelector: #testIsOpenPunctuation!AsciiCharsetTest removeSelector: #testIsNonspacingMark!AsciiCharsetTest removeSelector: #testIsModifierSymbol!AsciiCharsetTest removeSelector: #testIsMathSymbol!AsciiCharsetTest removeSelector: #testIsLowercase!AsciiCharsetTest removeSelector: #testIsLineSeparator!AsciiCharsetTest removeSelector: #testIsLetterNumber!AsciiCharsetTest removeSelector: #testIsLetterModifier!AsciiCharsetTest removeSelector: #testIsLetter!AsciiCharsetTest removeSelector: #testIsInitialQuote!AsciiCharsetTest removeSelector: #testIsFormatOther!AsciiCharsetTest removeSelector: #testIsFinalQuote!AsciiCharsetTest removeSelector: #testIsEnclosingMark!AsciiCharsetTest removeSelector: #testIsDigit!AsciiCharsetTest removeSelector: #testIsDecimalDigit!AsciiCharsetTest removeSelector: #testIsDashPunctuation!AsciiCharsetTest removeSelector: #testIsCurrencySymbol!AsciiCharsetTest removeSelector: #testIsControlOther!AsciiCharsetTest removeSelector: #testIsConnectorPunctuation!AsciiCharsetTest removeSelector: #testIsClosePunctuation!AsciiCharsetTest removeSelector: #testIsCasedLetter!AsciiCharsetTest removeSelector: #classUnderTest!Smalltalk globals removeClassNamed: #AnObsoleteAsciiCharsetTest!AllocationTest removeSelector: #testOneMegAllocation!AllocationTest removeSelector: #testOneGigAllocation!Smalltalk globals removeClassNamed: #AnObsoleteAllocationTest!AdditionalMethodStateTest removeSelector: #testCopy!AdditionalMethodStateTest removeSelector: #testAnalogousCodeTo!AdditionalMethodStateTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteAdditionalMethodStateTest!ExecutionEnvironmentStub removeSelector: #prepareForNewProcess:!ExecutionEnvironmentStub removeSelector: #initialize!ExecutionEnvironmentStub removeSelector: #forkedProcesses:!ExecutionEnvironmentStub removeSelector: #forkedProcesses!Smalltalk globals removeClassNamed: #AnObsoleteExecutionEnvironmentStub!Smalltalk globals removeClassNamed: #AnObsoleteMyTestNotification!Smalltalk globals removeClassNamed: #AnObsoleteMyTestError!MyResumableTestError removeSelector: #isResumable!Smalltalk globals removeClassNamed: #AnObsoleteMyResumableTestError!ManifestKernelTests class removeSelector: #packageName!ManifestKernelTests class removeSelector: #description!ManifestKernelTests class removeSelector: #dependencies!Smalltalk globals removeClassNamed: #AnObsoleteManifestKernelTests!YearTest removeSelector: #testStart!YearTest removeSelector: #testPreviousInLeapYear!YearTest removeSelector: #testOffset!YearTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteYearTest!WeekTest removeSelector: #testPreviousNext!WeekTest removeSelector: #testOffset!WeekTest removeSelector: #testNameOfDay!WeekTest removeSelector: #testInquiries!WeekTest removeSelector: #testIndexOfDay!WeekTest removeSelector: #testEnumerating!WeekTest removeSelector: #testDayNames!WeekTest removeSelector: #testByWeekNumberInCurrentYear!WeekTest removeSelector: #testByWeekNumber!WeekTest removeSelector: #tearDown!WeekTest removeSelector: #setUp!WeekTest removeSelector: #selectorsToBeIgnored!WeekTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteWeekTest!WeakMessageSendTest removeSelector: #testTwoArguments!WeakMessageSendTest removeSelector: #testReceiverWithGC!WeakMessageSendTest removeSelector: #testOneArgumentWithGC!WeakMessageSendTest removeSelector: #testOneArgument!WeakMessageSendTest removeSelector: #testNoArguments!WeakMessageSendTest removeSelector: #testCollectArguments!Smalltalk globals removeClassNamed: #AnObsoleteWeakMessageSendTest!UndefinedObjectTest removeSelector: #testVeryDeepCopyWith!UndefinedObjectTest removeSelector: #testShallowCopy!UndefinedObjectTest removeSelector: #testPrintOn!UndefinedObjectTest removeSelector: #testNotNil!UndefinedObjectTest removeSelector: #testNew!UndefinedObjectTest removeSelector: #testIsNil!UndefinedObjectTest removeSelector: #testIsLiteral!UndefinedObjectTest removeSelector: #testIsEmptyOrNil!UndefinedObjectTest removeSelector: #testIfNotNilIfNil!UndefinedObjectTest removeSelector: #testIfNotNilDo!UndefinedObjectTest removeSelector: #testIfNotNil!UndefinedObjectTest removeSelector: #testIfNilIfNotNil!UndefinedObjectTest removeSelector: #testIfNil!UndefinedObjectTest removeSelector: #testHaltIfNil!UndefinedObjectTest removeSelector: #testDeepCopy!UndefinedObjectTest removeSelector: #testAllInstances!Smalltalk globals removeClassNamed: #AnObsoleteUndefinedObjectTest!TrueTest removeSelector: #testXor!TrueTest removeSelector: #testPrintOn!TrueTest removeSelector: #testOr!TrueTest removeSelector: #testOR!TrueTest removeSelector: #testNot!TrueTest removeSelector: #testNew!TrueTest removeSelector: #testIfTrueIfFalse!TrueTest removeSelector: #testIfTrue!TrueTest removeSelector: #testIfFalseIfTrue!TrueTest removeSelector: #testIfFalse!TrueTest removeSelector: #testAsBit!TrueTest removeSelector: #testAnd!TrueTest removeSelector: #testAND!Smalltalk globals removeClassNamed: #AnObsoleteTrueTest!TimespanTest removeSelector: #testZeroDuration!TimespanTest removeSelector: #testYear!TimespanTest removeSelector: #testWorkDatesDo!TimespanTest removeSelector: #testUnionWithSeparate!TimespanTest removeSelector: #testUnionWithSelf!TimespanTest removeSelector: #testUnionWithOverlapping!TimespanTest removeSelector: #testUnionWithIncluded!TimespanTest removeSelector: #testUnionWithDisjoint!TimespanTest removeSelector: #testUnion!TimespanTest removeSelector: #testTo!TimespanTest removeSelector: #testStartingEnding!TimespanTest removeSelector: #testStart!TimespanTest removeSelector: #testPrintOn!TimespanTest removeSelector: #testPrevious!TimespanTest removeSelector: #testPlus!TimespanTest removeSelector: #testNext!TimespanTest removeSelector: #testNew!TimespanTest removeSelector: #testMonth!TimespanTest removeSelector: #testMinusADuration!TimespanTest removeSelector: #testMinusADateAndTime!TimespanTest removeSelector: #testLessThan!TimespanTest removeSelector: #testJulianDayNumber!TimespanTest removeSelector: #testIsLeapYear!TimespanTest removeSelector: #testIntersectionWithSeparate!TimespanTest removeSelector: #testIntersectionWithSelf!TimespanTest removeSelector: #testIntersectionWithOverlapping!TimespanTest removeSelector: #testIntersectionWithIncluded!TimespanTest removeSelector: #testIntersectionWithDisjoint!TimespanTest removeSelector: #testInclusion!TimespanTest removeSelector: #testIncludesAny!TimespanTest removeSelector: #testIncludesAll!TimespanTest removeSelector: #testIncludes!TimespanTest removeSelector: #testFirstDayOfMonth!TimespanTest removeSelector: #testEveryDo!TimespanTest removeSelector: #testEnd!TimespanTest removeSelector: #testDuration!TimespanTest removeSelector: #testDoWithWhen!TimespanTest removeSelector: #testDoWith!TimespanTest removeSelector: #testDaysLeftInYear!TimespanTest removeSelector: #testDaysInYear!TimespanTest removeSelector: #testDaysInMonth!TimespanTest removeSelector: #testDayOfYear!TimespanTest removeSelector: #testDayOfWeek!TimespanTest removeSelector: #testDayOfMonth!TimespanTest removeSelector: #testDay!TimespanTest removeSelector: #testCurrent!TimespanTest removeSelector: #testClockPrecisionDuration!TimespanTest removeSelector: #testAsYear!TimespanTest removeSelector: #testAsWeek!TimespanTest removeSelector: #testAsTime!TimespanTest removeSelector: #testAsMonth!TimespanTest removeSelector: #testAsDuration!TimespanTest removeSelector: #testAsDateAndTime!TimespanTest removeSelector: #testAsDate!TimespanTest removeSelector: #testArithmetic!TimespanTest removeSelector: #testAccessing!TimespanTest removeSelector: #tearDown!TimespanTest removeSelector: #setUp!TimespanTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteTimespanTest!TimeTest removeSelector: #timeClass!TimeTest removeSelector: #testTicks!TimeTest removeSelector: #testSubtractTime!TimeTest removeSelector: #testStoring!TimeTest removeSelector: #testStoreOn!TimeTest removeSelector: #testSeconds!TimeTest removeSelector: #testSecond!TimeTest removeSelector: #testReadFromWithNanos!TimeTest removeSelector: #testReadFromWithError!TimeTest removeSelector: #testReadFrom!TimeTest removeSelector: #testPrinting!TimeTest removeSelector: #testPrintStringNanos!TimeTest removeSelector: #testPrintOn!TimeTest removeSelector: #testPrintMinutes!TimeTest removeSelector: #testPrint24withNanos!TimeTest removeSelector: #testPrint24OnWithoutSeconds!TimeTest removeSelector: #testPrint24OnWithPM!TimeTest removeSelector: #testPrint24On!TimeTest removeSelector: #testPrint24!TimeTest removeSelector: #testNew!TimeTest removeSelector: #testNanoSecond!TimeTest removeSelector: #testNanoConstructor!TimeTest removeSelector: #testMinute!TimeTest removeSelector: #testMeridianAbbreviation!TimeTest removeSelector: #testLessThan!TimeTest removeSelector: #testHour!TimeTest removeSelector: #testHhmm24!TimeTest removeSelector: #testGeneralInquiries!TimeTest removeSelector: #testFromSeconds!TimeTest removeSelector: #testEqual!TimeTest removeSelector: #testDuration!TimeTest removeSelector: #testConverting!TimeTest removeSelector: #testComparing!TimeTest removeSelector: #testAsYear!TimeTest removeSelector: #testAsWeek!TimeTest removeSelector: #testAsTime!TimeTest removeSelector: #testAsSeconds!TimeTest removeSelector: #testAsNanoSeconds!TimeTest removeSelector: #testAsDuration!TimeTest removeSelector: #testAsDateAndTime!TimeTest removeSelector: #testAsDate!TimeTest removeSelector: #testArithmetic!TimeTest removeSelector: #testAddTime!TimeTest removeSelector: #testAddSeconds!TimeTest removeSelector: #testAccessing!TimeTest removeSelector: #tearDown!TimeTest removeSelector: #setUp!TimeTest removeSelector: #selectorsToBeIgnored!TimeTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteTimeTest!StopwatchTest removeSelector: #testStartStop!StopwatchTest removeSelector: #testSingleTiming!StopwatchTest removeSelector: #testReset!StopwatchTest removeSelector: #testReActivate!StopwatchTest removeSelector: #testPrintOn!StopwatchTest removeSelector: #testNew!StopwatchTest removeSelector: #testMultipleTimings!StopwatchTest removeSelector: #testInitialStatus!StopwatchTest removeSelector: #testChangingStatus!StopwatchTest removeSelector: #setUp!StopwatchTest removeSelector: #selectorsToBeIgnored!StopwatchTest removeSelector: #classToBeTested!StopwatchTest class removeSelector: #isUnitTest!Smalltalk globals removeClassNamed: #AnObsoleteStopwatchTest!SmallIntegerTest removeSelector: #testPrintString!SmallIntegerTest removeSelector: #testPrintPaddedWith!SmallIntegerTest removeSelector: #testNew!SmallIntegerTest removeSelector: #testMinVal!SmallIntegerTest removeSelector: #testMaxVal!SmallIntegerTest removeSelector: #testDivide!SmallIntegerTest removeSelector: #testDigitAt!SmallIntegerTest removeSelector: #testCeiling!SmallIntegerTest removeSelector: #testBasicNew!Smalltalk globals removeClassNamed: #AnObsoleteSmallIntegerTest!SemaphoreTest removeSelector: #testWaitTimeoutSecondsOnCompletionOnTimeout!SemaphoreTest removeSelector: #testWaitTimeoutMSecs!SemaphoreTest removeSelector: #testWaitTimeDurationWithCompletionAndTimeoutBlocks!SemaphoreTest removeSelector: #testWaitTimeDuration!SemaphoreTest removeSelector: #testWaitAndWaitTimeoutTogether!SemaphoreTest removeSelector: #testSimpleCommunication!SemaphoreTest removeSelector: #testSchedulesFIFO!SemaphoreTest removeSelector: #testReturnsAsManyWaitsAsSignalsReceived!SemaphoreTest removeSelector: #testMutualExclusion!SemaphoreTest removeSelector: #testInCriticalWait!SemaphoreTest removeSelector: #testCriticalIfError!SemaphoreTest removeSelector: #testCritical!SemaphoreTest removeSelector: #testAfterCriticalWait!SemaphoreTest removeSelector: #criticalError!Smalltalk globals removeClassNamed: #AnObsoleteSemaphoreTest!ScheduleTest removeSelector: #testSchedule!ScheduleTest removeSelector: #testMonotonicity!ScheduleTest removeSelector: #testIncludes!ScheduleTest removeSelector: #testFromDateAndTime!ScheduleTest removeSelector: #testExampleFromSwikiPage!ScheduleTest removeSelector: #testDaysOfWeekAreConsistent!ScheduleTest removeSelector: #testDateAndTimes!ScheduleTest removeSelector: #testBetweenAndDoOverlappingSchedule!ScheduleTest removeSelector: #testBetweenAndDoIncludedInSchedule!ScheduleTest removeSelector: #testBetweenAndDoDisjointWithSchedule!ScheduleTest removeSelector: #tearDown!ScheduleTest removeSelector: #setUp!ScheduleTest removeSelector: #selectorsToBeIgnored!ScheduleTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteScheduleTest!ScaledDecimalTest removeSelector: #testZeroRaisedToInteger!ScaledDecimalTest removeSelector: #testScaleExtension!ScaledDecimalTest removeSelector: #testRounded!ScaledDecimalTest removeSelector: #testReadFrom!ScaledDecimalTest removeSelector: #testRaisedToInteger!ScaledDecimalTest removeSelector: #testPrintString!ScaledDecimalTest removeSelector: #testOneRaisedToInteger!ScaledDecimalTest removeSelector: #testLiteral!ScaledDecimalTest removeSelector: #testIsLiteral!ScaledDecimalTest removeSelector: #testInexactSqrt!ScaledDecimalTest removeSelector: #testInexactNthRoot!ScaledDecimalTest removeSelector: #testExactSqrt!ScaledDecimalTest removeSelector: #testExactNthRoot!ScaledDecimalTest removeSelector: #testConvertFromNonDecimalFraction!ScaledDecimalTest removeSelector: #testConvertFromIntegerWithScale!ScaledDecimalTest removeSelector: #testConvertFromInteger!ScaledDecimalTest removeSelector: #testConvertFromFraction!ScaledDecimalTest removeSelector: #testConvertFromFloat!ScaledDecimalTest removeSelector: #testConvertFromDecimalFraction!ScaledDecimalTest removeSelector: #testCoercion!ScaledDecimalTest removeSelector: #testAsNumberWithoutDecimalPoint2!ScaledDecimalTest removeSelector: #testAsNumberWithoutDecimalPoint!ScaledDecimalTest removeSelector: #testAsNumberWithSuperfluousDecimalPoint!ScaledDecimalTest removeSelector: #testAsNumberWithRadix!ScaledDecimalTest removeSelector: #testAsNumberWithExtendedScale!ScaledDecimalTest removeSelector: #testAsNumberNegatedWithoutDecimalPoint2!ScaledDecimalTest removeSelector: #testAsNumberNegatedWithoutDecimalPoint!ScaledDecimalTest removeSelector: #testAsNumber!Smalltalk globals removeClassNamed: #AnObsoleteScaledDecimalTest!ProtoObjectTest removeSelector: #testNotTheSame!ProtoObjectTest removeSelector: #testIsNil!ProtoObjectTest removeSelector: #testIfNotNilIfNil!ProtoObjectTest removeSelector: #testIfNotNil!ProtoObjectTest removeSelector: #testIfNilIfNotNil!ProtoObjectTest removeSelector: #testIfNil!ProtoObjectTest removeSelector: #testFlag!Smalltalk globals removeClassNamed: #AnObsoleteProtoObjectTest!ObjectTest removeSelector: #testWriteSlotValue!ObjectTest removeSelector: #testWriteSlotNamedValue!ObjectTest removeSelector: #testReadSlotNamed!ObjectTest removeSelector: #testReadSlot!ObjectTest removeSelector: #testInstVarNamedPut!ObjectTest removeSelector: #testInstVarNamed!ObjectTest removeSelector: #testHaltOnce!ObjectTest removeSelector: #testHaltIf!ObjectTest removeSelector: #testBecomeForward!ObjectTest removeSelector: #testBecome!ObjectTest removeSelector: #shouldntHaltWhen:!ObjectTest removeSelector: #shouldntHaltAfter:times:!ObjectTest removeSelector: #shouldHaltWhen:!ObjectTest removeSelector: #shouldHaltAfter:times:!ObjectTest removeSelector: #b1!ObjectTest removeSelector: #b!ObjectTest removeSelector: #a1!ObjectTest removeSelector: #a!Smalltalk globals removeClassNamed: #AnObsoleteObjectTest!NumberTest removeSelector: #testReciprocal!NumberTest removeSelector: #testReadFrom!NumberTest removeSelector: #testRaisedToIntegerWithFloats!NumberTest removeSelector: #testRaisedToInteger!NumberTest removeSelector: #testRaisedTo!NumberTest removeSelector: #testPrintShowingDecimalPlaces3!NumberTest removeSelector: #testPrintShowingDecimalPlaces2!NumberTest removeSelector: #testPrintShowingDecimalPlaces!NumberTest removeSelector: #testPercent!NumberTest removeSelector: #testOne!NumberTest removeSelector: #testIntegerPart!NumberTest removeSelector: #testFractionPart!Smalltalk globals removeClassNamed: #AnObsoleteNumberTest!MonthTest removeSelector: #testReadFrom!MonthTest removeSelector: #testPrinting!MonthTest removeSelector: #testPreviousNext!MonthTest removeSelector: #testOffset!MonthTest removeSelector: #testNameOfMonth!MonthTest removeSelector: #testInstanceCreation!MonthTest removeSelector: #testInquiries!MonthTest removeSelector: #testIndexOfMonth!MonthTest removeSelector: #testEnumerating!MonthTest removeSelector: #testConverting!MonthTest removeSelector: #tearDown!MonthTest removeSelector: #setUp!MonthTest removeSelector: #selectorsToBeIgnored!MonthTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteMonthTest!LargePositiveIntegerTest removeSelector: #testStoreOn!LargePositiveIntegerTest removeSelector: #testNormalize!LargePositiveIntegerTest removeSelector: #testMultDicAddSub!LargePositiveIntegerTest removeSelector: #testLargeSqrtFloor!LargePositiveIntegerTest removeSelector: #testEmptyTemplate!LargePositiveIntegerTest removeSelector: #testBitShift!Smalltalk globals removeClassNamed: #AnObsoleteLargePositiveIntegerTest!LargeNegativeIntegerTest removeSelector: #testStoreOn!LargeNegativeIntegerTest removeSelector: #testEmptyTemplate!Smalltalk globals removeClassNamed: #AnObsoleteLargeNegativeIntegerTest!FractionTest removeSelector: #testTruncated!FractionTest removeSelector: #testSqrtErrorConditions!FractionTest removeSelector: #testRounding!FractionTest removeSelector: #testRounded!FractionTest removeSelector: #testReciprocal!FractionTest removeSelector: #testReadFrom!FractionTest removeSelector: #testRaisedToErrorConditions!FractionTest removeSelector: #testNthRoot!FractionTest removeSelector: #testLog!FractionTest removeSelector: #testLn!FractionTest removeSelector: #testIvalidReadFrom!FractionTest removeSelector: #testIsPowerOfTwo!FractionTest removeSelector: #testInexactSqrt!FractionTest removeSelector: #testInexactRaisedTo!FractionTest removeSelector: #testFractionPrinting!FractionTest removeSelector: #testFloorLog!FractionTest removeSelector: #testFloor!FractionTest removeSelector: #testExactSqrt!FractionTest removeSelector: #testExactRaisedTo!FractionTest removeSelector: #testDegreeSin!FractionTest removeSelector: #testDegreeCos!FractionTest removeSelector: #testCeiling!FractionTest removeSelector: #testAsSmallerPowerOfTwo!FractionTest removeSelector: #testAsLargerPowerOfTwo!FractionTest removeSelector: #assert:classAndValueEquals:!Smalltalk globals removeClassNamed: #AnObsoleteFractionTest!FloatTest removeSelector: #testZeroSignificandAsInteger!FloatTest removeSelector: #testZeroRaisedToNegativePower!FloatTest removeSelector: #testZero1!FloatTest removeSelector: #testTruncated!FloatTest removeSelector: #testStringAsNumber!FloatTest removeSelector: #testStoreOn!FloatTest removeSelector: #testStoreBase16!FloatTest removeSelector: #testSign!FloatTest removeSelector: #testSetOfFloat!FloatTest removeSelector: #testRounding!FloatTest removeSelector: #testRounded!FloatTest removeSelector: #testReciprocal!FloatTest removeSelector: #testReadFromManyDigits!FloatTest removeSelector: #testRaisedTo!FloatTest removeSelector: #testPrintPaddedWithTo!FloatTest removeSelector: #testNegativeZeroSign!FloatTest removeSelector: #testNegativeZeroAbs!FloatTest removeSelector: #testNaNisLiteral!FloatTest removeSelector: #testNaNCompare!FloatTest removeSelector: #testNaN5!FloatTest removeSelector: #testNaN4!FloatTest removeSelector: #testNaN3!FloatTest removeSelector: #testNaN2!FloatTest removeSelector: #testNaN1!FloatTest removeSelector: #testMaxExactInteger!FloatTest removeSelector: #testLiteralEqual!FloatTest removeSelector: #testIsZero!FloatTest removeSelector: #testIntegerAsFloat!FloatTest removeSelector: #testInfinityCloseTo!FloatTest removeSelector: #testInfinity2!FloatTest removeSelector: #testInfinity1!FloatTest removeSelector: #testHugeIntegerCloseTo!FloatTest removeSelector: #testHash!FloatTest removeSelector: #testFractionAsFloatWithUnderflow!FloatTest removeSelector: #testFractionAsFloat2!FloatTest removeSelector: #testFractionAsFloat!FloatTest removeSelector: #testFloorLog2!FloatTest removeSelector: #testFloor!FloatTest removeSelector: #testFloatTruncated!FloatTest removeSelector: #testFloatRounded!FloatTest removeSelector: #testFloatPrinting!FloatTest removeSelector: #testFloatPrintPolicy!FloatTest removeSelector: #testDivide!FloatTest removeSelector: #testDegreeSinForExceptionalValues!FloatTest removeSelector: #testDegreeSin!FloatTest removeSelector: #testDegreeCosForExceptionalValues!FloatTest removeSelector: #testDegreeCos!FloatTest removeSelector: #testCopySignTo!FloatTest removeSelector: #testCopy!FloatTest removeSelector: #testContinuedFractions!FloatTest removeSelector: #testComparisonWhenPrimitiveFails!FloatTest removeSelector: #testComparison!FloatTest removeSelector: #testCloseTo!FloatTest removeSelector: #testCharacterization!FloatTest removeSelector: #testCeiling!FloatTest removeSelector: #testBinaryLiteralString!FloatTest removeSelector: #testArcTan!FloatTest removeSelector: #test32bitRoundingMode!FloatTest removeSelector: #test32bitGradualUnderflow!FloatTest removeSelector: #test32bitConversion!Smalltalk globals removeClassNamed: #AnObsoleteFloatTest!FalseTest removeSelector: #testXor!FalseTest removeSelector: #testPrintOn!FalseTest removeSelector: #testOr!FalseTest removeSelector: #testOR!FalseTest removeSelector: #testNot!FalseTest removeSelector: #testNew!FalseTest removeSelector: #testIfTrueIfFalse!FalseTest removeSelector: #testIfTrue!FalseTest removeSelector: #testIfFalseIfTrue!FalseTest removeSelector: #testIfFalse!FalseTest removeSelector: #testAsBit!FalseTest removeSelector: #testAnd!FalseTest removeSelector: #testAND!Smalltalk globals removeClassNamed: #AnObsoleteFalseTest!DurationTest removeSelector: #testZero!DurationTest removeSelector: #testWholeNanoseconds!DurationTest removeSelector: #testWholeMilliseconds!DurationTest removeSelector: #testWholeMicroseconds!DurationTest removeSelector: #testWeeks!DurationTest removeSelector: #testTruncateTo!DurationTest removeSelector: #testTotalSeconds!DurationTest removeSelector: #testTicks!DurationTest removeSelector: #testStoreOn!DurationTest removeSelector: #testSecondsNanoSeconds!DurationTest removeSelector: #testSeconds!DurationTest removeSelector: #testRoundTo!DurationTest removeSelector: #testReadFromNoException!DurationTest removeSelector: #testReadFromMillisecond!DurationTest removeSelector: #testReadFromBogus!DurationTest removeSelector: #testReadFrom!DurationTest removeSelector: #testQuotient!DurationTest removeSelector: #testPrintOn!DurationTest removeSelector: #testPrintHumanReadableOn!DurationTest removeSelector: #testPositive!DurationTest removeSelector: #testPlus!DurationTest removeSelector: #testNumberConvenienceMethods!DurationTest removeSelector: #testNormalizeNanoSeconds!DurationTest removeSelector: #testNew!DurationTest removeSelector: #testNegative!DurationTest removeSelector: #testNegated!DurationTest removeSelector: #testNanoSeconds!DurationTest removeSelector: #testNanoSecond!DurationTest removeSelector: #testMultiply!DurationTest removeSelector: #testMonthDurations!DurationTest removeSelector: #testModulo!DurationTest removeSelector: #testMinutes!DurationTest removeSelector: #testMinus!DurationTest removeSelector: #testMilliSeconds!DurationTest removeSelector: #testLessThan!DurationTest removeSelector: #testIsZero!DurationTest removeSelector: #testIntegerDivision!DurationTest removeSelector: #testHumanReadablePrintString!DurationTest removeSelector: #testHours!DurationTest removeSelector: #testHash!DurationTest removeSelector: #testFromString!DurationTest removeSelector: #testDivide!DurationTest removeSelector: #testDays!DurationTest removeSelector: #testComparing!DurationTest removeSelector: #testAsYears!DurationTest removeSelector: #testAsYear!DurationTest removeSelector: #testAsWeeks!DurationTest removeSelector: #testAsWeek!DurationTest removeSelector: #testAsSeconds!DurationTest removeSelector: #testAsSecond!DurationTest removeSelector: #testAsNanoSeconds!DurationTest removeSelector: #testAsMinutes!DurationTest removeSelector: #testAsMinute!DurationTest removeSelector: #testAsMilliSeconds!DurationTest removeSelector: #testAsMilliSecond!DurationTest removeSelector: #testAsHours!DurationTest removeSelector: #testAsHour!DurationTest removeSelector: #testAsDuration!DurationTest removeSelector: #testAsDelay!DurationTest removeSelector: #testAsDays!DurationTest removeSelector: #testAsDay!DurationTest removeSelector: #testAbs!DurationTest removeSelector: #setUp!DurationTest removeSelector: #selectorsToBeIgnored!DurationTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteDurationTest!DateTest removeSelector: #useTimeZone:during:!DateTest removeSelector: #useNonUtcTimeZoneDuring:!DateTest removeSelector: #testYyyymmdd!DateTest removeSelector: #testYesterday!DateTest removeSelector: #testWeekday!DateTest removeSelector: #testTomorrow!DateTest removeSelector: #testSubtractDays!DateTest removeSelector: #testSubtractDate!DateTest removeSelector: #testStoreOn!DateTest removeSelector: #testStarting!DateTest removeSelector: #testReadFrom!DateTest removeSelector: #testPrintOnFormat!DateTest removeSelector: #testPrintOn!DateTest removeSelector: #testPrintFormat!DateTest removeSelector: #testPreviousByName!DateTest removeSelector: #testPrevious!DateTest removeSelector: #testNext!DateTest removeSelector: #testNewDayYear!DateTest removeSelector: #testNewDayMonthYear!DateTest removeSelector: #testNew!DateTest removeSelector: #testNameOfMonth!DateTest removeSelector: #testNameOfDay!DateTest removeSelector: #testMmddyyyy!DateTest removeSelector: #testJulianDayNumber!DateTest removeSelector: #testIsOnOrBefore!DateTest removeSelector: #testIsOnOrAfter!DateTest removeSelector: #testIsLeapYear!DateTest removeSelector: #testIsBefore!DateTest removeSelector: #testIsAfter!DateTest removeSelector: #testInquiries!DateTest removeSelector: #testIndexOfMonth!DateTest removeSelector: #testFromString!DateTest removeSelector: #testFromSeconds!DateTest removeSelector: #testFromDays!DateTest removeSelector: #testFirstWeekdayOfMonthYear!DateTest removeSelector: #testEquals!DateTest removeSelector: #testEqual!DateTest removeSelector: #testDuration!DateTest removeSelector: #testDaysInYear!DateTest removeSelector: #testDaysInMonthForYear!DateTest removeSelector: #testDayOfWeek!DateTest removeSelector: #testDayMonthYearDo!DateTest removeSelector: #testComparing!DateTest removeSelector: #testAsSeconds!DateTest removeSelector: #testAsDate!DateTest removeSelector: #testArithmetic!DateTest removeSelector: #testAddMonths!DateTest removeSelector: #testAddDays!DateTest removeSelector: #testAccessing!DateTest removeSelector: #setUp!DateTest removeSelector: #selectorsToBeIgnored!DateTest removeSelector: #restoreLocalTimeZoneAfter:!DateTest removeSelector: #epoch!DateTest removeSelector: #dateClass!DateTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteDateTest!DateAndTimeTest removeSelector: #useTimeZone:during:!DateAndTimeTest removeSelector: #useNonUtcTimeZoneDuring:!DateAndTimeTest removeSelector: #testUnixEpoch!DateAndTimeTest removeSelector: #testTransitive!DateAndTimeTest removeSelector: #testTimeZoneEquivalence2!DateAndTimeTest removeSelector: #testTimeZoneEquivalence!DateAndTimeTest removeSelector: #testSymmetric!DateAndTimeTest removeSelector: #testSqueakEpoch!DateAndTimeTest removeSelector: #testSimpleAccessors!DateAndTimeTest removeSelector: #testSecondsSinceMidnightLocalTimeNormalization!DateAndTimeTest removeSelector: #testSecondsSinceMidnightLocalTime!DateAndTimeTest removeSelector: #testSecondsRoundTrip!DateAndTimeTest removeSelector: #testSecondsAcrossTimeZones!DateAndTimeTest removeSelector: #testReflexive!DateAndTimeTest removeSelector: #testReadTimeZoneOffsetRFC822WithOtherCharactersAfter!DateAndTimeTest removeSelector: #testReadTimeZoneOffsetRFC822!DateAndTimeTest removeSelector: #testReadTimeZoneOffsetISO822WithOtherCharactersAfter!DateAndTimeTest removeSelector: #testReadTimeZoneOffsetISO!DateAndTimeTest removeSelector: #testReadTimeWithOtherCharactersAfter!DateAndTimeTest removeSelector: #testReadFromUTCOffset!DateAndTimeTest removeSelector: #testReadFromSpaceBeforeOffset!DateAndTimeTest removeSelector: #testReadFromSecond!DateAndTimeTest removeSelector: #testReadFromOffset!DateAndTimeTest removeSelector: #testReadFromNoOffset!DateAndTimeTest removeSelector: #testReadFromFoolProofExtension!DateAndTimeTest removeSelector: #testReadFromDefaultOffsetSpecified!DateAndTimeTest removeSelector: #testReadFromDefaultOffsetNotSpecified!DateAndTimeTest removeSelector: #testReadFromDateOnly!DateAndTimeTest removeSelector: #testReadFrom!DateAndTimeTest removeSelector: #testPrintStringSecond!DateAndTimeTest removeSelector: #testPrintStringNoOffset!DateAndTimeTest removeSelector: #testPrintString!DateAndTimeTest removeSelector: #testOffset!DateAndTimeTest removeSelector: #testNotSymmetricWithString!DateAndTimeTest removeSelector: #testMonotonicity!DateAndTimeTest removeSelector: #testInstanceCreationFromADateAndATime!DateAndTimeTest removeSelector: #testInstanceCreation!DateAndTimeTest removeSelector: #testFromString!DateAndTimeTest removeSelector: #testFromDos!DateAndTimeTest removeSelector: #testErrorWhenDayIsBeforeMonthStart!DateAndTimeTest removeSelector: #testErrorWhenDayIsAfterMonthEnd!DateAndTimeTest removeSelector: #testDosEpoch!DateAndTimeTest removeSelector: #testDayOfWeekWithUTC!DateAndTimeTest removeSelector: #testDateTimeDenotation2!DateAndTimeTest removeSelector: #testDateTimeDenotation1!DateAndTimeTest removeSelector: #testCreationWithOffsets!DateAndTimeTest removeSelector: #testAsUnixTimeIndependentOfTimezone!DateAndTimeTest removeSelector: #testAsTimeUTC!DateAndTimeTest removeSelector: #testAsTime!DateAndTimeTest removeSelector: #testAsDos!DateAndTimeTest removeSelector: #testAsDateAndTime!DateAndTimeTest removeSelector: #testArithmeticAcrossDateBoundary!DateAndTimeTest removeSelector: #selectorsToBeIgnored!DateAndTimeTest removeSelector: #restoreLocalTimeZoneAfter:!DateAndTimeTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteDateAndTimeTest!CompiledMethodTest removeSelector: #writeXandY!CompiledMethodTest removeSelector: #writeX!CompiledMethodTest removeSelector: #testWritesSlot!CompiledMethodTest removeSelector: #testWritesField!CompiledMethodTest removeSelector: #testValueWithReceiverArguments!CompiledMethodTest removeSelector: #testSendsSelector!CompiledMethodTest removeSelector: #testReadsSlot!CompiledMethodTest removeSelector: #testReadsField!CompiledMethodTest removeSelector: #testPerformInSuperclassCanExecutelongMethodWithTemps!CompiledMethodTest removeSelector: #testPerformCanExecutelongMethodWithTemps!CompiledMethodTest removeSelector: #testOrigin!CompiledMethodTest removeSelector: #testIsQuick!CompiledMethodTest removeSelector: #testIsDeprecated!CompiledMethodTest removeSelector: #testIsAbstract!CompiledMethodTest removeSelector: #testHasInstVarRef!CompiledMethodTest removeSelector: #testCopyWithTrailerBytes!CompiledMethodTest removeSelector: #testCopy!CompiledMethodTest removeSelector: #testComparison!CompiledMethodTest removeSelector: #testBytecode!CompiledMethodTest removeSelector: #testAccessesSlot!CompiledMethodTest removeSelector: #tearDown!CompiledMethodTest removeSelector: #shouldNotImplementMethod!CompiledMethodTest removeSelector: #returnTrue!CompiledMethodTest removeSelector: #returnPlusOne:!CompiledMethodTest removeSelector: #readXandY!CompiledMethodTest removeSelector: #readX!CompiledMethodTest removeSelector: #nonAbstractMethod!CompiledMethodTest removeSelector: #deprecatedMethod7!CompiledMethodTest removeSelector: #deprecatedMethod6!CompiledMethodTest removeSelector: #deprecatedMethod5!CompiledMethodTest removeSelector: #deprecatedMethod4!CompiledMethodTest removeSelector: #deprecatedMethod3!CompiledMethodTest removeSelector: #deprecatedMethod2!CompiledMethodTest removeSelector: #deprecatedMethod!CompiledMethodTest removeSelector: #classToBeTested!CompiledMethodTest removeSelector: #categoryNameForTemporaryClasses!CompiledMethodTest removeSelector: #abstractMethod!CompiledMethodTest removeSelector: #a1:a2:a3:a4:a5:a6:a7:a8:a9:a10:a11:a12:a13:a14:a15:!Smalltalk globals removeClassNamed: #AnObsoleteCompiledMethodTest!ClassTest removeSelector: #unclassifiedCategory!ClassTest removeSelector: #testUsesPoolVarNamed!ClassTest removeSelector: #testSuperclassOrderPreservingOrder!ClassTest removeSelector: #testSuperclassOrder!ClassTest removeSelector: #testSubclassInstanceVariableNames!ClassTest removeSelector: #testSubclass!ClassTest removeSelector: #testSharedPools!ClassTest removeSelector: #testSharedPoolOfVarNamed!ClassTest removeSelector: #testReferencedClasses!ClassTest removeSelector: #testOrdersMetaClassAfterItsClassInstance!ClassTest removeSelector: #testOrdersACollectionOfClassesBySuperclass!ClassTest removeSelector: #testNewSubclass!ClassTest removeSelector: #testMethodsReferencingClasses!ClassTest removeSelector: #testMethodsReferencingClass!ClassTest removeSelector: #testHasSharedPools!ClassTest removeSelector: #testHasPoolVarNamed!ClassTest removeSelector: #testDependencies!ClassTest removeSelector: #testClassVarNames!ClassTest removeSelector: #testAllSharedPools!ClassTest removeSelector: #testAddSlotAnonymous!ClassTest removeSelector: #testAddSlot!ClassTest removeSelector: #testAddInstVarName!ClassTest removeSelector: #testAddClassSlot!ClassTest removeSelector: #tearDown!ClassTest removeSelector: #setUp!ClassTest removeSelector: #referencingMethod3!ClassTest removeSelector: #referencingMethod2!ClassTest removeSelector: #referencingMethod1!ClassTest removeSelector: #deleteClass!ClassTest removeSelector: #categoryNameForTemporaryClasses!Smalltalk globals removeClassNamed: #AnObsoleteClassTest!ClassDescriptionTest removeSelector: #testprintSubclassesOnLevelFilterNil!ClassDescriptionTest removeSelector: #testprintSubclassesOnLevelFilterB!ClassDescriptionTest removeSelector: #testprintSubclassesOnLevelFilterA!ClassDescriptionTest removeSelector: #testprintHierarchy!ClassDescriptionTest removeSelector: #testSlots!ClassDescriptionTest removeSelector: #testSlotNames!ClassDescriptionTest removeSelector: #testSlotNamed!ClassDescriptionTest removeSelector: #testOrganization!ClassDescriptionTest removeSelector: #testNumberOfMethods!ClassDescriptionTest removeSelector: #testMethods!ClassDescriptionTest removeSelector: #testHasSlotNamed!ClassDescriptionTest removeSelector: #testHasSlot!ClassDescriptionTest removeSelector: #testDefinesSlotNamed!ClassDescriptionTest removeSelector: #testAllSlots!ClassDescriptionTest removeSelector: #testAllMethodCategoriesIntegratedThrough!Smalltalk globals removeClassNamed: #AnObsoleteClassDescriptionTest!BooleanTest removeSelector: #testNew!Smalltalk globals removeClassNamed: #AnObsoleteBooleanTest!BehaviorTest removeSelector: #testallSuperclassesIncluding!BehaviorTest removeSelector: #testWhichSelectorsAccess!BehaviorTest removeSelector: #testRemoveProperty!BehaviorTest removeSelector: #testPropertyValueAtPut!BehaviorTest removeSelector: #testNumberOfInstanceVariables!BehaviorTest removeSelector: #testMethodsWritingSlot!BehaviorTest removeSelector: #testMethodsReadingSlot!BehaviorTest removeSelector: #testMethodsAccessingSlot!BehaviorTest removeSelector: #testIsUsed!BehaviorTest removeSelector: #testIsRootInEnvironment!BehaviorTest removeSelector: #testIsAbstract!BehaviorTest removeSelector: #testHasAbstractMethods!BehaviorTest removeSelector: #testBinding!BehaviorTest removeSelector: #testBehaviornewnewShouldNotCrash!BehaviorTest removeSelector: #testAllSelectorsAboveUntil!BehaviorTest removeSelector: #testAllSelectorsAbove!BehaviorTest removeSelector: #testAllSelectors!BehaviorTest removeSelector: #testAllReferencesTo!BehaviorTest removeSelector: #testAllMethods!BehaviorTest removeSelector: #testAllLocalCallsOn!BehaviorTest removeSelector: #sampleMessageWithFirstArgument:andInterleavedCommentBeforeSecondArgument:!Smalltalk globals removeClassNamed: #AnObsoleteBehaviorTest!UnicodeTestRNG removeSelector: #setUp!UnicodeTestRNG removeSelector: #randomCodePointBetween:and:!UnicodeTestRNG removeSelector: #randomCodePointAtOrAbove:!UnicodeTestRNG removeSelector: #randomCodePoint!UnicodeTestRNG removeSelector: #randomCharacterBetween:and:!UnicodeTestRNG removeSelector: #randomCharacterAtOrAbove:!UnicodeTestRNG removeSelector: #randomCharacter!UnicodeTestRNG removeSelector: #next!UnicodeTestRNG removeSelector: #generator!Smalltalk globals removeClassNamed: #AnObsoleteUnicodeTestRNG!DelayScheduler removeSelector: #testCaseSupportTimingSemaphore!DelayScheduler removeSelector: #testCaseSupportSystemTimingSemaphore!DelayScheduler removeSelector: #testCaseSupportSetActiveDelayStartTime:!DelayScheduler removeSelector: #testCaseSupportActiveDelay!PoolDefiner2 class removeSelector: #initialize!ClassMultiplePoolUser class removeSelector: #variableInPoolDefiner2!ClassMultiplePoolUser class removeSelector: #gloups!ClassMultiplePoolUser class removeSelector: #author!Smalltalk globals removeClassNamed: #AnObsoleteClassMultiplePoolUser!Smalltalk globals removeClassNamed: #AnObsoletePoolDefiner2!Smalltalk globals removeClassNamed: #AnObsoleteSubclassPoolUser!RootClassPoolUser class removeSelector: #gloups!RootClassPoolUser class removeSelector: #author!Smalltalk globals removeClassNamed: #AnObsoleteRootClassPoolUser!PoolDefiner class removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoletePoolDefiner!SimulationMock removeSelector: #exampleStore!SimulationMock removeSelector: #exampleSend!SimulationMock removeSelector: #exampleClosure!Smalltalk globals removeClassNamed: #AnObsoleteSimulationMock!ObjectMockForTest removeSelector: #variable:!ObjectMockForTest removeSelector: #variable!Smalltalk globals removeClassNamed: #AnObsoleteObjectMockForTest!ExceptionTester removeSelector: #warningTest!ExceptionTester removeSelector: #testString!ExceptionTester removeSelector: #suiteLog!ExceptionTester removeSelector: #simpleTimeoutWithZeroDurationTestResults!ExceptionTester removeSelector: #simpleTimeoutWithZeroDurationTest!ExceptionTester removeSelector: #simpleTimeoutTestResults!ExceptionTester removeSelector: #simpleTimeoutTest!ExceptionTester removeSelector: #simpleReturnTestResults!ExceptionTester removeSelector: #simpleReturnTest!ExceptionTester removeSelector: #simpleRetryUsingTestResults!ExceptionTester removeSelector: #simpleRetryUsingTest!ExceptionTester removeSelector: #simpleRetryTestResults!ExceptionTester removeSelector: #simpleRetryTest!ExceptionTester removeSelector: #simpleResumeTestResults!ExceptionTester removeSelector: #simpleResumeTest!ExceptionTester removeSelector: #simpleResignalAsTestResults!ExceptionTester removeSelector: #simpleResignalAsTest!ExceptionTester removeSelector: #simplePassTestResults!ExceptionTester removeSelector: #simplePassTest!ExceptionTester removeSelector: #simpleOuterTestResults!ExceptionTester removeSelector: #simpleOuterTest!ExceptionTester removeSelector: #simpleNoTimeoutTestResults!ExceptionTester removeSelector: #simpleNoTimeoutTest!ExceptionTester removeSelector: #simpleIsNestedTestResults!ExceptionTester removeSelector: #simpleIsNestedTest!ExceptionTester removeSelector: #simpleEnsureTestWithUparrowResults!ExceptionTester removeSelector: #simpleEnsureTestWithUparrow!ExceptionTester removeSelector: #simpleEnsureTestWithNotificationResults!ExceptionTester removeSelector: #simpleEnsureTestWithNotification!ExceptionTester removeSelector: #simpleEnsureTestWithErrorResults!ExceptionTester removeSelector: #simpleEnsureTestWithError!ExceptionTester removeSelector: #simpleEnsureTestResults!ExceptionTester removeSelector: #simpleEnsureTest!ExceptionTester removeSelector: #signalFromHandlerActionTestResults!ExceptionTester removeSelector: #signalFromHandlerActionTest!ExceptionTester removeSelector: #runTest:!ExceptionTester removeSelector: #runBasicTests!ExceptionTester removeSelector: #runBasicANSISignaledExceptionTests!ExceptionTester removeSelector: #runAllTests!ExceptionTester removeSelector: #resumableFallOffTheEndHandlerResults!ExceptionTester removeSelector: #resumableFallOffTheEndHandler!ExceptionTester removeSelector: #nonResumableFallOffTheEndHandlerResults!ExceptionTester removeSelector: #nonResumableFallOffTheEndHandler!ExceptionTester removeSelector: #methodWithNotification!ExceptionTester removeSelector: #methodWithError!ExceptionTester removeSelector: #logTestResult:!ExceptionTester removeSelector: #logTest:!ExceptionTester removeSelector: #log:!ExceptionTester removeSelector: #log!ExceptionTester removeSelector: #iterationsBeforeTimeout:!ExceptionTester removeSelector: #iterationsBeforeTimeout!ExceptionTester removeSelector: #doubleResumeTestResults!ExceptionTester removeSelector: #doubleResumeTest!ExceptionTester removeSelector: #doublePassOuterTestResults!ExceptionTester removeSelector: #doublePassOuterTest!ExceptionTester removeSelector: #doubleOuterTest!ExceptionTester removeSelector: #doubleOuterPassTestResults!ExceptionTester removeSelector: #doubleOuterPassTest!ExceptionTester removeSelector: #doYetAnotherThingString!ExceptionTester removeSelector: #doYetAnotherThing!ExceptionTester removeSelector: #doSomethingString!ExceptionTester removeSelector: #doSomethingExceptionalString!ExceptionTester removeSelector: #doSomethingExceptional!ExceptionTester removeSelector: #doSomethingElseString!ExceptionTester removeSelector: #doSomethingElse!ExceptionTester removeSelector: #doSomething!ExceptionTester removeSelector: #contents!ExceptionTester removeSelector: #clearLog!ExceptionTester removeSelector: #basicTestSelectors!ExceptionTester removeSelector: #basicANSISignaledExceptionTestSelectors!Smalltalk globals removeClassNamed: #AnObsoleteExceptionTester!Smalltalk globals removeClassNamed: #AnObsoleteExampleForTest12!Smalltalk globals removeClassNamed: #AnObsoleteExampleForTest112!Smalltalk globals removeClassNamed: #AnObsoleteExampleForTest111!Smalltalk globals removeClassNamed: #AnObsoleteExampleForTest11!Smalltalk globals removeClassNamed: #AnObsoleteExampleForTest1!DelayBenchmark removeSelector: #trialConcurrent:priority:maxDuration:fromSeed:!DelayBenchmark removeSelector: #generateDelayProcesses:priority:maxDuration:fromSeed:!DelayBenchmark removeSelector: #bench:!DelayBenchmark removeSelector: #bench!DelayBenchmark class removeSelector: #runAll!DelayBenchmark class removeSelector: #run!Smalltalk globals removeClassNamed: #AnObsoleteDelayBenchmark!DatePrintFormatTester removeSelector: #yearType:shouldPrintAs:!DatePrintFormatTester removeSelector: #unexpectedIdentityEqualityStringBetween:and:!DatePrintFormatTester removeSelector: #unexpectedEqualityStringBetween:and:!DatePrintFormatTester removeSelector: #tokens!DatePrintFormatTester removeSelector: #skipUnless:!DatePrintFormatTester removeSelector: #skip:!DatePrintFormatTester removeSelector: #skip!DatePrintFormatTester removeSelector: #signalFailure:!DatePrintFormatTester removeSelector: #shouldnt:raise:whoseDescriptionIncludes:description:!DatePrintFormatTester removeSelector: #shouldnt:raise:whoseDescriptionDoesNotInclude:description:!DatePrintFormatTester removeSelector: #shouldnt:raise:description:!DatePrintFormatTester removeSelector: #shouldnt:raise:!DatePrintFormatTester removeSelector: #shouldnt:description:!DatePrintFormatTester removeSelector: #shouldnt:!DatePrintFormatTester removeSelector: #shouldFix:!DatePrintFormatTester removeSelector: #shouldEqual:!DatePrintFormatTester removeSelector: #should:raise:withExceptionDo:!DatePrintFormatTester removeSelector: #should:raise:whoseDescriptionIncludes:description:!DatePrintFormatTester removeSelector: #should:raise:whoseDescriptionDoesNotInclude:description:!DatePrintFormatTester removeSelector: #should:raise:description:!DatePrintFormatTester removeSelector: #should:raise:!DatePrintFormatTester removeSelector: #should:notTakeMoreThanMilliseconds:!DatePrintFormatTester removeSelector: #should:notTakeMoreThan:!DatePrintFormatTester removeSelector: #should:description:!DatePrintFormatTester removeSelector: #should:!DatePrintFormatTester removeSelector: #printFormat!DatePrintFormatTester removeSelector: #monthType:shouldPrintAs:!DatePrintFormatTester removeSelector: #monthType:!DatePrintFormatTester removeSelector: #fail:!DatePrintFormatTester removeSelector: #fail!DatePrintFormatTester removeSelector: #executeShould:inScopeOf:withExceptionDo:!DatePrintFormatTester removeSelector: #executeShould:inScopeOf:withDescriptionNotContaining:!DatePrintFormatTester removeSelector: #executeShould:inScopeOf:withDescriptionContaining:!DatePrintFormatTester removeSelector: #executeShould:inScopeOf:!DatePrintFormatTester removeSelector: #denyCollection:equals:!DatePrintFormatTester removeSelector: #deny:identicalTo:!DatePrintFormatTester removeSelector: #deny:equals:!DatePrintFormatTester removeSelector: #deny:description:resumable:!DatePrintFormatTester removeSelector: #deny:description:!DatePrintFormatTester removeSelector: #deny:!DatePrintFormatTester removeSelector: #delimiter:!DatePrintFormatTester removeSelector: #dayPosition:monthPosition:yearPosition:delimiter:monthType:yearType:!DatePrintFormatTester removeSelector: #date:!DatePrintFormatTester removeSelector: #comparingStringBetween:and:!DatePrintFormatTester removeSelector: #comparingIdentityStringBetween:and:!DatePrintFormatTester removeSelector: #comparingCollectionBetween:and:!DatePrintFormatTester removeSelector: #classForTestResult!DatePrintFormatTester removeSelector: #assertCollection:hasSameElements:!DatePrintFormatTester removeSelector: #assertCollection:equals:!DatePrintFormatTester removeSelector: #assert:identicalTo:!DatePrintFormatTester removeSelector: #assert:equals:!DatePrintFormatTester removeSelector: #assert:description:resumable:!DatePrintFormatTester removeSelector: #assert:description:!DatePrintFormatTester removeSelector: #assert:closeTo:!DatePrintFormatTester removeSelector: #assert:!DatePrintFormatTester class removeSelector: #on:!Smalltalk globals removeClassNamed: #AnObsoleteDatePrintFormatTester!ContextTestAssistantB class removeSelector: #lookupSymbolInThisContext:!Smalltalk globals removeClassNamed: #AnObsoleteContextTestAssistantB!ContextTestAssistantA class removeSelector: #classVarForTestLookupSymbol:!ContextTestAssistantA class removeSelector: #classVarForTestLookupSymbol!Smalltalk globals removeClassNamed: #AnObsoleteContextTestAssistantA!CollectionCombinator removeSelector: #forArrays:processWith:!CollectionCombinator removeSelector: #combineFromIdx:!Smalltalk globals removeClassNamed: #AnObsoleteCollectionCombinator!MetacelloCommandLineHandlerTest removeSelector: #testVersion!MetacelloCommandLineHandlerTest removeSelector: #testSubCommand!MetacelloCommandLineHandlerTest removeSelector: #testShouldSave!MetacelloCommandLineHandlerTest removeSelector: #testShouldQuit!MetacelloCommandLineHandlerTest removeSelector: #testRepositoryUrl!MetacelloCommandLineHandlerTest removeSelector: #testIsConfigurationName!MetacelloCommandLineHandlerTest removeSelector: #testIsBaselineName!MetacelloCommandLineHandlerTest removeSelector: #testHasVersion!MetacelloCommandLineHandlerTest removeSelector: #testHasGroups!MetacelloCommandLineHandlerTest removeSelector: #testGroups!MetacelloCommandLineHandlerTest removeSelector: #testCheckInputForInstallSubcommand!MetacelloCommandLineHandlerTest removeSelector: #testBaselineOrConfigurationNameSuffix!MetacelloCommandLineHandlerTest removeSelector: #testBaselineOrConfigurationName!MetacelloCommandLineHandlerTest removeSelector: #command:!MetacelloCommandLineHandlerTest removeSelector: #argumentsWith:!Smalltalk globals removeClassNamed: #AnObsoleteMetacelloCommandLineHandlerTest!FilterTest removeSelector: #testSelectorFilter!FilterTest removeSelector: #testKernelClassesFilter!FilterTest removeSelector: #testBooleanFilter!FilterTest removeSelector: #testBlockFilter!FilterTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteFilterTest!DebuggerModelTest removeSelector: #testStepOver!DebuggerModelTest removeSelector: #testStepInto!DebuggerModelTest removeSelector: #testCorrectlyCreateDebugSession!DebuggerModelTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteDebuggerModelTest!OSWindowTest removeSelector: #testSettingUpWindow!OSWindowTest removeSelector: #testNewWindowDefaults!OSWindowTest removeSelector: #testCreatingWindow!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowTest!OSWindowBench removeSelector: #benchEventProcessing!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowBench!OSWindowAttributesTest removeSelector: #testDefaults!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowAttributesTest!ConfigurationCommandLineHandlerTest removeSelector: #testResponsibility!ConfigurationCommandLineHandlerTest removeSelector: #testListConfigurations!ConfigurationCommandLineHandlerTest removeSelector: #testHasConfiguration!ConfigurationCommandLineHandlerTest removeSelector: #testGroups!ConfigurationCommandLineHandlerTest removeSelector: #command:!ConfigurationCommandLineHandlerTest removeSelector: #argumentsWith:!ConfigurationCommandLineHandlerTest removeSelector: #activate:!Smalltalk globals removeClassNamed: #AnObsoleteConfigurationCommandLineHandlerTest!FreeTypeFontProvider removeSelector: #includesInstaller:!EmbeddedFreeTypeFontInstallerTest removeSelector: #testinstallAllFontsIn!EmbeddedFreeTypeFontInstallerTest removeSelector: #testIsRegistred!EmbeddedFreeTypeFontInstallerTest removeSelector: #currentProviderOrError!EmbeddedFreeTypeFontInstallerTest removeSelector: #currentInstallerOrError!Smalltalk globals removeClassNamed: #AnObsoleteEmbeddedFreeTypeFontInstallerTest!FBDExamples removeSelector: #writtenAfterClosedOver!FBDExamples removeSelector: #singleRemoteTempVarWrittenAfterClosedOver!FBDExamples removeSelector: #singleRemoteTempVar!FBDExamples removeSelector: #singleRemoteReadNestedBlocks!FBDExamples removeSelector: #singleRemoteMethodArgument!FBDExamples removeSelector: #singleRemoteDifferentBlocksSameArgumentName!FBDExamples removeSelector: #optimizedBlockWrittenAfterClosedOverCase2!FBDExamples removeSelector: #optimizedBlockWrittenAfterClosedOverCase1!FBDExamples removeSelector: #optimizedBlockWriteReadInBlock!FBDExamples removeSelector: #optimizedBlockWriteInNestedBlockCase4!FBDExamples removeSelector: #optimizedBlockWriteInNestedBlockCase3!FBDExamples removeSelector: #optimizedBlockWriteInNestedBlockCase2!FBDExamples removeSelector: #optimizedBlockWriteInNestedBlock!FBDExamples removeSelector: #optimizedBlockWriteInBlock!FBDExamples removeSelector: #noRemoteReadNestedBlocks!FBDExamples removeSelector: #noRemoteReadInBlock!FBDExamples removeSelector: #noRemoteBlockTemp!FBDExamples removeSelector: #noRemoteBlockArgument!FBDExamples removeSelector: #nestedBlocksRemoteInBlockCase3!FBDExamples removeSelector: #nestedBlocksRemoteInBlockCase2!FBDExamples removeSelector: #nestedBlocksRemoteInBlockCase1!FBDExamples removeSelector: #initialize!FBDExamples removeSelector: #iVar:!FBDExamples removeSelector: #iVar!FBDExamples removeSelector: #exampleiVar!FBDExamples removeSelector: #exampleWithArgsAndTemps:and:!FBDExamples removeSelector: #exampleWithArgs:and:!FBDExamples removeSelector: #exampleWhileWithTempNotInlined!FBDExamples removeSelector: #exampleWhileWithTemp!FBDExamples removeSelector: #exampleWhileTrueSameJumpTarget2!FBDExamples removeSelector: #exampleWhileTrueSameJumpTarget!FBDExamples removeSelector: #exampleWhileTrue4!FBDExamples removeSelector: #exampleWhileTrue3!FBDExamples removeSelector: #exampleWhileTrue2!FBDExamples removeSelector: #exampleWhileTrue!FBDExamples removeSelector: #exampleWhileNoModification!FBDExamples removeSelector: #exampleWhileModificationBeforeNotInlined!FBDExamples removeSelector: #exampleWhileModificationBefore!FBDExamples removeSelector: #exampleWhileModificationAfterNotInlined!FBDExamples removeSelector: #exampleWhileFalse2!FBDExamples removeSelector: #exampleWhileFalse!FBDExamples removeSelector: #exampleToDoWithMessage2!FBDExamples removeSelector: #exampleToDoWithMessage!FBDExamples removeSelector: #exampleToDoValueLimitExpression!FBDExamples removeSelector: #exampleToDoValue!FBDExamples removeSelector: #exampleToDoOutsideTempNotInlined!FBDExamples removeSelector: #exampleToDoOutsideTemp!FBDExamples removeSelector: #exampleToDoInsideTempNotInlined!FBDExamples removeSelector: #exampleToDoInsideTemp!FBDExamples removeSelector: #exampleToDoInsideBlock!FBDExamples removeSelector: #exampleToDoArgumentNotInlined!FBDExamples removeSelector: #exampleToDoArgumentLimitIsExpression!FBDExamples removeSelector: #exampleToDoArgument!FBDExamples removeSelector: #exampleToDo5!FBDExamples removeSelector: #exampleToDo4!FBDExamples removeSelector: #exampleToDo3!FBDExamples removeSelector: #exampleToDo2!FBDExamples removeSelector: #exampleToDo!FBDExamples removeSelector: #exampleToByDoNegativeLoop!FBDExamples removeSelector: #exampleToByDo!FBDExamples removeSelector: #exampleTimesRepeatValue!FBDExamples removeSelector: #exampleTimesRepeatEffect!FBDExamples removeSelector: #exampleThisContext!FBDExamples removeSelector: #exampleSuper!FBDExamples removeSelector: #exampleSimpleBlockiVar!FBDExamples removeSelector: #exampleSimpleBlockReturn!FBDExamples removeSelector: #exampleSimpleBlockNested!FBDExamples removeSelector: #exampleSimpleBlockLocalWhile!FBDExamples removeSelector: #exampleSimpleBlockLocalIfNested!FBDExamples removeSelector: #exampleSimpleBlockLocalIf!FBDExamples removeSelector: #exampleSimpleBlockLocal!FBDExamples removeSelector: #exampleSimpleBlockEmpty!FBDExamples removeSelector: #exampleSimpleBlockArgument5!FBDExamples removeSelector: #exampleSimpleBlockArgument4!FBDExamples removeSelector: #exampleSimpleBlockArgument3!FBDExamples removeSelector: #exampleSimpleBlockArgument2!FBDExamples removeSelector: #exampleSimpleBlockArgument1!FBDExamples removeSelector: #exampleSimpleBlock!FBDExamples removeSelector: #exampleSend2Args!FBDExamples removeSelector: #exampleSend!FBDExamples removeSelector: #exampleSelf!FBDExamples removeSelector: #exampleReturn42!FBDExamples removeSelector: #exampleReturn1plus2!FBDExamples removeSelector: #exampleReturn1!FBDExamples removeSelector: #exampleRepeatValue!FBDExamples removeSelector: #exampleRepeatEffect!FBDExamples removeSelector: #examplePushBigArray!FBDExamples removeSelector: #examplePushArray!FBDExamples removeSelector: #examplePrimitiveErrorCodeModule2!FBDExamples removeSelector: #examplePrimitiveErrorCodeModule!FBDExamples removeSelector: #examplePrimitiveErrorCode!FBDExamples removeSelector: #exampleOr!FBDExamples removeSelector: #exampleNewArray!FBDExamples removeSelector: #exampleNestedIfNilIfNotNil!FBDExamples removeSelector: #exampleNestedBlockScoping!FBDExamples removeSelector: #exampleMethodWithOptimizedBlocksA!FBDExamples removeSelector: #exampleMethodTempInNestedBlock!FBDExamples removeSelector: #exampleInlineBlockCollectionLR3!FBDExamples removeSelector: #exampleIfTrueWithOr!FBDExamples removeSelector: #exampleIfTrueWithNilAssertion!FBDExamples removeSelector: #exampleIfTrueNested!FBDExamples removeSelector: #exampleIfTrueIfFalseNested3!FBDExamples removeSelector: #exampleIfTrueIfFalseNested2!FBDExamples removeSelector: #exampleIfTrueIfFalseNested!FBDExamples removeSelector: #exampleIfTrueIfFalseLikeAnd!FBDExamples removeSelector: #exampleIfTrueIfFalse3!FBDExamples removeSelector: #exampleIfTrueIfFalse2!FBDExamples removeSelector: #exampleIfTrueIfFalse!FBDExamples removeSelector: #exampleIfTrueForEffectNested!FBDExamples removeSelector: #exampleIfTrueAssign!FBDExamples removeSelector: #exampleIfTrue3!FBDExamples removeSelector: #exampleIfTrue2!FBDExamples removeSelector: #exampleIfTrue!FBDExamples removeSelector: #exampleIfNotNilReturnNil!FBDExamples removeSelector: #exampleIfNotNilDup!FBDExamples removeSelector: #exampleIfNotNilArg!FBDExamples removeSelector: #exampleIfNilNested!FBDExamples removeSelector: #exampleIfNilIfNotNil3!FBDExamples removeSelector: #exampleIfNilIfNotNil2!FBDExamples removeSelector: #exampleIfNilIfNotNil!FBDExamples removeSelector: #exampleIfNilDup!FBDExamples removeSelector: #exampleIfNilClosure!FBDExamples removeSelector: #exampleIfNil!FBDExamples removeSelector: #exampleIfFalseIfTrue6!FBDExamples removeSelector: #exampleIfFalseIfTrue5!FBDExamples removeSelector: #exampleIfFalseIfTrue4!FBDExamples removeSelector: #exampleIfFalseIfTrue3!FBDExamples removeSelector: #exampleIfFalseIfTrue2!FBDExamples removeSelector: #exampleIfFalseIfTrue!FBDExamples removeSelector: #exampleIfFalse3!FBDExamples removeSelector: #exampleIfFalse2!FBDExamples removeSelector: #exampleIfFalse!FBDExamples removeSelector: #exampleIV!FBDExamples removeSelector: #exampleFullBlock!FBDExamples removeSelector: #exampleEmptyMethod!FBDExamples removeSelector: #exampleEffectValues!FBDExamples removeSelector: #exampleDoublePrimitive!FBDExamples removeSelector: #exampleCopyingBlock!FBDExamples removeSelector: #exampleClassVar!FBDExamples removeSelector: #exampleCaseOfOtherwise!FBDExamples removeSelector: #exampleCaseOf8!FBDExamples removeSelector: #exampleCaseOf7!FBDExamples removeSelector: #exampleCaseOf6!FBDExamples removeSelector: #exampleCaseOf5!FBDExamples removeSelector: #exampleCaseOf4!FBDExamples removeSelector: #exampleCaseOf3!FBDExamples removeSelector: #exampleCaseOf2!FBDExamples removeSelector: #exampleCaseOf!FBDExamples removeSelector: #exampleCascadeNested!FBDExamples removeSelector: #exampleCascadeIntoBlockWithTempIntoCascade!FBDExamples removeSelector: #exampleCascadeIntoBlockWithTempIfTrueIfFalse!FBDExamples removeSelector: #exampleCascadeIntoBlockIntoCascade!FBDExamples removeSelector: #exampleCascadeIfTrueIfFalse2!FBDExamples removeSelector: #exampleCascadeIfTrueIfFalse!FBDExamples removeSelector: #exampleCascadeIfNil!FBDExamples removeSelector: #exampleCascadeIfFalse!FBDExamples removeSelector: #exampleCascade4!FBDExamples removeSelector: #exampleCascade3!FBDExamples removeSelector: #exampleCascade2!FBDExamples removeSelector: #exampleCascade!FBDExamples removeSelector: #exampleBlockWithArg!FBDExamples removeSelector: #exampleBlockNumCopied!FBDExamples removeSelector: #exampleBlockNested!FBDExamples removeSelector: #exampleBlockMethodArgument:!FBDExamples removeSelector: #exampleBlockIntoCascade!FBDExamples removeSelector: #exampleBlockInternal!FBDExamples removeSelector: #exampleBlockExternalNested!FBDExamples removeSelector: #exampleBlockExternalArg!FBDExamples removeSelector: #exampleBlockExternal2!FBDExamples removeSelector: #exampleBlockExternal!FBDExamples removeSelector: #exampleBlockArgument!FBDExamples removeSelector: #exampleAndOr6!FBDExamples removeSelector: #exampleAndOr5!FBDExamples removeSelector: #exampleAndOr4!FBDExamples removeSelector: #exampleAndOr3!FBDExamples removeSelector: #exampleAndOr2!FBDExamples removeSelector: #exampleAndOr!FBDExamples removeSelector: #exampleAnd2!FBDExamples removeSelector: #exampleAnd!FBDExamples removeSelector: #example2Loops2!FBDExamples removeSelector: #example2Loops!FBDExamples removeSelector: #doubleRemoteAnidatedBlocks!Smalltalk globals removeClassNamed: #AnObsoleteFBDExamples!FBDDecompilerTest removeSelector: #testWithArgsAndTempsAnd!FBDDecompilerTest removeSelector: #testWithArgsAnd!FBDDecompilerTest removeSelector: #testWhileWithTempNotInlined!FBDDecompilerTest removeSelector: #testWhileWithTemp!FBDDecompilerTest removeSelector: #testWhileTrueSameJumpTarget2!FBDDecompilerTest removeSelector: #testWhileTrueSameJumpTarget!FBDDecompilerTest removeSelector: #testWhileTrue3!FBDDecompilerTest removeSelector: #testWhileTrue2!FBDDecompilerTest removeSelector: #testWhileTrue!FBDDecompilerTest removeSelector: #testWhileNoModification!FBDDecompilerTest removeSelector: #testWhileModificationBeforeNotInlined!FBDDecompilerTest removeSelector: #testWhileModificationBefore!FBDDecompilerTest removeSelector: #testWhileModificationAfterNotInlined!FBDDecompilerTest removeSelector: #testWhileFalse2!FBDDecompilerTest removeSelector: #testWhileFalse!FBDDecompilerTest removeSelector: #testToDoWithMessage!FBDDecompilerTest removeSelector: #testToDoValueLimitExpression!FBDDecompilerTest removeSelector: #testToDoValue!FBDDecompilerTest removeSelector: #testToDoOutsideTempNotInlined!FBDDecompilerTest removeSelector: #testToDoOutsideTemp!FBDDecompilerTest removeSelector: #testToDoInsideTempNotInlined!FBDDecompilerTest removeSelector: #testToDoInsideTemp!FBDDecompilerTest removeSelector: #testToDoInsideBlock!FBDDecompilerTest removeSelector: #testToDoArgumentNotInlined!FBDDecompilerTest removeSelector: #testToDoArgumentLimitIsExpression!FBDDecompilerTest removeSelector: #testToDoArgument!FBDDecompilerTest removeSelector: #testToDo5!FBDDecompilerTest removeSelector: #testToDo4!FBDDecompilerTest removeSelector: #testToDo3!FBDDecompilerTest removeSelector: #testToDo2!FBDDecompilerTest removeSelector: #testToDo!FBDDecompilerTest removeSelector: #testToByDoNegativeLoop!FBDDecompilerTest removeSelector: #testToByDo!FBDDecompilerTest removeSelector: #testTimesRepeatValue!FBDDecompilerTest removeSelector: #testTimesRepeatEffect!FBDDecompilerTest removeSelector: #testThisContext!FBDDecompilerTest removeSelector: #testSuper!FBDDecompilerTest removeSelector: #testSimpleBlockiVar!FBDDecompilerTest removeSelector: #testSimpleBlockReturn!FBDDecompilerTest removeSelector: #testSimpleBlockNested!FBDDecompilerTest removeSelector: #testSimpleBlockLocalWhile!FBDDecompilerTest removeSelector: #testSimpleBlockLocalIfNested!FBDDecompilerTest removeSelector: #testSimpleBlockLocalIf!FBDDecompilerTest removeSelector: #testSimpleBlockLocal!FBDDecompilerTest removeSelector: #testSimpleBlockEmpty!FBDDecompilerTest removeSelector: #testSimpleBlockArgument5!FBDDecompilerTest removeSelector: #testSimpleBlockArgument4!FBDDecompilerTest removeSelector: #testSimpleBlockArgument3!FBDDecompilerTest removeSelector: #testSimpleBlockArgument2!FBDDecompilerTest removeSelector: #testSimpleBlockArgument1!FBDDecompilerTest removeSelector: #testSimpleBlock!FBDDecompilerTest removeSelector: #testSend2Args!FBDDecompilerTest removeSelector: #testSend!FBDDecompilerTest removeSelector: #testSelf!FBDDecompilerTest removeSelector: #testReturn42!FBDDecompilerTest removeSelector: #testReturn1plus2!FBDDecompilerTest removeSelector: #testReturn1!FBDDecompilerTest removeSelector: #testRepeatValue!FBDDecompilerTest removeSelector: #testRepeatEffect!FBDDecompilerTest removeSelector: #testPushBigArray!FBDDecompilerTest removeSelector: #testPushArray!FBDDecompilerTest removeSelector: #testPrimitiveErrorCodeModule2!FBDDecompilerTest removeSelector: #testPrimitiveErrorCodeModule!FBDDecompilerTest removeSelector: #testPrimitiveErrorCode!FBDDecompilerTest removeSelector: #testOr!FBDDecompilerTest removeSelector: #testOptimizedBlockWrittenAfterClosedOverCase2!FBDDecompilerTest removeSelector: #testOptimizedBlockWrittenAfterClosedOverCase1!FBDDecompilerTest removeSelector: #testNoRemoteReadNestedBlocks!FBDDecompilerTest removeSelector: #testNoRemoteReadInBlock!FBDDecompilerTest removeSelector: #testNoRemoteBlockTemp!FBDDecompilerTest removeSelector: #testNoRemoteBlockArgument!FBDDecompilerTest removeSelector: #testNewArray!FBDDecompilerTest removeSelector: #testNestedIfNilIfNotNil!FBDDecompilerTest removeSelector: #testNestedBlocksRemoteInBlockCase3!FBDDecompilerTest removeSelector: #testNestedBlocksRemoteInBlockCase2!FBDDecompilerTest removeSelector: #testNestedBlocksRemoteInBlockCase1!FBDDecompilerTest removeSelector: #testNestedBlockScoping!FBDDecompilerTest removeSelector: #testMethodWithOptimizedBlocksA!FBDDecompilerTest removeSelector: #testMethodTempInNestedBlock!FBDDecompilerTest removeSelector: #testInlineBlockCollectionLR3!FBDDecompilerTest removeSelector: #testIfTrueWithOr!FBDDecompilerTest removeSelector: #testIfTrueWithNilAssertion!FBDDecompilerTest removeSelector: #testIfTrueNested!FBDDecompilerTest removeSelector: #testIfTrueIfFalseNested3!FBDDecompilerTest removeSelector: #testIfTrueIfFalseNested2!FBDDecompilerTest removeSelector: #testIfTrueIfFalseNested!FBDDecompilerTest removeSelector: #testIfTrueIfFalseLikeAnd!FBDDecompilerTest removeSelector: #testIfTrueIfFalse3!FBDDecompilerTest removeSelector: #testIfTrueIfFalse2!FBDDecompilerTest removeSelector: #testIfTrueIfFalse!FBDDecompilerTest removeSelector: #testIfTrueForEffectNested!FBDDecompilerTest removeSelector: #testIfTrue3!FBDDecompilerTest removeSelector: #testIfTrue2!FBDDecompilerTest removeSelector: #testIfTrue!FBDDecompilerTest removeSelector: #testIfNotNilReturnNil!FBDDecompilerTest removeSelector: #testIfNotNilDup!FBDDecompilerTest removeSelector: #testIfNotNilArg!FBDDecompilerTest removeSelector: #testIfNilIfNotNil!FBDDecompilerTest removeSelector: #testIfNilDup!FBDDecompilerTest removeSelector: #testIfNilClosure!FBDDecompilerTest removeSelector: #testIfNil!FBDDecompilerTest removeSelector: #testIfFalseIfTrue6!FBDDecompilerTest removeSelector: #testIfFalseIfTrue5!FBDDecompilerTest removeSelector: #testIfFalseIfTrue4!FBDDecompilerTest removeSelector: #testIfFalseIfTrue3!FBDDecompilerTest removeSelector: #testIfFalseIfTrue2!FBDDecompilerTest removeSelector: #testIfFalseIfTrue!FBDDecompilerTest removeSelector: #testIfFalse3!FBDDecompilerTest removeSelector: #testIfFalse2!FBDDecompilerTest removeSelector: #testIfFalse!FBDDecompilerTest removeSelector: #testIV!FBDDecompilerTest removeSelector: #testFullBlock!FBDDecompilerTest removeSelector: #testEmptyMethod!FBDDecompilerTest removeSelector: #testEffectValues!FBDDecompilerTest removeSelector: #testDoubleRemoteAnidatedBlocks!FBDDecompilerTest removeSelector: #testDoublePrimitive!FBDDecompilerTest removeSelector: #testCopyingBlock!FBDDecompilerTest removeSelector: #testClassVar!FBDDecompilerTest removeSelector: #testCaseOfOtherwise!FBDDecompilerTest removeSelector: #testCaseOf8!FBDDecompilerTest removeSelector: #testCaseOf7!FBDDecompilerTest removeSelector: #testCaseOf6!FBDDecompilerTest removeSelector: #testCaseOf5!FBDDecompilerTest removeSelector: #testCaseOf4!FBDDecompilerTest removeSelector: #testCaseOf3!FBDDecompilerTest removeSelector: #testCaseOf2!FBDDecompilerTest removeSelector: #testCaseOf!FBDDecompilerTest removeSelector: #testCascadeNested!FBDDecompilerTest removeSelector: #testCascadeIntoBlockWithTempIntoCascade!FBDDecompilerTest removeSelector: #testCascadeIntoBlockWithTempIfTrueIfFalse!FBDDecompilerTest removeSelector: #testCascadeIntoBlockIntoCascade!FBDDecompilerTest removeSelector: #testCascadeIfTrueIfFalse!FBDDecompilerTest removeSelector: #testCascadeIfNil!FBDDecompilerTest removeSelector: #testCascadeIfFalse!FBDDecompilerTest removeSelector: #testCascade4!FBDDecompilerTest removeSelector: #testCascade3!FBDDecompilerTest removeSelector: #testCascade2!FBDDecompilerTest removeSelector: #testCascade!FBDDecompilerTest removeSelector: #testBlockWithArg!FBDDecompilerTest removeSelector: #testBlockNumCopied!FBDDecompilerTest removeSelector: #testBlockNested!FBDDecompilerTest removeSelector: #testBlockIntoCascade!FBDDecompilerTest removeSelector: #testBlockInternal!FBDDecompilerTest removeSelector: #testBlockExternalNested!FBDDecompilerTest removeSelector: #testBlockExternalArg!FBDDecompilerTest removeSelector: #testBlockExternal2!FBDDecompilerTest removeSelector: #testBlockExternal!FBDDecompilerTest removeSelector: #testBlockArgument!FBDDecompilerTest removeSelector: #testAndOr6!FBDDecompilerTest removeSelector: #testAndOr5!FBDDecompilerTest removeSelector: #testAndOr4!FBDDecompilerTest removeSelector: #testAndOr3!FBDDecompilerTest removeSelector: #testAndOr2!FBDDecompilerTest removeSelector: #testAndOr!FBDDecompilerTest removeSelector: #testAnd2!FBDDecompilerTest removeSelector: #testAnd!FBDDecompilerTest removeSelector: #test2Loops2!FBDDecompilerTest removeSelector: #test2Loops!FBDDecompilerTest removeSelector: #getMethod:!FBDDecompilerTest removeSelector: #exampleClass!FBDDecompilerTest removeSelector: #decompileThenRecompile:!FBDDecompilerTest removeSelector: #compareResult:with:!FBDDecompilerTest removeSelector: #comparePigs:with:!FBDDecompilerTest removeSelector: #compare:with:!FBDDecompilerTest removeSelector: #checkCorrectMethodDecompilation:!FBDDecompilerTest removeSelector: #checkCorrectDecompilation:!Smalltalk globals removeClassNamed: #AnObsoleteFBDDecompilerTest!ZnUrlTests removeSelector: #testWriteUrlPathQueryFragmentOfOn!ZnUrlTests removeSelector: #testWindowsFileUrl!ZnUrlTests removeSelector: #testUserInfo!ZnUrlTests removeSelector: #testSchemeInQuery!ZnUrlTests removeSelector: #testRelative!ZnUrlTests removeSelector: #testReferenceResolution!ZnUrlTests removeSelector: #testQueryRemoveAll!ZnUrlTests removeSelector: #testQueryManipulation!ZnUrlTests removeSelector: #testQueryEncodingExtended!ZnUrlTests removeSelector: #testQueryEncoding!ZnUrlTests removeSelector: #testQueryAccessing!ZnUrlTests removeSelector: #testQuery!ZnUrlTests removeSelector: #testPrintingSimple!ZnUrlTests removeSelector: #testPortIfAbsent!ZnUrlTests removeSelector: #testPlusHandling!ZnUrlTests removeSelector: #testPlus!ZnUrlTests removeSelector: #testPathSegments!ZnUrlTests removeSelector: #testPathRemoval!ZnUrlTests removeSelector: #testParsingWrongScheme!ZnUrlTests removeSelector: #testParsingWrongPort!ZnUrlTests removeSelector: #testParsingWrongEscapeQuery!ZnUrlTests removeSelector: #testParsingWrongEscape!ZnUrlTests removeSelector: #testParsingSimple!ZnUrlTests removeSelector: #testParsingEscape!ZnUrlTests removeSelector: #testParsingEmpty!ZnUrlTests removeSelector: #testParsePathOnly!ZnUrlTests removeSelector: #testNoSchemeColonInPath!ZnUrlTests removeSelector: #testNoScheme!ZnUrlTests removeSelector: #testMailto!ZnUrlTests removeSelector: #testLocalHost!ZnUrlTests removeSelector: #testIsSlash!ZnUrlTests removeSelector: #testInContextOf!ZnUrlTests removeSelector: #testImage!ZnUrlTests removeSelector: #testFileUrl!ZnUrlTests removeSelector: #testEncodedSlash!ZnUrlTests removeSelector: #testDefaults!ZnUrlTests removeSelector: #testDefaultSchemeAndPort!ZnUrlTests removeSelector: #testDefaultScheme!ZnUrlTests removeSelector: #testDefaultPortUnknownScheme!ZnUrlTests removeSelector: #testConvenienceMethods!ZnUrlTests removeSelector: #testComponentSpecifcEncoding!ZnUrlTests removeSelector: #testBogusBackups!ZnUrlTests removeSelector: #testAuthority!ZnUrlTests removeSelector: #testAsRelativeUrl!ZnUrlTests removeSelector: #testAsFileUrl!Smalltalk globals removeClassNamed: #AnObsoleteZnUrlTests!ZnResourceMetaUtilsTests removeSelector: #testQueryWriting!ZnResourceMetaUtilsTests removeSelector: #testQueryParsing!ZnResourceMetaUtilsTests removeSelector: #testDecodePercent!Smalltalk globals removeClassNamed: #AnObsoleteZnResourceMetaUtilsTests!ZnMultiValueDictionaryTests removeSelector: #testTooManyEntries!ZnMultiValueDictionaryTests removeSelector: #testMultiValues!ZnMultiValueDictionaryTests removeSelector: #testDynamicLimit!Smalltalk globals removeClassNamed: #AnObsoleteZnMultiValueDictionaryTests!ZnMimeTypeTests removeSelector: #testWriting!ZnMimeTypeTests removeSelector: #testReading!ZnMimeTypeTests removeSelector: #testParameters!ZnMimeTypeTests removeSelector: #testMatches!ZnMimeTypeTests removeSelector: #testIsBinary!ZnMimeTypeTests removeSelector: #testIdentity!ZnMimeTypeTests removeSelector: #testDefault!ZnMimeTypeTests removeSelector: #testCopying!ZnMimeTypeTests removeSelector: #testCharset!ZnMimeTypeTests removeSelector: #testAsMimeType!ZnMimeTypeTests removeSelector: #someNonBinaryMimeTypes!Smalltalk globals removeClassNamed: #AnObsoleteZnMimeTypeTests!MultiFontTest removeSelector: #testMultistringFont!MultiByteFileStreamFileOutTestClass class removeSelector: #scriptName!Smalltalk globals removeClassNamed: #AnObsoleteMultiByteFileStreamFileOutTestClass!UTF8TextConverterTest removeSelector: #testPutSingleCharacterBinary!UTF8TextConverterTest removeSelector: #testPutSingle4ByteEncodedCharacter!UTF8TextConverterTest removeSelector: #testPutSingle3ByteEncodedCharacter!UTF8TextConverterTest removeSelector: #testPutSingle2ByteEncodedCharacter!UTF8TextConverterTest removeSelector: #testNextPutAllStartingAt!Smalltalk globals removeClassNamed: #AnObsoleteUTF8TextConverterTest!UTF16TextConverterTest removeSelector: #testNoBOMWriteInMiddleOfFile!UTF16TextConverterTest removeSelector: #testByteOrders!UTF16TextConverterTest removeSelector: #testBOMWrite!UTF16TextConverterTest removeSelector: #assertBOMIsWrittenWithOrder:andConversion:!UTF16TextConverterTest removeSelector: #assert:isTheSameAfterLittleEndianConversion:!Smalltalk globals removeClassNamed: #AnObsoleteUTF16TextConverterTest!EUCTextConverterTest removeSelector: #testEUCJP!Smalltalk globals removeClassNamed: #AnObsoleteEUCTextConverterTest!ByteTextConverterTest removeSelector: #testUnicodeToLatin2Conversion!ByteTextConverterTest removeSelector: #testLatin2ToUnicodeConversion!ByteTextConverterTest removeSelector: #testConversionToFrom!Smalltalk globals removeClassNamed: #AnObsoleteByteTextConverterTest!HTTPEncodingTest removeSelector: #testPercentEncodingHiragana!StringTest removeSelector: #testUnescapePercentsWithTextEncoding!StringTest removeSelector: #testUnescapePercents!SymbolTest removeSelector: #testAsClassIfPresent!SymbolTest removeSelector: #testAsClassIfAbsent!SymbolTest removeSelector: #testAsClass!StringTest removeSelector: #testAsClassIfPresent!StringTest removeSelector: #testAsClassIfAbsent!StringTest removeSelector: #testAsClass!HiTestNode removeSelector: #printOn:!HiTestNode removeSelector: #parents:!HiTestNode removeSelector: #parents!HiTestNode removeSelector: #origin:!HiTestNode removeSelector: #origin!HiTestNode removeSelector: #initializeWithContent:!HiTestNode removeSelector: #content!HiTestNode class removeSelector: #content:parents:!HiTestNode class removeSelector: #content:!Smalltalk globals removeClassNamed: #AnObsoleteHiTestNode!HiNodesAndLinksIteratorWithTwoLinkModelsTest removeSelector: #testBasicExpected!HiNodesAndLinksIteratorWithTwoLinkModelsTest removeSelector: #setUp!HiNodesAndLinksIteratorWithTwoLinkModelsTest removeSelector: #iteratedAsArray!HiNodesAndLinksIteratorWithTwoLinkModelsTest removeSelector: #assertIteratedAsExpected!Smalltalk globals removeClassNamed: #AnObsoleteHiNodesAndLinksIteratorWithTwoLinkModelsTest!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #testTwoUnmergedForks2!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #testTwoUnmergedForks!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #testTwoUnconnectedNodes!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #testTwoMergedFork!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #testTwoConnectedNodes!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #testOneNode!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #testEmpty!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #setUp!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #iteratedAsArray!HiNodesAndLinksIteratorWithOneLinkModelTest removeSelector: #assertIteratedAsExpected!Smalltalk globals removeClassNamed: #AnObsoleteHiNodesAndLinksIteratorWithOneLinkModelTest!KeymapBuilderTest removeSelector: #testAttachKeymapAndExecuteExecutes!KeymapBuilderTest removeSelector: #testAddKeymapCreatesShortcut!KeymapBuilderTest removeSelector: #testAddKeymapCreatesCategory!Smalltalk globals removeClassNamed: #AnObsoleteKeymapBuilderTest!KMShortcutTest removeSelector: #testTripleChainShortcutSucceds!KMShortcutTest removeSelector: #testSingleShortcutsMatch!KMShortcutTest removeSelector: #testSimpleChainMatches!KMShortcutTest removeSelector: #testShiftKeySucceds!KMShortcutTest removeSelector: #testModifiedShortcutsMatch!KMShortcutTest removeSelector: #testEventCodes!KMShortcutTest removeSelector: #testCreation!KMShortcutTest removeSelector: #testComplexChainMatches!KMShortcutTest removeSelector: #testCmdShiftSucceds!KMShortcutTest removeSelector: #testCmdKeySucceds!KMShortcutTest removeSelector: #testCmdIntegerSucceds!KMShortcutTest removeSelector: #testChainSimpleCharsSucceds!KMShortcutTest removeSelector: #testChainShortcutSucceds!KMShortcutTest removeSelector: #testChainIntegerSucceds!KMShortcutTest removeSelector: #testBadComposedCmdShortcutFails!KMShortcutTest removeSelector: #testAsString!Smalltalk globals removeClassNamed: #AnObsoleteKMShortcutTest!KMPerInstanceTests removeSelector: #testAddMoreThanOneHandler!Smalltalk globals removeClassNamed: #AnObsoleteKMPerInstanceTests!KMKeymapTest removeSelector: #testMatching!KMKeymapTest removeSelector: #testExecute!KMKeymapTest removeSelector: #keymapContainer!Smalltalk globals removeClassNamed: #AnObsoleteKMKeymapTest!KMDispatcherTestCase removeSelector: #testNoStaggeredTrigger!KMDispatcherTestCase removeSelector: #testNoMultiTrigger!KMDispatcherTestCase removeSelector: #testDetach!KMDispatcherTestCase removeSelector: #testBuffering!KMDispatcherTestCase removeSelector: #keymapContainer!Smalltalk globals removeClassNamed: #AnObsoleteKMDispatcherTestCase!KMDispatchChainTest removeSelector: #testTargetDoesNotIterateTheNil!KMDispatchChainTest removeSelector: #testPassesOnTheTarget!KMDispatchChainTest removeSelector: #testGlobalIsFirst!Smalltalk globals removeClassNamed: #AnObsoleteKMDispatchChainTest!KMCombinationTests removeSelector: #testWindowsDependentShortcut!KMCombinationTests removeSelector: #testWindowsAndUnixMetaShouldBeCtrl!KMCombinationTests removeSelector: #testUnixDependentShortcut!KMCombinationTests removeSelector: #testShortcutIsSimpleCombination!KMCombinationTests removeSelector: #testPlatformDependentShortcut!KMCombinationTests removeSelector: #testMacMetaShouldBeCmd!KMCombinationTests removeSelector: #testMacDependentShortcut!KMCombinationTests removeSelector: #testCombinationSeveralShortcuts!KMCombinationTests removeSelector: #testCombinationOfSimpleShortcuts!Smalltalk globals removeClassNamed: #AnObsoleteKMCombinationTests!KMCategoryTest removeSelector: #testCreateUnexistentCategory!KMCategoryTest removeSelector: #testCreateExistentCategoryFails!KMCategoryTest removeSelector: #testAddKeymapToCategory!KMCategoryTest removeSelector: #categoryContainer!Smalltalk globals removeClassNamed: #AnObsoleteKMCategoryTest!AbstractKeymappingTest removeSelector: #tearDown!AbstractKeymappingTest removeSelector: #setUp!AbstractKeymappingTest removeSelector: #eventKey:shift:!AbstractKeymappingTest removeSelector: #eventKey:ctrl:!AbstractKeymappingTest removeSelector: #eventKey:command:!AbstractKeymappingTest removeSelector: #eventKey:alt:ctrl:command:shift:!AbstractKeymappingTest removeSelector: #eventKey:alt:!AbstractKeymappingTest removeSelector: #eventKey:!AbstractKeymappingTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteAbstractKeymappingTest!ZipWriteStreamTests removeSelector: #testZipped!ZipWriteStreamTests removeSelector: #testEmptyStrings!Smalltalk globals removeClassNamed: #AnObsoleteZipWriteStreamTests!ZipExtensionTests removeSelector: #testZipped!Smalltalk globals removeClassNamed: #AnObsoleteZipExtensionTests!ZipCrcTests removeSelector: #testValidZipCrc!ZipCrcTests removeSelector: #testValidZLibCrc!ZipCrcTests removeSelector: #testValidGZipCrc!ZipCrcTests removeSelector: #testMissingZipCrc!ZipCrcTests removeSelector: #testMissingZLibCrc!ZipCrcTests removeSelector: #testMissingGZipCrc!ZipCrcTests removeSelector: #testInvalidZipCrc!ZipCrcTests removeSelector: #testInvalidZLibCrc!ZipCrcTests removeSelector: #testInvalidGZipCrc!Smalltalk globals removeClassNamed: #AnObsoleteZipCrcTests!ZipArchiveTest removeSelector: #testZip!ZipArchiveTest removeSelector: #testSetLastModification!ZipArchiveTest removeSelector: #testParseSqueakZipTimestamp!ZipArchiveTest removeSelector: #testFilePermissions!ZipArchiveTest removeSelector: #testDate29Feb2000!ZipArchiveTest removeSelector: #testCreateWithRelativeNames!ZipArchiveTest removeSelector: #testAddNonExistentFile!ZipArchiveTest removeSelector: #tearDown!ZipArchiveTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteZipArchiveTest!DoubleLinkedListTests removeSelector: #testThreeRemoveLink!DoubleLinkedListTests removeSelector: #testThreeRemoveLast!DoubleLinkedListTests removeSelector: #testThreeRemoveFirst!DoubleLinkedListTests removeSelector: #testThree!DoubleLinkedListTests removeSelector: #testSelect!DoubleLinkedListTests removeSelector: #testReverseLinksDo!DoubleLinkedListTests removeSelector: #testReverseDo!DoubleLinkedListTests removeSelector: #testReject!DoubleLinkedListTests removeSelector: #testOneRemoveLast!DoubleLinkedListTests removeSelector: #testOneRemoveFirst!DoubleLinkedListTests removeSelector: #testOne!DoubleLinkedListTests removeSelector: #testLinksDo!DoubleLinkedListTests removeSelector: #testIncludes!DoubleLinkedListTests removeSelector: #testFirstAndLastLink!DoubleLinkedListTests removeSelector: #testEmpty!DoubleLinkedListTests removeSelector: #testDo!DoubleLinkedListTests removeSelector: #testCollect!DoubleLinkedListTests removeSelector: #testAddLast!DoubleLinkedListTests removeSelector: #testAddFirst!DoubleLinkedListTests removeSelector: #testAddBeforeLink!DoubleLinkedListTests removeSelector: #testAddAfterLink!Smalltalk globals removeClassNamed: #AnObsoleteDoubleLinkedListTests!ShCBEmptyClassWithMethods removeSelector: #anotherMethod:!ShCBEmptyClassWithMethods removeSelector: #aMethod!Smalltalk globals removeClassNamed: #AnObsoleteShCBEmptyClassWithMethods!Smalltalk globals removeClassNamed: #AnObsoleteShCBEmptyClass!Smalltalk globals removeClassNamed: #AnObsoleteShCBClassWithInstanceVariables!Smalltalk globals removeClassNamed: #AnObsoleteShTestSharedPool!ShModifyClassTest removeSelector: #testEmptyClassWithMethods!ShModifyClassTest removeSelector: #testEmptyClass!Smalltalk globals removeClassNamed: #AnObsoleteShModifyClassTest!ShCreateClassTest removeSelector: #testWordLayout!ShCreateClassTest removeSelector: #testVariableLayout!ShCreateClassTest removeSelector: #testSharedVariables!ShCreateClassTest removeSelector: #testSharedPool!ShCreateClassTest removeSelector: #testEmptyClass!ShCreateClassTest removeSelector: #testClassWithSlots!ShCreateClassTest removeSelector: #testClassWithInheritedSlots!ShCreateClassTest removeSelector: #testClassWithClassSlots!Smalltalk globals removeClassNamed: #AnObsoleteShCreateClassTest!ShAbstractClassBuilderTest removeSelector: #validateSuperclass:!ShAbstractClassBuilderTest removeSelector: #validateSlots:!ShAbstractClassBuilderTest removeSelector: #validateSharedVariables:!ShAbstractClassBuilderTest removeSelector: #validateSharedPools:!ShAbstractClassBuilderTest removeSelector: #validateResult!ShAbstractClassBuilderTest removeSelector: #validateMethods:!ShAbstractClassBuilderTest removeSelector: #validateClassSlots:superclass:!ShAbstractClassBuilderTest removeSelector: #validateClassSideMethods:!ShAbstractClassBuilderTest removeSelector: #setUp!ShAbstractClassBuilderTest removeSelector: #doValidateMethods:on:!Smalltalk globals removeClassNamed: #AnObsoleteShAbstractClassBuilderTest!OCOpalExamples removeSelector: #writtenAfterClosedOver!OCOpalExamples removeSelector: #singleRemoteTempVarWrittenAfterClosedOver!OCOpalExamples removeSelector: #singleRemoteTempVar!OCOpalExamples removeSelector: #singleRemoteReadNestedBlocks!OCOpalExamples removeSelector: #singleRemoteMethodArgument!OCOpalExamples removeSelector: #singleRemoteDifferentBlocksSameArgumentName!OCOpalExamples removeSelector: #optimizedBlocksAndSameNameTemps!OCOpalExamples removeSelector: #optimizedBlockWrittenAfterClosedOverCase2!OCOpalExamples removeSelector: #optimizedBlockWrittenAfterClosedOverCase1!OCOpalExamples removeSelector: #optimizedBlockWriteReadInBlock!OCOpalExamples removeSelector: #optimizedBlockWriteInNestedBlockCase4!OCOpalExamples removeSelector: #optimizedBlockWriteInNestedBlockCase3!OCOpalExamples removeSelector: #optimizedBlockWriteInNestedBlockCase2!OCOpalExamples removeSelector: #optimizedBlockWriteInNestedBlock!OCOpalExamples removeSelector: #optimizedBlockWriteInBlock!OCOpalExamples removeSelector: #optimizedBlockReadInBlock!OCOpalExamples removeSelector: #noRemoteReadNestedBlocks!OCOpalExamples removeSelector: #noRemoteReadInBlock!OCOpalExamples removeSelector: #noRemoteMethodTemp!OCOpalExamples removeSelector: #noRemoteBlockTemp!OCOpalExamples removeSelector: #noRemoteBlockReturn!OCOpalExamples removeSelector: #noRemoteBlockArgument!OCOpalExamples removeSelector: #nestedBlocksRemoteInBlockCase3!OCOpalExamples removeSelector: #nestedBlocksRemoteInBlockCase2!OCOpalExamples removeSelector: #nestedBlocksRemoteInBlockCase1!OCOpalExamples removeSelector: #initialize!OCOpalExamples removeSelector: #exampleiVar!OCOpalExamples removeSelector: #exampleWithArgument:!OCOpalExamples removeSelector: #exampleWhileWithTempNotInlined!OCOpalExamples removeSelector: #exampleWhileWithTemp!OCOpalExamples removeSelector: #exampleWhileNoModification!OCOpalExamples removeSelector: #exampleWhileModificationBeforeNotInlined!OCOpalExamples removeSelector: #exampleWhileModificationBefore!OCOpalExamples removeSelector: #exampleWhileModificationAfterNotInlined!OCOpalExamples removeSelector: #exampleToDoValueLimitExpression!OCOpalExamples removeSelector: #exampleToDoValue!OCOpalExamples removeSelector: #exampleToDoOutsideTempNotInlined!OCOpalExamples removeSelector: #exampleToDoOutsideTemp!OCOpalExamples removeSelector: #exampleToDoInsideTempNotInlined!OCOpalExamples removeSelector: #exampleToDoInsideTemp!OCOpalExamples removeSelector: #exampleToDoArgumentNotInlined!OCOpalExamples removeSelector: #exampleToDoArgumentLimitIsExpression!OCOpalExamples removeSelector: #exampleToDoArgument!OCOpalExamples removeSelector: #exampleTimesRepeatValue!OCOpalExamples removeSelector: #exampleTimesRepeatEffect!OCOpalExamples removeSelector: #exampleThisContext!OCOpalExamples removeSelector: #exampleSuper!OCOpalExamples removeSelector: #exampleSimpleBlockiVar!OCOpalExamples removeSelector: #exampleSimpleBlockReturn!OCOpalExamples removeSelector: #exampleSimpleBlockNested!OCOpalExamples removeSelector: #exampleSimpleBlockLocalWhile!OCOpalExamples removeSelector: #exampleSimpleBlockLocalIfNested!OCOpalExamples removeSelector: #exampleSimpleBlockLocalIf!OCOpalExamples removeSelector: #exampleSimpleBlockLocal!OCOpalExamples removeSelector: #exampleSimpleBlockEmpty!OCOpalExamples removeSelector: #exampleSimpleBlockArgument5!OCOpalExamples removeSelector: #exampleSimpleBlockArgument4!OCOpalExamples removeSelector: #exampleSimpleBlockArgument3!OCOpalExamples removeSelector: #exampleSimpleBlockArgument2!OCOpalExamples removeSelector: #exampleSimpleBlockArgument1!OCOpalExamples removeSelector: #exampleSimpleBlock!OCOpalExamples removeSelector: #exampleSelf!OCOpalExamples removeSelector: #exampleReturn42!OCOpalExamples removeSelector: #exampleReturn1plus2!OCOpalExamples removeSelector: #exampleReturn1!OCOpalExamples removeSelector: #exampleRepeatValue!OCOpalExamples removeSelector: #exampleRepeatEffect!OCOpalExamples removeSelector: #examplePushBigArray!OCOpalExamples removeSelector: #examplePushArray!OCOpalExamples removeSelector: #examplePrimitiveModuleError!OCOpalExamples removeSelector: #examplePrimitiveErrorModule!OCOpalExamples removeSelector: #examplePrimitiveErrorCodeModule!OCOpalExamples removeSelector: #examplePrimitiveErrorCode!OCOpalExamples removeSelector: #exampleNewArray!OCOpalExamples removeSelector: #exampleNestedBlockScoping!OCOpalExamples removeSelector: #exampleMethodWithOptimizedBlocksA!OCOpalExamples removeSelector: #exampleMethodTempInNestedBlock!OCOpalExamples removeSelector: #exampleInlineBlockCollectionLR3!OCOpalExamples removeSelector: #exampleIfTrueIfFalse!OCOpalExamples removeSelector: #exampleIfTrueAssign!OCOpalExamples removeSelector: #exampleIfTrue!OCOpalExamples removeSelector: #exampleIfNotNilReturnNil!OCOpalExamples removeSelector: #exampleIfNotNilArg!OCOpalExamples removeSelector: #exampleIfFalseIfTrue!OCOpalExamples removeSelector: #exampleIfFalse!OCOpalExamples removeSelector: #exampleForInlinedBlockArgument!OCOpalExamples removeSelector: #exampleForBlockArgument!OCOpalExamples removeSelector: #exampleEmptyMethod!OCOpalExamples removeSelector: #exampleEffectValues!OCOpalExamples removeSelector: #exampleDoublePrimitive!OCOpalExamples removeSelector: #exampleBlockNested!OCOpalExamples removeSelector: #exampleBlockMethodArgument:!OCOpalExamples removeSelector: #exampleBlockInternal!OCOpalExamples removeSelector: #exampleBlockExternalNested!OCOpalExamples removeSelector: #exampleBlockExternalArg!OCOpalExamples removeSelector: #exampleBlockExternal2!OCOpalExamples removeSelector: #exampleBlockExternal!OCOpalExamples removeSelector: #exampleBlockArgument!OCOpalExamples removeSelector: #exampleAndOr6!OCOpalExamples removeSelector: #exampleAndOr5!OCOpalExamples removeSelector: #exampleAndOr4!OCOpalExamples removeSelector: #exampleAndOr3!OCOpalExamples removeSelector: #exampleAndOr2!OCOpalExamples removeSelector: #exampleAndOr!OCOpalExamples removeSelector: #doubleRemoteAnidatedBlocks!OCOpalExamples class removeSelector: #compilerClass!Smalltalk globals removeClassNamed: #AnObsoleteOCOpalExamples!Smalltalk globals removeClassNamed: #AnObsoleteOCMockCompilationClass!MyBooleanObject removeSelector: #or:!MyBooleanObject removeSelector: #not!MyBooleanObject removeSelector: #ifTrue:!MyBooleanObject removeSelector: #and:!Smalltalk globals removeClassNamed: #AnObsoleteMyBooleanObject!MockSourceEditor removeSelector: #text!MockSourceEditor removeSelector: #startIndex!MockSourceEditor removeSelector: #selectionInterval!MockSourceEditor removeSelector: #selectionAsStream!MockSourceEditor removeSelector: #selection!MockSourceEditor removeSelector: #selectFrom:to:!MockSourceEditor removeSelector: #notify:at:in:!MockSourceEditor removeSelector: #insertAndSelect:at:!MockSourceEditor removeSelector: #initialize!MockSourceEditor removeSelector: #editor!MockSourceEditor removeSelector: #cut!MockSourceEditor removeSelector: #contents:!Smalltalk globals removeClassNamed: #AnObsoleteMockSourceEditor!Smalltalk globals removeClassNamed: #AnObsoleteMockForCompilation!MethodMapExamples removeSelector: #exampleTempNamedTempVectorNestedBlock!MethodMapExamples removeSelector: #exampleTempNamedTempVectorInlinedLoop!MethodMapExamples removeSelector: #exampleTempNamedTempVectorInOptimizedBlock!MethodMapExamples removeSelector: #exampleTempNamedTempVector2!MethodMapExamples removeSelector: #exampleTempNamedTempVector!MethodMapExamples removeSelector: #exampleTempNamedTempCopyingNestedBlockPROBLEM!MethodMapExamples removeSelector: #exampleTempNamedTempCopyingNestedBlock!MethodMapExamples removeSelector: #exampleTempNamedPutTempVector2!MethodMapExamples removeSelector: #exampleTempNamedPutTempVector!MethodMapExamples removeSelector: #exampleTempNamedPutCopying2!MethodMapExamples removeSelector: #exampleTempNamedPutCopying!MethodMapExamples removeSelector: #exampleTempNamedCopying2!MethodMapExamples removeSelector: #exampleTempNamedCopying!MethodMapExamples removeSelector: #exampleSimpleTemp!MethodMapExamples removeSelector: #exampleCopiedVarFromDeadContext!MethodMapExamples removeSelector: #defineCopiedVarBecomeDeadContext!Smalltalk globals removeClassNamed: #AnObsoleteMethodMapExamples!ASTTransformExamplePluginActive removeSelector: #example42!ASTTransformExamplePluginActive class removeSelector: #compiler!Smalltalk globals removeClassNamed: #AnObsoleteASTTransformExamplePluginActive!ASTPluginMeaningOfLife removeSelector: #transform!Smalltalk globals removeClassNamed: #AnObsoleteASTPluginMeaningOfLife!OpalCompilerTests removeSelector: #testEvaluateWithBindingsWithUppercaseName!OpalCompilerTests removeSelector: #testEvaluateWithBindings!OpalCompilerTests removeSelector: #testBindingsWithUppercaseNameDoNotOverwriteGlobals!Smalltalk globals removeClassNamed: #AnObsoleteOpalCompilerTests!OCVariableSpecialisationTest removeSelector: #testVarTemp!Smalltalk globals removeClassNamed: #AnObsoleteOCVariableSpecialisationTest!OCSourceCode2BytecodeTest removeSelector: #testSuperSendWith!OCSourceCode2BytecodeTest removeSelector: #testSuperSend!OCSourceCode2BytecodeTest removeSelector: #testStoreIntoTemporaryVariableBytecode!OCSourceCode2BytecodeTest removeSelector: #testStoreIntoReceiverVariableBytecode!OCSourceCode2BytecodeTest removeSelector: #testStoreIntoLiteralVariableBytecode!OCSourceCode2BytecodeTest removeSelector: #testStoreAndPopTemporaryVariableBytecode!OCSourceCode2BytecodeTest removeSelector: #testStoreAndPopReceiverVariableBytecode!OCSourceCode2BytecodeTest removeSelector: #testStoreAndPopLiteralVariableBytecode!OCSourceCode2BytecodeTest removeSelector: #testReturnTrueBytecode!OCSourceCode2BytecodeTest removeSelector: #testReturnTopFromMethod!OCSourceCode2BytecodeTest removeSelector: #testReturnTopFromBlock!OCSourceCode2BytecodeTest removeSelector: #testReturnReceiver!OCSourceCode2BytecodeTest removeSelector: #testReturnNilBytecode!OCSourceCode2BytecodeTest removeSelector: #testReturnFalseBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushTemporaryVariableBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushReceiverVariableBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushReceiverBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushLiteralVariableBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushLiteralConstantBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushConstantZeroBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushConstantTwoBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushConstantTrueBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushConstantOneBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushConstantNilBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushConstantMinusOneBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushConstantFalseBytecode!OCSourceCode2BytecodeTest removeSelector: #testPushActiveContextBytecode!OCSourceCode2BytecodeTest removeSelector: #testPrimValueWith!OCSourceCode2BytecodeTest removeSelector: #testPrimValue!OCSourceCode2BytecodeTest removeSelector: #testPrimSubtract!OCSourceCode2BytecodeTest removeSelector: #testPrimSize!OCSourceCode2BytecodeTest removeSelector: #testPrimQuo!OCSourceCode2BytecodeTest removeSelector: #testPrimPointY!OCSourceCode2BytecodeTest removeSelector: #testPrimPointX!OCSourceCode2BytecodeTest removeSelector: #testPrimNotEqual!OCSourceCode2BytecodeTest removeSelector: #testPrimNextPut!OCSourceCode2BytecodeTest removeSelector: #testPrimNext!OCSourceCode2BytecodeTest removeSelector: #testPrimNewWith!OCSourceCode2BytecodeTest removeSelector: #testPrimNew!OCSourceCode2BytecodeTest removeSelector: #testPrimMultiply!OCSourceCode2BytecodeTest removeSelector: #testPrimMod!OCSourceCode2BytecodeTest removeSelector: #testPrimMakePoint!OCSourceCode2BytecodeTest removeSelector: #testPrimLessThan!OCSourceCode2BytecodeTest removeSelector: #testPrimLessOrEqual!OCSourceCode2BytecodeTest removeSelector: #testPrimIdentity!OCSourceCode2BytecodeTest removeSelector: #testPrimGreaterThan!OCSourceCode2BytecodeTest removeSelector: #testPrimGreaterOrEqual!OCSourceCode2BytecodeTest removeSelector: #testPrimEqual!OCSourceCode2BytecodeTest removeSelector: #testPrimDoWith!OCSourceCode2BytecodeTest removeSelector: #testPrimDivide!OCSourceCode2BytecodeTest removeSelector: #testPrimBitShift!OCSourceCode2BytecodeTest removeSelector: #testPrimBitOr!OCSourceCode2BytecodeTest removeSelector: #testPrimBitAnd!OCSourceCode2BytecodeTest removeSelector: #testPrimAtPut!OCSourceCode2BytecodeTest removeSelector: #testPrimAtEnd!OCSourceCode2BytecodeTest removeSelector: #testPrimAt!OCSourceCode2BytecodeTest removeSelector: #testPrimAdd!OCSourceCode2BytecodeTest removeSelector: #testDoPop!OCSourceCode2BytecodeTest removeSelector: #testDoDup!OCSourceCode2BytecodeTest removeSelector: #compile2method:!Smalltalk globals removeClassNamed: #AnObsoleteOCSourceCode2BytecodeTest!OCScannerTest removeSelector: #testLiteralSymbols!OCScannerTest removeSelector: #testAmbiguousSelector!Smalltalk globals removeClassNamed: #AnObsoleteOCScannerTest!OCPragmaTest removeSelector: #testSinglePragma!OCPragmaTest removeSelector: #testPrimitiveStringModule!OCPragmaTest removeSelector: #testPrimitiveString!OCPragmaTest removeSelector: #testPrimitivePragmaNumber!OCPragmaTest removeSelector: #testPrimitiveNumber!OCPragmaTest removeSelector: #testPragmaUnarayMessage!OCPragmaTest removeSelector: #testPragmaTwoParam!OCPragmaTest removeSelector: #testPragmaAfterBeforTemp!OCPragmaTest removeSelector: #testNoPragma!OCPragmaTest removeSelector: #testIsPrimitve!OCPragmaTest removeSelector: #testDoublePragma!OCPragmaTest removeSelector: #methodSinglePragma!OCPragmaTest removeSelector: #methodPrimitiveStringModule!OCPragmaTest removeSelector: #methodPrimitiveString!OCPragmaTest removeSelector: #methodPrimitivePragma!OCPragmaTest removeSelector: #methodPrimitive!OCPragmaTest removeSelector: #methodPragmaUnarayMessage!OCPragmaTest removeSelector: #methodPragmaTwoParam!OCPragmaTest removeSelector: #methodPragmaAfterBeforTemps!OCPragmaTest removeSelector: #methodNoPragma!OCPragmaTest removeSelector: #methodDoublePragma!Smalltalk globals removeClassNamed: #AnObsoleteOCPragmaTest!OCPerformTest removeSelector: #testPerformWithArgsSmallFrame!OCPerformTest removeSelector: #testPerformWithArgsLargeFrame!OCPerformTest removeSelector: #doPerformOldSmallFrame!OCPerformTest removeSelector: #doPerformOldLargeFrame!OCPerformTest removeSelector: #a1:a2:a3:a4:a5:a6:a7:a8:a9:a10:a11:a12:a13:a14:a15:!Smalltalk globals removeClassNamed: #AnObsoleteOCPerformTest!OCNewCompilerWithChangesFunctionalTests removeSelector: #testWhileWithTempNotInlined!OCNewCompilerWithChangesFunctionalTests removeSelector: #testWhileModificationBeforeNotInlined!OCNewCompilerWithChangesFunctionalTests removeSelector: #testWhileModificationAfterNotInlined!OCNewCompilerWithChangesFunctionalTests removeSelector: #testToDoOutsideTempNotInlined!OCNewCompilerWithChangesFunctionalTests removeSelector: #testToDoInsideTempNotInlined!OCNewCompilerWithChangesFunctionalTests removeSelector: #testToDoArgumentNotInlined!OCNewCompilerWithChangesFunctionalTests removeSelector: #testSteamContentsLimitedToSequenceableCollectionClass!OCNewCompilerWithChangesFunctionalTests removeSelector: #testSimpleArray!OCNewCompilerWithChangesFunctionalTests removeSelector: #testSetUp!OCNewCompilerWithChangesFunctionalTests removeSelector: #testReturnBlockInMethod!OCNewCompilerWithChangesFunctionalTests removeSelector: #testPragma!OCNewCompilerWithChangesFunctionalTests removeSelector: #testOneFloat!OCNewCompilerWithChangesFunctionalTests removeSelector: #testMultiElementArray!OCNewCompilerWithChangesFunctionalTests removeSelector: #testModulePrimitive!OCNewCompilerWithChangesFunctionalTests removeSelector: #testMethodTemp!OCNewCompilerWithChangesFunctionalTests removeSelector: #testMethodArgument!OCNewCompilerWithChangesFunctionalTests removeSelector: #testDifferentBlocksWithSameArgumentName!OCNewCompilerWithChangesFunctionalTests removeSelector: #testBlockTemp!OCNewCompilerWithChangesFunctionalTests removeSelector: #testBlockReturning!Smalltalk globals removeClassNamed: #AnObsoleteOCNewCompilerWithChangesFunctionalTests!OCIfNotNilTests removeSelector: #testIfNotNilIfNil1ArgAsVar!OCIfNotNilTests removeSelector: #testIfNotNilIfNil1Arg!OCIfNotNilTests removeSelector: #testIfNotNilIfNil0ArgAsVar!OCIfNotNilTests removeSelector: #testIfNotNilIfNil0Arg!OCIfNotNilTests removeSelector: #testIfNotNil1ArgWithStatement!OCIfNotNilTests removeSelector: #testIfNotNil1ArgAsVar!OCIfNotNilTests removeSelector: #testIfNotNil1Arg!OCIfNotNilTests removeSelector: #testIfNotNil0ArgAsVar!OCIfNotNilTests removeSelector: #testIfNotNil0Arg!OCIfNotNilTests removeSelector: #testIfNilIfNotNil1ArgAsVar!OCIfNotNilTests removeSelector: #testIfNilIfNotNil1Arg!OCIfNotNilTests removeSelector: #testIfNilIfNotNil0ArgAsVar!OCIfNotNilTests removeSelector: #testIfNilIfNotNil0Arg!Smalltalk globals removeClassNamed: #AnObsoleteOCIfNotNilTests!OCContextTempMappingTest removeSelector: #testAccessingVariablesInOptimizedBlock2!OCContextTempMappingTest removeSelector: #testAccessingVariablesInOptimizedBlock!OCContextTempMappingTest removeSelector: #testAccessingVariablesInBlock!OCContextTempMappingTest removeSelector: #testAccessingTempsVectorInBlock3!OCContextTempMappingTest removeSelector: #testAccessingTempsVectorInBlock2!OCContextTempMappingTest removeSelector: #testAccessingTempsVectorInBlock!OCContextTempMappingTest removeSelector: #testAccessingMultipleVariablesInVector!OCContextTempMappingTest removeSelector: #testAccessingMethodArgFromOptimizedBlockContext!OCContextTempMappingTest removeSelector: #testAccessingBlockArgumentOptimizedBlock!OCContextTempMappingTest removeSelector: #testAccessingBlockArgumentNoneOptimizedBlock!OCContextTempMappingTest removeSelector: #testAccessingArgOfOuterBlockFromAnotherDeepBlock!OCContextTempMappingTest removeSelector: #fetchArgFromOptimizedBlockInsideFullBlock:extraArg:!Smalltalk globals removeClassNamed: #AnObsoleteOCContextTempMappingTest!OCCompilerTest removeSelector: #traitTempShadowingWarnings!OCCompilerTest removeSelector: #text!OCCompilerTest removeSelector: #testTraitTempShadowing!OCCompilerTest removeSelector: #testSiblingBlocksTempShadowing!OCCompilerTest removeSelector: #testSiblingBlocksInstanceVariableShadowing!OCCompilerTest removeSelector: #testScaledDecimalLiterals!OCCompilerTest removeSelector: #testReservedNameAsMethodArgumentShadowing!OCCompilerTest removeSelector: #testReservedNameAsBlockArgumentShadowing!OCCompilerTest removeSelector: #testNotInteractiveSiblingBlocksTempShadowing!OCCompilerTest removeSelector: #testNotInteractiveSiblingBlocksInstanceVariableShadowing!OCCompilerTest removeSelector: #testNotInteractiveShadowingOfTemp!OCCompilerTest removeSelector: #testNotInteractiveNoShadowing!OCCompilerTest removeSelector: #testNotInteractiveInBlockTempShadowing!OCCompilerTest removeSelector: #testNotInteractiveInBlockTempInstanceVariableShadowing!OCCompilerTest removeSelector: #testNotInteractiveInBlockTempArgumentShadowing!OCCompilerTest removeSelector: #testNotInteractiveInBlockArgumentInstanceVariableShadowing!OCCompilerTest removeSelector: #testNoShadowing!OCCompilerTest removeSelector: #testNegativeZero!OCCompilerTest removeSelector: #testInstanceVariableShadowing!OCCompilerTest removeSelector: #testInBlockTempShadowing!OCCompilerTest removeSelector: #testInBlockTempInstanceVariableShadowing!OCCompilerTest removeSelector: #testInBlockTempArgumentShadowing!OCCompilerTest removeSelector: #testInBlockArgumentInstanceVariableShadowing!OCCompilerTest removeSelector: #testEmptyCharacterFail!OCCompilerTest removeSelector: #testAssignmentOfGlobalVarBinding!OCCompilerTest removeSelector: #testAssignmentOfClassNameBinding!OCCompilerTest removeSelector: #tempTraitShadowingString!OCCompilerTest removeSelector: #tearDown!OCCompilerTest removeSelector: #setUp!OCCompilerTest removeSelector: #runCase!OCCompilerTest removeSelector: #notify:at:in:!OCCompilerTest removeSelector: #interactive!OCCompilerTest removeSelector: #initializeErrorMessage!OCCompilerTest removeSelector: #compileWithFailBlock:!OCCompilerTest removeSelector: #compile!Smalltalk globals removeClassNamed: #AnObsoleteOCCompilerTest!OCCompilerSyntaxErrorNotifyingTest removeSelector: #evaluateSelection!OCCompilerSyntaxErrorNotifyingTest removeSelector: #enumerateAllSelections!OCCompilerSyntaxErrorNotifyingTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteOCCompilerSyntaxErrorNotifyingTest!OCCompilerNotifyingTest removeSelector: #testUnmatchedStringQuote!OCCompilerNotifyingTest removeSelector: #testUnmatchedLocalTempDeclarationInABlock!OCCompilerNotifyingTest removeSelector: #testUnmatchedLocalTempDeclaration!OCCompilerNotifyingTest removeSelector: #testUnmatchedLiteralParenthesis!OCCompilerNotifyingTest removeSelector: #testUnmatchedExpressionParenthesis!OCCompilerNotifyingTest removeSelector: #testUnmatchedCommentQuote!OCCompilerNotifyingTest removeSelector: #testUnmatchedByteArrayBracket!OCCompilerNotifyingTest removeSelector: #testUnmatchedBraceArray!OCCompilerNotifyingTest removeSelector: #testUnmatchedBlockBracket!OCCompilerNotifyingTest removeSelector: #testTooManyTemporaries!OCCompilerNotifyingTest removeSelector: #testTooManyLiterals!OCCompilerNotifyingTest removeSelector: #testTooManyArguments!OCCompilerNotifyingTest removeSelector: #testTooLargeAnIntegerInALiteralByteArray!OCCompilerNotifyingTest removeSelector: #testMissingSeparatorBetweenBlockArgumentAndStatements!OCCompilerNotifyingTest removeSelector: #testMissingPeriodSeparatorBetweenStatements!OCCompilerNotifyingTest removeSelector: #testMissingMessageAfterACascade!OCCompilerNotifyingTest removeSelector: #testMissingExpressionAfterAReturn!OCCompilerNotifyingTest removeSelector: #testMissingExpression!OCCompilerNotifyingTest removeSelector: #testMissingBlockArgumentName!OCCompilerNotifyingTest removeSelector: #testMissingArgumentAfterAMessageKey!OCCompilerNotifyingTest removeSelector: #testMissingArgumentAfterABinaryMessage!OCCompilerNotifyingTest removeSelector: #testInvalidRadix!OCCompilerNotifyingTest removeSelector: #testInvalidPrimitive!OCCompilerNotifyingTest removeSelector: #testInvalidPragma!OCCompilerNotifyingTest removeSelector: #testInvalidPattern!OCCompilerNotifyingTest removeSelector: #testInvalidLiteralCharacter!OCCompilerNotifyingTest removeSelector: #testInvalidExternalFunctionDeclaration!OCCompilerNotifyingTest removeSelector: #testExtraneousStatementAfterAReturnInABlock!OCCompilerNotifyingTest removeSelector: #testExpectedExpressionInBraceArray!OCCompilerNotifyingTest removeSelector: #testEmptyCaseStatement!OCCompilerNotifyingTest removeSelector: #testDigitTooLargeForARadix!OCCompilerNotifyingTest removeSelector: #testAssignmentOfSelf!OCCompilerNotifyingTest removeSelector: #setUpForErrorsIn:!OCCompilerNotifyingTest removeSelector: #setUp!OCCompilerNotifyingTest removeSelector: #numberOfSelections!OCCompilerNotifyingTest removeSelector: #initializeTextWithoutError!OCCompilerNotifyingTest removeSelector: #evaluateSelectionNumber:!OCCompilerNotifyingTest removeSelector: #evaluateSelection!OCCompilerNotifyingTest removeSelector: #enumerateAllSelections!Smalltalk globals removeClassNamed: #AnObsoleteOCCompilerNotifyingTest!OCCompilerExceptionsTest removeSelector: #text!OCCompilerExceptionsTest removeSelector: #testUndeclaredVariable!OCCompilerExceptionsTest removeSelector: #tearDown!OCCompilerExceptionsTest removeSelector: #setUp!OCCompilerExceptionsTest removeSelector: #selectionInterval!OCCompilerExceptionsTest removeSelector: #selectFrom:to:!OCCompilerExceptionsTest removeSelector: #select!OCCompilerExceptionsTest removeSelector: #removeGeneratedMethods!OCCompilerExceptionsTest removeSelector: #interactive!OCCompilerExceptionsTest removeSelector: #compiling:shouldRaise:!OCCompilerExceptionsTest removeSelector: #compile:!Smalltalk globals removeClassNamed: #AnObsoleteOCCompilerExceptionsTest!OCCompiledMethodIntegrityTests removeSelector: #testUndeclaredVariable!OCCompiledMethodIntegrityTests removeSelector: #testRemoteTempInVector!OCCompiledMethodIntegrityTests removeSelector: #testPrimitive!OCCompiledMethodIntegrityTests removeSelector: #testPragmas!OCCompiledMethodIntegrityTests removeSelector: #testNotUsedArgument!OCCompiledMethodIntegrityTests removeSelector: #testBlockTemps!Smalltalk globals removeClassNamed: #AnObsoleteOCCompiledMethodIntegrityTests!OCCompileWithFailureTest removeSelector: #testEvalSimpleMethodWithError!Smalltalk globals removeClassNamed: #AnObsoleteOCCompileWithFailureTest!OCClosureTests removeSelector: #testWhileWithTempNotInlined!OCClosureTests removeSelector: #testWhileWithTempIsNil!OCClosureTests removeSelector: #testWhileWithTemp!OCClosureTests removeSelector: #testWhileModificationBeforeNotInlined!OCClosureTests removeSelector: #testWhileModificationBefore!OCClosureTests removeSelector: #testWhileModificationAfterNotInlined!OCClosureTests removeSelector: #testWhileModificationAfter!OCClosureTests removeSelector: #testToDoOutsideTempNotInlined!OCClosureTests removeSelector: #testToDoOutsideTemp!OCClosureTests removeSelector: #testToDoInsideTempNotInlined!OCClosureTests removeSelector: #testToDoInsideTemp!OCClosureTests removeSelector: #testToDoArgumentNotInlined!OCClosureTests removeSelector: #testToDoArgument!OCClosureTests removeSelector: #testMethodTemp!OCClosureTests removeSelector: #testMethodArgument!OCClosureTests removeSelector: #testIsClean!OCClosureTests removeSelector: #testEmptyBlockZeroArguments!OCClosureTests removeSelector: #testEmptyBlockTwoArguments!OCClosureTests removeSelector: #testEmptyBlockOneArgument!OCClosureTests removeSelector: #testBlockTemps!OCClosureTests removeSelector: #testBlockTemp!OCClosureTests removeSelector: #testBlockArgument!OCClosureTests removeSelector: #setUp!OCClosureTests removeSelector: #methodArgument:!OCClosureTests removeSelector: #assertValues:!Smalltalk globals removeClassNamed: #AnObsoleteOCClosureTests!OCClosureCompilerTest removeSelector: #testOptimizedBlockLocalNilling2!OCClosureCompilerTest removeSelector: #testOptimizedBlockLocalNilling1!OCClosureCompilerTest removeSelector: #testInlineBlockCollectionSD1!OCClosureCompilerTest removeSelector: #testInlineBlockCollectionLR3!OCClosureCompilerTest removeSelector: #testInlineBlockCollectionLR2!OCClosureCompilerTest removeSelector: #testInlineBlockCollectionLR1!OCClosureCompilerTest removeSelector: #testInlineBlockCollectionEM1!OCClosureCompilerTest removeSelector: #testDebuggerTempAccess!OCClosureCompilerTest removeSelector: #tearDown!OCClosureCompilerTest removeSelector: #setUp!OCClosureCompilerTest removeSelector: #evaluate:in:to:!OCClosureCompilerTest removeSelector: #doTestDebuggerTempAccessWith:with:!OCClosureCompilerTest removeSelector: #closureCases!OCClosureCompilerTest class removeSelector: #methodWithVariousTemps!OCClosureCompilerTest class removeSelector: #methodWithOptimizedBlocksA!OCClosureCompilerTest class removeSelector: #methodWithOptimizedBlocks!OCClosureCompilerTest class removeSelector: #methodWithCopiedTemps!OCClosureCompilerTest class removeSelector: #methodWithCopiedAndPostClosedOverAssignedTemps!OCClosureCompilerTest class removeSelector: #methodWithCopiedAndAssignedTemps!OCClosureCompilerTest class removeSelector: #compilerClass!Smalltalk globals removeClassNamed: #AnObsoleteOCClosureCompilerTest!OCCleanBockTest removeSelector: #testBlockIsNotClean!OCCleanBockTest removeSelector: #testBlockIsClean!Smalltalk globals removeClassNamed: #AnObsoleteOCCleanBockTest!OCCaseOfTest removeSelector: #testCompilationError!OCCaseOfTest removeSelector: #testCaseOfValue!OCCaseOfTest removeSelector: #testCaseOfOtherwiseValue!OCCaseOfTest removeSelector: #testCaseOfOtherwiseEffect!OCCaseOfTest removeSelector: #testCaseOfEffect!OCCaseOfTest removeSelector: #compile:!Smalltalk globals removeClassNamed: #AnObsoleteOCCaseOfTest!OCBytecodeGeneratorTest removeSelector: #testStoreTemp!OCBytecodeGeneratorTest removeSelector: #testStoreRemoteTempOutOfRangeInVectorAt!OCBytecodeGeneratorTest removeSelector: #testStoreRemoteTempInVectorAtOutOfRange!OCBytecodeGeneratorTest removeSelector: #testStoreRemoteTempInVectorAt!OCBytecodeGeneratorTest removeSelector: #testStorePopTemp!OCBytecodeGeneratorTest removeSelector: #testStorePopRemoteTempInVectorAt!OCBytecodeGeneratorTest removeSelector: #testStorePopIntoLiteralVariable!OCBytecodeGeneratorTest removeSelector: #testStorePopInstVar!OCBytecodeGeneratorTest removeSelector: #testStoreLiteralVariable!OCBytecodeGeneratorTest removeSelector: #testStoreIntoLiteralVariable!OCBytecodeGeneratorTest removeSelector: #testStoreInstVar!OCBytecodeGeneratorTest removeSelector: #testSendToSuperOf!OCBytecodeGeneratorTest removeSelector: #testSend!OCBytecodeGeneratorTest removeSelector: #testReturnTop!OCBytecodeGeneratorTest removeSelector: #testReturnReceiver!OCBytecodeGeneratorTest removeSelector: #testReturnInstVar!OCBytecodeGeneratorTest removeSelector: #testReturnConstant!OCBytecodeGeneratorTest removeSelector: #testPushThisContext!OCBytecodeGeneratorTest removeSelector: #testPushTemp!OCBytecodeGeneratorTest removeSelector: #testPushRemoteTempOutOfRangeInVectorAt!OCBytecodeGeneratorTest removeSelector: #testPushRemoteTempInVectorAtOutOfRange!OCBytecodeGeneratorTest removeSelector: #testPushRemoteTempInVectorAt!OCBytecodeGeneratorTest removeSelector: #testPushReceiver!OCBytecodeGeneratorTest removeSelector: #testPushNewArray!OCBytecodeGeneratorTest removeSelector: #testPushLiteralVariable!OCBytecodeGeneratorTest removeSelector: #testPushLiteral!OCBytecodeGeneratorTest removeSelector: #testPushInstVar!OCBytecodeGeneratorTest removeSelector: #testPushDup!OCBytecodeGeneratorTest removeSelector: #testPushConsArray!OCBytecodeGeneratorTest removeSelector: #testPushClosureCopyNumCopiedValuesNumArgsTo!OCBytecodeGeneratorTest removeSelector: #testPopTop!OCBytecodeGeneratorTest removeSelector: #testMethod:against:!OCBytecodeGeneratorTest removeSelector: #testLabel!OCBytecodeGeneratorTest removeSelector: #testIfGoToOtherWise!OCBytecodeGeneratorTest removeSelector: #testIfGoTo!OCBytecodeGeneratorTest removeSelector: #testGoToIf!OCBytecodeGeneratorTest removeSelector: #testGoTo!OCBytecodeGeneratorTest removeSelector: #testExample2!OCBytecodeGeneratorTest removeSelector: #testExample!OCBytecodeGeneratorTest removeSelector: #testClosureExample!OCBytecodeGeneratorTest removeSelector: #testBlockReturnTop!OCBytecodeGeneratorTest removeSelector: #newBytecodeGen!OCBytecodeGeneratorTest class removeSelector: #packageNamesUnderTest!Smalltalk globals removeClassNamed: #AnObsoleteOCBytecodeGeneratorTest!OCBytecodeDecompilerTest removeSelector: #testWhileTrue!OCBytecodeDecompilerTest removeSelector: #testStoreTemp!OCBytecodeDecompilerTest removeSelector: #testStoreIntoVariable!OCBytecodeDecompilerTest removeSelector: #testSendSuper!OCBytecodeDecompilerTest removeSelector: #testReturnTop!OCBytecodeDecompilerTest removeSelector: #testRemoteTempNested!OCBytecodeDecompilerTest removeSelector: #testRemoteTemp!OCBytecodeDecompilerTest removeSelector: #testPushThisContext!OCBytecodeDecompilerTest removeSelector: #testPushTempTemp!OCBytecodeDecompilerTest removeSelector: #testPushTempArgument!OCBytecodeDecompilerTest removeSelector: #testPushSelf!OCBytecodeDecompilerTest removeSelector: #testPushConsArray2!OCBytecodeDecompilerTest removeSelector: #testPushConsArray!OCBytecodeDecompilerTest removeSelector: #testPushClosureCopyOneCopiedTemp!OCBytecodeDecompilerTest removeSelector: #testPushClosureCopyOneCopiedArg!OCBytecodeDecompilerTest removeSelector: #testPushClosureCopyNoCopiedArg!OCBytecodeDecompilerTest removeSelector: #testPushClosureCopyNoCopied!OCBytecodeDecompilerTest removeSelector: #testPopTop!OCBytecodeDecompilerTest removeSelector: #testLiteralVariableGlobale!OCBytecodeDecompilerTest removeSelector: #testLiteralVariableClassVariable!OCBytecodeDecompilerTest removeSelector: #testLiteralVariableClass!OCBytecodeDecompilerTest removeSelector: #testLiteralSymbol!OCBytecodeDecompilerTest removeSelector: #testLiteralString!OCBytecodeDecompilerTest removeSelector: #testLiteralNil!OCBytecodeDecompilerTest removeSelector: #testLiteralInteger!OCBytecodeDecompilerTest removeSelector: #testLiteralFloat!OCBytecodeDecompilerTest removeSelector: #testLiteralCharacter!OCBytecodeDecompilerTest removeSelector: #testLiteralBoolean!OCBytecodeDecompilerTest removeSelector: #testLiteralArray!OCBytecodeDecompilerTest removeSelector: #testJumpBackTo!OCBytecodeDecompilerTest removeSelector: #testJumpAheadToIf!OCBytecodeDecompilerTest removeSelector: #testJumpAheadTo!OCBytecodeDecompilerTest removeSelector: #testInstVar!OCBytecodeDecompilerTest removeSelector: #testDup!OCBytecodeDecompilerTest removeSelector: #testDecompilerOrderedCollectionDo!OCBytecodeDecompilerTest removeSelector: #testDecompileIRBuilderTestClass!OCBytecodeDecompilerTest removeSelector: #testDecompileBytecodeGeneratorTest!OCBytecodeDecompilerTest removeSelector: #testDecompileBytecodeDecompilerTestClass!OCBytecodeDecompilerTest removeSelector: #testBugOffset!OCBytecodeDecompilerTest removeSelector: #testBlockWithTemp!OCBytecodeDecompilerTest removeSelector: #tearDown!OCBytecodeDecompilerTest removeSelector: #setUp!OCBytecodeDecompilerTest removeSelector: #remoteTempNested!OCBytecodeDecompilerTest removeSelector: #remoteTemp!OCBytecodeDecompilerTest removeSelector: #pushClosureCopyOneCopiedTemp!OCBytecodeDecompilerTest removeSelector: #pushClosureCopyOneCopiedArg!OCBytecodeDecompilerTest removeSelector: #pushClosureCopyNoCopiedArg!OCBytecodeDecompilerTest removeSelector: #pushClosureCopyNoCopied!Smalltalk globals removeClassNamed: #AnObsoleteOCBytecodeDecompilerTest!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleiVar!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleWhileWithTempNotInlined!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleWhileWithTemp!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleWhileModificationBeforeNotInlined!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleWhileModificationBefore!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleWhileModificationAfterNotInlined!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleToDoValue!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleToDoOutsideTempNotInlined!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleToDoOutsideTemp!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleToDoInsideTempNotInlined!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleToDoInsideTemp!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleToDoArgumentNotInlined!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleToDoArgument!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleThisContext!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSuper!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockiVar!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockReturn!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockNested!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockLocalWhile!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockLocalNested!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockLocalIf!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockLocal!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockEmpty!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockArgument5!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockArgument4!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockArgument3!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockArgument2!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlockArgument1!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSimpleBlock!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleSelf!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleReturn1plus2!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleReturn1!OCBytecodeDecompilerExamplesTest removeSelector: #testExamplePushArray!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleNewArray!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleNestedBlockScoping!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleMethodWithOptimizedBlocksA!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleMethodTempInNestedBlock!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleIfTrueIfFalse!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleIfTrue!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleIfNotNilArg!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleIfIfNotNilReturnNil!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleIfFalseIfTrue!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleIfFalse!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleEmptyMethod!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleBlockNested!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleBlockInternal!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleBlockExternalNested!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleBlockExternalArg!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleBlockExternal2!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleBlockExternal!OCBytecodeDecompilerExamplesTest removeSelector: #testExampleBlockArgument!Smalltalk globals removeClassNamed: #AnObsoleteOCBytecodeDecompilerExamplesTest!OCArrayLiteralTest removeSelector: #testSymbols!OCArrayLiteralTest removeSelector: #testReservedIdentifiers!OCArrayLiteralTest removeSelector: #testByteArrayWithinArray!OCArrayLiteralTest removeSelector: #testByteArrayRange!OCArrayLiteralTest removeSelector: #testByteArrayLong!OCArrayLiteralTest removeSelector: #testByteArrayLiteral!OCArrayLiteralTest removeSelector: #testByteArrayEmpty!OCArrayLiteralTest removeSelector: #testByteArrayBase!OCArrayLiteralTest removeSelector: #tearDown!OCArrayLiteralTest removeSelector: #runCase!Smalltalk globals removeClassNamed: #AnObsoleteOCArrayLiteralTest!OCASTTranslatorTest removeSelector: #testiVar!OCASTTranslatorTest removeSelector: #testTodoValueLimitExpression!OCASTTranslatorTest removeSelector: #testTodoValue!OCASTTranslatorTest removeSelector: #testReturn1!OCASTTranslatorTest removeSelector: #testPushBigArray!OCASTTranslatorTest removeSelector: #testPushArray!OCASTTranslatorTest removeSelector: #testOnePlusTwo!OCASTTranslatorTest removeSelector: #testNewArray!OCASTTranslatorTest removeSelector: #testExampleWhileWithTempNotInlined!OCASTTranslatorTest removeSelector: #testExampleWhileWithTemp!OCASTTranslatorTest removeSelector: #testExampleWhileModificationBeforeNotInlined!OCASTTranslatorTest removeSelector: #testExampleWhileModificationBefore!OCASTTranslatorTest removeSelector: #testExampleWhileModificationAfterNotInlined!OCASTTranslatorTest removeSelector: #testExampleToDoOutsideTempNotInlined!OCASTTranslatorTest removeSelector: #testExampleToDoOutsideTemp!OCASTTranslatorTest removeSelector: #testExampleToDoInsideTempNotInlined!OCASTTranslatorTest removeSelector: #testExampleToDoInsideTemp!OCASTTranslatorTest removeSelector: #testExampleToDoArgumentNotInlined!OCASTTranslatorTest removeSelector: #testExampleToDoArgumentLimitIsExpression!OCASTTranslatorTest removeSelector: #testExampleToDoArgument!OCASTTranslatorTest removeSelector: #testExampleTimesRepeatValue!OCASTTranslatorTest removeSelector: #testExampleTimesRepeatEffect!OCASTTranslatorTest removeSelector: #testExampleThisContext!OCASTTranslatorTest removeSelector: #testExampleSuper!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockiVar!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockReturn!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockNested!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockLocalWhile!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockLocalIfNested!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockLocalIf!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockLocal!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockEmpty!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockArgument5!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockArgument4!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockArgument3!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockArgument2!OCASTTranslatorTest removeSelector: #testExampleSimpleBlockArgument1!OCASTTranslatorTest removeSelector: #testExampleSimpleBlock!OCASTTranslatorTest removeSelector: #testExampleSelf!OCASTTranslatorTest removeSelector: #testExamplePrimitiveModuleError!OCASTTranslatorTest removeSelector: #testExamplePrimitiveErrorModule!OCASTTranslatorTest removeSelector: #testExamplePrimitiveErrorCodeModule!OCASTTranslatorTest removeSelector: #testExamplePrimitiveErrorCode!OCASTTranslatorTest removeSelector: #testExampleOptimizedBlockWrittenAfterClosedOverCase1!OCASTTranslatorTest removeSelector: #testExampleNestedBlockScoping!OCASTTranslatorTest removeSelector: #testExampleMethodWithOptimizedBlocksA!OCASTTranslatorTest removeSelector: #testExampleMethodTempInNestedBlock!OCASTTranslatorTest removeSelector: #testExampleInlineBlockCollectionLR3!OCASTTranslatorTest removeSelector: #testExampleIfTrueIfFalse!OCASTTranslatorTest removeSelector: #testExampleIfTrueAssign!OCASTTranslatorTest removeSelector: #testExampleIfTrue!OCASTTranslatorTest removeSelector: #testExampleIfNotNilReturnNil!OCASTTranslatorTest removeSelector: #testExampleIfNotNilArg!OCASTTranslatorTest removeSelector: #testExampleIfFalseIfTrue!OCASTTranslatorTest removeSelector: #testExampleIfFalse!OCASTTranslatorTest removeSelector: #testExampleEffectValues!OCASTTranslatorTest removeSelector: #testExampleBlockNested!OCASTTranslatorTest removeSelector: #testExampleBlockMethodArgument!OCASTTranslatorTest removeSelector: #testExampleBlockInternal!OCASTTranslatorTest removeSelector: #testExampleBlockExternalNested!OCASTTranslatorTest removeSelector: #testExampleBlockExternalArg!OCASTTranslatorTest removeSelector: #testExampleBlockExternal2!OCASTTranslatorTest removeSelector: #testExampleBlockExternal!OCASTTranslatorTest removeSelector: #testExampleBlockArgument!OCASTTranslatorTest removeSelector: #testExampleAndOr6!OCASTTranslatorTest removeSelector: #testExampleAndOr5!OCASTTranslatorTest removeSelector: #testExampleAndOr4!OCASTTranslatorTest removeSelector: #testExampleAndOr3!OCASTTranslatorTest removeSelector: #testExampleAndOr2!OCASTTranslatorTest removeSelector: #testExampleAndOr!OCASTTranslatorTest removeSelector: #testEmptyMethod!Smalltalk globals removeClassNamed: #AnObsoleteOCASTTranslatorTest!OCASTClosureAnalyzerTest removeSelector: #testsingleRemoteTempVarWrittenAfterClosedOver!OCASTClosureAnalyzerTest removeSelector: #testsingleRemoteTempVarWhileWithTempNotInlined!OCASTClosureAnalyzerTest removeSelector: #testWrittenAfterClosedOver!OCASTClosureAnalyzerTest removeSelector: #testSingleRemoteTempVar!OCASTClosureAnalyzerTest removeSelector: #testSingleRemoteReadNestedBlocks!OCASTClosureAnalyzerTest removeSelector: #testSingleRemoteMethodArgument!OCASTClosureAnalyzerTest removeSelector: #testSingleRemoteDifferentBlocksSameArgumentName!OCASTClosureAnalyzerTest removeSelector: #testOptimizedBlockWrittenAfterClosedOverCase2!OCASTClosureAnalyzerTest removeSelector: #testOptimizedBlockWrittenAfterClosedOverCase1!OCASTClosureAnalyzerTest removeSelector: #testOptimizedBlockWriteInNestedBlockCase4!OCASTClosureAnalyzerTest removeSelector: #testOptimizedBlockWriteInNestedBlockCase3!OCASTClosureAnalyzerTest removeSelector: #testOptimizedBlockWriteInNestedBlockCase2!OCASTClosureAnalyzerTest removeSelector: #testOptimizedBlockWriteInNestedBlock!OCASTClosureAnalyzerTest removeSelector: #testOptimizedBlockWriteInBlock!OCASTClosureAnalyzerTest removeSelector: #testOptimizedBlockReadInBlock!OCASTClosureAnalyzerTest removeSelector: #testNoRemoteReadNestedBlocks!OCASTClosureAnalyzerTest removeSelector: #testNoRemoteReadInBlock!OCASTClosureAnalyzerTest removeSelector: #testNoRemoteBlockArgument!OCASTClosureAnalyzerTest removeSelector: #testNestedBlocksRemoteInBlockCase3!OCASTClosureAnalyzerTest removeSelector: #testNestedBlocksRemoteInBlockCase2!OCASTClosureAnalyzerTest removeSelector: #testNestedBlocksRemoteInBlockCase1!OCASTClosureAnalyzerTest removeSelector: #testMethodArgumentIsArgumentVariable!OCASTClosureAnalyzerTest removeSelector: #testInlinedBlockArgumentIsArgumentVariable!OCASTClosureAnalyzerTest removeSelector: #testExampleWhileNoModification!OCASTClosureAnalyzerTest removeSelector: #testExampleWhileModificationBefore!OCASTClosureAnalyzerTest removeSelector: #testExampleSimpleBlockNested!OCASTClosureAnalyzerTest removeSelector: #testExampleSimpleBlockLocalWhile!OCASTClosureAnalyzerTest removeSelector: #testExampleSimpleBlockLocalIf!OCASTClosureAnalyzerTest removeSelector: #testExampleBlockArgument!OCASTClosureAnalyzerTest removeSelector: #testDoubleRemoteAnidatedBlocks!OCASTClosureAnalyzerTest removeSelector: #testBlockArgumentIsArgumentVariable!Smalltalk globals removeClassNamed: #AnObsoleteOCASTClosureAnalyzerTest!OCASTCheckerTest removeSelector: #testsingleRemoteTempVarWrittenAfterClosedOver!OCASTCheckerTest removeSelector: #testsingleRemoteTempVarWhileWithTempNotInlined!OCASTCheckerTest removeSelector: #testSingleRemoteTempVar!OCASTCheckerTest removeSelector: #testSingleRemoteMethodArgument!OCASTCheckerTest removeSelector: #testSingleRemoteDifferentBlocksSameArgumentName!OCASTCheckerTest removeSelector: #testSemanticAnalysisOnNonMethodNode!OCASTCheckerTest removeSelector: #testReturn1!OCASTCheckerTest removeSelector: #testOptimizedBlocksAndSameNameTemps!OCASTCheckerTest removeSelector: #testOptimizedBlockWrittenAfterClosedOverCase2!OCASTCheckerTest removeSelector: #testOptimizedBlockWrittenAfterClosedOverCase1!OCASTCheckerTest removeSelector: #testNoRemoteMethodTemp!OCASTCheckerTest removeSelector: #testNoRemoteBlockTemp!OCASTCheckerTest removeSelector: #testNoRemoteBlockReturn!OCASTCheckerTest removeSelector: #testNoRemoteBlockArgument!OCASTCheckerTest removeSelector: #testInstanceVar!OCASTCheckerTest removeSelector: #testExampleToDoArgument!OCASTCheckerTest removeSelector: #testExampleThisContext!OCASTCheckerTest removeSelector: #testExampleSuper!OCASTCheckerTest removeSelector: #testExampleSelf!OCASTCheckerTest removeSelector: #testExamplePrimitiveErrorCode!OCASTCheckerTest removeSelector: #testExampleInlineBlockCollectionLR3!OCASTCheckerTest removeSelector: #testExampleIfNotNilReturnNil!OCASTCheckerTest removeSelector: #testDoubleRemoteAnidatedBlocks!OCASTCheckerTest removeSelector: #nameAnalysisNoClosureIn:for:!Smalltalk globals removeClassNamed: #AnObsoleteOCASTCheckerTest!MustBeBooleanTests removeSelector: #testWhile!MustBeBooleanTests removeSelector: #testOr!MustBeBooleanTests removeSelector: #testIfTrueWithClosureAfterJump!MustBeBooleanTests removeSelector: #testIfTrueValue!MustBeBooleanTests removeSelector: #testIfTrueEffect!MustBeBooleanTests removeSelector: #testDNU!MustBeBooleanTests removeSelector: #testAnd!Smalltalk globals removeClassNamed: #AnObsoleteMustBeBooleanTests!MethodPragmaTest removeSelector: #testWithArgumentsDo!MethodPragmaTest removeSelector: #testSendTo!MethodPragmaTest removeSelector: #testPrimitiveNamedErrorCode2!MethodPragmaTest removeSelector: #testPrimitiveNamed2!MethodPragmaTest removeSelector: #testPrimitiveNamed1!MethodPragmaTest removeSelector: #testPrimitiveIndexed2!MethodPragmaTest removeSelector: #testPrimitiveIndexed1!MethodPragmaTest removeSelector: #testNumArgs!MethodPragmaTest removeSelector: #testNoPragma!MethodPragmaTest removeSelector: #testMethodSelector!MethodPragmaTest removeSelector: #testMethodClass!MethodPragmaTest removeSelector: #testMethod!MethodPragmaTest removeSelector: #testMessage!MethodPragmaTest removeSelector: #testKeyword!MethodPragmaTest removeSelector: #testCompileValue!MethodPragmaTest removeSelector: #testCompileTemps!MethodPragmaTest removeSelector: #testCompileSymbol!MethodPragmaTest removeSelector: #testCompileString!MethodPragmaTest removeSelector: #testCompileNumber!MethodPragmaTest removeSelector: #testCompileInvalid!MethodPragmaTest removeSelector: #testCompileFull!MethodPragmaTest removeSelector: #testCompileEmpty!MethodPragmaTest removeSelector: #testCompileCharacter!MethodPragmaTest removeSelector: #testCompileBinary!MethodPragmaTest removeSelector: #testCompileArray!MethodPragmaTest removeSelector: #testArguments!MethodPragmaTest removeSelector: #testArgumentAt!MethodPragmaTest removeSelector: #testAllNamedInSortedUsing!MethodPragmaTest removeSelector: #testAllNamedInSortedByArgument!MethodPragmaTest removeSelector: #testAllNamedIn!MethodPragmaTest removeSelector: #testAllNamedFromToSortedUsing!MethodPragmaTest removeSelector: #testAllNamedFromToSortedByArgument!MethodPragmaTest removeSelector: #testAllNamedFromTo!MethodPragmaTest removeSelector: #tearDown!MethodPragmaTest removeSelector: #pragma:selector:times:!MethodPragmaTest removeSelector: #pragma:selector:!MethodPragmaTest removeSelector: #methodCategory!MethodPragmaTest removeSelector: #compile:selector:!MethodPragmaTest removeSelector: #assertPragma:givesKeyword:arguments:!Smalltalk globals removeClassNamed: #AnObsoleteMethodPragmaTest!MethodMapTests removeSelector: #testThisContextSourceNodeInInlinedMessage!MethodMapTests removeSelector: #testThisContextSourceNode!MethodMapTests removeSelector: #testTempNamedTempCopyingNestedBlockPROBLEM!MethodMapTests removeSelector: #testTempNamedTempCopyingNestedBlock!MethodMapTests removeSelector: #testSourceMappingBlock!MethodMapTests removeSelector: #testSimpleSourceMapping!MethodMapTests removeSelector: #testPrimitiveMethodSourceNodeAtInitialPC!MethodMapTests removeSelector: #testMethodSourceNodeAtPC!MethodMapTests removeSelector: #testMethodSourceNodeAtInitialPC!MethodMapTests removeSelector: #testExampleTempNamedTempVectorNestedBlock!MethodMapTests removeSelector: #testExampleTempNamedTempVectorInlinedLoop!MethodMapTests removeSelector: #testExampleTempNamedTempVectorInOptimizedBlock!MethodMapTests removeSelector: #testExampleTempNamedTempVector2!MethodMapTests removeSelector: #testExampleTempNamedTempVector!MethodMapTests removeSelector: #testExampleTempNamedPutTempVector2!MethodMapTests removeSelector: #testExampleTempNamedPutTempVector!MethodMapTests removeSelector: #testExampleTempNamedPutCopying2!MethodMapTests removeSelector: #testExampleTempNamedPutCopying!MethodMapTests removeSelector: #testExampleTempNamedCopying2!MethodMapTests removeSelector: #testExampleTempNamedCopying!MethodMapTests removeSelector: #testExampleSimpleTemp!MethodMapTests removeSelector: #testDeadContextSourceNode!MethodMapTests removeSelector: #testCopiedVarFromDeadContext!MethodMapTests removeSelector: #testBlockWithTempsSourceNode!MethodMapTests removeSelector: #testBlockWithEnclosedBlockSourceNode!MethodMapTests removeSelector: #testBlockWithArgAndEnclosedBlockSourceNode!MethodMapTests removeSelector: #testBlockSourceNode!MethodMapTests removeSelector: #testBlockAndContextSourceNode!MethodMapTests removeSelector: #inlinedBlockSourceNode!MethodMapTests removeSelector: #deadContext!MethodMapTests removeSelector: #compileMethod:!MethodMapTests removeSelector: #compileAndRunExample:!Smalltalk globals removeClassNamed: #AnObsoleteMethodMapTests!IRVisitorTest removeSelector: #testStoreTemp!IRVisitorTest removeSelector: #testStoreIntoVariable!IRVisitorTest removeSelector: #testSendSuper!IRVisitorTest removeSelector: #testReturnTop!IRVisitorTest removeSelector: #testRemoteTempNested!IRVisitorTest removeSelector: #testRemoteTemp!IRVisitorTest removeSelector: #testPushThisContext!IRVisitorTest removeSelector: #testPushTempTemp!IRVisitorTest removeSelector: #testPushTempArgument!IRVisitorTest removeSelector: #testPushSelf!IRVisitorTest removeSelector: #testPushNewArray!IRVisitorTest removeSelector: #testPushConsArray!IRVisitorTest removeSelector: #testPushClosureCopyNoCopied!IRVisitorTest removeSelector: #testPopTop!IRVisitorTest removeSelector: #testLiteralVariableClass!IRVisitorTest removeSelector: #testLiteralArray!IRVisitorTest removeSelector: #testJumpBackTo!IRVisitorTest removeSelector: #testJumpAheadToIf!IRVisitorTest removeSelector: #testJumpAheadTo!IRVisitorTest removeSelector: #testInstVar!IRVisitorTest removeSelector: #testDup!IRVisitorTest removeSelector: #interpret:!Smalltalk globals removeClassNamed: #AnObsoleteIRVisitorTest!IRTransformTest removeSelector: #testReplaceInstr!IRTransformTest removeSelector: #testReplace!IRTransformTest removeSelector: #testDelete!IRTransformTest removeSelector: #testAllTempAccessInstructions!IRTransformTest removeSelector: #testAllInstructions!IRTransformTest removeSelector: #testAddIntructionsBeforeFromLList!IRTransformTest removeSelector: #testAddIntructionsBefore!IRTransformTest removeSelector: #testAddIntructions!IRTransformTest removeSelector: #testAddBefore!IRTransformTest removeSelector: #testAdd!Smalltalk globals removeClassNamed: #AnObsoleteIRTransformTest!IRPrinterTest removeSelector: #testStoreTemp!IRPrinterTest removeSelector: #testStoreIntoVariable!IRPrinterTest removeSelector: #testSendSuper!IRPrinterTest removeSelector: #testReturnTop!IRPrinterTest removeSelector: #testRemoteTempNested!IRPrinterTest removeSelector: #testRemoteTemp!IRPrinterTest removeSelector: #testPushThisContext!IRPrinterTest removeSelector: #testPushTempTemp!IRPrinterTest removeSelector: #testPushTempArgument!IRPrinterTest removeSelector: #testPushSelf!IRPrinterTest removeSelector: #testPushNewArray!IRPrinterTest removeSelector: #testPushConsArray!IRPrinterTest removeSelector: #testPushClosureCopyNoCopied!IRPrinterTest removeSelector: #testPopTop!IRPrinterTest removeSelector: #testLiteralVariableClass!IRPrinterTest removeSelector: #testLiteralArray!IRPrinterTest removeSelector: #testJumpBackTo!IRPrinterTest removeSelector: #testJumpAheadToIf!IRPrinterTest removeSelector: #testJumpAheadTo!IRPrinterTest removeSelector: #testInstVar!IRPrinterTest removeSelector: #testDup!Smalltalk globals removeClassNamed: #AnObsoleteIRPrinterTest!IRBuilderTest removeSelector: #testStoreTemp!IRBuilderTest removeSelector: #testStorePopIvar!IRBuilderTest removeSelector: #testStorePopIntoVariable!IRBuilderTest removeSelector: #testStoreIvar!IRBuilderTest removeSelector: #testStoreIntoVariable!IRBuilderTest removeSelector: #testSendSuper!IRBuilderTest removeSelector: #testReturnTop!IRBuilderTest removeSelector: #testReturnInstVar!IRBuilderTest removeSelector: #testRemoteTempShadowed!IRBuilderTest removeSelector: #testRemoteTempNested!IRBuilderTest removeSelector: #testRemoteTemp!IRBuilderTest removeSelector: #testPushThisContext!IRBuilderTest removeSelector: #testPushTempTemp!IRBuilderTest removeSelector: #testPushTempArgument!IRBuilderTest removeSelector: #testPushSelf!IRBuilderTest removeSelector: #testPushNewArray!IRBuilderTest removeSelector: #testPushConsArray2!IRBuilderTest removeSelector: #testPushConsArray!IRBuilderTest removeSelector: #testPushClosureCopyOneCopiedTempArg!IRBuilderTest removeSelector: #testPushClosureCopyOneCopiedTemp!IRBuilderTest removeSelector: #testPushClosureCopyOneCopiedArg!IRBuilderTest removeSelector: #testPushClosureCopyOneCopied!IRBuilderTest removeSelector: #testPushClosureCopyNoCopiedArgNamed!IRBuilderTest removeSelector: #testPushClosureCopyNoCopiedArg!IRBuilderTest removeSelector: #testPushClosureCopyNoCopied!IRBuilderTest removeSelector: #testPopTop!IRBuilderTest removeSelector: #testLiteralVariableGlobale!IRBuilderTest removeSelector: #testLiteralVariableClassVariable!IRBuilderTest removeSelector: #testLiteralVariableClass!IRBuilderTest removeSelector: #testLiteralSymbol!IRBuilderTest removeSelector: #testLiteralString!IRBuilderTest removeSelector: #testLiteralNil!IRBuilderTest removeSelector: #testLiteralInteger!IRBuilderTest removeSelector: #testLiteralFloat!IRBuilderTest removeSelector: #testLiteralCharacter!IRBuilderTest removeSelector: #testLiteralBoolean!IRBuilderTest removeSelector: #testLiteralArray!IRBuilderTest removeSelector: #testJumpBackTo!IRBuilderTest removeSelector: #testJumpAheadToIf!IRBuilderTest removeSelector: #testJumpAheadTo!IRBuilderTest removeSelector: #testInstVar!IRBuilderTest removeSelector: #testDup!IRBuilderTest removeSelector: #testBuildMethod!IRBuilderTest class removeSelector: #testToPush:!IRBuilderTest class removeSelector: #testToPush!IRBuilderTest class removeSelector: #compilerClass!Smalltalk globals removeClassNamed: #AnObsoleteIRBuilderTest!ASTTransformationPluginTest removeSelector: #testTransform!ASTTransformationPluginTest removeSelector: #testClassWithPluginEnabled!Smalltalk globals removeClassNamed: #AnObsoleteASTTransformationPluginTest!ManifestOpalCompilerTests removeSelector: #ruleTempsReadBeforeWrittenRuleV1FalsePositive!ManifestOpalCompilerTests removeSelector: #ruleOnlyReadOrWrittenTemporaryRuleV1FalsePositive!ManifestOpalCompilerTests removeSelector: #ruleGuardClauseRuleV1FalsePositive!ManifestOpalCompilerTests removeSelector: #ruleExtraBlockRuleV1FalsePositive!Smalltalk globals removeClassNamed: #AnObsoleteManifestOpalCompilerTests!OCScopesCollector removeSelector: #visitMethodNode:!OCScopesCollector removeSelector: #visitBlockNode:!OCScopesCollector removeSelector: #scopes!OCScopesCollector removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteOCScopesCollector!GTEventRecorderTestServer removeSelector: #when:do:!GTEventRecorderTestServer removeSelector: #url!GTEventRecorderTestServer removeSelector: #unsubscribeAll!GTEventRecorderTestServer removeSelector: #stop!GTEventRecorderTestServer removeSelector: #server!GTEventRecorderTestServer removeSelector: #initializeUsingDelegate:semaphore:!Smalltalk globals removeClassNamed: #AnObsoleteGTEventRecorderTestServer!GTDummyEvent removeSelector: #hash!GTDummyEvent removeSelector: #data:!GTDummyEvent removeSelector: #data!GTDummyEvent removeSelector: #=!Smalltalk globals removeClassNamed: #AnObsoleteGTDummyEvent!GTEventUnpackingTest removeSelector: #testUnpackSton!GTEventUnpackingTest removeSelector: #testUnpackFuel!GTEventUnpackingTest removeSelector: #testUnpack5!GTEventUnpackingTest removeSelector: #testUnpack4!GTEventUnpackingTest removeSelector: #testUnpack3!GTEventUnpackingTest removeSelector: #testUnpack2!GTEventUnpackingTest removeSelector: #testUnpack!GTEventUnpackingTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGTEventUnpackingTest!GTEventRegistryTest removeSelector: #testIsLiberated3!GTEventRegistryTest removeSelector: #testIsLiberated2!GTEventRegistryTest removeSelector: #testIsLiberated!GTEventRegistryTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGTEventRegistryTest!GTEventRecorderTest removeSelector: #waitForDelivery!GTEventRecorderTest removeSelector: #testTwiceDeliveredDataSholdBeDetected!GTEventRecorderTest removeSelector: #testRemoveCollector2!GTEventRecorderTest removeSelector: #testRemoveCollector!GTEventRecorderTest removeSelector: #testPrivacyChanged4!GTEventRecorderTest removeSelector: #testPrivacyChanged3!GTEventRecorderTest removeSelector: #testPrivacyChanged2!GTEventRecorderTest removeSelector: #testPrivacyChanged!GTEventRecorderTest removeSelector: #testPack3!GTEventRecorderTest removeSelector: #testPack2!GTEventRecorderTest removeSelector: #testPack!GTEventRecorderTest removeSelector: #testNotDeliveredDataShouldBeResent!GTEventRecorderTest removeSelector: #testIsDeliveryActive!GTEventRecorderTest removeSelector: #testDeliverNow3!GTEventRecorderTest removeSelector: #testDeliverNow2!GTEventRecorderTest removeSelector: #testDeliverNow!GTEventRecorderTest removeSelector: #testDeliverAllInOneHttpRequest!GTEventRecorderTest removeSelector: #testAddCollector6!GTEventRecorderTest removeSelector: #testAddCollector5!GTEventRecorderTest removeSelector: #testAddCollector4!GTEventRecorderTest removeSelector: #testAddCollector3!GTEventRecorderTest removeSelector: #testAddCollector2!GTEventRecorderTest removeSelector: #testAddCollector!GTEventRecorderTest removeSelector: #tearDown!GTEventRecorderTest removeSelector: #setUpServer!GTEventRecorderTest removeSelector: #setUp!GTEventRecorderTest removeSelector: #handleRequest:response:!GTEventRecorderTest removeSelector: #denyReceiverSemaphore!GTEventRecorderTest removeSelector: #assertSemaphore!GTEventRecorderTest removeSelector: #assertReceiverSemaphore!Smalltalk globals removeClassNamed: #AnObsoleteGTEventRecorderTest!GTStonPackingTest removeSelector: #packingClass!Smalltalk globals removeClassNamed: #AnObsoleteGTStonPackingTest!GTFuelPackingTest removeSelector: #testMigration2!GTFuelPackingTest removeSelector: #testMigration!GTFuelPackingTest removeSelector: #packingClass!Smalltalk globals removeClassNamed: #AnObsoleteGTFuelPackingTest!GTEventPackingTest removeSelector: #testUnpackUnspecifiedUnspecifiedStream!GTEventPackingTest removeSelector: #testUnpackUnspecifiedBinaryStream!GTEventPackingTest removeSelector: #testUnpackBinaryUnspecifiedStream!GTEventPackingTest removeSelector: #testUnpackBinaryBinaryStream!GTEventPackingTest removeSelector: #testPack!GTEventPackingTest removeSelector: #testNewAnnouncementFor2!GTEventPackingTest removeSelector: #testNewAnnouncementFor!GTEventPackingTest removeSelector: #setUp!GTEventPackingTest removeSelector: #packingClass!GTEventPackingTest removeSelector: #assertUnpackedData!GTEventPackingTest removeSelector: #assertBundle!GTEventPackingTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteGTEventPackingTest!GTEventMultiBundleTest removeSelector: #testEntity4!GTEventMultiBundleTest removeSelector: #testEntity3!GTEventMultiBundleTest removeSelector: #testEntity2!GTEventMultiBundleTest removeSelector: #testEntity!GTEventMultiBundleTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGTEventMultiBundleTest!GTEventMultiBundleFactoryTest removeSelector: #testFromBundles4!GTEventMultiBundleFactoryTest removeSelector: #testFromBundles3!GTEventMultiBundleFactoryTest removeSelector: #testFromBundles2!GTEventMultiBundleFactoryTest removeSelector: #testFromBundles!GTEventMultiBundleFactoryTest removeSelector: #setUp!GTEventMultiBundleFactoryTest removeSelector: #detectEvents!GTEventMultiBundleFactoryTest removeSelector: #allBundles!Smalltalk globals removeClassNamed: #AnObsoleteGTEventMultiBundleFactoryTest!GTEventDeliveryTest removeSelector: #testPrintProcessName!GTEventDeliveryTest removeSelector: #testPrintOn2!GTEventDeliveryTest removeSelector: #testPrintOn!GTEventDeliveryTest removeSelector: #tearDown!GTEventDeliveryTest removeSelector: #setUp!GTEventDeliveryTest removeSelector: #isGlobalRecorder!GTEventDeliveryTest removeSelector: #assertSemaphore!Smalltalk globals removeClassNamed: #AnObsoleteGTEventDeliveryTest!GTEventConsolidateTest removeSelector: #testConsolidated4!GTEventConsolidateTest removeSelector: #testConsolidated3!GTEventConsolidateTest removeSelector: #testConsolidated2!GTEventConsolidateTest removeSelector: #testConsolidated!GTEventConsolidateTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGTEventConsolidateTest!GTEventCollectorsTest removeSelector: #testPrintOn!GTEventCollectorsTest removeSelector: #testDo2!GTEventCollectorsTest removeSelector: #testDo!GTEventCollectorsTest removeSelector: #testDefault!GTEventCollectorsTest removeSelector: #testAdd3!GTEventCollectorsTest removeSelector: #testAdd2!GTEventCollectorsTest removeSelector: #testAdd!GTEventCollectorsTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGTEventCollectorsTest!GTEventCollectorTest removeSelector: #testUrl!GTEventCollectorTest removeSelector: #testUpdateAnnouncement!GTEventCollectorTest removeSelector: #testPrintOn!GTEventCollectorTest removeSelector: #testLiberate2!GTEventCollectorTest removeSelector: #testLiberate!GTEventCollectorTest removeSelector: #testIsLiberated3!GTEventCollectorTest removeSelector: #testIsLiberated2!GTEventCollectorTest removeSelector: #testIsLiberated!GTEventCollectorTest removeSelector: #testCategory!GTEventCollectorTest removeSelector: #testBundle2!GTEventCollectorTest removeSelector: #testBundle!GTEventCollectorTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGTEventCollectorTest!GTEventBundleTest removeSelector: #testEntity!GTEventBundleTest removeSelector: #testData!GTEventBundleTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGTEventBundleTest!MirrorPrimitivesTests removeSelector: #testPrintingObject!MirrorPrimitivesTests removeSelector: #testPerformingMessageInSuperclass!MirrorPrimitivesTests removeSelector: #testPerformingMessage!MirrorPrimitivesTests removeSelector: #testMakingObjectReadOnly!MirrorPrimitivesTests removeSelector: #testGettingIndexibleSizeOfWeakMessageSend!MirrorPrimitivesTests removeSelector: #testGettingIndexibleSizeOfFixedObject!MirrorPrimitivesTests removeSelector: #testGettingIndexibleSizeOfArray!MirrorPrimitivesTests removeSelector: #testGettingIndexableFieldOfWeakMessageSend!MirrorPrimitivesTests removeSelector: #testGettingIndexableFieldOfFixedObject!MirrorPrimitivesTests removeSelector: #testGettingIndexableFieldOfArray!MirrorPrimitivesTests removeSelector: #testGettingIdentityHashOfObject!MirrorPrimitivesTests removeSelector: #testGettingGeneralFieldOfWeakMessageSend!MirrorPrimitivesTests removeSelector: #testGettingGeneralFieldOfFixedObject!MirrorPrimitivesTests removeSelector: #testGettingGeneralFieldOfArray!MirrorPrimitivesTests removeSelector: #testGettingFullSizeOfWeakMessageSend!MirrorPrimitivesTests removeSelector: #testGettingFullSizeOfFixedObject!MirrorPrimitivesTests removeSelector: #testGettingFullSizeOfArray!MirrorPrimitivesTests removeSelector: #testGettingFixedSizeOfWeakMessageSend!MirrorPrimitivesTests removeSelector: #testGettingFixedSizeOfFixedObject!MirrorPrimitivesTests removeSelector: #testGettingFixedSizeOfArray!MirrorPrimitivesTests removeSelector: #testGettingFixedFieldOfWeakMessageSend!MirrorPrimitivesTests removeSelector: #testGettingFixedFieldOfFixedObject!MirrorPrimitivesTests removeSelector: #testGettingFixedFieldOfArray!MirrorPrimitivesTests removeSelector: #testGettingClassOfObject!MirrorPrimitivesTests removeSelector: #testExecutingPrimitive!MirrorPrimitivesTests removeSelector: #testExecutingMethod!MirrorPrimitivesTests removeSelector: #testChangingIndexableFieldOfWeakMessageSend!MirrorPrimitivesTests removeSelector: #testChangingIndexableFieldOfFixedObject!MirrorPrimitivesTests removeSelector: #testChangingIndexableFieldOfArray!MirrorPrimitivesTests removeSelector: #testChangingGeneralFieldOfWeakMessageSend!MirrorPrimitivesTests removeSelector: #testChangingGeneralFieldOfFixedObject!MirrorPrimitivesTests removeSelector: #testChangingGeneralFieldOfArray!MirrorPrimitivesTests removeSelector: #testChangingFixedFieldOfWeakMessageSend!MirrorPrimitivesTests removeSelector: #testChangingFixedFieldOfFixedObject!MirrorPrimitivesTests removeSelector: #testChangingFixedFieldOfArray!MirrorPrimitivesTests removeSelector: #testChangingClassOfObject!Smalltalk globals removeClassNamed: #AnObsoleteMirrorPrimitivesTests!OmStoreTest removeSelector: #testWritingFileReference!OmStoreTest removeSelector: #testRefreshNotEmpty!OmStoreTest removeSelector: #testRefreshEmpty!OmStoreTest removeSelector: #testReferenceTo!OmStoreTest removeSelector: #testNewEntry!OmStoreTest removeSelector: #testMultipleEntries!OmStoreTest removeSelector: #testHeadReferenceForEmptyStore!OmStoreTest removeSelector: #testHeadReference!OmStoreTest removeSelector: #testFirstEntryIfAbsent!OmStoreTest removeSelector: #testEntryReferences!OmStoreTest removeSelector: #testEntryForPresentEntry!OmStoreTest removeSelector: #testEntryForNullReference!OmStoreTest removeSelector: #testEntryForAbsentEntry!OmStoreTest removeSelector: #testEntriesDo!OmStoreTest removeSelector: #testEntriesCount!OmStoreTest removeSelector: #testEntries!OmStoreTest removeSelector: #tearDown!OmStoreTest removeSelector: #setUpStore!OmStoreTest removeSelector: #setUpOtherStore!OmStoreTest removeSelector: #setUp!OmStoreTest removeSelector: #beforeAndAfterFlushStore:!OmStoreTest class removeSelector: #isAbstract!OmSessionStoreTest removeSelector: #testResetWithStoreNamedSignalsErrorIfFileAlreadyExists!OmSessionStoreTest removeSelector: #testResetWithStoreNamedDoesAnnounce!OmSessionStoreTest removeSelector: #testResetWithNextStoreNameWithTimeStampSuffix!OmSessionStoreTest removeSelector: #testResetWithNextStoreNameWithSequentialSuffix!OmSessionStoreTest removeSelector: #testResetWithNextStoreNameWithRandomSuffix!OmSessionStoreTest removeSelector: #tearDown!OmSessionStoreTest removeSelector: #setUpStore!OmSessionStoreTest removeSelector: #setUpOtherStore!OmSessionStoreTest removeSelector: #directoryForTests!Smalltalk globals removeClassNamed: #AnObsoleteOmSessionStoreTest!OmMemoryStoreTest removeSelector: #testWithAll!OmMemoryStoreTest removeSelector: #setUpStore!Smalltalk globals removeClassNamed: #AnObsoleteOmMemoryStoreTest!OmFileStoreTest removeSelector: #testLoadFromFile!OmFileStoreTest removeSelector: #testLoadFromCorruptFile4!OmFileStoreTest removeSelector: #testLoadFromCorruptFile3!OmFileStoreTest removeSelector: #testLoadFromCorruptFile2!OmFileStoreTest removeSelector: #testLoadFromCorruptFile1!OmFileStoreTest removeSelector: #testIsOutdated!OmFileStoreTest removeSelector: #testEnsureDeleteFile!OmFileStoreTest removeSelector: #tearDown!OmFileStoreTest removeSelector: #setUpStore!OmFileStoreTest removeSelector: #setUpOtherStore!OmFileStoreTest removeSelector: #directoryForTests!OmBlockFileStoreTest removeSelector: #testMultibyteUnicodeCharacterCrossingTwoBlocks!OmBlockFileStoreTest removeSelector: #setUpStore!OmBlockFileStoreTest removeSelector: #setUpOtherStore!Smalltalk globals removeClassNamed: #AnObsoleteOmBlockFileStoreTest!Smalltalk globals removeClassNamed: #AnObsoleteOmFileStoreTest!Smalltalk globals removeClassNamed: #AnObsoleteOmStoreTest!OmStoreFactoryTest removeSelector: #testStoreNamed!OmStoreFactoryTest removeSelector: #testNullStore!OmStoreFactoryTest removeSelector: #aStoreName!Smalltalk globals removeClassNamed: #AnObsoleteOmStoreFactoryTest!Smalltalk globals removeClassNamed: #AnObsoleteOmTimeStampSuffixStrategyTest!OmSessionStoreNameStrategyTest removeSelector: #testWithNotExistingFile!OmSessionStoreNameStrategyTest removeSelector: #testWithExistingFile!OmSessionStoreNameStrategyTest removeSelector: #tearDown!OmSessionStoreNameStrategyTest removeSelector: #strategyClass!OmSessionStoreNameStrategyTest removeSelector: #setUp!OmSessionStoreNameStrategyTest removeSelector: #fileReferenceWith:!OmSessionStoreNameStrategyTest removeSelector: #directory!OmSessionStoreNameStrategyTest removeSelector: #createFileWith:!OmSessionStoreNameStrategyTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteOmSequentialSuffixStrategyTest!OmRandomSuffixStrategyTest removeSelector: #testIsNotConstant!Smalltalk globals removeClassNamed: #AnObsoleteOmRandomSuffixStrategyTest!Smalltalk globals removeClassNamed: #AnObsoleteOmSessionStoreNameStrategyTest!OmDeferrerTest removeSelector: #testExecuteWithoutDelay!OmDeferrerTest removeSelector: #testExecuteOnceAfterSchedulingMultipleTimes!OmDeferrerTest removeSelector: #testExecuteOnceAfterScheduling!OmDeferrerTest removeSelector: #increase!OmDeferrerTest removeSelector: #count:!OmDeferrerTest removeSelector: #count!Smalltalk globals removeClassNamed: #AnObsoleteOmDeferrerTest!JobTest removeSelector: #testSingleJob!JobTest removeSelector: #testProgressChangeByCurrentValue!JobTest removeSelector: #testProgress!JobTest removeSelector: #testOwner!JobTest removeSelector: #testLookupJob!JobTest removeSelector: #testJobAnnouncements!JobTest removeSelector: #testCurrentJob!JobTest removeSelector: #testChildJob!JobTest removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoleteJobTest!ThreeWayComparisonTest removeSelector: #testStrings!ThreeWayComparisonTest removeSelector: #testIntegers!ThreeWayComparisonTest removeSelector: #testFloats!Smalltalk globals removeClassNamed: #AnObsoleteThreeWayComparisonTest!SortFunctionTest removeSelector: #testUndefinedLastUnary!SortFunctionTest removeSelector: #testUndefinedFirstUnary!SortFunctionTest removeSelector: #testUnarySymbol!SortFunctionTest removeSelector: #testTwoArgBlock!SortFunctionTest removeSelector: #testSortingWithUndefined!SortFunctionTest removeSelector: #testSortingChainedWithUndefined!SortFunctionTest removeSelector: #testSortingChained!SortFunctionTest removeSelector: #testSorting!SortFunctionTest removeSelector: #testSingleArgBlock!SortFunctionTest removeSelector: #testPropertyWithOddCollator!SortFunctionTest removeSelector: #testInversion!SortFunctionTest removeSelector: #testComparisonOfFunctionsDefinedBySymbol!SortFunctionTest removeSelector: #testComparisonOfFunctionsDefinedByBlock!SortFunctionTest removeSelector: #testAsSortFunction!Smalltalk globals removeClassNamed: #AnObsoleteSortFunctionTest!ChainedSortFunctionTest removeSelector: #testEvaluation!ChainedSortFunctionTest removeSelector: #testComparisonOfFunctions!Smalltalk globals removeClassNamed: #AnObsoleteChainedSortFunctionTest!WPDummy removeSelector: #foo:!WPDummy removeSelector: #foo!WPDummy removeSelector: #exampleOperationAndAssignment:!WPDummy removeSelector: #exampleOperationAndAssignment!WPDummy removeSelector: #exampleOperation!WPDummy removeSelector: #exampleMessageSend!WPDummy removeSelector: #exampleAssignment:!WPDummy removeSelector: #exampleAssignment!Smalltalk globals removeClassNamed: #AnObsoleteWPDummy!Breakpoint class removeSelector: #all!WatchpointTests removeSelector: #testWatchpointTwice!WatchpointTests removeSelector: #testTimestamp!WatchpointTests removeSelector: #testStopRecording!WatchpointTests removeSelector: #testSendMessage!WatchpointTests removeSelector: #testSaveValues!WatchpointTests removeSelector: #testSaveOneValue!WatchpointTests removeSelector: #testDeleteHistoryFromNode!WatchpointTests removeSelector: #testDeleteHistory!WatchpointTests removeSelector: #testDeleteAllHistory!WatchpointTests removeSelector: #testAddWatchpointsSameNode!WatchpointTests removeSelector: #testAddWatchpoint!WatchpointTests removeSelector: #testAddSameWatchpointSameNode!Smalltalk globals removeClassNamed: #AnObsoleteWatchpointTests!RuntimeTyperTests removeSelector: #testPlus!RuntimeTyperTests removeSelector: #examplePlus:!Smalltalk globals removeClassNamed: #AnObsoleteRuntimeTyperTests!MethodConstantTests removeSelector: #testUsingConstJustInSameMethod!MethodConstantTests removeSelector: #testTwoConstsInSameMethod!MethodConstantTests removeSelector: #testConstPlaceInTransformedMethod!MethodConstantTests removeSelector: #testAPIFromMessageSendReceiver!MethodConstantTests removeSelector: #testAPIFromBlock!MethodConstantTests removeSelector: #sumOfTwoConsts:and:!MethodConstantTests removeSelector: #constFromReceiverExpression!MethodConstantTests removeSelector: #constFromBlock:!Smalltalk globals removeClassNamed: #AnObsoleteMethodConstantTests!BreakpointTest removeSelector: #testRemoveMethodWithBreakpoint!BreakpointTest removeSelector: #testRemoveClassWithBreakpoint!BreakpointTest removeSelector: #testModifyMethodWithBreakpoint!BreakpointTest removeSelector: #tearDown!BreakpointTest removeSelector: #setUp!BreakpointTest removeSelector: #newDummyClass!Smalltalk globals removeClassNamed: #AnObsoleteBreakpointTest!VileFinalizer removeSelector: #initialize:!VileFinalizer removeSelector: #finalize!Smalltalk globals removeClassNamed: #AnObsoleteVileFinalizer!MockFinalizerAction removeSelector: #finalizeValues!MockFinalizerAction removeSelector: #finalize!MockFinalizerAction removeSelector: #finalizationAction:!Smalltalk globals removeClassNamed: #AnObsoleteMockFinalizerAction!WriteStreamTest removeSelector: #testWithFromTo!WriteStreamTest removeSelector: #testWith!WriteStreamTest removeSelector: #testSetToEnd!WriteStreamTest removeSelector: #testPosition!WriteStreamTest removeSelector: #testOnFromTo!WriteStreamTest removeSelector: #testOn!WriteStreamTest removeSelector: #testNextPutAll!WriteStreamTest removeSelector: #testNextPut!WriteStreamTest removeSelector: #testNew!WriteStreamTest removeSelector: #testIsEmpty!WriteStreamTest removeSelector: #testEnsureNoSpace!WriteStreamTest removeSelector: #testEnsureEndsWith!WriteStreamTest removeSelector: #testEnsureASpace2!WriteStreamTest removeSelector: #testEnsureASpace!WriteStreamTest removeSelector: #stringSize!WriteStreamTest removeSelector: #string!WriteStreamTest removeSelector: #streamClass!WriteStreamTest removeSelector: #newStreamOn:!WriteStreamTest removeSelector: #newStream!WriteStreamTest removeSelector: #classToBeTested!WriteStreamTest class removeSelector: #shouldInheritSelectors!LimitedWriteStreamTest removeSelector: #testWithFromTo!LimitedWriteStreamTest removeSelector: #testWith!LimitedWriteStreamTest removeSelector: #testSetLimitLimitBlock!LimitedWriteStreamTest removeSelector: #testOnLimitLimitBlock!LimitedWriteStreamTest removeSelector: #testOnFromTo!LimitedWriteStreamTest removeSelector: #testOn!LimitedWriteStreamTest removeSelector: #testNextPutAll!LimitedWriteStreamTest removeSelector: #testNextPut!LimitedWriteStreamTest removeSelector: #testLimitBlock!LimitedWriteStreamTest removeSelector: #testLimit!LimitedWriteStreamTest removeSelector: #streamClass!Smalltalk globals removeClassNamed: #AnObsoleteLimitedWriteStreamTest!Smalltalk globals removeClassNamed: #AnObsoleteWriteStreamTest!WideStringTest removeSelector: #testSubstrings!WideStringTest removeSelector: #testSameAs!WideStringTest removeSelector: #testRelationOrderWithCase!WideStringTest removeSelector: #testRelationOrder!WideStringTest removeSelector: #testMatch!WideStringTest removeSelector: #testIsAsciiString!WideStringTest removeSelector: #testFindSubstring!WideStringTest removeSelector: #testEqual!WideStringTest removeSelector: #testEndsWith!WideStringTest removeSelector: #testCompare!WideStringTest removeSelector: #testCharactersExactlyMatching!WideStringTest removeSelector: #testBeginsWith!WideStringTest removeSelector: #testAtPut!WideStringTest removeSelector: #testAsInteger!Smalltalk globals removeClassNamed: #AnObsoleteWideStringTest!WeakRegistryTest removeSelector: #testVileFinalizer!WeakRegistryTest removeSelector: #testRemovingDoesntLeak!WeakRegistryTest removeSelector: #testRemovingByAHighPriorityProcessDoesntLeak!WeakRegistryTest removeSelector: #testGrowingDoesntLeak!WeakRegistryTest removeSelector: #testGrowingByAHighPriorityProcessDoesntLeak!WeakRegistryTest removeSelector: #testFinalizationWithOnFork!WeakRegistryTest removeSelector: #testFinalizationWithMultipleFinalizersPerObject!WeakRegistryTest removeSelector: #testFinalizationWithBadFinalizer!WeakRegistryTest removeSelector: #testFinalization!WeakRegistryTest removeSelector: #signalMockException!Smalltalk globals removeClassNamed: #AnObsoleteWeakRegistryTest!ReadWriteStreamTest removeSelector: #testNew!ReadWriteStreamTest removeSelector: #testIsEmpty!ReadWriteStreamTest removeSelector: #testConstructionUsingWith!Smalltalk globals removeClassNamed: #AnObsoleteReadWriteStreamTest!NullStreamTest removeSelector: #testPeekLast!NullStreamTest removeSelector: #testNextPutAllEmpty!NullStreamTest removeSelector: #testCounting!NullStreamTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteNullStreamTest!!Trait method!withEqualElements	" return a collection  including equal elements (classic equality)"	^ self explicitRequirement! !SymbolTest removeSelector: #withEqualElements!!Trait method!unsortedCollection"Return a collection that is not yet sorted"	^self explicitRequirement! !SymbolTest removeSelector: #unsortedCollection!SymbolTest removeSelector: #testUncapitalized!SymbolTest removeSelector: #testReadFrom!SymbolTest removeSelector: #testNumArgsUnary!SymbolTest removeSelector: #testNumArgsKeyword2!SymbolTest removeSelector: #testNumArgsKeyword1!SymbolTest removeSelector: #testNumArgsBinary!SymbolTest removeSelector: #testNumArgs2!SymbolTest removeSelector: #testNew!SymbolTest removeSelector: #testIsLiteralSymbol!!Trait method!testCopyNotSame	"A copy of a collection should always be of the same class as the instance it copies"		| copy | 	copy := self nonEmpty copy.	self deny: copy  == self nonEmpty.! !SymbolTest removeSelector: #testCopyNotSame!!Trait method!testCopyNonEmptyWithoutAllNotIncluded	| res |	res := self nonEmpty copyWithoutAll: self collectionNotIncluded.	"here we do not test the size since for a non empty set we would get a problem.	Then in addition copy is not about duplicate management. The element should 	be in at the end."	self nonEmpty do: [ :each | self assert: (res includes: each) ]! !SymbolTest removeSelector: #testCopyNonEmptyWithoutAllNotIncluded!SymbolTest removeSelector: #testConcatenationIsSymbol!SymbolTest removeSelector: #testCapitalized!SymbolTest removeSelector: #testAsMutator!!Trait method!subCollectionNotIn" return a collection for which at least one element is not included in 'moreThan4Elements' "	self explicitRequirement! !SymbolTest removeSelector: #subCollectionNotIn!!Trait method!sortedInAscendingOrderCollection	"Return a collection sorted in ascending order"	^ self explicitRequirement	! !SymbolTest removeSelector: #sortedInAscendingOrderCollection!SymbolTest removeSelector: #sizeCollection!SymbolTest removeSelector: #setUp!!Trait method!secondCollection" return a collection that will be the second part of the concatenation"	self explicitRequirement! !SymbolTest removeSelector: #secondCollection!!Trait method!replacementCollection" return a collection that will be used to replace 'oldSubcollection' in ' collectionWith1TimeSubcollection'  " 	self explicitRequirement! !SymbolTest removeSelector: #replacementCollection!!Trait method!oldSubCollection" return a subCollection included in collectionWith1TimeSubcollection .ex :   subCollection := #( 2 3 4) and collectionWith1TimeSubcollection := #(1 2 3 4 5)"	self explicitRequirement! !SymbolTest removeSelector: #oldSubCollection!!Trait method!nonEmptyMoreThan1Element" return a collection that doesn't includes equal elements' and doesn't include nil elements'" 	^self explicitRequirement.! !SymbolTest removeSelector: #nonEmptyMoreThan1Element!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !SymbolTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !SymbolTest removeSelector: #nonEmpty!!Trait method!moreThan4Elements" return a collection including at leat 4 elements"	self explicitRequirement! !SymbolTest removeSelector: #moreThan4Elements!!Trait method!moreThan3Elements	" return a collection including atLeast 3 elements"	self explicitRequirement! !SymbolTest removeSelector: #moreThan3Elements!!Trait method!indexInNonEmpty" return an index between bounds of 'nonEmpty' "	self explicitRequirement! !SymbolTest removeSelector: #indexInNonEmpty!!Trait method!indexInForCollectionWithoutDuplicates" return an index between 'collectionWithoutEqualsElements'  bounds"	self explicitRequirement! !SymbolTest removeSelector: #indexInForCollectionWithoutDuplicates!!Trait method!firstCollection" return a collection that will be the first part of the concatenation"	self explicitRequirement! !SymbolTest removeSelector: #firstCollection!SymbolTest removeSelector: #expectedBehavior!!Trait method!empty	self requirement! !SymbolTest removeSelector: #empty!!Trait method!elementTwiceInForOccurrences" return an element included exactly two time in # collectionWithEqualElements"^ self explicitRequirement! !SymbolTest removeSelector: #elementTwiceInForOccurrences!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !SymbolTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !SymbolTest removeSelector: #elementNotInForOccurrences!!Trait method!elementNotInForIndexAccessing" return an element not included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !SymbolTest removeSelector: #elementNotInForIndexAccessing!!Trait method!elementNotInForElementAccessing" return an element not included in 'moreThan4Elements' "	self explicitRequirement! !SymbolTest removeSelector: #elementNotInForElementAccessing!!Trait method!elementNotIn"return an element not included in 'nonEmpty' "	^ self explicitRequirement! !SymbolTest removeSelector: #elementNotIn!!Trait method!elementInForIndexAccessing" return an element included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !SymbolTest removeSelector: #elementInForIndexAccessing!!Trait method!elementInForElementAccessing" return an element inculded in 'moreThan4Elements'"	self explicitRequirement! !SymbolTest removeSelector: #elementInForElementAccessing!SymbolTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !SymbolTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements	self requirement! !SymbolTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithSameAtEndAndBegining	self requirement! !SymbolTest removeSelector: #collectionWithSameAtEndAndBegining!!Trait method!collectionWithEqualElements" return a collecition including atLeast two elements equal"^ self explicitRequirement.! !SymbolTest removeSelector: #collectionWithEqualElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !SymbolTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWith2TimeSubcollection" return a collection including 'oldSubCollection'  two or many time "	self explicitRequirement! !SymbolTest removeSelector: #collectionWith2TimeSubcollection!!Trait method!collectionWith1TimeSubcollection" return a collection including 'oldSubCollection'  only one time "	self explicitRequirement! !SymbolTest removeSelector: #collectionWith1TimeSubcollection!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !SymbolTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan1NoDuplicates	" return a collection of size > 1 without equal elements"	self explicitRequirement! !SymbolTest removeSelector: #collectionMoreThan1NoDuplicates!!Trait method!collectionClass" return the class to be used to create instances of the class tested"	^ self explicitRequirement! !SymbolTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !SymbolTest removeSelector: #collection!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !SymbolTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !SymbolTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !SymbolTest removeSelector: #anotherElementNotIn!ByteSymbolTest removeSelector: #testReadFromString!ByteSymbolTest removeSelector: #testNewFrom!ByteSymbolTest removeSelector: #testNew!ByteSymbolTest removeSelector: #testAs!Smalltalk globals removeClassNamed: #AnObsoleteByteSymbolTest!Smalltalk globals removeClassNamed: #AnObsoleteSymbolTest!!Trait method!withEqualElements	" return a collection  including equal elements (classic equality)"	^ self explicitRequirement! !StringTest removeSelector: #withEqualElements!!Trait method!unsortedCollection"Return a collection that is not yet sorted"	^self explicitRequirement! !StringTest removeSelector: #unsortedCollection!StringTest removeSelector: #testindexOfstartingAt!StringTest removeSelector: #testWthNoLineLongerThan!StringTest removeSelector: #testWriteStreamDo!StringTest removeSelector: #testWriteStreamConvertsToWideString!StringTest removeSelector: #testWithoutTrailingNewlines!StringTest removeSelector: #testWithoutTrailingDigits!StringTest removeSelector: #testWithoutQuoting!StringTest removeSelector: #testWithoutPrefix!StringTest removeSelector: #testWithoutPeriodSuffix!StringTest removeSelector: #testWithoutLeadingDigits!StringTest removeSelector: #testWithUnixLineEndings!StringTest removeSelector: #testWithSqueakLineEndings!StringTest removeSelector: #testWithSeparatorsCompacted!StringTest removeSelector: #testWithNoLineLongerThan!StringTest removeSelector: #testWithInternetLineEndings!StringTest removeSelector: #testWithFirstCharacterDownshifted!StringTest removeSelector: #testWithBlanksCondensed!StringTest removeSelector: #testUpTo!StringTest removeSelector: #testUncapitalized!StringTest removeSelector: #testTrimmed!StringTest removeSelector: #testTrimRight!StringTest removeSelector: #testTrimLineSpaces!StringTest removeSelector: #testTrimLeft!StringTest removeSelector: #testTrimBoth!StringTest removeSelector: #testTranslateToUppercase!StringTest removeSelector: #testTranslateToLowercase!StringTest removeSelector: #testSubstrings!StringTest removeSelector: #testSpace!StringTest removeSelector: #testRepeat!StringTest removeSelector: #testReadStreamDo!StringTest removeSelector: #testReadFrom!StringTest removeSelector: #testPadRightToWith!StringTest removeSelector: #testPadRightTo!StringTest removeSelector: #testPadLeftToWith!StringTest removeSelector: #testPadLeftTo!StringTest removeSelector: #testOnlyLetters!StringTest removeSelector: #testOccursInWithEmptyCaseSensitive!StringTest removeSelector: #testNumericSuffix!StringTest removeSelector: #testNumArgs!StringTest removeSelector: #testMatch!StringTest removeSelector: #testLoremIpsum2048!StringTest removeSelector: #testLoremIpsum!StringTest removeSelector: #testLinesDoWithCrLfBetween!StringTest removeSelector: #testLinesDoWithCrLf!StringTest removeSelector: #testLinesDoWithCrBetween!StringTest removeSelector: #testLinesDoWithCr!StringTest removeSelector: #testLinesDo!StringTest removeSelector: #testLines!StringTest removeSelector: #testLineNumber!StringTest removeSelector: #testLineCount!StringTest removeSelector: #testLineCorrespondingToIndex!StringTest removeSelector: #testLessThan!StringTest removeSelector: #testLeadingCharRunLengthAt!StringTest removeSelector: #testLastSpacePosition!StringTest removeSelector: #testIsWideString!StringTest removeSelector: #testIsPatternVariable!StringTest removeSelector: #testIsLiteralSymbol!StringTest removeSelector: #testIsAsciiString!StringTest removeSelector: #testIsAllDigits!StringTest removeSelector: #testIsAllAlphaNumerics!StringTest removeSelector: #testInitialIntegerOrNil!StringTest removeSelector: #testIndexOfWideCharacterFromTo!StringTest removeSelector: #testIndexOfFirstUppercaseCharacter!!Trait method!testIndexOf	| tmp index collection |	collection := self collectionMoreThan1NoDuplicates.	tmp := collection size.	collection reverseDo: 		[ :each | 		each = self elementInForIndexAccessing ifTrue: [ index := tmp ].		tmp := tmp - 1 ].	self assert: (collection indexOf: self elementInForIndexAccessing) = index! !StringTest removeSelector: #testIndexOf!StringTest removeSelector: #testIncludesSubstringCaseSensitive!StringTest removeSelector: #testIncludesSubstring!!Trait method!testIncludesElementIsNotThere		self deny: (self nonEmpty includes: self elementNotIn).	self assert: (self nonEmpty includes: self nonEmpty anyOne).	self deny: (self empty includes: self elementNotIn)! !StringTest removeSelector: #testIncludesElementIsNotThere!StringTest removeSelector: #testHasWideCharacterFromTo!StringTest removeSelector: #testFormatFailures!StringTest removeSelector: #testFormatExtended!StringTest removeSelector: #testFormat!StringTest removeSelector: #testFindWordStartStartingAt!StringTest removeSelector: #testFindTokensIncludes!StringTest removeSelector: #testFindTokensEscapedBy26!StringTest removeSelector: #testFindTokensEscapedBy25!StringTest removeSelector: #testFindTokensEscapedBy24!StringTest removeSelector: #testFindTokensEscapedBy23!StringTest removeSelector: #testFindTokensEscapedBy22!StringTest removeSelector: #testFindTokensEscapedBy21!StringTest removeSelector: #testFindTokensEscapedBy16!StringTest removeSelector: #testFindTokensEscapedBy15!StringTest removeSelector: #testFindTokensEscapedBy14!StringTest removeSelector: #testFindTokensEscapedBy13!StringTest removeSelector: #testFindTokensEscapedBy12!StringTest removeSelector: #testFindTokensEscapedBy11!StringTest removeSelector: #testFindTokensEscapedBy10!StringTest removeSelector: #testFindTokensEscapedBy09!StringTest removeSelector: #testFindTokensEscapedBy08!StringTest removeSelector: #testFindTokensEscapedBy07!StringTest removeSelector: #testFindTokensEscapedBy06!StringTest removeSelector: #testFindTokensEscapedBy05!StringTest removeSelector: #testFindTokensEscapedBy04!StringTest removeSelector: #testFindTokensEscapedBy03!StringTest removeSelector: #testFindTokensEscapedBy02!StringTest removeSelector: #testFindTokensEscapedBy01!StringTest removeSelector: #testFindTokensEscapedBy!StringTest removeSelector: #testFindTokens!StringTest removeSelector: #testFindStringStartingAtCaseSensitive!StringTest removeSelector: #testFindStringStartingAt!StringTest removeSelector: #testFindString!StringTest removeSelector: #testFindSelector!StringTest removeSelector: #testFindLastOccurenceOfStringStartingAt!StringTest removeSelector: #testFindFirstInString!StringTest removeSelector: #testFindDelimitersStartingAt!StringTest removeSelector: #testFindCloseParenthesisFor!StringTest removeSelector: #testFindBetweenSubstrings!StringTest removeSelector: #testFindAnySubstringStartingAt!StringTest removeSelector: #testExpandMacros!StringTest removeSelector: #testEquality!StringTest removeSelector: #testEndsWithDigit!StringTest removeSelector: #testEndsWithAnyOf!StringTest removeSelector: #testEndsWith!StringTest removeSelector: #testCorrectAgainst!StringTest removeSelector: #testCopyReplaceAllWithAsTokens!StringTest removeSelector: #testCopyReplaceAllWith!!Trait method!testCopyNonEmptyWithoutAllNotIncluded	| res |	res := self nonEmpty copyWithoutAll: self collectionNotIncluded.	"here we do not test the size since for a non empty set we would get a problem.	Then in addition copy is not about duplicate management. The element should 	be in at the end."	self nonEmpty do: [ :each | self assert: (res includes: each) ]! !StringTest removeSelector: #testCopyNonEmptyWithoutAllNotIncluded!StringTest removeSelector: #testComparingCaseInsensitiveLatin1!StringTest removeSelector: #testComparing!StringTest removeSelector: #testCompareCaseSensitive!StringTest removeSelector: #testCompare!StringTest removeSelector: #testCharactersExactlyMatching!StringTest removeSelector: #testCaseSensitiveLessOrEqual!StringTest removeSelector: #testCaseInsensitiveLessOrEqual!StringTest removeSelector: #testCapitalized!StringTest removeSelector: #testBeginsWithEmptyCaseSensitive!!Trait method!testAt	"	self assert: (self accessCollection at: 1) = 1.	self assert: (self accessCollection at: 2) = 2.	"	| index |	index := self moreThan4Elements indexOf: self elementInForElementAccessing.	self assert: (self moreThan4Elements at: index) = self elementInForElementAccessing! !StringTest removeSelector: #testAt!StringTest removeSelector: #testAsUppercase!StringTest removeSelector: #testAsTime!StringTest removeSelector: #testAsSymbol!StringTest removeSelector: #testAsString!StringTest removeSelector: #testAsSmalltalkComment!StringTest removeSelector: #testAsSignedInteger!StringTest removeSelector: #testAsPluralBasedOn!StringTest removeSelector: #testAsLowercase!StringTest removeSelector: #testAsInteger!StringTest removeSelector: #testAsHTMLString!StringTest removeSelector: #testAsDate!StringTest removeSelector: #testAsCamelCase!StringTest removeSelector: #testAllRangesOfSubstring!StringTest removeSelector: #testAlike!!Trait method!test0CopyTest	self empty.	self assert: self empty size = 0.	self nonEmpty.	self assert: (self nonEmpty size = 0) not.	self collectionWithElementsToRemove.	self assert: (self collectionWithElementsToRemove size = 0) not.	self collectionWithElementsToRemove do: [ :each | self assert: (self nonEmpty includes: each) ].	self elementToAdd.	self deny: (self nonEmpty includes: self elementToAdd).	self collectionNotIncluded.	self collectionNotIncluded do: [ :each | self deny: (self nonEmpty includes: each) ]! !StringTest removeSelector: #test0CopyTest!!Trait method!subCollectionNotIn" return a collection for which at least one element is not included in 'moreThan4Elements' "	self explicitRequirement! !StringTest removeSelector: #subCollectionNotIn!!Trait method!sortedInAscendingOrderCollection	"Return a collection sorted in ascending order"	^ self explicitRequirement	! !StringTest removeSelector: #sortedInAscendingOrderCollection!StringTest removeSelector: #sizeCollection!StringTest removeSelector: #setUp!!Trait method!secondIndex" return an index between 'nonEmpty' bounds that is > to 'first index' "	^self explicitRequirement! !StringTest removeSelector: #secondIndex!!Trait method!secondCollection" return a collection that will be the second part of the concatenation"	self explicitRequirement! !StringTest removeSelector: #secondCollection!!Trait method!replacementCollectionSameSize" return a collection of size (secondIndex - firstIndex + 1)"	^self explicitRequirement! !StringTest removeSelector: #replacementCollectionSameSize!!Trait method!replacementCollection" return a collection that will be put into 'nonEmpty' "	^ self replacementCollectionSameSize, self 	replacementCollectionSameSize   ! !StringTest removeSelector: #replacementCollection!StringTest removeSelector: #otherCollection!!Trait method!oldSubCollection" return a subCollection included in collectionWith1TimeSubcollection .ex :   subCollection := #( 2 3 4) and collectionWith1TimeSubcollection := #(1 2 3 4 5)"	self explicitRequirement! !StringTest removeSelector: #oldSubCollection!!Trait method!nonEmptyMoreThan1Element" return a collection that doesn't includes equal elements' and doesn't include nil elements'" 	^self explicitRequirement.! !StringTest removeSelector: #nonEmptyMoreThan1Element!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !StringTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !StringTest removeSelector: #nonEmpty!!Trait method!newElement"return an element that will be put in the collection in place of another"	self explicitRequirement! !StringTest removeSelector: #newElement!!Trait method!moreThan4Elements" return a collection including at leat 4 elements"	self explicitRequirement! !StringTest removeSelector: #moreThan4Elements!!Trait method!moreThan3Elements	" return a collection including atLeast 3 elements"	self explicitRequirement! !StringTest removeSelector: #moreThan3Elements!!Trait method!integerCollectionWithoutEqualElements" return a collection of integer without equal elements"	^ self explicitRequirement! !StringTest removeSelector: #integerCollectionWithoutEqualElements!!Trait method!indexInNonEmpty" return an index between bounds of 'nonEmpty' "	self explicitRequirement! !StringTest removeSelector: #indexInNonEmpty!!Trait method!indexInForCollectionWithoutDuplicates" return an index between 'collectionWithoutEqualsElements'  bounds"	self explicitRequirement! !StringTest removeSelector: #indexInForCollectionWithoutDuplicates!!Trait method!indexArray" return a Collection including indexes between bounds of 'nonEmpty' "	self explicitRequirement.! !StringTest removeSelector: #indexArray!!Trait method!firstIndex" return an index between 'nonEmpty' bounds that is < to 'second index' "	^self explicitRequirement! !StringTest removeSelector: #firstIndex!!Trait method!firstCollection" return a collection that will be the first part of the concatenation"	self explicitRequirement! !StringTest removeSelector: #firstCollection!StringTest removeSelector: #findFirstInString:fromString:!!Trait method!empty	self requirement! !StringTest removeSelector: #empty!!Trait method!elementTwiceInForOccurrences" return an element included exactly two time in # collectionWithEqualElements"^ self explicitRequirement! !StringTest removeSelector: #elementTwiceInForOccurrences!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !StringTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !StringTest removeSelector: #elementNotInForOccurrences!!Trait method!elementNotInForIndexAccessing" return an element not included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !StringTest removeSelector: #elementNotInForIndexAccessing!!Trait method!elementNotInForElementAccessing" return an element not included in 'moreThan4Elements' "	self explicitRequirement! !StringTest removeSelector: #elementNotInForElementAccessing!!Trait method!elementNotIn"return an element not included in 'nonEmpty' "	^ self explicitRequirement! !StringTest removeSelector: #elementNotIn!!Trait method!elementInForIndexAccessing" return an element included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !StringTest removeSelector: #elementInForIndexAccessing!StringTest removeSelector: #elementInForIncludesTest!!Trait method!elementInForElementAccessing" return an element inculded in 'moreThan4Elements'"	self explicitRequirement! !StringTest removeSelector: #elementInForElementAccessing!StringTest removeSelector: #element!StringTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !StringTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements	self requirement! !StringTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithSameAtEndAndBegining	self requirement! !StringTest removeSelector: #collectionWithSameAtEndAndBegining!!Trait method!collectionWithEqualElements" return a collecition including atLeast two elements equal"^ self explicitRequirement.! !StringTest removeSelector: #collectionWithEqualElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !StringTest removeSelector: #collectionWithElementsToRemove!StringTest removeSelector: #collectionWithElement!!Trait method!collectionWith2TimeSubcollection" return a collection including 'oldSubCollection'  two or many time "	self explicitRequirement! !StringTest removeSelector: #collectionWith2TimeSubcollection!!Trait method!collectionWith1TimeSubcollection" return a collection including 'oldSubCollection'  only one time "	self explicitRequirement! !StringTest removeSelector: #collectionWith1TimeSubcollection!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !StringTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan5Elements" return a collection including at least 5 elements"		^ self explicitRequirement! !StringTest removeSelector: #collectionMoreThan5Elements!!Trait method!collectionMoreThan1NoDuplicates	" return a collection of size > 1 without equal elements"	self explicitRequirement! !StringTest removeSelector: #collectionMoreThan1NoDuplicates!!Trait method!collectionClass	self requirement! !StringTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !StringTest removeSelector: #collection!!Trait method!anotherValue" return a value ( not eual to 'aValue' ) to put into nonEmpty "	^ self explicitRequirement! !StringTest removeSelector: #anotherValue!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !StringTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !StringTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !StringTest removeSelector: #anotherElementNotIn!!Trait method!anIndex" return an index in nonEmpty bounds"	^ self explicitRequirement! !StringTest removeSelector: #anIndex!!Trait method!aValue	self requirement! !StringTest removeSelector: #aValue!Smalltalk globals removeClassNamed: #AnObsoleteStringTest!!Trait method!withEqualElements	" return a collection  including equal elements (classic equality)"	^ self explicitRequirement! !SortedCollectionTest removeSelector: #withEqualElements!SortedCollectionTest removeSelector: #testSpeciesLooseSortBlock!SortedCollectionTest removeSelector: #testSortBlock!SortedCollectionTest removeSelector: #testSort!!Trait method!testRemoveAll	| el aSubCollection collection res |	collection := self nonEmptyWithoutEqualElements.	el := collection anyOne.	aSubCollection := collection copyWithout: el.	res := collection removeAll: aSubCollection.	self assert: collection size = 1.	self nonEmptyWithoutEqualElements do: [ :each | self assert: each = el ]! !SortedCollectionTest removeSelector: #testRemoveAll!SortedCollectionTest removeSelector: #testMedian!SortedCollectionTest removeSelector: #testLastIndexOfStartingAt!SortedCollectionTest removeSelector: #testLastIndexOf!SortedCollectionTest removeSelector: #testIndexOfSubCollectionStartingAtIfAbsent!SortedCollectionTest removeSelector: #testIndexOfSubCollectionStartingAt!SortedCollectionTest removeSelector: #testIndexOfStartingAt!SortedCollectionTest removeSelector: #testIndexOfIfAbsent!SortedCollectionTest removeSelector: #testIndexOf!SortedCollectionTest removeSelector: #testIdentityIndexOfIAbsent!SortedCollectionTest removeSelector: #testIdentityIndexOf!!Trait method!testIdentityIncludes	" test the comportement in presence of elements 'includes' but not 'identityIncludes' "	" can not be used by collections that can't include elements for wich copy doesn't return another instance "	| collection anElement |		collection := self collectionWithCopyNonIdentical.	anElement := collection anyOne copy.	self deny: (collection identityIncludes: anElement)! !SortedCollectionTest removeSelector: #testIdentityIncludes!SortedCollectionTest removeSelector: #testFlatCollect!SortedCollectionTest removeSelector: #testEquals!SortedCollectionTest removeSelector: #testDo2!SortedCollectionTest removeSelector: #testCreation!SortedCollectionTest removeSelector: #testCopy!SortedCollectionTest removeSelector: #testCollect!SortedCollectionTest removeSelector: #testAddAll2!SortedCollectionTest removeSelector: #testAddAll!SortedCollectionTest removeSelector: #testAdd!!Trait method!test0FixtureTConvertAsSetForMultiplinessTest	"a collection  with equal elements:"	| res |	self withEqualElements.	res := true.	self withEqualElements detect: [ :each | (self withEqualElements occurrencesOf: each) > 1 ] ifNone: [ res := false ].	self assert: res = true! !SortedCollectionTest removeSelector: #test0FixtureTConvertAsSetForMultiplinessTest!!Trait method!subCollectionNotIn" return a collection for which at least one element is not included in 'moreThan4Elements' "	self explicitRequirement! !SortedCollectionTest removeSelector: #subCollectionNotIn!SortedCollectionTest removeSelector: #speciesClass!SortedCollectionTest removeSelector: #sizeCollection!SortedCollectionTest removeSelector: #setUp!SortedCollectionTest removeSelector: #result!!Trait method!replacementCollection" return a collection including elements of type 'collectionOfSize5' elements'type"self explicitRequirement! !SortedCollectionTest removeSelector: #replacementCollection!!Trait method!otherCollection	"Returns a collection that does not include what is returned by #element."	^ self explicitRequirement! !SortedCollectionTest removeSelector: #otherCollection!SortedCollectionTest removeSelector: #oldSubCollection!!Trait method!nonEmptyWithoutEqualElements" return a collection without equal elements "	self explicitRequirement! !SortedCollectionTest removeSelector: #nonEmptyWithoutEqualElements!!Trait method!nonEmptyMoreThan1Element" return a collection that doesn't includes equal elements' and doesn't include nil elements'" 	^self explicitRequirement.! !SortedCollectionTest removeSelector: #nonEmptyMoreThan1Element!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !SortedCollectionTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !SortedCollectionTest removeSelector: #nonEmpty!!Trait method!moreThan4Elements" return a collection including at leat 4 elements"	self explicitRequirement! !SortedCollectionTest removeSelector: #moreThan4Elements!!Trait method!moreThan3Elements	" return a collection including atLeast 3 elements"	self explicitRequirement! !SortedCollectionTest removeSelector: #moreThan3Elements!!Trait method!integerCollectionWithoutEqualElements" return a collection of integer without equal elements"	^ self explicitRequirement! !SortedCollectionTest removeSelector: #integerCollectionWithoutEqualElements!SortedCollectionTest removeSelector: #integerCollection!!Trait method!indexInNonEmpty" return an index between bounds of 'nonEmpty' "	self explicitRequirement! !SortedCollectionTest removeSelector: #indexInNonEmpty!!Trait method!indexInForCollectionWithoutDuplicates" return an index between 'collectionWithoutEqualsElements'  bounds"	self explicitRequirement! !SortedCollectionTest removeSelector: #indexInForCollectionWithoutDuplicates!SortedCollectionTest removeSelector: #floatCollectionWithSameAtEndAndBegining!SortedCollectionTest removeSelector: #expectedSizeAfterReject!!Trait method!empty	self requirement! !SortedCollectionTest removeSelector: #empty!!Trait method!elementsCopyNonIdenticalWithoutEqualElements	" return a collection that does niot incllude equal elements ( classic equality )	all elements included are elements for which copy is not identical to the element  "	^ self explicitRequirement! !SortedCollectionTest removeSelector: #elementsCopyNonIdenticalWithoutEqualElements!!Trait method!elementTwiceInForOccurrences" return an element included exactly two time in # collectionWithEqualElements"^ self explicitRequirement! !SortedCollectionTest removeSelector: #elementTwiceInForOccurrences!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !SortedCollectionTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !SortedCollectionTest removeSelector: #elementNotInForOccurrences!SortedCollectionTest removeSelector: #elementNotInForIndexAccessing!!Trait method!elementNotInForElementAccessing" return an element not included in 'moreThan4Elements' "	self explicitRequirement! !SortedCollectionTest removeSelector: #elementNotInForElementAccessing!!Trait method!elementNotIn	self requirement! !SortedCollectionTest removeSelector: #elementNotIn!SortedCollectionTest removeSelector: #elementInForIndexAccessing!SortedCollectionTest removeSelector: #elementInForIncludesTest!!Trait method!elementInForElementAccessing" return an element inculded in 'moreThan4Elements'"	self explicitRequirement! !SortedCollectionTest removeSelector: #elementInForElementAccessing!SortedCollectionTest removeSelector: #elementInCollectionOfFloat!!Trait method!element	"Returns an object that can be added to the collection returned by #collection."	^ self explicitRequirement! !SortedCollectionTest removeSelector: #element!SortedCollectionTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !SortedCollectionTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements	self requirement! !SortedCollectionTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithSameAtEndAndBegining	self requirement! !SortedCollectionTest removeSelector: #collectionWithSameAtEndAndBegining!!Trait method!collectionWithNonIdentitySameAtEndAndBegining	" return a collection with elements at end and begining equals only with classic equality (they are not the same object).(others elements of the collection are not equal to those elements)"	self explicitRequirement! !SortedCollectionTest removeSelector: #collectionWithNonIdentitySameAtEndAndBegining!!Trait method!collectionWithEqualElements" return a collecition including atLeast two elements equal"^ self explicitRequirement.! !SortedCollectionTest removeSelector: #collectionWithEqualElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !SortedCollectionTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWithElement	"Returns a collection that already includes what is returned by #element."	^ self explicitRequirement! !SortedCollectionTest removeSelector: #collectionWithElement!!Trait method!collectionWithCopyNonIdentical	" return a collection that include elements for which 'copy' return a different object (this is not the case of SmallInteger)"	^ self explicitRequirement! !SortedCollectionTest removeSelector: #collectionWithCopyNonIdentical!!Trait method!collectionWith5Elements" return a collection of size 5 including 5 elements"self explicitRequirement! !SortedCollectionTest removeSelector: #collectionWith5Elements!SortedCollectionTest removeSelector: #collectionWith2TimeSubcollection!SortedCollectionTest removeSelector: #collectionWith1TimeSubcollection!!Trait method!collectionOfSize5" return a collection of size 5"self explicitRequirement! !SortedCollectionTest removeSelector: #collectionOfSize5!SortedCollectionTest removeSelector: #collectionOfFloat!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !SortedCollectionTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan5Elements" return a collection including at least 5 elements"		^ self explicitRequirement! !SortedCollectionTest removeSelector: #collectionMoreThan5Elements!SortedCollectionTest removeSelector: #collectionMoreThan1NoDuplicates!!Trait method!collectionClass	self requirement! !SortedCollectionTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !SortedCollectionTest removeSelector: #collection!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !SortedCollectionTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !SortedCollectionTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !SortedCollectionTest removeSelector: #anotherElementNotIn!SortedCollectionTest removeSelector: #accessCollection!Smalltalk globals removeClassNamed: #AnObsoleteSortedCollectionTest!!Trait method!testUnion		| union |	union := self empty union: self nonEmpty.	self containsAll: union of: self empty andOf: self nonEmpty.	union := self nonEmpty union: self empty.	self containsAll: union of: self empty andOf: self nonEmpty.	union := self collection union: self nonEmpty.	self containsAll: union of: self collection andOf: self nonEmpty.! !SetTest removeSelector: #testUnion!SetTest removeSelector: #testSize2!SetTest removeSelector: #testSetWithNilItemsIsHealthy!!Trait method!testRemoveIfAbsent 	| el res |	el := self elementNotIn.	res := self nonEmptyWithoutEqualElements remove: el ifAbsent: [ 33 ].	self assert: res = 33! !SetTest removeSelector: #testRemoveIfAbsent!!Trait method!testRemoveAll	| el aSubCollection collection res |	collection := self nonEmptyWithoutEqualElements.	el := collection anyOne.	aSubCollection := collection copyWithout: el.	res := collection removeAll: aSubCollection.	self assert: collection size = 1.	self nonEmptyWithoutEqualElements do: [ :each | self assert: each = el ]! !SetTest removeSelector: #testRemoveAll!SetTest removeSelector: #testRemove!SetTest removeSelector: #testOccurrences!SetTest removeSelector: #testLike!SetTest removeSelector: #testIsHealthy!SetTest removeSelector: #testIntersection!!Trait method!testIncludesElementIsNotThere		self deny: (self nonEmpty includes: self elementNotIn).	self assert: (self nonEmpty includes: self nonEmpty anyOne).	self deny: (self empty includes: self elementNotIn)! !SetTest removeSelector: #testIncludesElementIsNotThere!SetTest removeSelector: #testIncludes!SetTest removeSelector: #testIllegal!!Trait method!testIdentityIncludes	" test the comportement in presence of elements 'includes' but not 'identityIncludes' "	" can not be used by collections that can't include elements for wich copy doesn't return another instance "	| collection anElement |		collection := self collectionWithCopyNonIdentical.	anElement := collection anyOne copy.	self deny: (collection identityIncludes: anElement)! !SetTest removeSelector: #testIdentityIncludes!SetTest removeSelector: #testGrow!SetTest removeSelector: #testFlatCollectAsSet!SetTest removeSelector: #testFlatCollect!SetTest removeSelector: #testDoWithoutNoDuplicates!SetTest removeSelector: #testDo2!SetTest removeSelector: #testCopyWithout!!Trait method!testCopyNonEmptyWithoutAllNotIncluded	| res |	res := self nonEmpty copyWithoutAll: self collectionNotIncluded.	"here we do not test the size since for a non empty set we would get a problem.	Then in addition copy is not about duplicate management. The element should 	be in at the end."	self nonEmpty do: [ :each | self assert: (res includes: each) ]! !SetTest removeSelector: #testCopyNonEmptyWithoutAllNotIncluded!SetTest removeSelector: #testCopy!SetTest removeSelector: #testCollect2!SetTest removeSelector: #testCollect!!Trait method!testAsSet	| |	"test with a collection without equal elements :"	self assertSameContents: self collectionWithoutEqualElements whenConvertedTo: Set.	! !SetTest removeSelector: #testAsSet!SetTest removeSelector: #testAllowInclusionOfNils!SetTest removeSelector: #testAddWithOccurences!!Trait method!testAddNonEmptyGrowsWhenNewElement		| oldSize |	oldSize := self nonEmpty size.		self nonEmpty add: self elementNotIn.	self assert: (self nonEmpty size) > oldSize.! !SetTest removeSelector: #testAddNonEmptyGrowsWhenNewElement!SetTest removeSelector: #testAdd!!Trait method!test0FixtureAddForUniquenessTest	self element.	self collectionWithElement.	self assert: (self collectionWithElement includes: self element).	self collectionWithoutElement.	self deny: (self collectionWithoutElement includes: self element)! !SetTest removeSelector: #test0FixtureAddForUniquenessTest!SetTest removeSelector: #speciesClass!SetTest removeSelector: #sizeCollection!SetTest removeSelector: #setUp!SetTest removeSelector: #selectedNumber!!Trait method!secondCollection" return a collection that will be the second part of the concatenation"	self explicitRequirement! !SetTest removeSelector: #secondCollection!SetTest removeSelector: #result!!Trait method!nonEmptyWithoutEqualElements" return a collection without equal elements "	self explicitRequirement! !SetTest removeSelector: #nonEmptyWithoutEqualElements!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !SetTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !SetTest removeSelector: #nonEmpty!!Trait method!integerCollectionWithoutEqualElements" return a collection of integer without equal elements"	^ self explicitRequirement! !SetTest removeSelector: #integerCollectionWithoutEqualElements!!Trait method!firstCollection" return a collection that will be the first part of the concatenation"	self explicitRequirement! !SetTest removeSelector: #firstCollection!SetTest removeSelector: #expectedSizeAfterReject!SetTest removeSelector: #emptyButAllocatedWith20!!Trait method!empty	self requirement! !SetTest removeSelector: #empty!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !SetTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !SetTest removeSelector: #elementNotInForOccurrences!!Trait method!elementNotIn	self requirement! !SetTest removeSelector: #elementNotIn!SetTest removeSelector: #elementInForIncludesTest!!Trait method!element	self requirement! !SetTest removeSelector: #element!SetTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !SetTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithoutElement	" return a collection that does not include 'element' "	^ self explicitRequirement! !SetTest removeSelector: #collectionWithoutElement!!Trait method!collectionWithSortableElements" return a collection elements that can be sorte ( understanding message ' < '  or ' > ')"	^ self explicitRequirement! !SetTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !SetTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWithElement" return a collection already including 'element'    "	^ self explicitRequirement! !SetTest removeSelector: #collectionWithElement!!Trait method!collectionWithCopyNonIdentical	" return a collection that include elements for which 'copy' return a different object (this is not the case of SmallInteger)"	^ self explicitRequirement! !SetTest removeSelector: #collectionWithCopyNonIdentical!SetTest removeSelector: #collectionOfFloat!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !SetTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan5Elements" return a collection including at least 5 elements"		^ self explicitRequirement! !SetTest removeSelector: #collectionMoreThan5Elements!SetTest removeSelector: #collectionInForIncluding!SetTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !SetTest removeSelector: #collection!SetTest removeSelector: #classToBeTested!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !SetTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !SetTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !SetTest removeSelector: #anotherElementNotIn!PluggableSetTest removeSelector: #classToBeTested!PluggableSetTest class removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoletePluggableSetTest!IdentitySetTest removeSelector: #testIdentity!IdentitySetTest removeSelector: #testGrowWithNil!IdentitySetTest removeSelector: #identityCollectionWithElementsCopyNotIdentical!IdentitySetTest removeSelector: #classToBeTested!IdentitySetTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteIdentitySetTest!Smalltalk globals removeClassNamed: #AnObsoleteSetTest!!Trait method!withEqualElements	" return a collection  including equal elements (classic equality)"	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #withEqualElements!!Trait method!unsortedCollection"Return a collection that is not yet sorted"	^self explicitRequirement! !OrderedCollectionTest removeSelector: #unsortedCollection!!Trait method!testWithCollect		| result firstCollection secondCollection index  |	firstCollection := self nonEmptyMoreThan1Element.	secondCollection := firstCollection copy.	index := 0.		result := firstCollection  with: secondCollection collect:		[:a :b |		( index := index + 1).		self assert: (firstCollection at: index) equals:  a. 		self assert: (secondCollection at: index) equals:  b.		b].		1 to: result size do:[: i | self assert: (result at:i)= (secondCollection  at: i)].	self assert: result size = secondCollection  size.! !OrderedCollectionTest removeSelector: #testWithCollect!!Trait method!testSort	| result tmp |	result := self unsortedCollection sort.	tmp := result at: 1.	result do:		[:each | self assert: each>=tmp. tmp:= each. ].! !OrderedCollectionTest removeSelector: #testSort!!Trait method!testReversed	| result |	result := self nonEmpty reversed .		"verify content of 'result: '"	1 to:  result size do:		[:i | self assert: ((result at:i)=(self nonEmpty at:(self nonEmpty size-i+1)))].	"verify size of 'result' :"	self assert: result size=self nonEmpty size.! !OrderedCollectionTest removeSelector: #testReversed!OrderedCollectionTest removeSelector: #testRemoveLast!!Trait method!testRemoveIfAbsent	| el res |	el := self elementNotIn.	res := self nonEmptyWithoutEqualElements remove: el ifAbsent: [ 33 ].	self assert: res = 33! !OrderedCollectionTest removeSelector: #testRemoveIfAbsent!OrderedCollectionTest removeSelector: #testRemoveFirst!OrderedCollectionTest removeSelector: #testRemoveAt!!Trait method!testRemoveAllSuchThat	| el aSubCollection |	el := self nonEmptyWithoutEqualElements anyOne.	aSubCollection := self nonEmptyWithoutEqualElements copyWithout: el.	self nonEmptyWithoutEqualElements removeAllSuchThat: [ :each | aSubCollection includes: each ].	self assert: self nonEmptyWithoutEqualElements size = 1.	self nonEmptyWithoutEqualElements do: [ :each | self assert: each = el ]! !OrderedCollectionTest removeSelector: #testRemoveAllSuchThat!!Trait method!testRemoveAll	| el aSubCollection collection res |	collection := self nonEmptyWithoutEqualElements.	el := collection anyOne.	aSubCollection := collection copyWithout: el.	res := collection removeAll: aSubCollection.	self assert: collection size = 1.	self nonEmptyWithoutEqualElements do: [ :each | self assert: each = el ]! !OrderedCollectionTest removeSelector: #testRemoveAll!OrderedCollectionTest removeSelector: #testIndexOfWithDuplicates!!Trait method!testIncludesElementIsNotThere		self deny: (self nonEmpty includes: self elementNotIn).	self assert: (self nonEmpty includes: self nonEmpty anyOne).	self deny: (self empty includes: self elementNotIn)! !OrderedCollectionTest removeSelector: #testIncludesElementIsNotThere!!Trait method!testIdentityIncludes	" test the comportement in presence of elements 'includes' but not 'identityIncludes' "	" can not be used by collections that can't include elements for wich copy doesn't return another instance "	| collection anElement |		collection := self collectionWithCopyNonIdentical.	anElement := collection anyOne copy.	self deny: (collection identityIncludes: anElement)! !OrderedCollectionTest removeSelector: #testIdentityIncludes!OrderedCollectionTest removeSelector: #testEndsWithAnyOf!OrderedCollectionTest removeSelector: #testCopyWith!!Trait method!testCopyReplaceFromToWith	| result  indexOfSubcollection lastIndexOfOldSubcollection lastIndexOfReplacementCollection |		indexOfSubcollection := (self firstIndexesOf: self oldSubCollection  in:  self collectionWith1TimeSubcollection) at: 1. 	lastIndexOfOldSubcollection := indexOfSubcollection + self oldSubCollection size -1.	lastIndexOfReplacementCollection := indexOfSubcollection + self replacementCollection  size -1.		result := self collectionWith1TimeSubcollection  copyReplaceFrom: indexOfSubcollection  to: lastIndexOfOldSubcollection   with: self replacementCollection .		"verify content of 'result' : "	"first part of 'result'  "		1 to: (indexOfSubcollection  - 1) do: 		[ 		:i | 		self assert: (self collectionWith1TimeSubcollection  at:i) = (result at: i)		].		" middle part containing replacementCollection : "		(indexOfSubcollection ) to: ( lastIndexOfReplacementCollection  ) do: 		[		:i |		self assert: (result at: i)=(self replacementCollection at: (i - indexOfSubcollection +1))		].		" end part :"	1 to: (result size - lastIndexOfReplacementCollection   ) do:		[ 		:i |		self assert: (result at: ( lastIndexOfReplacementCollection  + i  ) ) = (self collectionWith1TimeSubcollection  at: ( lastIndexOfOldSubcollection  + i  ) ).		].					! !OrderedCollectionTest removeSelector: #testCopyReplaceFromToWith!!Trait method!testCopyNonEmptyWithoutAllNotIncluded	| res |	res := self nonEmpty copyWithoutAll: self collectionNotIncluded.	"here we do not test the size since for a non empty set we would get a problem.	Then in addition copy is not about duplicate management. The element should 	be in at the end."	self nonEmpty do: [ :each | self assert: (res includes: each) ]! !OrderedCollectionTest removeSelector: #testCopyNonEmptyWithoutAllNotIncluded!!Trait method!testCopyFromTo	| result  index collection |	collection := self collectionWithoutEqualElements .	index :=self indexInForCollectionWithoutDuplicates .	result := collection   copyFrom: index  to: collection  size .		"verify content of 'result' : "	1 to: result size do:		[:i | 		self assert: (result at:i)=(collection  at: (i + index - 1))].		"verify size of 'result' : "	self assert: result size = (collection  size - index + 1).! !OrderedCollectionTest removeSelector: #testCopyFromTo!OrderedCollectionTest removeSelector: #testCopyEmptyOld!!Trait method!testCollectFromTo		| result |	result:=self nonEmptyMoreThan1Element 		collect: [ :each | each ]		from: 1		to: (self nonEmptyMoreThan1Element size - 1).			1 to: result size		do: [ :i | self assert: (self nonEmptyMoreThan1Element at: i) = (result at: i) ].	self assert: result size = (self nonEmptyMoreThan1Element size - 1)! !OrderedCollectionTest removeSelector: #testCollectFromTo!OrderedCollectionTest removeSelector: #testCollect!OrderedCollectionTest removeSelector: #testCapacityFromAsOrderedCollection!OrderedCollectionTest removeSelector: #testBeginsWithAnyOf!!Trait method!testAtPut		self nonEmpty at: self anIndex put: self aValue.	self assert: (self nonEmpty at: self anIndex) = self aValue.	! !OrderedCollectionTest removeSelector: #testAtPut!OrderedCollectionTest removeSelector: #testAtIfAbsentPut!!Trait method!testAt	"	self assert: (self accessCollection at: 1) = 1.	self assert: (self accessCollection at: 2) = 2.	"	| index |	index := self moreThan4Elements indexOf: self elementInForElementAccessing.	self assert: (self moreThan4Elements at: index) = self elementInForElementAccessing! !OrderedCollectionTest removeSelector: #testAt!OrderedCollectionTest removeSelector: #testAsOrderedCollectionReturnsOrderedCollection!OrderedCollectionTest removeSelector: #testAsOrderedCollectionKeepsIdentity!OrderedCollectionTest removeSelector: #testAddLast!OrderedCollectionTest removeSelector: #testAddItem2!OrderedCollectionTest removeSelector: #testAddItem1!OrderedCollectionTest removeSelector: #testAddFirst!OrderedCollectionTest removeSelector: #testAddDuplicateItem1!OrderedCollectionTest removeSelector: #testAddBeforeIndex!OrderedCollectionTest removeSelector: #testAddBeforeAndRemove!OrderedCollectionTest removeSelector: #testAddBefore!OrderedCollectionTest removeSelector: #testAddAllLast!OrderedCollectionTest removeSelector: #testAddAllFirstUnlessAlreadyPresent!OrderedCollectionTest removeSelector: #testAddAllFirst!OrderedCollectionTest removeSelector: #testAddAll!OrderedCollectionTest removeSelector: #testAddAfterIndex!OrderedCollectionTest removeSelector: #testAddAfter!OrderedCollectionTest removeSelector: #testAdd!!Trait method!test0FixtureTConvertAsSetForMultiplinessTest	"a collection  with equal elements:"	| res |	self withEqualElements.	res := true.	self withEqualElements detect: [ :each | (self withEqualElements occurrencesOf: each) > 1 ] ifNone: [ res := false ].	self assert: res = true! !OrderedCollectionTest removeSelector: #test0FixtureTConvertAsSetForMultiplinessTest!!Trait method!subCollectionNotIn" return a collection for which at least one element is not included in 'moreThan4Elements' "	self explicitRequirement! !OrderedCollectionTest removeSelector: #subCollectionNotIn!OrderedCollectionTest removeSelector: #speciesClass!!Trait method!sortedInAscendingOrderCollection	"Return a collection sorted in ascending order"	^ self explicitRequirement	! !OrderedCollectionTest removeSelector: #sortedInAscendingOrderCollection!OrderedCollectionTest removeSelector: #sizeCollection!!Trait method!simpleCollection	^self explicitRequirement.! !OrderedCollectionTest removeSelector: #simpleCollection!OrderedCollectionTest removeSelector: #setUp!!Trait method!selectorToAccessValuePutIn	"return the selector of the method that should be invoked to access an element"		^ self explicitRequirement! !OrderedCollectionTest removeSelector: #selectorToAccessValuePutIn!!Trait method!secondIndex" return an index between 'nonEmpty' bounds that is > to 'first index' "	^self explicitRequirement! !OrderedCollectionTest removeSelector: #secondIndex!!Trait method!secondCollection" return a collection that will be the second part of the concatenation"	self explicitRequirement! !OrderedCollectionTest removeSelector: #secondCollection!OrderedCollectionTest removeSelector: #result!!Trait method!replacementCollectionSameSize" return a collection of size (secondIndex - firstIndex + 1)"	^self explicitRequirement! !OrderedCollectionTest removeSelector: #replacementCollectionSameSize!!Trait method!replacementCollection" return a collection that will be put into 'nonEmpty' "	^ self replacementCollectionSameSize, self 	replacementCollectionSameSize   ! !OrderedCollectionTest removeSelector: #replacementCollection!!Trait method!otherCollection	"Returns a collection that does not include what is returned by #element."	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #otherCollection!!Trait method!oldSubCollection" return a subCollection included in collectionWith1TimeSubcollection .ex :   subCollection := #( 2 3 4) and collectionWith1TimeSubcollection := #(1 2 3 4 5)"	self explicitRequirement! !OrderedCollectionTest removeSelector: #oldSubCollection!!Trait method!nonEmptyWithoutEqualElements" return a collection without equal elements "	self explicitRequirement! !OrderedCollectionTest removeSelector: #nonEmptyWithoutEqualElements!!Trait method!nonEmptyMoreThan1Element" return a collection that doesn't includes equal elements' and doesn't include nil elements'" 	^self explicitRequirement.! !OrderedCollectionTest removeSelector: #nonEmptyMoreThan1Element!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !OrderedCollectionTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !OrderedCollectionTest removeSelector: #nonEmpty!!Trait method!newElement"return an element that will be put in the collection in place of another"	self explicitRequirement! !OrderedCollectionTest removeSelector: #newElement!!Trait method!moreThan4Elements" return a collection including at leat 4 elements"	self explicitRequirement! !OrderedCollectionTest removeSelector: #moreThan4Elements!!Trait method!moreThan3Elements	" return a collection including atLeast 3 elements"	self explicitRequirement! !OrderedCollectionTest removeSelector: #moreThan3Elements!!Trait method!integerCollectionWithoutEqualElements" return a collection of integer without equal elements"	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #integerCollectionWithoutEqualElements!OrderedCollectionTest removeSelector: #integerCollection!!Trait method!indexInNonEmpty" return an index between bounds of 'nonEmpty' "	self explicitRequirement! !OrderedCollectionTest removeSelector: #indexInNonEmpty!!Trait method!indexInForCollectionWithoutDuplicates" return an index between 'collectionWithoutEqualsElements'  bounds"	self explicitRequirement! !OrderedCollectionTest removeSelector: #indexInForCollectionWithoutDuplicates!!Trait method!indexArray" return a Collection including indexes between bounds of 'nonEmpty' "	self explicitRequirement.! !OrderedCollectionTest removeSelector: #indexArray!OrderedCollectionTest removeSelector: #floatCollectionWithSameAtEndAndBegining!!Trait method!firstIndex" return an index between 'nonEmpty' bounds that is < to 'second index' "	^self explicitRequirement! !OrderedCollectionTest removeSelector: #firstIndex!!Trait method!firstCollection" return a collection that will be the first part of the concatenation"	self explicitRequirement! !OrderedCollectionTest removeSelector: #firstCollection!OrderedCollectionTest removeSelector: #expectedSizeAfterReject!OrderedCollectionTest removeSelector: #emptyButAllocatedWith20!!Trait method!empty	self requirement! !OrderedCollectionTest removeSelector: #empty!!Trait method!elementsCopyNonIdenticalWithoutEqualElements	" return a collection that does niot incllude equal elements ( classic equality )	all elements included are elements for which copy is not identical to the element  "	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #elementsCopyNonIdenticalWithoutEqualElements!!Trait method!elementTwiceInForOccurrences" return an element included exactly two time in # collectionWithEqualElements"^ self explicitRequirement! !OrderedCollectionTest removeSelector: #elementTwiceInForOccurrences!!Trait method!elementTwiceIn	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #elementTwiceIn!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !OrderedCollectionTest removeSelector: #elementNotInForOccurrences!!Trait method!elementNotInForIndexAccessing" return an element not included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !OrderedCollectionTest removeSelector: #elementNotInForIndexAccessing!!Trait method!elementNotInForElementAccessing" return an element not included in 'moreThan4Elements' "	self explicitRequirement! !OrderedCollectionTest removeSelector: #elementNotInForElementAccessing!!Trait method!elementNotIn	self requirement! !OrderedCollectionTest removeSelector: #elementNotIn!!Trait method!elementInForIndexAccessing" return an element included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !OrderedCollectionTest removeSelector: #elementInForIndexAccessing!OrderedCollectionTest removeSelector: #elementInForIncludesTest!!Trait method!elementInForElementAccessing" return an element inculded in 'moreThan4Elements'"	self explicitRequirement! !OrderedCollectionTest removeSelector: #elementInForElementAccessing!OrderedCollectionTest removeSelector: #elementInCollectionOfFloat!!Trait method!element	"Returns an object that can be added to the collection returned by #collection."	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #element!OrderedCollectionTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !OrderedCollectionTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements	self requirement! !OrderedCollectionTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithSameAtEndAndBegining	self requirement! !OrderedCollectionTest removeSelector: #collectionWithSameAtEndAndBegining!!Trait method!collectionWithNonIdentitySameAtEndAndBegining	" return a collection with elements at end and begining equals only with classic equality (they are not the same object).(others elements of the collection are not equal to those elements)"	self explicitRequirement! !OrderedCollectionTest removeSelector: #collectionWithNonIdentitySameAtEndAndBegining!!Trait method!collectionWithEqualElements" return a collecition including atLeast two elements equal"^ self explicitRequirement.! !OrderedCollectionTest removeSelector: #collectionWithEqualElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWithElement	"Returns a collection that already includes what is returned by #element."	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #collectionWithElement!!Trait method!collectionWithCopyNonIdentical	" return a collection that include elements for which 'copy' return a different object (this is not the case of SmallInteger)"	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #collectionWithCopyNonIdentical!!Trait method!collectionWithCharacters	^self explicitRequirement.! !OrderedCollectionTest removeSelector: #collectionWithCharacters!OrderedCollectionTest removeSelector: #collectionWith5Elements!!Trait method!collectionWith2TimeSubcollection" return a collection including 'oldSubCollection'  two or many time "	self explicitRequirement! !OrderedCollectionTest removeSelector: #collectionWith2TimeSubcollection!!Trait method!collectionWith1TimeSubcollection" return a collection including 'oldSubCollection'  only one time "	self explicitRequirement! !OrderedCollectionTest removeSelector: #collectionWith1TimeSubcollection!OrderedCollectionTest removeSelector: #collectionOfFloat!!Trait method!collectionOfCollectionsOfStrings	^self explicitRequirement.! !OrderedCollectionTest removeSelector: #collectionOfCollectionsOfStrings!!Trait method!collectionOfCollectionsOfInts	^self explicitRequirement.! !OrderedCollectionTest removeSelector: #collectionOfCollectionsOfInts!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan5Elements" return a collection including at least 5 elements"		^ self explicitRequirement! !OrderedCollectionTest removeSelector: #collectionMoreThan5Elements!!Trait method!collectionMoreThan1NoDuplicates	" return a collection of size > 1 without equal elements"	self explicitRequirement! !OrderedCollectionTest removeSelector: #collectionMoreThan1NoDuplicates!OrderedCollectionTest removeSelector: #collectionInForIncluding!!Trait method!collectionClass	self requirement! !OrderedCollectionTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #collection!!Trait method!anotherValue" return a value ( not eual to 'aValue' ) to put into nonEmpty "	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #anotherValue!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #anotherElementNotIn!!Trait method!anIndex" return an index in nonEmpty bounds"	^ self explicitRequirement! !OrderedCollectionTest removeSelector: #anIndex!OrderedCollectionTest removeSelector: #accessCollection!!Trait method!aValue	self requirement! !OrderedCollectionTest removeSelector: #aValue!Smalltalk globals removeClassNamed: #AnObsoleteOrderedCollectionTest!!Trait method!unsortedCollection"Return a collection that is not yet sorted"	^self explicitRequirement! !IntervalTest removeSelector: #unsortedCollection!IntervalTest removeSelector: #testUnevenDo!IntervalTest removeSelector: #testShuffled!IntervalTest removeSelector: #testReverseUnevenDo!!Trait method!testReverseDo	| result |	result:= OrderedCollection new.	self nonEmpty reverseDo: [: each | result add: each].		1 to: result size do:		[:i|		self assert: (result at: i)=(self nonEmpty at:(self nonEmpty size-i+1))].! !IntervalTest removeSelector: #testReverseDo!IntervalTest removeSelector: #testRangeIncludes!IntervalTest removeSelector: #testPermutationsDo!IntervalTest removeSelector: #testOtherNewFrom!IntervalTest removeSelector: #testNumericTypes!IntervalTest removeSelector: #testNewFrom!IntervalTest removeSelector: #testMinus!!Trait method!testLast	self assert: self moreThan4Elements last = (self moreThan4Elements at: self moreThan4Elements size)! !IntervalTest removeSelector: #testLast!IntervalTest removeSelector: #testIsInterval!IntervalTest removeSelector: #testIsEvaluating!IntervalTest removeSelector: #testInvalid!IntervalTest removeSelector: #testIntervalStoreOn!IntervalTest removeSelector: #testInfiniteLoopBug6456!IntervalTest removeSelector: #testIndexOfBug6455!IntervalTest removeSelector: #testIndexOfBug1602!IntervalTest removeSelector: #testInclusionBug6455!IntervalTest removeSelector: #testInclusionBug1603!IntervalTest removeSelector: #testInclusion!!Trait method!testIncludesElementIsNotThere		self deny: (self nonEmpty includes: self elementNotIn).	self assert: (self nonEmpty includes: self nonEmpty anyOne).	self deny: (self empty includes: self elementNotIn)! !IntervalTest removeSelector: #testIncludesElementIsNotThere!!Trait method!testIdentityIncludes	" test the comportement in presence of elements 'includes' but not 'identityIncludes' "	" can not be used by collections that can't include elements for wich copy doesn't return another instance "	| collection anElement |		collection := self collectionWithCopyNonIdentical.	anElement := collection anyOne copy.	self deny: (collection identityIncludes: anElement)! !IntervalTest removeSelector: #testIdentityIncludes!IntervalTest removeSelector: #testExtent!IntervalTest removeSelector: #testEquals4!IntervalTest removeSelector: #testEquals3!IntervalTest removeSelector: #testEquals2!IntervalTest removeSelector: #testEquals!!Trait method!testDo! !IntervalTest removeSelector: #testDo!IntervalTest removeSelector: #testCollectThenSelectLocal!!Trait method!testAtWrap	"	self assert: (self accessCollection at: 1) = 1.	self assert: (self accessCollection at: 2) = 2.	"	| index |	index := self moreThan4Elements indexOf: self elementInForElementAccessing.	self assert: (self moreThan4Elements atWrap: index) = self elementInForElementAccessing.	self assert: (self moreThan4Elements atWrap: index + self moreThan4Elements size) = self elementInForElementAccessing.	self assert: (self moreThan4Elements atWrap: index - self moreThan4Elements size) = self elementInForElementAccessing.	self assert: (self moreThan4Elements atWrap: 1 + self moreThan4Elements size) = (self moreThan4Elements at: 1)! !IntervalTest removeSelector: #testAtWrap!!Trait method!testAt	"	self assert: (self accessCollection at: 1) = 1.	self assert: (self accessCollection at: 2) = 2.	"	| index |	index := self moreThan4Elements indexOf: self elementInForElementAccessing.	self assert: (self moreThan4Elements at: index) = self elementInForElementAccessing! !IntervalTest removeSelector: #testAt!IntervalTest removeSelector: #testAsInterval!IntervalTest removeSelector: #testAllButLastElements!IntervalTest removeSelector: #testAllButFirstElements!IntervalTest removeSelector: #testAdd!IntervalTest removeSelector: #test0IndexAccessingTest!!Trait method!test0CopyTest	self empty.	self assert: self empty size = 0.	self nonEmpty.	self assert: (self nonEmpty size = 0) not.	self collectionWithElementsToRemove.	self assert: (self collectionWithElementsToRemove size = 0) not.	self collectionWithElementsToRemove do: [ :each | self assert: (self nonEmpty includes: each) ].	self elementToAdd.	self deny: (self nonEmpty includes: self elementToAdd).	self collectionNotIncluded.	self collectionNotIncluded do: [ :each | self deny: (self nonEmpty includes: each) ]! !IntervalTest removeSelector: #test0CopyTest!!Trait method!subCollectionNotIn" return a collection for which at least one element is not included in 'moreThan4Elements' "	self explicitRequirement! !IntervalTest removeSelector: #subCollectionNotIn!IntervalTest removeSelector: #speciesClass!!Trait method!sortedInAscendingOrderCollection	"Return a collection sorted in ascending order"	^ self explicitRequirement	! !IntervalTest removeSelector: #sortedInAscendingOrderCollection!IntervalTest removeSelector: #sizeCollection!IntervalTest removeSelector: #setUp!!Trait method!secondCollection" return a collection that will be the second part of the concatenation"	self explicitRequirement! !IntervalTest removeSelector: #secondCollection!IntervalTest removeSelector: #result!!Trait method!replacementCollection" return a collection that will be used to replace 'oldSubcollection' in ' collectionWith1TimeSubcollection'  " 	self explicitRequirement! !IntervalTest removeSelector: #replacementCollection!!Trait method!oldSubCollection" return a subCollection included in collectionWith1TimeSubcollection .ex :   subCollection := #( 2 3 4) and collectionWith1TimeSubcollection := #(1 2 3 4 5)"	self explicitRequirement! !IntervalTest removeSelector: #oldSubCollection!!Trait method!nonEmptyMoreThan1Element" return a collection that doesn't includes equal elements' and doesn't include nil elements'" 	^self explicitRequirement.! !IntervalTest removeSelector: #nonEmptyMoreThan1Element!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !IntervalTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !IntervalTest removeSelector: #nonEmpty!!Trait method!moreThan4Elements" return a collection including at leat 4 elements"	self explicitRequirement! !IntervalTest removeSelector: #moreThan4Elements!!Trait method!moreThan3Elements	" return a collection including atLeast 3 elements"	self explicitRequirement! !IntervalTest removeSelector: #moreThan3Elements!!Trait method!integerCollectionWithoutEqualElements" return a collection of integer without equal elements"	^ self explicitRequirement! !IntervalTest removeSelector: #integerCollectionWithoutEqualElements!IntervalTest removeSelector: #integerCollection!!Trait method!indexInNonEmpty" return an index between bounds of 'nonEmpty' "	self explicitRequirement! !IntervalTest removeSelector: #indexInNonEmpty!!Trait method!indexInForCollectionWithoutDuplicates" return an index between 'collectionWithoutEqualsElements'  bounds"	self explicitRequirement! !IntervalTest removeSelector: #indexInForCollectionWithoutDuplicates!IntervalTest removeSelector: #firstOdd!IntervalTest removeSelector: #firstEven!!Trait method!firstCollection" return a collection that will be the first part of the concatenation"	self explicitRequirement! !IntervalTest removeSelector: #firstCollection!IntervalTest removeSelector: #expectedSizeAfterReject!!Trait method!empty	self requirement! !IntervalTest removeSelector: #empty!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !IntervalTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !IntervalTest removeSelector: #elementNotInForOccurrences!!Trait method!elementNotInForIndexAccessing" return an element not included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !IntervalTest removeSelector: #elementNotInForIndexAccessing!!Trait method!elementNotInForElementAccessing" return an element not included in 'moreThan4Elements' "	self explicitRequirement! !IntervalTest removeSelector: #elementNotInForElementAccessing!!Trait method!elementNotIn"return an element not included in 'nonEmpty' "	^ self explicitRequirement! !IntervalTest removeSelector: #elementNotIn!!Trait method!elementInForIndexAccessing" return an element included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !IntervalTest removeSelector: #elementInForIndexAccessing!IntervalTest removeSelector: #elementInForIndexAccess!IntervalTest removeSelector: #elementInForIncludesTest!!Trait method!elementInForElementAccessing" return an element inculded in 'moreThan4Elements'"	self explicitRequirement! !IntervalTest removeSelector: #elementInForElementAccessing!IntervalTest removeSelector: #elementInCollectionOfFloat!IntervalTest removeSelector: #doWithoutNumber!IntervalTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !IntervalTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements	self requirement! !IntervalTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !IntervalTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWithCopyNonIdentical	" return a collection that include elements for which 'copy' return a different object (this is not the case of SmallInteger)"	^ self explicitRequirement! !IntervalTest removeSelector: #collectionWithCopyNonIdentical!!Trait method!collectionWith1TimeSubcollection" return a collection including 'oldSubCollection'  only one time "	self explicitRequirement! !IntervalTest removeSelector: #collectionWith1TimeSubcollection!IntervalTest removeSelector: #collectionOfFloat!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !IntervalTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan1NoDuplicates	" return a collection of size > 1 without equal elements"	self explicitRequirement! !IntervalTest removeSelector: #collectionMoreThan1NoDuplicates!IntervalTest removeSelector: #collectionInForIncluding!IntervalTest removeSelector: #collectionClass!IntervalTest removeSelector: #collection!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !IntervalTest removeSelector: #anotherElementNotIn!IntervalTest removeSelector: #accessCollection!Smalltalk globals removeClassNamed: #AnObsoleteIntervalTest!!Trait method!withEqualElements	" return a collection  including equal elements (classic equality)"	^ self explicitRequirement! !HeapTest removeSelector: #withEqualElements!HeapTest removeSelector: #valuePutIn!HeapTest removeSelector: #testSortBlock!HeapTest removeSelector: #testRemove!HeapTest removeSelector: #testIfEqualIsTransitive!HeapTest removeSelector: #testHeap!HeapTest removeSelector: #testFirst!HeapTest removeSelector: #testExamples!HeapTest removeSelector: #testDo!!Trait method!testAddNonEmptyGrowsWhenNewElement		| oldSize |	oldSize := self nonEmpty size.		self nonEmpty add: self elementNotIn.	self assert: (self nonEmpty size) > oldSize.! !HeapTest removeSelector: #testAddNonEmptyGrowsWhenNewElement!HeapTest removeSelector: #testAdd!HeapTest removeSelector: #test1!!Trait method!test0FixtureRequirementsOfTGrowableTest	self empty.	self nonEmpty.	self element.	self elementNotIn.	self assert: self empty isEmpty.	self deny: self nonEmpty isEmpty.	self assert: (self nonEmpty includes: self element).	self deny: (self nonEmpty includes: self elementNotIn)! !HeapTest removeSelector: #test0FixtureRequirementsOfTGrowableTest!HeapTest removeSelector: #subCollectionNotIn!HeapTest removeSelector: #speciesClass!HeapTest removeSelector: #sizeCollection!HeapTest removeSelector: #setUp!HeapTest removeSelector: #secondIndex!HeapTest removeSelector: #secondCollection!HeapTest removeSelector: #result!HeapTest removeSelector: #replacementCollectionSameSize!HeapTest removeSelector: #replacementCollection!!Trait method!otherCollection	"Returns a collection that does not include what is returned by #element."	^ self explicitRequirement! !HeapTest removeSelector: #otherCollection!!Trait method!nonEmptyWithoutEqualElements" return a collection without equal elements "	self explicitRequirement! !HeapTest removeSelector: #nonEmptyWithoutEqualElements!HeapTest removeSelector: #nonEmptyMoreThan1Element!HeapTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !HeapTest removeSelector: #nonEmpty!HeapTest removeSelector: #newElement!HeapTest removeSelector: #moreThan4Elements!HeapTest removeSelector: #moreThan3Elements!!Trait method!integerCollectionWithoutEqualElements" return a collection of integer without equal elements"	^ self explicitRequirement! !HeapTest removeSelector: #integerCollectionWithoutEqualElements!HeapTest removeSelector: #indexInNonEmpty!HeapTest removeSelector: #indexInForCollectionWithoutDuplicates!HeapTest removeSelector: #indexArray!HeapTest removeSelector: #heapSortExample!HeapTest removeSelector: #heapExample!HeapTest removeSelector: #firstIndex!HeapTest removeSelector: #firstCollection!HeapTest removeSelector: #expectedSizeAfterReject!HeapTest removeSelector: #expectedElementByDetect!!Trait method!empty	self requirement! !HeapTest removeSelector: #empty!!Trait method!elementsCopyNonIdenticalWithoutEqualElements	" return a collection that does niot incllude equal elements ( classic equality )	all elements included are elements for which copy is not identical to the element  "	^ self explicitRequirement! !HeapTest removeSelector: #elementsCopyNonIdenticalWithoutEqualElements!!Trait method!elementTwiceInForOccurrences" return an element included exactly two time in # collectionWithEqualElements"^ self explicitRequirement! !HeapTest removeSelector: #elementTwiceInForOccurrences!!Trait method!elementTwiceIn	^ self explicitRequirement! !HeapTest removeSelector: #elementTwiceIn!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !HeapTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !HeapTest removeSelector: #elementNotInForOccurrences!HeapTest removeSelector: #elementNotInForIndexAccessing!HeapTest removeSelector: #elementNotInForElementAccessing!!Trait method!elementNotIn	self requirement! !HeapTest removeSelector: #elementNotIn!HeapTest removeSelector: #elementInForOccurrences!HeapTest removeSelector: #elementInForIndexAccessing!HeapTest removeSelector: #elementInForElementAccessing!!Trait method!element	self requirement! !HeapTest removeSelector: #element!HeapTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !HeapTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements" return a collection elements that can be sorte ( understanding message ' < '  or ' > ')"	^ self explicitRequirement! !HeapTest removeSelector: #collectionWithSortableElements!HeapTest removeSelector: #collectionWithSameAtEndAndBegining!HeapTest removeSelector: #collectionWithNonIdentitySameAtEndAndBegining!!Trait method!collectionWithEqualElements" return a collecition including atLeast two elements equal"^ self explicitRequirement.! !HeapTest removeSelector: #collectionWithEqualElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !HeapTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWithElement	"Returns a collection that already includes what is returned by #element."	^ self explicitRequirement! !HeapTest removeSelector: #collectionWithElement!!Trait method!collectionWithCopyNonIdentical	" return a collection that include elements for which 'copy' return a different object (this is not the case of SmallInteger)"	^ self explicitRequirement! !HeapTest removeSelector: #collectionWithCopyNonIdentical!HeapTest removeSelector: #collectionWith5Elements!HeapTest removeSelector: #collectionOfSize5!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !HeapTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan5Elements" return a collection including at least 5 elements"		^ self explicitRequirement! !HeapTest removeSelector: #collectionMoreThan5Elements!HeapTest removeSelector: #collectionMoreThan1NoDuplicates!!Trait method!collectionClass	self requirement! !HeapTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !HeapTest removeSelector: #collection!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !HeapTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !HeapTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !HeapTest removeSelector: #anotherElementNotIn!HeapTest removeSelector: #accessCollection!HeapTest removeSelector: #aValue!Smalltalk globals removeClassNamed: #AnObsoleteHeapTest!!Trait method!withEqualElements	" return a collection  including equal elements (classic equality)"	^ self explicitRequirement! !FloatArrayTest removeSelector: #withEqualElements!!Trait method!unsortedCollection"Return a collection that is not yet sorted"	^self explicitRequirement! !FloatArrayTest removeSelector: #unsortedCollection!FloatArrayTest removeSelector: #testFloatArrayPluginPrimitiveAtPut!FloatArrayTest removeSelector: #testFloatArrayPluginPrimitiveAt!FloatArrayTest removeSelector: #testArithmeticCoercion!!Trait method!subCollectionNotIn" return a collection for which at least one element is not included in 'moreThan4Elements' "	self explicitRequirement! !FloatArrayTest removeSelector: #subCollectionNotIn!!Trait method!sortedInAscendingOrderCollection	"Return a collection sorted in ascending order"	^ self explicitRequirement	! !FloatArrayTest removeSelector: #sortedInAscendingOrderCollection!FloatArrayTest removeSelector: #sizeCollection!FloatArrayTest removeSelector: #setUp!!Trait method!secondIndex" return an index between 'nonEmpty' bounds that is > to 'first index' "	^self explicitRequirement! !FloatArrayTest removeSelector: #secondIndex!!Trait method!secondCollection" return a collection that will be the second part of the concatenation"	self explicitRequirement! !FloatArrayTest removeSelector: #secondCollection!!Trait method!replacementCollectionSameSize" return a collection of size (secondIndex - firstIndex + 1)"	^self explicitRequirement! !FloatArrayTest removeSelector: #replacementCollectionSameSize!!Trait method!replacementCollection" return a collection that will be put into 'nonEmpty' "	^ self replacementCollectionSameSize, self 	replacementCollectionSameSize   ! !FloatArrayTest removeSelector: #replacementCollection!!Trait method!oldSubCollection" return a subCollection included in collectionWith1TimeSubcollection .ex :   subCollection := #( 2 3 4) and collectionWith1TimeSubcollection := #(1 2 3 4 5)"	self explicitRequirement! !FloatArrayTest removeSelector: #oldSubCollection!!Trait method!nonEmptyMoreThan1Element" return a collection that doesn't includes equal elements' and doesn't include nil elements'" 	^self explicitRequirement.! !FloatArrayTest removeSelector: #nonEmptyMoreThan1Element!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !FloatArrayTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !FloatArrayTest removeSelector: #nonEmpty!!Trait method!newElement"return an element that will be put in the collection in place of another"	self explicitRequirement! !FloatArrayTest removeSelector: #newElement!!Trait method!moreThan4Elements" return a collection including at leat 4 elements"	self explicitRequirement! !FloatArrayTest removeSelector: #moreThan4Elements!!Trait method!moreThan3Elements	" return a collection including atLeast 3 elements"	self explicitRequirement! !FloatArrayTest removeSelector: #moreThan3Elements!!Trait method!indexInNonEmpty" return an index between bounds of 'nonEmpty' "	self explicitRequirement! !FloatArrayTest removeSelector: #indexInNonEmpty!!Trait method!indexInForCollectionWithoutDuplicates" return an index between 'collectionWithoutEqualsElements'  bounds"	self explicitRequirement! !FloatArrayTest removeSelector: #indexInForCollectionWithoutDuplicates!!Trait method!indexArray" return a Collection including indexes between bounds of 'nonEmpty' "	self explicitRequirement.! !FloatArrayTest removeSelector: #indexArray!!Trait method!firstIndex" return an index between 'nonEmpty' bounds that is < to 'second index' "	^self explicitRequirement! !FloatArrayTest removeSelector: #firstIndex!!Trait method!firstCollection" return a collection that will be the first part of the concatenation"	self explicitRequirement! !FloatArrayTest removeSelector: #firstCollection!!Trait method!empty	self requirement! !FloatArrayTest removeSelector: #empty!!Trait method!elementsCopyNonIdenticalWithoutEqualElements	" return a collection that does niot incllude equal elements ( classic equality )	all elements included are elements for which copy is not identical to the element  "	^ self explicitRequirement! !FloatArrayTest removeSelector: #elementsCopyNonIdenticalWithoutEqualElements!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !FloatArrayTest removeSelector: #elementToAdd!!Trait method!elementNotInForIndexAccessing" return an element not included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !FloatArrayTest removeSelector: #elementNotInForIndexAccessing!!Trait method!elementNotInForElementAccessing" return an element not included in 'moreThan4Elements' "	self explicitRequirement! !FloatArrayTest removeSelector: #elementNotInForElementAccessing!!Trait method!elementNotIn"return an element not included in 'nonEmpty' "	^ self explicitRequirement! !FloatArrayTest removeSelector: #elementNotIn!!Trait method!elementInForIndexAccessing" return an element included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !FloatArrayTest removeSelector: #elementInForIndexAccessing!!Trait method!elementInForElementAccessing" return an element inculded in 'moreThan4Elements'"	self explicitRequirement! !FloatArrayTest removeSelector: #elementInForElementAccessing!FloatArrayTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !FloatArrayTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements	self requirement! !FloatArrayTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithSameAtEndAndBegining	self requirement! !FloatArrayTest removeSelector: #collectionWithSameAtEndAndBegining!!Trait method!collectionWithNonIdentitySameAtEndAndBegining	" return a collection with elements at end and begining equals only with classic equality (they are not the same object).(others elements of the collection are not equal to those elements)"	self explicitRequirement! !FloatArrayTest removeSelector: #collectionWithNonIdentitySameAtEndAndBegining!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !FloatArrayTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWithCopyNonIdentical	" return a collection that include elements for which 'copy' return a different object (this is not the case of SmallInteger)"	^ self explicitRequirement! !FloatArrayTest removeSelector: #collectionWithCopyNonIdentical!!Trait method!collectionWith2TimeSubcollection" return a collection including 'oldSubCollection'  two or many time "	self explicitRequirement! !FloatArrayTest removeSelector: #collectionWith2TimeSubcollection!!Trait method!collectionWith1TimeSubcollection" return a collection including 'oldSubCollection'  only one time "	self explicitRequirement! !FloatArrayTest removeSelector: #collectionWith1TimeSubcollection!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !FloatArrayTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan5Elements" return a collection including at least 5 elements"		^ self explicitRequirement! !FloatArrayTest removeSelector: #collectionMoreThan5Elements!!Trait method!collectionMoreThan1NoDuplicates	" return a collection of size > 1 without equal elements"	self explicitRequirement! !FloatArrayTest removeSelector: #collectionMoreThan1NoDuplicates!!Trait method!collectionClass	self requirement! !FloatArrayTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !FloatArrayTest removeSelector: #collection!!Trait method!anotherValue" return a value ( not eual to 'aValue' ) to put into nonEmpty "	^ self explicitRequirement! !FloatArrayTest removeSelector: #anotherValue!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !FloatArrayTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !FloatArrayTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !FloatArrayTest removeSelector: #anotherElementNotIn!!Trait method!anIndex" return an index in nonEmpty bounds"	^ self explicitRequirement! !FloatArrayTest removeSelector: #anIndex!!Trait method!aValue	self requirement! !FloatArrayTest removeSelector: #aValue!Smalltalk globals removeClassNamed: #AnObsoleteFloatArrayTest!WeakValueDictionaryTest removeSelector: #testSizeWithGarbageCollectedValue!WeakValueDictionaryTest removeSelector: #testKeysAndValuesDoWithGarbageCollectedValue!WeakValueDictionaryTest removeSelector: #testDoesNotIncludeNilAfterGarbageCollection!WeakValueDictionaryTest removeSelector: #testAtIfPresentWithGarbageCollectedValue!WeakValueDictionaryTest removeSelector: #testAtIfPresentIfAbsentWithGarbageCollectedValue!WeakValueDictionaryTest removeSelector: #testAtIfAbsentWithGarbageCollectedValue!WeakValueDictionaryTest removeSelector: #testAtIfAbsentPutWithGarbageCollectedValue!WeakValueDictionaryTest removeSelector: #testAtGarbageCollectedValueRaisesNotFound!WeakValueDictionaryTest removeSelector: #testAssociationsWithGarbageCollectedValue!WeakValueDictionaryTest removeSelector: #keyWithGarbageCollectedValue!WeakValueDictionaryTest removeSelector: #dictionaryWithGarbageCollectedValue!WeakValueDictionaryTest removeSelector: #classToBeTested!WeakValueDictionaryTest class removeSelector: #shouldInheritSelectors!WeakIdentityValueDictionaryTests removeSelector: #testIdentity!WeakIdentityValueDictionaryTests removeSelector: #classToBeTested!WeakIdentityValueDictionaryTests removeSelector: #canBeUnhealthy!Smalltalk globals removeClassNamed: #AnObsoleteWeakIdentityValueDictionaryTests!Smalltalk globals removeClassNamed: #AnObsoleteWeakValueDictionaryTest!WeakKeyDictionaryTest removeSelector: #testStoreOnWithNegativeInteger!WeakKeyDictionaryTest removeSelector: #testGrow!WeakKeyDictionaryTest removeSelector: #testClearing!WeakKeyDictionaryTest removeSelector: #supportsNilKey!WeakKeyDictionaryTest removeSelector: #size!WeakKeyDictionaryTest removeSelector: #setUp!WeakKeyDictionaryTest removeSelector: #classToBeTested!WeakKeyDictionaryTest class removeSelector: #timingMany!WeakKeyDictionaryTest class removeSelector: #timingLarge!WeakKeyDictionaryTest class removeSelector: #shouldInheritSelectors!WeakKeyToCollectionDictionaryTest removeSelector: #testRemoveKeyIfAbsent!WeakKeyToCollectionDictionaryTest removeSelector: #testRemoveKey!WeakKeyToCollectionDictionaryTest removeSelector: #testKeysAndValuesRemove!WeakKeyToCollectionDictionaryTest removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoleteWeakKeyToCollectionDictionaryTest!WeakIdentityKeyDictionaryTest removeSelector: #testNoNils!WeakIdentityKeyDictionaryTest removeSelector: #testFinalizeValuesWhenLastChainContinuesAtFront!WeakIdentityKeyDictionaryTest removeSelector: #classToBeTested!WeakIdentityKeyDictionaryTest removeSelector: #canBeUnhealthy!Smalltalk globals removeClassNamed: #AnObsoleteWeakIdentityKeyDictionaryTest!Smalltalk globals removeClassNamed: #AnObsoleteWeakKeyDictionaryTest!SmallIdentityDictionaryTest removeSelector: #classToBeTested!SmallIdentityDictionaryTest removeSelector: #canBeUnhealthy!Smalltalk globals removeClassNamed: #AnObsoleteSmallIdentityDictionaryTest!SmallDictionaryTest removeSelector: #testStoreOn!SmallDictionaryTest removeSelector: #testNewFromKeysAndValues2!SmallDictionaryTest removeSelector: #classToBeTested!SmallDictionaryTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteSmallDictionaryTest!PluggableDictionaryTest removeSelector: #testHashBlockEquality!PluggableDictionaryTest removeSelector: #testHashBlock!PluggableDictionaryTest removeSelector: #testEqualBlockEquality!PluggableDictionaryTest removeSelector: #testEqualBlock!PluggableDictionaryTest removeSelector: #testCopyEmpty!PluggableDictionaryTest removeSelector: #classToBeTested!PluggableDictionaryTest class removeSelector: #shouldInheritSelectors!PluggableDictionaryTest class removeSelector: #classToBeTested!Smalltalk globals removeClassNamed: #AnObsoletePluggableDictionaryTest!IdentityDictionaryTest removeSelector: #testIdentity!IdentityDictionaryTest removeSelector: #classToBeTested!IdentityDictionaryTest removeSelector: #canBeUnhealthy!IdentityDictionaryTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteIdentityDictionaryTest!!Trait method!valueNotInNonEmpty	" return a value not included in nonEmpty"	^ self explicitRequirement! !DictionaryTest removeSelector: #valueNotInNonEmpty!!Trait method!valueNotIn	self requirement! !DictionaryTest removeSelector: #valueNotIn!DictionaryTest removeSelector: #testStoreOnWithNegativeInteger!DictionaryTest removeSelector: #testSelectIsNotShallowCopy!DictionaryTest removeSelector: #testRemoveAll!DictionaryTest removeSelector: #testOtherDictionaryEquality!!Trait method!testOccurrencesOf	| collection |	collection := self collectionWithoutEqualElements .		collection do: [ :each | self assert: (collection occurrencesOf: each) = 1 ].! !DictionaryTest removeSelector: #testOccurrencesOf!DictionaryTest removeSelector: #testNilHashCollision!DictionaryTest removeSelector: #testNewFromPairs!DictionaryTest removeSelector: #testNewFromKeysAndValues2!DictionaryTest removeSelector: #testNewFromKeysAndValues!DictionaryTest removeSelector: #testNewFrom!DictionaryTest removeSelector: #testNew!DictionaryTest removeSelector: #testKeyForIdentity!!Trait method!testKeyAtValueIfAbsent	"self run: #testKeyAtValue"		| dict value result |	dict := self nonEmpty .	value := dict values anyOne.		result := dict keyAtValue: value ifAbsent: [nil].	self assert: (dict at: result) = value.			self assert: (dict keyAtValue: self valueNotIn ifAbsent: [nil] ) = nil. 		! !DictionaryTest removeSelector: #testKeyAtValueIfAbsent!!Trait method!testKeyAtIdentityValueIfAbsent	"self run: #testKeyAtValue"		| dict value result |	dict := self nonEmpty .	value := dict values anyOne.		result := dict keyAtIdentityValue: value ifAbsent: [nil].	self assert: (dict at: result) = value.			self assert: (dict keyAtIdentityValue: self valueNotIn ifAbsent: [nil] ) = nil. 	! !DictionaryTest removeSelector: #testKeyAtIdentityValueIfAbsent!DictionaryTest removeSelector: #testIsHealthy!DictionaryTest removeSelector: #testIsDictionary!!Trait method!testIncludesElementIsNotThere		self deny: (self nonEmpty includes: self elementNotIn).	self assert: (self nonEmpty includes: self nonEmpty anyOne).	self deny: (self empty includes: self elementNotIn)! !DictionaryTest removeSelector: #testIncludesElementIsNotThere!DictionaryTest removeSelector: #testIncludesAssociationWithValue!DictionaryTest removeSelector: #testIncludesAssociationNoValue!DictionaryTest removeSelector: #testIncludes!DictionaryTest removeSelector: #testIncludeAssociation!DictionaryTest removeSelector: #testHasBindingThatBeginsWith!DictionaryTest removeSelector: #testFlatCollect3!DictionaryTest removeSelector: #testFlatCollect2!DictionaryTest removeSelector: #testFlatCollect!DictionaryTest removeSelector: #testDictionaryPublicProtocolCompatibility!!Trait method!testAsSet	| |	"test with a collection without equal elements :"	self assertSameContents: self collectionWithoutEqualElements whenConvertedTo: Set.	! !DictionaryTest removeSelector: #testAsSet!!Trait method!testAddWithKeyNotIn	| dictionary result association oldSize |	dictionary := self nonEmptyDict.	oldSize := dictionary size.	association := self associationWithKeyNotInToAdd.	result := dictionary add: association.		self assert: result = association.	self assert: (dictionary at: association key) = association value.	self assert: dictionary size = oldSize  + 1.! !DictionaryTest removeSelector: #testAddWithKeyNotIn!!Trait method!testAddWithKeyAlreadyIn	| dictionary result association oldSize |	dictionary := self nonEmptyDict.	oldSize := dictionary size.	association := self associationWithKeyAlreadyInToAdd .	result := dictionary add: association.		self assert: result = association.	self assert: (dictionary at: association key) = association value.	self assert: dictionary size = oldSize .! !DictionaryTest removeSelector: #testAddWithKeyAlreadyIn!DictionaryTest removeSelector: #testAdd!DictionaryTest removeSelector: #speciesClass!DictionaryTest removeSelector: #sizeCollection!DictionaryTest removeSelector: #setUp!DictionaryTest removeSelector: #result!DictionaryTest removeSelector: #otherDictionaryClasses!DictionaryTest removeSelector: #otherCollection!!Trait method!nonEmptyWithoutEqualsValues" return a dictionary that doesn't include equal values'"^self explicitRequirement! !DictionaryTest removeSelector: #nonEmptyWithoutEqualsValues!!Trait method!nonEmptyWithCopyNonIdentical" return a collection including elements for wich copy is not identical to the initial element ( this is not the cas of Integer )"^self explicitRequirement! !DictionaryTest removeSelector: #nonEmptyWithCopyNonIdentical!!Trait method!nonEmptyDifferentFromNonEmptyDict" return a dictionary for which all keys are not included in nonEmptyDict"self explicitRequirement.! !DictionaryTest removeSelector: #nonEmptyDifferentFromNonEmptyDict!!Trait method!nonEmptyDict	self requirement! !DictionaryTest removeSelector: #nonEmptyDict!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !DictionaryTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !DictionaryTest removeSelector: #nonEmpty!!Trait method!newEmptyDict	self requirement! !DictionaryTest removeSelector: #newEmptyDict!!Trait method!keyNotInNonEmptyDict" return a key not included in nonEmptyDict"	self explicitRequirement! !DictionaryTest removeSelector: #keyNotInNonEmptyDict!!Trait method!keyNotInNonEmpty	" return a key not included in nonEmpty"	^ self explicitRequirement! !DictionaryTest removeSelector: #keyNotInNonEmpty!!Trait method!keyNotIn	self requirement! !DictionaryTest removeSelector: #keyNotIn!!Trait method!integerCollectionWithoutEqualElements" return a collection of integer without equal elements"	^ self explicitRequirement! !DictionaryTest removeSelector: #integerCollectionWithoutEqualElements!DictionaryTest removeSelector: #indexInNonEmpty!DictionaryTest removeSelector: #expectedSizeAfterReject!DictionaryTest removeSelector: #expectedElementByDetect!!Trait method!emptyDict	self requirement! !DictionaryTest removeSelector: #emptyDict!!Trait method!empty	self requirement! !DictionaryTest removeSelector: #empty!!Trait method!elementTwiceInForOccurrences" return an element included exactly two time in # collectionWithEqualElements"^ self explicitRequirement! !DictionaryTest removeSelector: #elementTwiceInForOccurrences!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !DictionaryTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !DictionaryTest removeSelector: #elementNotInForOccurrences!!Trait method!elementNotIn"return an element not included in 'nonEmpty' "	^ self explicitRequirement! !DictionaryTest removeSelector: #elementNotIn!DictionaryTest removeSelector: #element!DictionaryTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !DictionaryTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements" return a collection elements that can be sorte ( understanding message ' < '  or ' > ')"	^ self explicitRequirement! !DictionaryTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithEqualElements" return a collecition including atLeast two elements equal"^ self explicitRequirement.! !DictionaryTest removeSelector: #collectionWithEqualElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !DictionaryTest removeSelector: #collectionWithElementsToRemove!DictionaryTest removeSelector: #collectionWithElement!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !DictionaryTest removeSelector: #collectionNotIncluded!!Trait method!collectionClass" return the class to be used to create instances of the class tested"	^ self explicitRequirement! !DictionaryTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !DictionaryTest removeSelector: #collection!DictionaryTest removeSelector: #classToBeTested!DictionaryTest removeSelector: #canBeUnhealthy!!Trait method!associationWithKeyNotInToAdd	" return an association that will be used to add to nonEmptyDict (the key of this association is not included in nonEmptyDict)"	self explicitRequirement! !DictionaryTest removeSelector: #associationWithKeyNotInToAdd!!Trait method!associationWithKeyAlreadyInToAdd	" return an association that will be used to add to nonEmptyDict (the key of this association is already included in nonEmptyDict)"	self explicitRequirement! !DictionaryTest removeSelector: #associationWithKeyAlreadyInToAdd!!Trait method!anotherValue" return a value ( not eual to 'aValue' ) to put into nonEmpty "	^ self explicitRequirement! !DictionaryTest removeSelector: #anotherValue!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !DictionaryTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !DictionaryTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !DictionaryTest removeSelector: #anotherElementNotIn!!Trait method!anIndex" return an index in nonEmpty bounds"	^ self explicitRequirement! !DictionaryTest removeSelector: #anIndex!!Trait method!aValue" return a value to put into nonEmpty"	^ self explicitRequirement! !DictionaryTest removeSelector: #aValue!Smalltalk globals removeClassNamed: #AnObsoleteDictionaryTest!!Trait method!testRejectNoReject	| res |	res := self collectionWithoutNilElements  reject: [:each | each notNil not].	self assert: res size = self collectionWithoutNilElements size.	! !CollectionRootTest removeSelector: #testRejectNoReject!CollectionRootTest removeSelector: #testDetectIfFoundWhenSomethingIsFoundIgnoringTheFoundObject!CollectionRootTest removeSelector: #testDetectIfFoundWhenSomethingIsFound!CollectionRootTest removeSelector: #testDetectIfFoundWhenNobodyIsFound!CollectionRootTest removeSelector: #testDetectIfFoundIfNoneWhenSomethingIsFoundIgnoringTheFoundObject!CollectionRootTest removeSelector: #testDetectIfFoundIfNoneWhenSomethingIsFound!CollectionRootTest removeSelector: #testDetectIfFoundIfNoneWhenNobodyIsFound!!Trait method!sizeCollection	"Answers a collection not empty"	^ self explicitRequirement! !CollectionRootTest removeSelector: #sizeCollection!!Trait method!nonEmpty		^ self explicitRequirement! !CollectionRootTest removeSelector: #nonEmpty!CollectionRootTest removeSelector: #expectedElementByDetect!!Trait method!empty	self requirement! !CollectionRootTest removeSelector: #empty!CollectionRootTest removeSelector: #elementTwiceIn!CollectionRootTest removeSelector: #element!CollectionRootTest removeSelector: #doWithoutNumber!!Trait method!collectionWithoutNilElements" return a collection that doesn't includes a nil element  and that doesn't includes equal elements'"	self explicitRequirement! !CollectionRootTest removeSelector: #collectionWithoutNilElements!CollectionRootTest class removeSelector: #isAbstract!IdentityBagTest removeSelector: #testIdentityAdd!IdentityBagTest removeSelector: #testIdentity!IdentityBagTest removeSelector: #testAsSetWithEqualsElements!IdentityBagTest removeSelector: #speciesClass!IdentityBagTest removeSelector: #identityCollectionWithElementsCopyNotIdentical!IdentityBagTest removeSelector: #equalNotIdenticalElement!IdentityBagTest removeSelector: #elementToCopy!Smalltalk globals removeClassNamed: #AnObsoleteIdentityBagTest!!Trait method!withEqualElements	" return a collection  including equal elements (classic equality)"	^ self explicitRequirement! !BagTest removeSelector: #withEqualElements!BagTest removeSelector: #testSortedElements!BagTest removeSelector: #testSortedCounts!!Trait method!testRemoveElementThatExistsTwice	| size |	size := self nonEmpty size.	self assert: (self nonEmpty includes: self elementTwiceIn).	self nonEmpty remove: self elementTwiceIn.	self assert: size - 1 = self nonEmpty size.		self assert: (self nonEmpty includes: self elementTwiceIn).	self nonEmpty remove: self elementTwiceIn.	self assert: size - 2 = self nonEmpty size! !BagTest removeSelector: #testRemoveElementThatExistsTwice!!Trait method!testRemoveAll	| el aSubCollection collection res |	collection := self nonEmptyWithoutEqualElements.	el := collection anyOne.	aSubCollection := collection copyWithout: el.	res := collection removeAll: aSubCollection.	self assert: collection size = 1.	self nonEmptyWithoutEqualElements do: [ :each | self assert: each = el ]! !BagTest removeSelector: #testRemoveAll!BagTest removeSelector: #testRemove!!Trait method!testOccurrencesOf	| collection |	collection := self collectionWithoutEqualElements .		collection do: [ :each | self assert: (collection occurrencesOf: each) = 1 ].! !BagTest removeSelector: #testOccurrencesOf!!Trait method!testIncludesElementIsNotThere		self deny: (self nonEmpty includes: self elementNotIn).	self assert: (self nonEmpty includes: self nonEmpty anyOne).	self deny: (self empty includes: self elementNotIn)! !BagTest removeSelector: #testIncludesElementIsNotThere!!Trait method!testIdentityIncludes	" test the comportement in presence of elements 'includes' but not 'identityIncludes' "	" can not be used by collections that can't include elements for wich copy doesn't return another instance "	| collection anElement |		collection := self collectionWithCopyNonIdentical.	anElement := collection anyOne copy.	self deny: (collection identityIncludes: anElement)! !BagTest removeSelector: #testIdentityIncludes!BagTest removeSelector: #testFlatCollect!BagTest removeSelector: #testEqual!BagTest removeSelector: #testCumulativeCounts!BagTest removeSelector: #testCreation!!Trait method!testCopyNonEmptyWithoutAllNotIncluded	| res |	res := self nonEmpty copyWithoutAll: self collectionNotIncluded.	"here we do not test the size since for a non empty set we would get a problem.	Then in addition copy is not about duplicate management. The element should 	be in at the end."	self nonEmpty do: [ :each | self assert: (res includes: each) ]! !BagTest removeSelector: #testCopyNonEmptyWithoutAllNotIncluded!BagTest removeSelector: #testCopy!!Trait method!testAsSet	| |	"test with a collection without equal elements :"	self assertSameContents: self collectionWithoutEqualElements whenConvertedTo: Set.	! !BagTest removeSelector: #testAsSet!!Trait method!testAsBag	self assertSameContents: self collectionWithoutEqualElements whenConvertedTo: Bag! !BagTest removeSelector: #testAsBag!BagTest removeSelector: #testAnySastify!BagTest removeSelector: #testAddWithOccurrences!BagTest removeSelector: #testAdd!!Trait method!test0CopyTest	self empty.	self assert: self empty size = 0.	self nonEmpty.	self assert: (self nonEmpty size = 0) not.	self collectionWithElementsToRemove.	self assert: (self collectionWithElementsToRemove size = 0) not.	self collectionWithElementsToRemove do: [ :each | self assert: (self nonEmpty includes: each) ].	self elementToAdd.	self deny: (self nonEmpty includes: self elementToAdd).	self collectionNotIncluded.	self collectionNotIncluded do: [ :each | self deny: (self nonEmpty includes: each) ]! !BagTest removeSelector: #test0CopyTest!BagTest removeSelector: #speciesClass!BagTest removeSelector: #sizeCollection!BagTest removeSelector: #setUp!BagTest removeSelector: #selectedNumber!!Trait method!secondCollection" return a collection that will be the second part of the concatenation"	self explicitRequirement! !BagTest removeSelector: #secondCollection!BagTest removeSelector: #result!!Trait method!otherCollection	"Returns a collection that does not include what is returned by #element."	^ self explicitRequirement! !BagTest removeSelector: #otherCollection!!Trait method!nonEmptyWithoutEqualElements" return a collection without equal elements "	self explicitRequirement! !BagTest removeSelector: #nonEmptyWithoutEqualElements!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !BagTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !BagTest removeSelector: #nonEmpty!!Trait method!integerCollectionWithoutEqualElements" return a collection of integer without equal elements"	^ self explicitRequirement! !BagTest removeSelector: #integerCollectionWithoutEqualElements!!Trait method!firstCollection" return a collection that will be the first part of the concatenation"	self explicitRequirement! !BagTest removeSelector: #firstCollection!BagTest removeSelector: #expectedSizeAfterReject!BagTest removeSelector: #emptyButAllocatedWith20!!Trait method!empty	self requirement! !BagTest removeSelector: #empty!BagTest removeSelector: #elementsCopyNonIdenticalWithoutEqualElements!!Trait method!elementTwiceInForOccurrences" return an element included exactly two time in # collectionWithEqualElements"^ self explicitRequirement! !BagTest removeSelector: #elementTwiceInForOccurrences!!Trait method!elementTwiceIn	^ self explicitRequirement! !BagTest removeSelector: #elementTwiceIn!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !BagTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !BagTest removeSelector: #elementNotInForOccurrences!!Trait method!elementNotIn	self requirement! !BagTest removeSelector: #elementNotIn!BagTest removeSelector: #elementInForOccurrences!BagTest removeSelector: #elementInForIncludesTest!!Trait method!element	"Returns an object that can be added to the collection returned by #collection."	^ self explicitRequirement! !BagTest removeSelector: #element!BagTest removeSelector: #doWithoutNumber!BagTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !BagTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements" return a collection elements that can be sorte ( understanding message ' < '  or ' > ')"	^ self explicitRequirement! !BagTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithEqualElements" return a collecition including atLeast two elements equal"^ self explicitRequirement.! !BagTest removeSelector: #collectionWithEqualElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !BagTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWithElement	"Returns a collection that already includes what is returned by #element."	^ self explicitRequirement! !BagTest removeSelector: #collectionWithElement!!Trait method!collectionWithCopyNonIdentical	" return a collection that include elements for which 'copy' return a different object (this is not the case of SmallInteger)"	^ self explicitRequirement! !BagTest removeSelector: #collectionWithCopyNonIdentical!BagTest removeSelector: #collectionWithCharacters!BagTest removeSelector: #collectionOfFloat!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !BagTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan5Elements" return a collection including at least 5 elements"		^ self explicitRequirement! !BagTest removeSelector: #collectionMoreThan5Elements!BagTest removeSelector: #collectionInForIncluding!!Trait method!collectionClass	self requirement! !BagTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !BagTest removeSelector: #collection!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !BagTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !BagTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !BagTest removeSelector: #anotherElementNotIn!Smalltalk globals removeClassNamed: #AnObsoleteBagTest!!Trait method!withEqualElements	" return a collection  including equal elements (classic equality)"	^ self explicitRequirement! !ArrayTest removeSelector: #withEqualElements!!Trait method!valuePutIn	"the value that we will put in the non empty collection"		^ #x! !ArrayTest removeSelector: #valuePutIn!!Trait method!unsortedCollection"Return a collection that is not yet sorted"	^self explicitRequirement! !ArrayTest removeSelector: #unsortedCollection!ArrayTest removeSelector: #testSumNumberItemsWithoutBlock!ArrayTest removeSelector: #testPrinting!ArrayTest removeSelector: #testPremultiply!!Trait method!testOccurrencesOfNotIn	| result |	result := self collectionWithoutEqualElements occurrencesOf: self elementNotInForOccurrences.	self assert: result = 0! !ArrayTest removeSelector: #testOccurrencesOfNotIn!!Trait method!testOccurrencesOfEmpty	| result |	result := self empty occurrencesOf: (self collectionWithoutEqualElements anyOne).	self assert: result = 0! !ArrayTest removeSelector: #testOccurrencesOfEmpty!!Trait method!testOccurrencesOf	| collection |	collection := self collectionWithoutEqualElements .		collection do: [ :each | self assert: (collection occurrencesOf: each) = 1 ].! !ArrayTest removeSelector: #testOccurrencesOf!ArrayTest removeSelector: #testNewWithSize!ArrayTest removeSelector: #testLiteralEqual!ArrayTest removeSelector: #testIsSelfEvaluating!ArrayTest removeSelector: #testIsLiteral!ArrayTest removeSelector: #testIsArray!!Trait method!testIdentityIndexOf	| collection element |	collection := self collectionMoreThan1NoDuplicates.	element := collection first.	self assert: (collection identityIndexOf: element) = (collection indexOf: element)! !ArrayTest removeSelector: #testIdentityIndexOf!!Trait method!testIdentityIncludes	" test the comportement in presence of elements 'includes' but not 'identityIncludes' "	" can not be used by collections that can't include elements for wich copy doesn't return another instance "	| collection anElement |		collection := self collectionWithCopyNonIdentical.	anElement := collection anyOne copy.	self deny: (collection identityIncludes: anElement)! !ArrayTest removeSelector: #testIdentityIncludes!ArrayTest removeSelector: #testFindBinaryIfNone!ArrayTest removeSelector: #testFindBinary!ArrayTest removeSelector: #testDo2!!Trait method!testDo! !ArrayTest removeSelector: #testDo!!Trait method!testCopyNonEmptyWithoutAllNotIncluded	| res |	res := self nonEmpty copyWithoutAll: self collectionNotIncluded.	"here we do not test the size since for a non empty set we would get a problem.	Then in addition copy is not about duplicate management. The element should 	be in at the end."	self nonEmpty do: [ :each | self assert: (res includes: each) ]! !ArrayTest removeSelector: #testCopyNonEmptyWithoutAllNotIncluded!ArrayTest removeSelector: #testComplexIsSelfEvaluating!ArrayTest removeSelector: #testCombinations!ArrayTest removeSelector: #testAtWrap2!ArrayTest removeSelector: #testAsArrayKeepsIdentity!ArrayTest removeSelector: #testAnySatisfy!!Trait method!test0FixtureTConvertAsSetForMultiplinessTest	"a collection  with equal elements:"	| res |	self withEqualElements.	res := true.	self withEqualElements detect: [ :each | (self withEqualElements occurrencesOf: each) > 1 ] ifNone: [ res := false ].	self assert: res = true! !ArrayTest removeSelector: #test0FixtureTConvertAsSetForMultiplinessTest!!Trait method!test0FixtureOccurrencesTest	| tmp |	self empty.	self assert: self empty isEmpty.	self collectionWithoutEqualElements.	self deny: self collectionWithoutEqualElements isEmpty.	tmp := OrderedCollection new.	self collectionWithoutEqualElements		do: [ :each | 			self deny: (tmp includes: each).			tmp add: each ].	self elementNotInForOccurrences.	self deny: (self collectionWithoutEqualElements includes: self elementNotInForOccurrences)! !ArrayTest removeSelector: #test0FixtureOccurrencesTest!!Trait method!test0FixtureIncludeTest	| anElementIn |	self nonEmpty.	self deny: self nonEmpty isEmpty.	self elementNotIn.	anElementIn := true.	self nonEmpty detect: [ :each | each = self elementNotIn ] ifNone: [ anElementIn := false ].	self assert: anElementIn = false.	self anotherElementNotIn.	anElementIn := true.	self nonEmpty detect: [ :each | each = self anotherElementNotIn ] ifNone: [ anElementIn := false ].	self assert: anElementIn = false.	self empty.	self assert: self empty isEmpty! !ArrayTest removeSelector: #test0FixtureIncludeTest!!Trait method!test0CopyTest	self empty.	self assert: self empty size = 0.	self nonEmpty.	self assert: (self nonEmpty size = 0) not.	self collectionWithElementsToRemove.	self assert: (self collectionWithElementsToRemove size = 0) not.	self collectionWithElementsToRemove do: [ :each | self assert: (self nonEmpty includes: each) ].	self elementToAdd.	self deny: (self nonEmpty includes: self elementToAdd).	self collectionNotIncluded.	self collectionNotIncluded do: [ :each | self deny: (self nonEmpty includes: each) ]! !ArrayTest removeSelector: #test0CopyTest!!Trait method!subCollectionNotIn" return a collection for which at least one element is not included in 'moreThan4Elements' "	self explicitRequirement! !ArrayTest removeSelector: #subCollectionNotIn!ArrayTest removeSelector: #speciesClass!!Trait method!sortedInAscendingOrderCollection	"Return a collection sorted in ascending order"	^ self explicitRequirement	! !ArrayTest removeSelector: #sortedInAscendingOrderCollection!ArrayTest removeSelector: #smallerIndex!ArrayTest removeSelector: #sizeCollection!!Trait method!simpleCollection	^self explicitRequirement.! !ArrayTest removeSelector: #simpleCollection!ArrayTest removeSelector: #setUp!!Trait method!selectorToAccessValuePutIn	"return the selector of the method that should be invoked to access an element"		^ self explicitRequirement! !ArrayTest removeSelector: #selectorToAccessValuePutIn!!Trait method!secondIndex" return an index between 'nonEmpty' bounds that is > to 'first index' "	^self explicitRequirement! !ArrayTest removeSelector: #secondIndex!!Trait method!secondCollection" return a collection that will be the second part of the concatenation"	self explicitRequirement! !ArrayTest removeSelector: #secondCollection!ArrayTest removeSelector: #result!!Trait method!replacementCollectionSameSize" return a collection of size (secondIndex - firstIndex + 1)"	^self explicitRequirement! !ArrayTest removeSelector: #replacementCollectionSameSize!!Trait method!replacementCollection" return a collection that will be put into 'nonEmpty' "	^ self replacementCollectionSameSize, self 	replacementCollectionSameSize   ! !ArrayTest removeSelector: #replacementCollection!!Trait method!oldSubCollection" return a subCollection included in collectionWith1TimeSubcollection .ex :   subCollection := #( 2 3 4) and collectionWith1TimeSubcollection := #(1 2 3 4 5)"	self explicitRequirement! !ArrayTest removeSelector: #oldSubCollection!!Trait method!nonEmptyMoreThan1Element" return a collection that doesn't includes equal elements' and doesn't include nil elements'" 	^self explicitRequirement.! !ArrayTest removeSelector: #nonEmptyMoreThan1Element!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !ArrayTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !ArrayTest removeSelector: #nonEmpty!!Trait method!newElement"return an element that will be put in the collection in place of another"	self explicitRequirement! !ArrayTest removeSelector: #newElement!!Trait method!moreThan4Elements" return a collection including at leat 4 elements"	self explicitRequirement! !ArrayTest removeSelector: #moreThan4Elements!!Trait method!moreThan3Elements	" return a collection including atLeast 3 elements"	self explicitRequirement! !ArrayTest removeSelector: #moreThan3Elements!!Trait method!integerCollectionWithoutEqualElements" return a collection of integer without equal elements"	^ self explicitRequirement! !ArrayTest removeSelector: #integerCollectionWithoutEqualElements!ArrayTest removeSelector: #integerCollection!!Trait method!indexInNonEmpty" return an index between bounds of 'nonEmpty' "	self explicitRequirement! !ArrayTest removeSelector: #indexInNonEmpty!!Trait method!indexInForCollectionWithoutDuplicates" return an index between 'collectionWithoutEqualsElements'  bounds"	self explicitRequirement! !ArrayTest removeSelector: #indexInForCollectionWithoutDuplicates!!Trait method!indexArray" return a Collection including indexes between bounds of 'nonEmpty' "	self explicitRequirement.! !ArrayTest removeSelector: #indexArray!ArrayTest removeSelector: #floatCollectionWithSameAtEndAndBegining!ArrayTest removeSelector: #firstOdd!!Trait method!firstIndex" return an index between 'nonEmpty' bounds that is < to 'second index' "	^self explicitRequirement! !ArrayTest removeSelector: #firstIndex!ArrayTest removeSelector: #firstEven!!Trait method!firstCollection" return a collection that will be the first part of the concatenation"	self explicitRequirement! !ArrayTest removeSelector: #firstCollection!ArrayTest removeSelector: #expectedSizeAfterReject!!Trait method!empty	self requirement! !ArrayTest removeSelector: #empty!!Trait method!elementsCopyNonIdenticalWithoutEqualElements	" return a collection that does niot incllude equal elements ( classic equality )	all elements included are elements for which copy is not identical to the element  "	^ self explicitRequirement! !ArrayTest removeSelector: #elementsCopyNonIdenticalWithoutEqualElements!!Trait method!elementTwiceInForOccurrences" return an element included exactly two time in # collectionWithEqualElements"^ self explicitRequirement! !ArrayTest removeSelector: #elementTwiceInForOccurrences!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !ArrayTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !ArrayTest removeSelector: #elementNotInForOccurrences!!Trait method!elementNotInForIndexAccessing" return an element not included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !ArrayTest removeSelector: #elementNotInForIndexAccessing!!Trait method!elementNotInForElementAccessing" return an element not included in 'moreThan4Elements' "	self explicitRequirement! !ArrayTest removeSelector: #elementNotInForElementAccessing!ArrayTest removeSelector: #elementNotInForCopy!!Trait method!elementNotIn"return an element not included in 'nonEmpty' "	^ self explicitRequirement! !ArrayTest removeSelector: #elementNotIn!!Trait method!elementInForReplacement" return an element included in 'nonEmpty' "^ self nonEmpty anyOne.! !ArrayTest removeSelector: #elementInForReplacement!ArrayTest removeSelector: #elementInForOccurrences!!Trait method!elementInForIndexAccessing" return an element included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !ArrayTest removeSelector: #elementInForIndexAccessing!ArrayTest removeSelector: #elementInForIndexAccess!ArrayTest removeSelector: #elementInForIncludesTest!!Trait method!elementInForElementAccessing" return an element inculded in 'moreThan4Elements'"	self explicitRequirement! !ArrayTest removeSelector: #elementInForElementAccessing!ArrayTest removeSelector: #elementInForCopy!ArrayTest removeSelector: #elementInCollectionOfFloat!ArrayTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !ArrayTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements	self requirement! !ArrayTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithSameAtEndAndBegining	self requirement! !ArrayTest removeSelector: #collectionWithSameAtEndAndBegining!!Trait method!collectionWithNonIdentitySameAtEndAndBegining	" return a collection with elements at end and begining equals only with classic equality (they are not the same object).(others elements of the collection are not equal to those elements)"	self explicitRequirement! !ArrayTest removeSelector: #collectionWithNonIdentitySameAtEndAndBegining!!Trait method!collectionWithEqualElements" return a collecition including atLeast two elements equal"^ self explicitRequirement.! !ArrayTest removeSelector: #collectionWithEqualElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !ArrayTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWithCopyNonIdentical	" return a collection that include elements for which 'copy' return a different object (this is not the case of SmallInteger)"	^ self explicitRequirement! !ArrayTest removeSelector: #collectionWithCopyNonIdentical!!Trait method!collectionWithCharacters	^self explicitRequirement.! !ArrayTest removeSelector: #collectionWithCharacters!!Trait method!collectionWith2TimeSubcollection" return a collection including 'oldSubCollection'  two or many time "	self explicitRequirement! !ArrayTest removeSelector: #collectionWith2TimeSubcollection!!Trait method!collectionWith1TimeSubcollection" return a collection including 'oldSubCollection'  only one time "	self explicitRequirement! !ArrayTest removeSelector: #collectionWith1TimeSubcollection!ArrayTest removeSelector: #collectionOfFloat!!Trait method!collectionOfCollectionsOfStrings	^self explicitRequirement.! !ArrayTest removeSelector: #collectionOfCollectionsOfStrings!!Trait method!collectionOfCollectionsOfInts	^self explicitRequirement.! !ArrayTest removeSelector: #collectionOfCollectionsOfInts!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !ArrayTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan5Elements" return a collection including at least 5 elements"		^ self explicitRequirement! !ArrayTest removeSelector: #collectionMoreThan5Elements!!Trait method!collectionMoreThan1NoDuplicates	" return a collection of size > 1 without equal elements"	self explicitRequirement! !ArrayTest removeSelector: #collectionMoreThan1NoDuplicates!ArrayTest removeSelector: #collectionInForIncluding!!Trait method!collectionClass	self requirement! !ArrayTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !ArrayTest removeSelector: #collection!!Trait method!assertSameContents: aCollection whenConvertedTo: aClass 	| result |	result := self assertNonDuplicatedContents: aCollection whenConvertedTo: aClass.	self assert: result size = aCollection size! !ArrayTest removeSelector: #assertSameContents:whenConvertedTo:!!Trait method!anotherValue" return a value ( not eual to 'aValue' ) to put into nonEmpty "	^ self explicitRequirement! !ArrayTest removeSelector: #anotherValue!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !ArrayTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !ArrayTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !ArrayTest removeSelector: #anotherElementNotIn!!Trait method!anIndex" return an index in nonEmpty bounds"	^ self explicitRequirement! !ArrayTest removeSelector: #anIndex!ArrayTest removeSelector: #accessCollection!!Trait method!aValue	self requirement! !ArrayTest removeSelector: #aValue!Smalltalk globals removeClassNamed: #AnObsoleteArrayTest!Smalltalk globals removeClassNamed: #AnObsoleteCollectionRootTest!CharacterTest removeSelector: #testStoreStringAll!CharacterTest removeSelector: #testStoreString!CharacterTest removeSelector: #testPrintStringHex!CharacterTest removeSelector: #testPrintStringAll!CharacterTest removeSelector: #testPrintString!CharacterTest removeSelector: #testNew!CharacterTest removeSelector: #testIsSeparator!CharacterTest removeSelector: #testInstanceCreation!CharacterTest removeSelector: #testHex!CharacterTest removeSelector: #testDigitValue!CharacterTest removeSelector: #testCodePoint!CharacterTest removeSelector: #testCharacterSeparators!CharacterTest removeSelector: #testAsUppercaseBasicAsciiRange!CharacterTest removeSelector: #testAsLowercaseBasicAsciiRange!Smalltalk globals removeClassNamed: #AnObsoleteCharacterTest!AssociationTest removeSelector: #testStoreOnPositiveInteger!AssociationTest removeSelector: #testStoreOnNegativeInteger!AssociationTest removeSelector: #testIsSelfEvaluating!AssociationTest removeSelector: #testHash!AssociationTest removeSelector: #testEquality!AssociationTest removeSelector: #testComparison!AssociationTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteAssociationTest!WideCharacterSetTest removeSelector: #testCreation!WideCharacterSetTest removeSelector: #testCopy!WideCharacterSetTest removeSelector: #testAddingToCharacterSet!Smalltalk globals removeClassNamed: #AnObsoleteWideCharacterSetTest!WeakSetTest removeSelector: #testIncludesNil!WeakSetTest removeSelector: #testIncludes!WeakSetTest removeSelector: #testGrowWhenNecessary!WeakSetTest removeSelector: #testDontGrowWhenUnecessary!WeakSetTest removeSelector: #testDoDontIterateOnReclaimedObjects!WeakSetTest removeSelector: #testDoAfter!WeakSetTest removeSelector: #testCollisions!WeakSetTest removeSelector: #testAsArray!WeakSetTest removeSelector: #testAnyOneWhenAllContentsWasGarbaged!WeakSetTest removeSelector: #testAddNil!WeakSetTest removeSelector: #testAddIncludesSizeReclaim!WeakSetTest removeSelector: #classToBeTested!WeakSetTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteWeakSetTest!WeakOrderedCollectionTest removeSelector: #testWeakOrderedCollectionSomeGarbageCollected!WeakOrderedCollectionTest removeSelector: #testWeakOrderedCollectionAllGarbageCollected!Smalltalk globals removeClassNamed: #AnObsoleteWeakOrderedCollectionTest!StringInitializationTests removeSelector: #testUppercasingTable!StringInitializationTests removeSelector: #testTokenish!StringInitializationTests removeSelector: #testLowercasingTable!StringInitializationTests removeSelector: #testCrLfExchangeTable!StringInitializationTests removeSelector: #testCaseInsensitiveOrder!StringInitializationTests removeSelector: #testCSLineEnders!StringInitializationTests removeSelector: #testAsciiOrder!Smalltalk globals removeClassNamed: #AnObsoleteStringInitializationTests!StreamBugsTest removeSelector: #testReadWriteStreamNextNBug!Smalltalk globals removeClassNamed: #AnObsoleteStreamBugsTest!StackTest removeSelector: #testTop!StackTest removeSelector: #testSize!StackTest removeSelector: #testPush!StackTest removeSelector: #testPop!StackTest removeSelector: #testEmptyError!StackTest removeSelector: #setUp!!Trait method!nonEmpty	self requirement! !StackTest removeSelector: #nonEmpty!!Trait method!empty	self requirement! !StackTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteStackTest!SplitJoinTest removeSelector: #testSplitStringOnSubstring!SplitJoinTest removeSelector: #testSplitStringOnChar!SplitJoinTest removeSelector: #testSplitStringOnBlock!SplitJoinTest removeSelector: #testSplitSortedCollectionOnSortedCollection!SplitJoinTest removeSelector: #testSplitSortedCollectionOnElement!SplitJoinTest removeSelector: #testSplitOrderedCollectionOnOrderedCollection!SplitJoinTest removeSelector: #testSplitOrderedCollectionOnElement!SplitJoinTest removeSelector: #testSplitJoinStringOnString!SplitJoinTest removeSelector: #testSplitJoinStringOnChar!SplitJoinTest removeSelector: #testSplitJoinOnSequence!SplitJoinTest removeSelector: #testSplitJoinOnElement!SplitJoinTest removeSelector: #testSplitJoinIdentity!SplitJoinTest removeSelector: #testSplitJoinBoundaryCases!SplitJoinTest removeSelector: #testSplitArrayOnSequence!SplitJoinTest removeSelector: #testSplitArrayOnElement!SplitJoinTest removeSelector: #testSplitArrayOnBlock!SplitJoinTest removeSelector: #testJoinUsingLastOnArrayOfStrings!SplitJoinTest removeSelector: #testJoinUsingLastOnArray!SplitJoinTest removeSelector: #testJoinStringUsingString!SplitJoinTest removeSelector: #testJoinStringUsingChar!SplitJoinTest removeSelector: #testJoinArrayUsingString!SplitJoinTest removeSelector: #testJoinArrayUsingSortedCollection!SplitJoinTest removeSelector: #testJoinArrayUsingOrderedCollection!SplitJoinTest removeSelector: #testJoinArrayUsingObject!SplitJoinTest removeSelector: #testJoinArrayUsingChar!SplitJoinTest removeSelector: #testJoinArrayUsingArray!SplitJoinTest removeSelector: #assert:equals:!SplitJoinTest class removeSelector: #packageNamesUnderTest!SplitJoinTest class removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteSplitJoinTest!SharedQueueTest removeSelector: #testNextOrNilSuchThat!SharedQueueTest removeSelector: #testContention1!SharedQueueTest removeSelector: #testBasics!Smalltalk globals removeClassNamed: #AnObsoleteSharedQueueTest!ReduceTest removeSelector: #testReduceRightSpecial!ReduceTest removeSelector: #testReduceRight3Arguments!ReduceTest removeSelector: #testReduceRight2Arguments!ReduceTest removeSelector: #testReduceLeftSpecial!ReduceTest removeSelector: #testReduceLeft3Arguments!ReduceTest removeSelector: #testReduceLeft2Arguments!ReduceTest removeSelector: #testReduceCollection3Arguments!ReduceTest removeSelector: #testReduceCollection2Arguments!ReduceTest removeSelector: #sequenceableClasses!ReduceTest removeSelector: #collectionClasses!Smalltalk globals removeClassNamed: #AnObsoleteReduceTest!ReadStreamTest removeSelector: #testUpToAll!ReadStreamTest removeSelector: #testUpTo3!ReadStreamTest removeSelector: #testPositionOfSubCollection!ReadStreamTest removeSelector: #testPeekBack!ReadStreamTest removeSelector: #testOldPeekBack!ReadStreamTest removeSelector: #testOldBackOnPosition1!ReadStreamTest removeSelector: #testOldBack!ReadStreamTest removeSelector: #testIsEmpty!ReadStreamTest removeSelector: #testBackOnPosition1!ReadStreamTest removeSelector: #testBack!ReadStreamTest removeSelector: #streamOnString!ReadStreamTest removeSelector: #streamOnArray!ReadStreamTest removeSelector: #streamOn:upToAll:upToAll:!ReadStreamTest removeSelector: #streamOn:upToAll:!ReadStreamTest removeSelector: #emptyStream!Smalltalk globals removeClassNamed: #AnObsoleteReadStreamTest!OrderedIdentityDictionaryTest removeSelector: #isTestingIdentityDictionary!OrderedIdentityDictionaryTest removeSelector: #dictionaryClass!Smalltalk globals removeClassNamed: #AnObsoleteOrderedIdentityDictionaryTest!OrderedDictionaryTest removeSelector: #testValuesDo!OrderedDictionaryTest removeSelector: #testValues!OrderedDictionaryTest removeSelector: #testSize!OrderedDictionaryTest removeSelector: #testSelect!OrderedDictionaryTest removeSelector: #testRemoveKeys!OrderedDictionaryTest removeSelector: #testRemoveKeyIfAbsent!OrderedDictionaryTest removeSelector: #testRemoveKey!OrderedDictionaryTest removeSelector: #testRemoveAll!OrderedDictionaryTest removeSelector: #testOccurancesOf!OrderedDictionaryTest removeSelector: #testNewFromPairs!OrderedDictionaryTest removeSelector: #testNewFromKeysAndValues2!OrderedDictionaryTest removeSelector: #testNewFrom!OrderedDictionaryTest removeSelector: #testKeysSortedSafely!OrderedDictionaryTest removeSelector: #testKeysDo!OrderedDictionaryTest removeSelector: #testKeysAndValuesRemove!OrderedDictionaryTest removeSelector: #testKeysAndValuesDo!OrderedDictionaryTest removeSelector: #testKeys!OrderedDictionaryTest removeSelector: #testKeyForIdentity!OrderedDictionaryTest removeSelector: #testKeyAtValueIfAbsent!OrderedDictionaryTest removeSelector: #testKeyAtValue!OrderedDictionaryTest removeSelector: #testKeyAtIndexIfAbsent!OrderedDictionaryTest removeSelector: #testKeyAtIndex!OrderedDictionaryTest removeSelector: #testKeyAtIdentityValueIfAbsent!OrderedDictionaryTest removeSelector: #testKeyAtIdentityValue!OrderedDictionaryTest removeSelector: #testIsDictionary!OrderedDictionaryTest removeSelector: #testIndexOfKeyIfAbsent!OrderedDictionaryTest removeSelector: #testIndexOfKey!OrderedDictionaryTest removeSelector: #testIncludesKey!OrderedDictionaryTest removeSelector: #testIncludesIdentity!OrderedDictionaryTest removeSelector: #testIncludesAssociation!OrderedDictionaryTest removeSelector: #testIncludes!OrderedDictionaryTest removeSelector: #testIdentityIndexOfKeyIfAbsent!OrderedDictionaryTest removeSelector: #testIdentityIndexOfKey!OrderedDictionaryTest removeSelector: #testHash!OrderedDictionaryTest removeSelector: #testEqualsOtherOrderedDictionaries!OrderedDictionaryTest removeSelector: #testEqualsDictionary!OrderedDictionaryTest removeSelector: #testEquals!OrderedDictionaryTest removeSelector: #testDo!OrderedDictionaryTest removeSelector: #testDictionaryPublicProtocolCompatibility!OrderedDictionaryTest removeSelector: #testDictionary!OrderedDictionaryTest removeSelector: #testDeclareFrom!OrderedDictionaryTest removeSelector: #testCopyEmpty!OrderedDictionaryTest removeSelector: #testCopy!OrderedDictionaryTest removeSelector: #testCollect!OrderedDictionaryTest removeSelector: #testCapacity!OrderedDictionaryTest removeSelector: #testBindingsDo!OrderedDictionaryTest removeSelector: #testAtPut!OrderedDictionaryTest removeSelector: #testAtIfPresentIfAbsent!OrderedDictionaryTest removeSelector: #testAtIfPresent!OrderedDictionaryTest removeSelector: #testAtIfAbsentPut!OrderedDictionaryTest removeSelector: #testAtIfAbsent!OrderedDictionaryTest removeSelector: #testAt!OrderedDictionaryTest removeSelector: #testAssociationsSelect!OrderedDictionaryTest removeSelector: #testAssociationsDo!OrderedDictionaryTest removeSelector: #testAssociations!OrderedDictionaryTest removeSelector: #testAssociationAtIfPresent!OrderedDictionaryTest removeSelector: #testAssociationAtIfAbsent!OrderedDictionaryTest removeSelector: #testAssociationAt!OrderedDictionaryTest removeSelector: #testAddAll!OrderedDictionaryTest removeSelector: #testAdd!OrderedDictionaryTest removeSelector: #should:enumerate:and:!OrderedDictionaryTest removeSelector: #should:enumerate:!OrderedDictionaryTest removeSelector: #otherOrderedDictionaryClasses!OrderedDictionaryTest removeSelector: #orderedValuesFirst:!OrderedDictionaryTest removeSelector: #orderedValues!OrderedDictionaryTest removeSelector: #orderedKeysFirst:!OrderedDictionaryTest removeSelector: #orderedKeys!OrderedDictionaryTest removeSelector: #orderedAssociationsFirst:!OrderedDictionaryTest removeSelector: #orderedAssociationsAllButFirst:!OrderedDictionaryTest removeSelector: #orderedAssociations!OrderedDictionaryTest removeSelector: #nonIdentityOrderedAssociations!OrderedDictionaryTest removeSelector: #nonIdentityAbsentKey!OrderedDictionaryTest removeSelector: #newValue!OrderedDictionaryTest removeSelector: #isTestingIdentityDictionary!OrderedDictionaryTest removeSelector: #internalDictionaryWithAssociations!OrderedDictionaryTest removeSelector: #internalDictionaryClass!OrderedDictionaryTest removeSelector: #identityOrderedAssociations!OrderedDictionaryTest removeSelector: #identityAbsentKey!OrderedDictionaryTest removeSelector: #emptyInternalDictionary!OrderedDictionaryTest removeSelector: #emptyDictionary!OrderedDictionaryTest removeSelector: #dictionaryWithOrderedAssociations!OrderedDictionaryTest removeSelector: #dictionaryClass!OrderedDictionaryTest removeSelector: #defaultCapacity!OrderedDictionaryTest removeSelector: #collectClass!OrderedDictionaryTest removeSelector: #changedOrderedAssociationsFirst:!OrderedDictionaryTest removeSelector: #changedOrderedAssociations!OrderedDictionaryTest removeSelector: #assertKey:wasRemovedfrom:!OrderedDictionaryTest removeSelector: #assertIsDictionary:withUnorderedAssociations:!OrderedDictionaryTest removeSelector: #assertIsDictionary:withOrderedAssociations:!OrderedDictionaryTest removeSelector: #assertIsDictionary:copiedFrom:withOrderedAssociations:!OrderedDictionaryTest removeSelector: #assertIsArray:withElements:!OrderedDictionaryTest removeSelector: #assertDictionary:equals:!OrderedDictionaryTest removeSelector: #assertDictionary:doesNotEqual:!OrderedDictionaryTest removeSelector: #absentValue!OrderedDictionaryTest removeSelector: #absentKey!OrderedDictionaryTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteOrderedDictionaryTest!NestedDictionaryTest removeSelector: #testAtAtputHasLastPutLastStayBehavior!NestedDictionaryTest removeSelector: #testAtAtputEffectivelyPutAValue!NestedDictionaryTest removeSelector: #testAtAtPut!NestedDictionaryTest removeSelector: #testAtAtOnIdentityDictinary!NestedDictionaryTest removeSelector: #testAtAtIfAbsentPut!NestedDictionaryTest removeSelector: #testAtAtIfAbsent!Smalltalk globals removeClassNamed: #AnObsoleteNestedDictionaryTest!MethodDictionaryTest removeSelector: #testRemoveAllPreservesCapacity!MethodDictionaryTest removeSelector: #testRehashPreservesElements!MethodDictionaryTest removeSelector: #testRehashPreservesCapacity!MethodDictionaryTest removeSelector: #testKeyAtValueIfAbsentLocalyDefined!MethodDictionaryTest removeSelector: #testKeyAtNonexistantValueExecutesFailBlock!MethodDictionaryTest removeSelector: #testKeyAtExistantValueReturnsOkKey!MethodDictionaryTest removeSelector: #testKeyAtExistantValueCopyReturnsOkKey!MethodDictionaryTest removeSelector: #testIncludesKeyLocalyDefined!MethodDictionaryTest removeSelector: #testIdentityKeyAtNonExistantValueReturnsFailBlock!MethodDictionaryTest removeSelector: #testIdentityKeyAtExistantValueReturnsOkKey!MethodDictionaryTest removeSelector: #testIdentityKeyAtExistantValueCopyReturnsFailBlock!MethodDictionaryTest removeSelector: #testGrowPreservesElements!MethodDictionaryTest removeSelector: #testGrowDoublesCapacity!MethodDictionaryTest removeSelector: #testBehaviorLocalyDefined!MethodDictionaryTest removeSelector: #testAtNonexistantKeyExecutesFailBlock!MethodDictionaryTest removeSelector: #testAtExistantKeyReturnsOkCompiledMethod!MethodDictionaryTest removeSelector: #testAssociationsDoGoesOverEntireDictionary!MethodDictionaryTest removeSelector: #testAssociationAtNonexistantKeyExecutesFailBlock!MethodDictionaryTest removeSelector: #testAssociationAtExistantKeyReturnsOkAssociation!MethodDictionaryTest removeSelector: #speciesClass!MethodDictionaryTest removeSelector: #setUp!MethodDictionaryTest removeSelector: #nonEmptyDifferentFromNonEmptyDict!!Trait method!nonEmptyDict	self explicitRequirement! !MethodDictionaryTest removeSelector: #nonEmptyDict!!Trait method!nonEmpty	self requirement! !MethodDictionaryTest removeSelector: #nonEmpty!!Trait method!newEmptyDict	self explicitRequirement! !MethodDictionaryTest removeSelector: #newEmptyDict!MethodDictionaryTest removeSelector: #modifiedMethodDictionaryCopy!!Trait method!keyNotInNonEmptyDict" return a key not included in nonEmptyDict"	self explicitRequirement! !MethodDictionaryTest removeSelector: #keyNotInNonEmptyDict!MethodDictionaryTest removeSelector: #keyNotIn!!Trait method!emptyDict	self explicitRequirement! !MethodDictionaryTest removeSelector: #emptyDict!!Trait method!empty	^ self explicitRequirement! !MethodDictionaryTest removeSelector: #empty!!Trait method!elementNotIn"return an element not included in 'nonEmpty' "	^ self explicitRequirement! !MethodDictionaryTest removeSelector: #elementNotIn!MethodDictionaryTest removeSelector: #assertPreservesElements:comparedTo:!MethodDictionaryTest removeSelector: #assertPreservesCapacity:comparedTo:!MethodDictionaryTest removeSelector: #anotherValue!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !MethodDictionaryTest removeSelector: #anotherElementNotIn!MethodDictionaryTest removeSelector: #anIndex!MethodDictionaryTest removeSelector: #aValue!Smalltalk globals removeClassNamed: #AnObsoleteMethodDictionaryTest!MatrixTest removeSelector: #testTransposed!MatrixTest removeSelector: #testTabulateEquals!MatrixTest removeSelector: #testTabulate!MatrixTest removeSelector: #testSwap!MatrixTest removeSelector: #testSquaredWithAllElement!MatrixTest removeSelector: #testRowVector!MatrixTest removeSelector: #testReplaceAll!MatrixTest removeSelector: #testOnes!MatrixTest removeSelector: #testNewTabulate!MatrixTest removeSelector: #testMultiply!MatrixTest removeSelector: #testIncludes!MatrixTest removeSelector: #testIdentityOtherTest!MatrixTest removeSelector: #testIdentity!MatrixTest removeSelector: #testDiagonal!MatrixTest removeSelector: #testCopy!MatrixTest removeSelector: #testContentsEncodings!MatrixTest removeSelector: #testColumnVector!MatrixTest removeSelector: #testCollectCreatesANewMatrix!MatrixTest removeSelector: #testAtRow!MatrixTest removeSelector: #testAtColumn!MatrixTest removeSelector: #testAtAt!MatrixTest removeSelector: #testAtAllPut!MatrixTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteMatrixTest!!Trait method!unsortedCollection"Return a collection that is not yet sorted"	^self explicitRequirement! !LinkedListTest removeSelector: #unsortedCollection!!Trait method!testTAdd	| added collection |	collection :=self otherCollection .	added := collection add: self element.		self assert: added == self element.	"test for identiy because #add: has not reason to copy its parameter."	self assert: (collection includes: self element)	.	self assert: (self collectionWithElement includes: self element).		! !LinkedListTest removeSelector: #testTAdd!LinkedListTest removeSelector: #testSwapStartAndEnd!LinkedListTest removeSelector: #testSwapBasic!LinkedListTest removeSelector: #testSwapAdjacentStart!LinkedListTest removeSelector: #testSwapAdjacentEnd!LinkedListTest removeSelector: #testSwapAdjacent!!Trait method!testSort	| result tmp |	result := self unsortedCollection sort.	tmp := result at: 1.	result do:		[:each | self assert: each>=tmp. tmp:= each. ].! !LinkedListTest removeSelector: #testSort!!Trait method!testRemoveAll	| el aSubCollection collection res |	collection := self nonEmptyWithoutEqualElements.	el := collection anyOne.	aSubCollection := collection copyWithout: el.	res := collection removeAll: aSubCollection.	self assert: collection size = 1.	self nonEmptyWithoutEqualElements do: [ :each | self assert: each = el ]! !LinkedListTest removeSelector: #testRemoveAll!!Trait method!testIdentityIncludes	" test the comportement in presence of elements 'includes' but not 'identityIncludes' "	" can not be used by collections that can't include elements for wich copy doesn't return another instance "	| collection anElement |		collection := self collectionWithCopyNonIdentical.	anElement := collection anyOne copy.	self deny: (collection identityIncludes: anElement)! !LinkedListTest removeSelector: #testIdentityIncludes!LinkedListTest removeSelector: #testCreateAs!LinkedListTest removeSelector: #testAtPutOutsideBounds!LinkedListTest removeSelector: #testAtPut!LinkedListTest removeSelector: #testAddAfterLast2!LinkedListTest removeSelector: #testAddAfterLast!LinkedListTest removeSelector: #testAddAfter!LinkedListTest removeSelector: #test22addAll!LinkedListTest removeSelector: #test14removeIfAbsent!LinkedListTest removeSelector: #test13remove!LinkedListTest removeSelector: #test12remove!LinkedListTest removeSelector: #test11removeLast!LinkedListTest removeSelector: #test10removeFirst!!Trait method!test0FixtureIndexAccessTest	| res collection element |	self collectionMoreThan1NoDuplicates.	self assert: self collectionMoreThan1NoDuplicates size > 1.	res := true.	self collectionMoreThan1NoDuplicates		detect: [ :each | (self collectionMoreThan1NoDuplicates occurrencesOf: each) > 1 ]		ifNone: [ res := false ].	self assert: res = false.	self elementInForIndexAccessing.	self		assert: ((collection := self collectionMoreThan1NoDuplicates) includes: (element := self elementInForIndexAccessing)).	self elementNotInForIndexAccessing.	self deny: (self collectionMoreThan1NoDuplicates includes: self elementNotInForIndexAccessing)! !LinkedListTest removeSelector: #test0FixtureIndexAccessTest!LinkedListTest removeSelector: #test09addAfter!LinkedListTest removeSelector: #test08addAfter!LinkedListTest removeSelector: #test07addAfter!LinkedListTest removeSelector: #test06addAfter!LinkedListTest removeSelector: #test05addBefore!LinkedListTest removeSelector: #test04addBefore!LinkedListTest removeSelector: #test03addFirst!LinkedListTest removeSelector: #test02addLast!LinkedListTest removeSelector: #test01add!LinkedListTest removeSelector: #tearDown!!Trait method!subCollectionNotIn" return a collection for which at least one element is not included in 'moreThan4Elements' "	self explicitRequirement! !LinkedListTest removeSelector: #subCollectionNotIn!LinkedListTest removeSelector: #speciesClass!!Trait method!sortedInAscendingOrderCollection	"Return a collection sorted in ascending order"	^ self explicitRequirement	! !LinkedListTest removeSelector: #sortedInAscendingOrderCollection!LinkedListTest removeSelector: #setUp!LinkedListTest removeSelector: #result!!Trait method!replacementCollection" return a collection that will be used to replace 'oldSubcollection' in ' collectionWith1TimeSubcollection'  " 	self explicitRequirement! !LinkedListTest removeSelector: #replacementCollection!!Trait method!otherCollection	"Returns a collection that does not include what is returned by #element."	^ self explicitRequirement! !LinkedListTest removeSelector: #otherCollection!!Trait method!oldSubCollection" return a subCollection included in collectionWith1TimeSubcollection .ex :   subCollection := #( 2 3 4) and collectionWith1TimeSubcollection := #(1 2 3 4 5)"	self explicitRequirement! !LinkedListTest removeSelector: #oldSubCollection!!Trait method!nonEmptyWithoutEqualElements" return a collection without equal elements "	self explicitRequirement! !LinkedListTest removeSelector: #nonEmptyWithoutEqualElements!!Trait method!nonEmptyMoreThan1Element" return a collection that doesn't includes equal elements' and doesn't include nil elements'" 	^self explicitRequirement.! !LinkedListTest removeSelector: #nonEmptyMoreThan1Element!!Trait method!nonEmpty1Element" return a collection of size 1 including one element"	^ self explicitRequirement ! !LinkedListTest removeSelector: #nonEmpty1Element!!Trait method!nonEmpty	self requirement! !LinkedListTest removeSelector: #nonEmpty!LinkedListTest removeSelector: #nextLink:!LinkedListTest removeSelector: #nextLink!LinkedListTest removeSelector: #n:!LinkedListTest removeSelector: #n!!Trait method!moreThan4Elements" return a collection including at leat 4 elements"	self explicitRequirement! !LinkedListTest removeSelector: #moreThan4Elements!!Trait method!moreThan3Elements	" return a collection including atLeast 3 elements"	self explicitRequirement! !LinkedListTest removeSelector: #moreThan3Elements!!Trait method!indexInNonEmpty" return an index between bounds of 'nonEmpty' "	self explicitRequirement! !LinkedListTest removeSelector: #indexInNonEmpty!!Trait method!indexInForCollectionWithoutDuplicates" return an index between 'collectionWithoutEqualsElements'  bounds"	self explicitRequirement! !LinkedListTest removeSelector: #indexInForCollectionWithoutDuplicates!!Trait method!empty	self requirement! !LinkedListTest removeSelector: #empty!!Trait method!elementToAdd" return an element of type 'nonEmpy' elements'type'  not  yet included in nonEmpty" 	^ self explicitRequirement! !LinkedListTest removeSelector: #elementToAdd!!Trait method!elementNotInForOccurrences" return an element notIncluded in #collectionWithoutEqualElements"	self explicitRequirement! !LinkedListTest removeSelector: #elementNotInForOccurrences!!Trait method!elementNotInForIndexAccessing" return an element not included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !LinkedListTest removeSelector: #elementNotInForIndexAccessing!!Trait method!elementNotInForElementAccessing" return an element not included in 'moreThan4Elements' "	self explicitRequirement! !LinkedListTest removeSelector: #elementNotInForElementAccessing!!Trait method!elementNotIn	self requirement! !LinkedListTest removeSelector: #elementNotIn!!Trait method!elementInForIndexAccessing" return an element included in 'collectionMoreThan1NoDuplicates' "	self explicitRequirement! !LinkedListTest removeSelector: #elementInForIndexAccessing!!Trait method!elementInForElementAccessing" return an element inculded in 'moreThan4Elements'"	self explicitRequirement! !LinkedListTest removeSelector: #elementInForElementAccessing!!Trait method!element	"Returns an object that can be added to the collection returned by #collection."	^ self explicitRequirement! !LinkedListTest removeSelector: #element!!Trait method!collectionWithoutNilElements" return a collection that doesn't includes a nil element  and that doesn't includes equal elements'"	self explicitRequirement! !LinkedListTest removeSelector: #collectionWithoutNilElements!!Trait method!collectionWithoutEqualElements	self requirement! !LinkedListTest removeSelector: #collectionWithoutEqualElements!!Trait method!collectionWithSortableElements	" return a collection only including elements that can be sorted (understanding '<' )"	self explicitRequirement! !LinkedListTest removeSelector: #collectionWithSortableElements!!Trait method!collectionWithElementsToRemove" return a collection of elements included in 'nonEmpty'  "	^ self explicitRequirement! !LinkedListTest removeSelector: #collectionWithElementsToRemove!!Trait method!collectionWithElement	"Returns a collection that already includes what is returned by #element."	^ self explicitRequirement! !LinkedListTest removeSelector: #collectionWithElement!!Trait method!collectionWithCopyNonIdentical	" return a collection that include elements for which 'copy' return a different object (this is not the case of SmallInteger)"	^ self explicitRequirement! !LinkedListTest removeSelector: #collectionWithCopyNonIdentical!!Trait method!collectionWith1TimeSubcollection" return a collection including 'oldSubCollection'  only one time "	self explicitRequirement! !LinkedListTest removeSelector: #collectionWith1TimeSubcollection!!Trait method!collectionNotIncluded" return a collection for wich each element is not included in 'nonEmpty' "	^ self explicitRequirement! !LinkedListTest removeSelector: #collectionNotIncluded!!Trait method!collectionMoreThan1NoDuplicates	" return a collection of size > 1 without equal elements"	self explicitRequirement! !LinkedListTest removeSelector: #collectionMoreThan1NoDuplicates!!Trait method!collectionClass" return the class to be used to create instances of the class tested"	^ self explicitRequirement! !LinkedListTest removeSelector: #collectionClass!!Trait method!collection	^ self explicitRequirement! !LinkedListTest removeSelector: #collection!!Trait method!anotherElementOrAssociationNotIn	" return an element (or an association for Dictionary )not present  in 'collection' "	^ self explicitRequirement! !LinkedListTest removeSelector: #anotherElementOrAssociationNotIn!!Trait method!anotherElementOrAssociationIn	" return an element (or an association for Dictionary ) present  in 'collection' "	^ self explicitRequirement! !LinkedListTest removeSelector: #anotherElementOrAssociationIn!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !LinkedListTest removeSelector: #anotherElementNotIn!LinkedListTest removeSelector: #accessCollection!Smalltalk globals removeClassNamed: #AnObsoleteLinkedListTest!LIFOQueueTests removeSelector: #testHeavyContention!LIFOQueueTests removeSelector: #testContention1!LIFOQueueTests removeSelector: #testBasics!LIFOQueueTests removeSelector: #newQueue!Smalltalk globals removeClassNamed: #AnObsoleteLIFOQueueTests!KeyedTreeTest removeSelector: #testSubtrees!KeyedTreeTest removeSelector: #testRemovePathIfAbsent!KeyedTreeTest removeSelector: #testRemovePath!KeyedTreeTest removeSelector: #testMerge!KeyedTreeTest removeSelector: #testCopy!KeyedTreeTest removeSelector: #testAtPathPut!KeyedTreeTest removeSelector: #testAtPathIfAbsentPut!KeyedTreeTest removeSelector: #testAtPathIfAbsent!KeyedTreeTest removeSelector: #testAtPath!Smalltalk globals removeClassNamed: #AnObsoleteKeyedTreeTest!IntegerArrayTest removeSelector: #testPutNegative!IntegerArrayTest removeSelector: #testPutAllNegative!IntegerArrayTest removeSelector: #testAt!Smalltalk globals removeClassNamed: #AnObsoleteIntegerArrayTest!HashTableSizesTest removeSelector: #testAtLeast!Smalltalk globals removeClassNamed: #AnObsoleteHashTableSizesTest!GeneratorTest removeSelector: #testSimple!GeneratorTest removeSelector: #testResetUnwind!GeneratorTest removeSelector: #testReset!GeneratorTest removeSelector: #testPeek!GeneratorTest removeSelector: #testNext!GeneratorTest removeSelector: #testFibonacci!GeneratorTest removeSelector: #testErrorPropagation!GeneratorTest removeSelector: #testEnsure!GeneratorTest removeSelector: #testEmpty!GeneratorTest removeSelector: #testContents!GeneratorTest removeSelector: #testClose!GeneratorTest removeSelector: #testAtEnd!GeneratorTest removeSelector: #numbersBetween:and:!GeneratorTest removeSelector: #fibonacciSequence!GeneratorTest class removeSelector: #packageNamesUnderTest!Smalltalk globals removeClassNamed: #AnObsoleteGeneratorTest!FIFOQueueTests removeSelector: #testSuchThat!FIFOQueueTests removeSelector: #testSize!FIFOQueueTests removeSelector: #testNextOrNilSuchThat!FIFOQueueTests removeSelector: #testHeavyContention2!FIFOQueueTests removeSelector: #testHeavyContention!FIFOQueueTests removeSelector: #testFlushAllSuchThat!FIFOQueueTests removeSelector: #testFlush!FIFOQueueTests removeSelector: #testContention1!FIFOQueueTests removeSelector: #testBasics!FIFOQueueTests removeSelector: #runValidationTest2!FIFOQueueTests removeSelector: #runValidationTest!FIFOQueueTests removeSelector: #newQueue!Smalltalk globals removeClassNamed: #AnObsoleteFIFOQueueTests!CharacterSetTest removeSelector: #testCopy!Smalltalk globals removeClassNamed: #AnObsoleteCharacterSetTest!ByteArrayTest removeSelector: #testindexOfStartingAt!ByteArrayTest removeSelector: #testIsLiteral!ByteArrayTest removeSelector: #testHex!ByteArrayTest removeSelector: #testFourthByteArraysReturnTheCorrectValues!ByteArrayTest removeSelector: #testFallbackReplaceFromToWithForWideString!ByteArrayTest removeSelector: #testFallbackReplaceFromToWithForString!ByteArrayTest removeSelector: #testBooleanAt!Smalltalk globals removeClassNamed: #AnObsoleteByteArrayTest!MockExceptionWithPassAction removeSelector: #passAction:!MockExceptionWithPassAction removeSelector: #pass!Smalltalk globals removeClassNamed: #AnObsoleteMockExceptionWithPassAction!ManifestCollectionsTests class removeSelector: #packageName!ManifestCollectionsTests class removeSelector: #manuallyResolvedDependencies!ManifestCollectionsTests class removeSelector: #description!ManifestCollectionsTests class removeSelector: #dependencies!Smalltalk globals removeClassNamed: #AnObsoleteManifestCollectionsTests!TSubCollectionAccess removeSelector: #testLastNElements!TSubCollectionAccess removeSelector: #testFirstNElements!TSubCollectionAccess removeSelector: #testAllButLastNElements!TSubCollectionAccess removeSelector: #testAllButLast!TSubCollectionAccess removeSelector: #testAllButFirstNElements!TSubCollectionAccess removeSelector: #testAllButFirst!TSubCollectionAccess removeSelector: #test0FixtureSubcollectionAccessTest!TSubCollectionAccess removeSelector: #moreThan3Elements!Smalltalk globals removeClassNamed: #AnObsoleteTSubCollectionAccess!TStructuralEqualityTest removeSelector: #testEqualSignOfIdenticalCollectionObjects!TStructuralEqualityTest removeSelector: #testEqualSignIsTrueForNonIdenticalButEqualCollections!TStructuralEqualityTest removeSelector: #testEqualSign!TStructuralEqualityTest removeSelector: #test0TStructuralEqualityTest!TStructuralEqualityTest removeSelector: #nonEmpty!TStructuralEqualityTest removeSelector: #empty!TSequencedStructuralEqualityTest removeSelector: #testHasEqualElementsOfIdenticalCollectionObjects!TSequencedStructuralEqualityTest removeSelector: #testHasEqualElementsIsTrueForNonIdenticalButEqualCollections!TSequencedStructuralEqualityTest removeSelector: #testHasEqualElements!TSequencedStructuralEqualityTest removeSelector: #testEqualSignOfIdenticalCollectionObjects!TSequencedStructuralEqualityTest removeSelector: #testEqualSignIsTrueForNonIdenticalButEqualCollections!TSequencedStructuralEqualityTest removeSelector: #testEqualSignIsTrueForEmptyButNonIdenticalCollections!TSequencedStructuralEqualityTest removeSelector: #testEqualSignForSequenceableCollections!TSequencedStructuralEqualityTest removeSelector: #testEqualSign!TSequencedStructuralEqualityTest removeSelector: #test0TStructuralEqualityTest!TSequencedStructuralEqualityTest removeSelector: #test0TSequencedStructuralEqualityTest!TSequencedStructuralEqualityTest removeSelector: #nonEmpty!TSequencedStructuralEqualityTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTSequencedStructuralEqualityTest!Smalltalk globals removeClassNamed: #AnObsoleteTStructuralEqualityTest!TSortTest removeSelector: #unsortedCollection!TSortTest removeSelector: #testSortedUsingBlock!TSortTest removeSelector: #testSorted!TSortTest removeSelector: #testSortUsingSortBlock!TSortTest removeSelector: #testSort!TSortTest removeSelector: #testIsSortedBy!TSortTest removeSelector: #testIsSorted!TSortTest removeSelector: #test0SortingArrayedTest!TSortTest removeSelector: #sortedInAscendingOrderCollection!Smalltalk globals removeClassNamed: #AnObsoleteTSortTest!TSizeTest removeSelector: #testSize!TSizeTest removeSelector: #test0TSizeTest!TSizeTest removeSelector: #sizeCollection!TSizeTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTSizeTest!TSetArithmetic removeSelector: #testUnionOfEmpties!TSetArithmetic removeSelector: #testUnion!TSetArithmetic removeSelector: #testIntersectionTwoSimilarElementsInIntersection!TSetArithmetic removeSelector: #testIntersectionItself!TSetArithmetic removeSelector: #testIntersectionEmpty!TSetArithmetic removeSelector: #testIntersectionBasic!TSetArithmetic removeSelector: #testDifferenceWithSeparateCollection!TSetArithmetic removeSelector: #testDifferenceWithNonNullIntersection!TSetArithmetic removeSelector: #testDifference!TSetArithmetic removeSelector: #test0FixtureSetAritmeticTest!TSetArithmetic removeSelector: #numberOfSimilarElementsInIntersection!TSetArithmetic removeSelector: #nonEmpty!TSetArithmetic removeSelector: #containsAll:of:andOf:!TSetArithmetic removeSelector: #collectionClass!TSetArithmetic removeSelector: #collection!TSetArithmetic removeSelector: #anotherElementOrAssociationNotIn!TSetArithmetic removeSelector: #anotherElementOrAssociationIn!Smalltalk globals removeClassNamed: #AnObsoleteTSetArithmetic!TSequencedElementAccessTest removeSelector: #testMiddle!TSequencedElementAccessTest removeSelector: #testLast!TSequencedElementAccessTest removeSelector: #testFirstSecondThird!TSequencedElementAccessTest removeSelector: #testBeforeIfAbsent!TSequencedElementAccessTest removeSelector: #testBefore!TSequencedElementAccessTest removeSelector: #testAtWrap!TSequencedElementAccessTest removeSelector: #testAtRandom!TSequencedElementAccessTest removeSelector: #testAtPin!TSequencedElementAccessTest removeSelector: #testAtOutOfBounds!TSequencedElementAccessTest removeSelector: #testAtLastIfAbsent!TSequencedElementAccessTest removeSelector: #testAtLastError!TSequencedElementAccessTest removeSelector: #testAtLast!TSequencedElementAccessTest removeSelector: #testAtIfAbsent!TSequencedElementAccessTest removeSelector: #testAtAll!TSequencedElementAccessTest removeSelector: #testAt!TSequencedElementAccessTest removeSelector: #testAfterIfAbsent!TSequencedElementAccessTest removeSelector: #testAfter!TSequencedElementAccessTest removeSelector: #test0FixtureSequencedElementAccessTest!TSequencedElementAccessTest removeSelector: #subCollectionNotIn!TSequencedElementAccessTest removeSelector: #moreThan4Elements!TSequencedElementAccessTest removeSelector: #elementNotInForElementAccessing!TSequencedElementAccessTest removeSelector: #elementInForElementAccessing!Smalltalk globals removeClassNamed: #AnObsoleteTSequencedElementAccessTest!TSequencedConcatenationTest removeSelector: #testStreamContentsSized!TSequencedConcatenationTest removeSelector: #testStreamContentsProtocol!TSequencedConcatenationTest removeSelector: #testStreamContents!TSequencedConcatenationTest removeSelector: #testNewStreamContentsReturnsCollectionOfCorrectSize!TSequencedConcatenationTest removeSelector: #testConcatenationWithEmpty!TSequencedConcatenationTest removeSelector: #testConcatenation!TSequencedConcatenationTest removeSelector: #test0FixtureSequencedConcatenationTest!TSequencedConcatenationTest removeSelector: #secondCollection!TSequencedConcatenationTest removeSelector: #firstCollection!TSequencedConcatenationTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTSequencedConcatenationTest!TReplacementSequencedTest removeSelector: #testReplaceFromToWithStartingAt!TReplacementSequencedTest removeSelector: #testReplaceFromToWith!TReplacementSequencedTest removeSelector: #testReplaceAllWith!TReplacementSequencedTest removeSelector: #testOFixtureReplacementSequencedTest!TReplacementSequencedTest removeSelector: #secondIndex!TReplacementSequencedTest removeSelector: #replacementCollectionSameSize!TReplacementSequencedTest removeSelector: #replacementCollection!TReplacementSequencedTest removeSelector: #nonEmpty!TReplacementSequencedTest removeSelector: #newElement!TReplacementSequencedTest removeSelector: #firstIndex!TReplacementSequencedTest removeSelector: #elementInForReplacement!Smalltalk globals removeClassNamed: #AnObsoleteTReplacementSequencedTest!TRemoveTest removeSelector: #testRemoveIfAbsent!TRemoveTest removeSelector: #testRemoveElementThatExists!TRemoveTest removeSelector: #testRemoveElementReallyRemovesElement!TRemoveTest removeSelector: #testRemoveElementFromEmpty!TRemoveTest removeSelector: #testRemoveAllSuchThat!TRemoveTest removeSelector: #testRemoveAllFoundIn!TRemoveTest removeSelector: #testRemoveAllError!TRemoveTest removeSelector: #testRemoveAll!TRemoveTest removeSelector: #test0FixtureTRemoveTest!TRemoveTest removeSelector: #nonEmptyWithoutEqualElements!TRemoveTest removeSelector: #empty!TRemoveTest removeSelector: #elementNotIn!TRemoveForMultiplenessTest removeSelector: #testRemoveIfAbsent!TRemoveForMultiplenessTest removeSelector: #testRemoveElementThatExistsTwice!TRemoveForMultiplenessTest removeSelector: #testRemoveElementThatExists!TRemoveForMultiplenessTest removeSelector: #testRemoveElementReallyRemovesElement!TRemoveForMultiplenessTest removeSelector: #testRemoveElementFromEmpty!TRemoveForMultiplenessTest removeSelector: #testRemoveAllSuchThat!TRemoveForMultiplenessTest removeSelector: #testRemoveAllFoundIn!TRemoveForMultiplenessTest removeSelector: #testRemoveAllError!TRemoveForMultiplenessTest removeSelector: #testRemoveAll!TRemoveForMultiplenessTest removeSelector: #test0FixtureTRemoveTest!TRemoveForMultiplenessTest removeSelector: #nonEmptyWithoutEqualElements!TRemoveForMultiplenessTest removeSelector: #empty!TRemoveForMultiplenessTest removeSelector: #elementTwiceIn!TRemoveForMultiplenessTest removeSelector: #elementNotIn!Smalltalk globals removeClassNamed: #AnObsoleteTRemoveForMultiplenessTest!Smalltalk globals removeClassNamed: #AnObsoleteTRemoveTest!TRemoveByIndexTest removeSelector: #testRemoveLastNotPresent!TRemoveByIndexTest removeSelector: #testRemoveLastNElementsNElements!TRemoveByIndexTest removeSelector: #testRemoveLastNElements!TRemoveByIndexTest removeSelector: #testRemoveLast!TRemoveByIndexTest removeSelector: #testRemoveFirstNotPresent!TRemoveByIndexTest removeSelector: #testRemoveFirstNElementsNotPresent!TRemoveByIndexTest removeSelector: #testRemoveFirstNElements!TRemoveByIndexTest removeSelector: #testRemoveFirst!TRemoveByIndexTest removeSelector: #testRemoveAtNotPresent!TRemoveByIndexTest removeSelector: #testRemoveAt!TRemoveByIndexTest removeSelector: #test0FixtureRemoveByIndexTest!TRemoveByIndexTest removeSelector: #empty!TRemoveByIndexTest removeSelector: #collectionWith5Elements!Smalltalk globals removeClassNamed: #AnObsoleteTRemoveByIndexTest!TPutTest removeSelector: #valueArray!TPutTest removeSelector: #testSwapWith!TPutTest removeSelector: #testFromToPut!TPutTest removeSelector: #testAtWrapPut!TPutTest removeSelector: #testAtLastPut!TPutTest removeSelector: #testAtAllPutAll!TPutTest removeSelector: #testAtAllPut!TPutTest removeSelector: #testAtAllIndexesPut!TPutTest removeSelector: #test0FixturePutOneOrMoreElementsTest!TPutTest removeSelector: #nonEmpty!TPutTest removeSelector: #indexArray!TPutTest removeSelector: #aValue!Smalltalk globals removeClassNamed: #AnObsoleteTPutTest!TPutBasicTest removeSelector: #testAtPutTwoValues!TPutBasicTest removeSelector: #testAtPutOutOfBounds!TPutBasicTest removeSelector: #testAtPut!TPutBasicTest removeSelector: #test0FixturePutTest!TPutBasicTest removeSelector: #nonEmpty!TPutBasicTest removeSelector: #empty!TPutBasicTest removeSelector: #anotherValue!TPutBasicTest removeSelector: #anIndex!TPutBasicTest removeSelector: #aValue!Smalltalk globals removeClassNamed: #AnObsoleteTPutBasicTest!TPrintTest removeSelector: #testStoreOn!TPrintTest removeSelector: #testPrintOnDelimiterLast!TPrintTest removeSelector: #testPrintOnDelimiter!TPrintTest removeSelector: #testPrintOn!TPrintTest removeSelector: #testPrintNameOn!TPrintTest removeSelector: #testPrintElementsOn!TPrintTest removeSelector: #test0FixturePrintTest!TPrintTest removeSelector: #nonEmpty!TPrintOnSequencedTest removeSelector: #testStoreOn!TPrintOnSequencedTest removeSelector: #testPrintOnDelimiterLast!TPrintOnSequencedTest removeSelector: #testPrintOnDelimiter!TPrintOnSequencedTest removeSelector: #testPrintOn!TPrintOnSequencedTest removeSelector: #testPrintNameOn!TPrintOnSequencedTest removeSelector: #testPrintElementsOn!TPrintOnSequencedTest removeSelector: #test0FixturePrintTest!TPrintOnSequencedTest removeSelector: #nonEmpty!Smalltalk globals removeClassNamed: #AnObsoleteTPrintOnSequencedTest!Smalltalk globals removeClassNamed: #AnObsoleteTPrintTest!TOccurrencesTest removeSelector: #testOccurrencesOfNotIn!TOccurrencesTest removeSelector: #testOccurrencesOfEmpty!TOccurrencesTest removeSelector: #testOccurrencesOf!TOccurrencesTest removeSelector: #test0FixtureOccurrencesTest!TOccurrencesTest removeSelector: #empty!TOccurrencesTest removeSelector: #elementNotInForOccurrences!TOccurrencesTest removeSelector: #collectionWithoutEqualElements!TOccurrencesForMultiplinessTest removeSelector: #testOccurrencesOfNotIn!TOccurrencesForMultiplinessTest removeSelector: #testOccurrencesOfForMultipliness!TOccurrencesForMultiplinessTest removeSelector: #testOccurrencesOfEmpty!TOccurrencesForMultiplinessTest removeSelector: #testOccurrencesOf!TOccurrencesForMultiplinessTest removeSelector: #test0FixtureOccurrencesTest!TOccurrencesForMultiplinessTest removeSelector: #test0FixtureOccurrencesForMultiplinessTest!TOccurrencesForMultiplinessTest removeSelector: #empty!TOccurrencesForMultiplinessTest removeSelector: #elementTwiceInForOccurrences!TOccurrencesForMultiplinessTest removeSelector: #elementNotInForOccurrences!TOccurrencesForMultiplinessTest removeSelector: #collectionWithoutEqualElements!TOccurrencesForMultiplinessTest removeSelector: #collectionWithEqualElements!Smalltalk globals removeClassNamed: #AnObsoleteTOccurrencesForMultiplinessTest!Smalltalk globals removeClassNamed: #AnObsoleteTOccurrencesTest!TOccurrencesForIdentityCollectionsTest removeSelector: #testOccurencesOfForIdentityCollections!TOccurrencesForIdentityCollectionsTest removeSelector: #test0FixtureOccurrencesForIdentityCollectionsTest!TOccurrencesForIdentityCollectionsTest removeSelector: #identityCollectionWithElementsCopyNotIdentical!Smalltalk globals removeClassNamed: #AnObsoleteTOccurrencesForIdentityCollectionsTest!TIterateTest removeSelector: #testSumNumbers!TIterateTest removeSelector: #testSelectThenDoOnEmpty!TIterateTest removeSelector: #testSelectThenDo!TIterateTest removeSelector: #testSelectThenCollectOnEmpty!TIterateTest removeSelector: #testSelectThenCollect!TIterateTest removeSelector: #testSelectOnEmpty!TIterateTest removeSelector: #testSelectNoneThenDo!TIterateTest removeSelector: #testSelectNoneThenCollect!TIterateTest removeSelector: #testSelect!TIterateTest removeSelector: #testRejectThenDoOnEmpty!TIterateTest removeSelector: #testRejectThenDo!TIterateTest removeSelector: #testRejectThenCollectEmpty!TIterateTest removeSelector: #testRejectThenCollect!TIterateTest removeSelector: #testRejectNoReject!TIterateTest removeSelector: #testRejectEmpty!TIterateTest removeSelector: #testRejectAllThenDo!TIterateTest removeSelector: #testRejectAllThenCollect!TIterateTest removeSelector: #testReject!TIterateTest removeSelector: #testNoneSatisfyEmpty!TIterateTest removeSelector: #testNoneSatisfy!TIterateTest removeSelector: #testInjectInto!TIterateTest removeSelector: #testDoWithout!TIterateTest removeSelector: #testDoSeparatedBy!TIterateTest removeSelector: #testDo2!TIterateTest removeSelector: #testDetectIfNone!TIterateTest removeSelector: #testDetect!TIterateTest removeSelector: #testCollectThenSelectOnEmpty!TIterateTest removeSelector: #testCollectThenDoOnEmpty!TIterateTest removeSelector: #testCollectOnEmpty!TIterateTest removeSelector: #testBasicCollectThenDo!TIterateTest removeSelector: #testBasicCollectEmpty!TIterateTest removeSelector: #testBasicCollect!TIterateTest removeSelector: #testAnySastify!TIterateTest removeSelector: #testAllSatisfyEmpty!TIterateTest removeSelector: #testAllSatisfy!TIterateTest removeSelector: #test0FixtureIterateTest!TIterateTest removeSelector: #empty!TIterateTest removeSelector: #collectionWithoutNilElements!Smalltalk globals removeClassNamed: #AnObsoleteTIterateTest!TIterateSequencedReadableTest removeSelector: #testWithIndexDo!TIterateSequencedReadableTest removeSelector: #testWithIndexCollect!TIterateSequencedReadableTest removeSelector: #testWithDoError!TIterateSequencedReadableTest removeSelector: #testWithDo!TIterateSequencedReadableTest removeSelector: #testWithCollectError!TIterateSequencedReadableTest removeSelector: #testWithCollect!TIterateSequencedReadableTest removeSelector: #testReverseWithDo!TIterateSequencedReadableTest removeSelector: #testReverseDoEmpty!TIterateSequencedReadableTest removeSelector: #testReverseDo!TIterateSequencedReadableTest removeSelector: #testPairsDo!TIterateSequencedReadableTest removeSelector: #testPairsCollect!TIterateSequencedReadableTest removeSelector: #testKeysAndValuesDoEmpty!TIterateSequencedReadableTest removeSelector: #testKeysAndValuesDo!TIterateSequencedReadableTest removeSelector: #testFromToDo!TIterateSequencedReadableTest removeSelector: #testFindLastNotIn!TIterateSequencedReadableTest removeSelector: #testFindLast!TIterateSequencedReadableTest removeSelector: #testFindFirstNotIn!TIterateSequencedReadableTest removeSelector: #testFindFirst!TIterateSequencedReadableTest removeSelector: #testDo!TIterateSequencedReadableTest removeSelector: #testDetectSequenced!TIterateSequencedReadableTest removeSelector: #testCollectFromTo!TIterateSequencedReadableTest removeSelector: #testAllButLastDo!TIterateSequencedReadableTest removeSelector: #testAllButFirstDo!TIterateSequencedReadableTest removeSelector: #test0FixtureIterateSequencedReadableTest!TIterateSequencedReadableTest removeSelector: #nonEmptyMoreThan1Element!TIterateSequencedReadableTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTIterateSequencedReadableTest!TIndexAccessForMultipliness removeSelector: #testLastIndexOfStartingAtDuplicate!TIndexAccessForMultipliness removeSelector: #testLastIndexOfIfAbsentDuplicate!TIndexAccessForMultipliness removeSelector: #testLastIndexOfDuplicate!TIndexAccessForMultipliness removeSelector: #testIndexOfStartingAtDuplicate!TIndexAccessForMultipliness removeSelector: #testIndexOfIfAbsentDuplicate!TIndexAccessForMultipliness removeSelector: #testIndexOfDuplicate!TIndexAccessForMultipliness removeSelector: #testIdentityIndexOfIAbsentDuplicate!TIndexAccessForMultipliness removeSelector: #testIdentityIndexOfDuplicate!TIndexAccessForMultipliness removeSelector: #test0FixtureIndexAccessFotMultipliness!TIndexAccessForMultipliness removeSelector: #collectionWithSameAtEndAndBegining!TIndexAccessForMultipliness removeSelector: #collectionWithNonIdentitySameAtEndAndBegining!Smalltalk globals removeClassNamed: #AnObsoleteTIndexAccessForMultipliness!TIndexAccess removeSelector: #testLastIndexOfStartingAt!TIndexAccess removeSelector: #testLastIndexOfIfAbsent!TIndexAccess removeSelector: #testLastIndexOf!TIndexAccess removeSelector: #testIndexOfSubCollectionStartingAtIfAbsent!TIndexAccess removeSelector: #testIndexOfSubCollectionStartingAt!TIndexAccess removeSelector: #testIndexOfStartingAtIfAbsent!TIndexAccess removeSelector: #testIndexOfStartingAt!TIndexAccess removeSelector: #testIndexOfIfAbsent!TIndexAccess removeSelector: #testIndexOf!TIndexAccess removeSelector: #testIdentityIndexOfIAbsent!TIndexAccess removeSelector: #testIdentityIndexOf!TIndexAccess removeSelector: #test0FixtureIndexAccessTest!TIndexAccess removeSelector: #elementNotInForIndexAccessing!TIndexAccess removeSelector: #elementInForIndexAccessing!TIndexAccess removeSelector: #collectionMoreThan1NoDuplicates!Smalltalk globals removeClassNamed: #AnObsoleteTIndexAccess!!Trait method!testIncludesElementIsThere		self assert: (self nonEmpty includes: self nonEmpty anyOne).! !TIncludesWithIdentityCheckTest removeSelector: #testIncludesElementIsThere!!Trait method!testIncludesElementIsNotThere		self deny: (self nonEmpty includes: self elementNotIn).	self assert: (self nonEmpty includes: self nonEmpty anyOne).	self deny: (self empty includes: self elementNotIn)! !TIncludesWithIdentityCheckTest removeSelector: #testIncludesElementIsNotThere!!Trait method!testIncludesAnyNoneThere		self deny: (self nonEmpty includesAny: self empty).	self deny: (self nonEmpty includesAny: { self elementNotIn. self anotherElementNotIn })! !TIncludesWithIdentityCheckTest removeSelector: #testIncludesAnyNoneThere!!Trait method!testIncludesAnyAllThere	self deny: (self nonEmpty includesAny: self empty).	self assert: (self nonEmpty includesAny: { self nonEmpty anyOne }).	self assert: (self nonEmpty includesAny: self nonEmpty).! !TIncludesWithIdentityCheckTest removeSelector: #testIncludesAnyAllThere!!Trait method!testIncludesAllNoneThere	self deny: (self empty includesAll: self nonEmpty ).	self deny: (self nonEmpty includesAll: { self elementNotIn. self anotherElementNotIn })! !TIncludesWithIdentityCheckTest removeSelector: #testIncludesAllNoneThere!!Trait method!testIdentityIncludesNonSpecificComportement	" test the same comportement than 'includes: '  "	| collection |		collection := self nonEmpty  .		self deny: (collection identityIncludes: self elementNotIn ).	self assert:(collection identityIncludes: collection anyOne)! !TIncludesWithIdentityCheckTest removeSelector: #testIdentityIncludesNonSpecificComportement!TIncludesWithIdentityCheckTest removeSelector: #testIdentityIncludes!TIncludesWithIdentityCheckTest removeSelector: #test0FixtureIncludeWithIdentityTest!!Trait method!test0FixtureIncludeTest	| anElementIn |	self nonEmpty.	self deny: self nonEmpty isEmpty.	self elementNotIn.	anElementIn := true.	self nonEmpty detect: [ :each | each = self elementNotIn ] ifNone: [ anElementIn := false ].	self assert: anElementIn = false.	self anotherElementNotIn.	anElementIn := true.	self nonEmpty detect: [ :each | each = self anotherElementNotIn ] ifNone: [ anElementIn := false ].	self assert: anElementIn = false.	self empty.	self assert: self empty isEmpty! !TIncludesWithIdentityCheckTest removeSelector: #test0FixtureIncludeTest!!Trait method!nonEmpty	^ self explicitRequirement! !TIncludesWithIdentityCheckTest removeSelector: #nonEmpty!!Trait method!empty	^ self explicitRequirement! !TIncludesWithIdentityCheckTest removeSelector: #empty!!Trait method!elementNotIn"return an element not included in 'nonEmpty' "	^ self explicitRequirement! !TIncludesWithIdentityCheckTest removeSelector: #elementNotIn!TIncludesWithIdentityCheckTest removeSelector: #collectionWithCopyNonIdentical!!Trait method!anotherElementNotIn" return an element different of 'elementNotIn'  not included in 'nonEmpty' "	^ self explicitRequirement! !TIncludesWithIdentityCheckTest removeSelector: #anotherElementNotIn!Smalltalk globals removeClassNamed: #AnObsoleteTIncludesWithIdentityCheckTest!TIncludesTest removeSelector: #testIncludesElementIsThere!TIncludesTest removeSelector: #testIncludesElementIsNotThere!TIncludesTest removeSelector: #testIncludesAnyNoneThere!TIncludesTest removeSelector: #testIncludesAnyAllThere!TIncludesTest removeSelector: #testIncludesAllNoneThere!TIncludesTest removeSelector: #testIdentityIncludesNonSpecificComportement!TIncludesTest removeSelector: #test0FixtureIncludeTest!TIncludesTest removeSelector: #nonEmpty!TIncludesTest removeSelector: #empty!TIncludesTest removeSelector: #elementNotIn!TIncludesTest removeSelector: #anotherElementNotIn!Smalltalk globals removeClassNamed: #AnObsoleteTIncludesTest!TIncludesForIdentityCollectionsTest removeSelector: #testIncludesForIdentityCollections!TIncludesForIdentityCollectionsTest removeSelector: #testIncludesAnyOfForIdentityCollections!TIncludesForIdentityCollectionsTest removeSelector: #testIncludesAllOfForIdentityCollections!TIncludesForIdentityCollectionsTest removeSelector: #testIdentityIncludesForIdentityCollections!TIncludesForIdentityCollectionsTest removeSelector: #test0FixtureInludesForIdentityCollectionsTest!TIncludesForIdentityCollectionsTest removeSelector: #identityCollectionWithElementsCopyNotIdentical!Smalltalk globals removeClassNamed: #AnObsoleteTIncludesForIdentityCollectionsTest!TIdentityAddTest removeSelector: #testIdentityAdd!TIdentityAddTest removeSelector: #equalNotIdenticalElement!TIdentityAddTest removeSelector: #element!TIdentityAddTest removeSelector: #collection!Smalltalk globals removeClassNamed: #AnObsoleteTIdentityAddTest!TGrowableTest removeSelector: #testAddNonEmptyGrowsWhenNewElement!TGrowableTest removeSelector: #testAddEmptyGrows!TGrowableTest removeSelector: #test0FixtureRequirementsOfTGrowableTest!TGrowableTest removeSelector: #nonEmpty!TGrowableTest removeSelector: #empty!TGrowableTest removeSelector: #elementNotIn!TGrowableTest removeSelector: #element!Smalltalk globals removeClassNamed: #AnObsoleteTGrowableTest!TEnumeratingTest removeSelector: #testFlattened!TEnumeratingTest removeSelector: #testFlatCollectAsWithEmptyCollection!TEnumeratingTest removeSelector: #testFlatCollectAsSet!TEnumeratingTest removeSelector: #testFlatCollectAs!TEnumeratingTest removeSelector: #testFlatCollect!TEnumeratingTest removeSelector: #simpleCollection!TEnumeratingTest removeSelector: #collectionWithCharacters!TEnumeratingTest removeSelector: #collectionOfCollectionsOfStrings!TEnumeratingTest removeSelector: #collectionOfCollectionsOfInts!Smalltalk globals removeClassNamed: #AnObsoleteTEnumeratingTest!TEmptyTest removeSelector: #testNotEmpty!TEmptyTest removeSelector: #testIsEmptyOrNil!TEmptyTest removeSelector: #testIsEmpty!TEmptyTest removeSelector: #testIfNotEmptyifEmpty!TEmptyTest removeSelector: #testIfNotEmpty!TEmptyTest removeSelector: #testIfEmptyifNotEmpty!TEmptyTest removeSelector: #testIfEmpty!TEmptyTest removeSelector: #test0FixtureEmptyTest!TEmptyTest removeSelector: #nonEmpty!TEmptyTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTEmptyTest!TEmptySequenceableTest removeSelector: #valuePutIn!TEmptySequenceableTest removeSelector: #testSequenceIfNotEmptyifEmpty!TEmptySequenceableTest removeSelector: #testSequenceIfNotEmpty!TEmptySequenceableTest removeSelector: #test0FixtureEmptySequenceableTest!TEmptySequenceableTest removeSelector: #selectorToAccessValuePutIn!TEmptySequenceableTest removeSelector: #nonEmpty!TEmptySequenceableTest removeSelector: #empty!TEmptySequenceableTest removeSelector: #accessValuePutInOn:!TEmptySequenceableTest removeSelector: #accessValuePutIn!Smalltalk globals removeClassNamed: #AnObsoleteTEmptySequenceableTest!TDictionaryValueAccessTest removeSelector: #valueNotIn!TDictionaryValueAccessTest removeSelector: #testAtPutNil!TDictionaryValueAccessTest removeSelector: #testAtPutDict!TDictionaryValueAccessTest removeSelector: #testAtIfPresentIfAbsentPut!TDictionaryValueAccessTest removeSelector: #testAtIfPresentIfAbsent!TDictionaryValueAccessTest removeSelector: #testAtIfPresent!TDictionaryValueAccessTest removeSelector: #testAtIfAbsentPut!TDictionaryValueAccessTest removeSelector: #testAtIfAbsent!TDictionaryValueAccessTest removeSelector: #testAt!TDictionaryValueAccessTest removeSelector: #test0FixtureDictionaryElementAccess!TDictionaryValueAccessTest removeSelector: #supportsNilKey!TDictionaryValueAccessTest removeSelector: #nonEmpty!TDictionaryValueAccessTest removeSelector: #keyNotIn!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryValueAccessTest!TDictionaryRemovingTest removeSelector: #testRemoveKeyIfAbsent!TDictionaryRemovingTest removeSelector: #testRemoveKey!TDictionaryRemovingTest removeSelector: #testRemove!TDictionaryRemovingTest removeSelector: #testKeysAndValuesRemove!TDictionaryRemovingTest removeSelector: #test0FixtureDictionaryRemovingTest!TDictionaryRemovingTest removeSelector: #nonEmptyDict!TDictionaryRemovingTest removeSelector: #newEmptyDict!TDictionaryRemovingTest removeSelector: #keyNotInNonEmptyDict!TDictionaryRemovingTest removeSelector: #emptyDict!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryRemovingTest!TDictionaryPrintingTest removeSelector: #testStoreOn!TDictionaryPrintingTest removeSelector: #testPrintElementsOn!TDictionaryPrintingTest removeSelector: #nonEmptyDict!TDictionaryPrintingTest removeSelector: #newEmptyDict!TDictionaryPrintingTest removeSelector: #emptyDict!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryPrintingTest!TDictionaryKeysValuesAssociationsAccess removeSelector: #testValues!TDictionaryKeysValuesAssociationsAccess removeSelector: #testKeysSortedSafely!TDictionaryKeysValuesAssociationsAccess removeSelector: #testKeys!TDictionaryKeysValuesAssociationsAccess removeSelector: #testAssociations!TDictionaryKeysValuesAssociationsAccess removeSelector: #test0FixtureDictionaryKeysValuesAssociationsAccess!TDictionaryKeysValuesAssociationsAccess removeSelector: #nonEmpty!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryKeysValuesAssociationsAccess!TDictionaryKeyAccessTest removeSelector: #valueNotIn!TDictionaryKeyAccessTest removeSelector: #testKeyAtValueIfAbsent!TDictionaryKeyAccessTest removeSelector: #testKeyAtValue!TDictionaryKeyAccessTest removeSelector: #testKeyAtIdentityValueIfAbsent!TDictionaryKeyAccessTest removeSelector: #testKeyAtIdentityValue!TDictionaryKeyAccessTest removeSelector: #test0FixtureDictionaryKeyAccess!TDictionaryKeyAccessTest removeSelector: #nonEmptyWithoutEqualsValues!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryKeyAccessTest!!Trait method!valueNotInNonEmpty	" return a value not included in nonEmpty"	^ self explicitRequirement! !TDictionaryIncludesWithIdentityCheckTest removeSelector: #valueNotInNonEmpty!!Trait method!testIncludesKey	| collection keyIn nonExistantKey |	collection := self nonEmpty .	keyIn := collection keys anyOne.	nonExistantKey := self keyNotInNonEmpty. 	self assert: ( collection includesKey: keyIn ).	self deny: ( collection includesKey: nonExistantKey ).! !TDictionaryIncludesWithIdentityCheckTest removeSelector: #testIncludesKey!TDictionaryIncludesWithIdentityCheckTest removeSelector: #testIncludesIdentitySpecificComportement!!Trait method!testIncludesIdentityBasicComportement| valueIn collection |collection := self nonEmpty .valueIn := collection  values anyOne.self assert: (collection includesIdentity: valueIn ) .self deny: (collection includesIdentity: self valueNotInNonEmpty ).! !TDictionaryIncludesWithIdentityCheckTest removeSelector: #testIncludesIdentityBasicComportement!!Trait method!testIncludesComportementForDictionnary	| valueIn collection keyIn |	collection := self nonEmpty.	valueIn := collection values anyOne.	keyIn := collection keys anyOne.	self assert: (collection includes: valueIn).	self deny: (collection includes: self valueNotInNonEmpty).	" testing that includes take only care of values :"	self deny: (collection includes: keyIn)! !TDictionaryIncludesWithIdentityCheckTest removeSelector: #testIncludesComportementForDictionnary!!Trait method!testIncludesAssociation	|  nonExistantAssociation associationIn keyIn valueIn |	keyIn := self nonEmpty keys anyOne.	valueIn := self nonEmpty values anyOne. 	nonExistantAssociation := self keyNotInNonEmpty -> self valueNotInNonEmpty .	associationIn := self nonEmpty associations anyOne.		self assert:  (self nonEmpty includesAssociation: associationIn ).	self deny:  (self nonEmpty includesAssociation: nonExistantAssociation ).	" testing the case where key is included but not with the same value :"	self deny: (self nonEmpty includesAssociation: (keyIn-> self valueNotInNonEmpty )).	" testing the case where value is included but not corresponding key :"	self deny: (self nonEmpty includesAssociation: (self keyNotInNonEmpty -> valueIn  )).! !TDictionaryIncludesWithIdentityCheckTest removeSelector: #testIncludesAssociation!TDictionaryIncludesWithIdentityCheckTest removeSelector: #test0FixtureDictionaryIncludesIdentity!!Trait method!test0FixtureDictionaryIncludes	| in |	self nonEmpty.	self deny: self nonEmpty isEmpty.	self valueNotInNonEmpty.	in := false.	self nonEmpty		valuesDo: [ :assoc | 			assoc = self valueNotInNonEmpty				ifTrue: [ in := true ] ].	self assert: in = false.	self keyNotInNonEmpty.	in := false.	self nonEmpty		keysDo: [ :assoc | 			assoc = self keyNotInNonEmpty				ifTrue: [ in := true ] ].	self assert: in = false! !TDictionaryIncludesWithIdentityCheckTest removeSelector: #test0FixtureDictionaryIncludes!TDictionaryIncludesWithIdentityCheckTest removeSelector: #nonEmptyWithCopyNonIdentical!!Trait method!nonEmpty^self explicitRequirement! !TDictionaryIncludesWithIdentityCheckTest removeSelector: #nonEmpty!!Trait method!keyNotInNonEmpty	" return a key not included in nonEmpty"	^ self explicitRequirement! !TDictionaryIncludesWithIdentityCheckTest removeSelector: #keyNotInNonEmpty!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryIncludesWithIdentityCheckTest!TDictionaryIncludesTest removeSelector: #valueNotInNonEmpty!TDictionaryIncludesTest removeSelector: #testIncludesKey!TDictionaryIncludesTest removeSelector: #testIncludesIdentityBasicComportement!TDictionaryIncludesTest removeSelector: #testIncludesComportementForDictionnary!TDictionaryIncludesTest removeSelector: #testIncludesAssociation!TDictionaryIncludesTest removeSelector: #test0FixtureDictionaryIncludes!TDictionaryIncludesTest removeSelector: #nonEmpty!TDictionaryIncludesTest removeSelector: #keyNotInNonEmpty!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryIncludesTest!TDictionaryImplementationTest removeSelector: #testSpecies!TDictionaryImplementationTest removeSelector: #testScanFor!TDictionaryImplementationTest removeSelector: #testPseudoVariablesAreValidKeys!TDictionaryImplementationTest removeSelector: #testPseudo!TDictionaryImplementationTest removeSelector: #testNew!TDictionaryImplementationTest removeSelector: #testFindElementOrNil!TDictionaryImplementationTest removeSelector: #testAtNil!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryImplementationTest!TDictionaryEnumeratingTest removeSelector: #testValuesDo!TDictionaryEnumeratingTest removeSelector: #testSelect!TDictionaryEnumeratingTest removeSelector: #testReject!TDictionaryEnumeratingTest removeSelector: #testKeysDo!TDictionaryEnumeratingTest removeSelector: #testKeysAndValuesDo!TDictionaryEnumeratingTest removeSelector: #testDo!TDictionaryEnumeratingTest removeSelector: #testCollect!TDictionaryEnumeratingTest removeSelector: #testAssociationsSelect!TDictionaryEnumeratingTest removeSelector: #testAssociationsDo!TDictionaryEnumeratingTest removeSelector: #test0FixtureDictionaryEnumeratingTest!TDictionaryEnumeratingTest removeSelector: #nonEmptyDict!TDictionaryEnumeratingTest removeSelector: #newEmptyDict!TDictionaryEnumeratingTest removeSelector: #emptyDict!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryEnumeratingTest!TDictionaryCopyingTest removeSelector: #testDictionaryConcatenationWithoutCommonKeys!TDictionaryCopyingTest removeSelector: #testDictionaryConcatenationWithCommonKeysDifferentValues!TDictionaryCopyingTest removeSelector: #testDictionaryConcatenationWithCommonKeys!!Trait method!testCopyNonEmpty		| copy | 	copy := self nonEmpty copy.	self deny: copy isEmpty.	self assert: copy size = self nonEmpty size.	self nonEmpty do: 		[:each | copy includes: each]! !TDictionaryCopyingTest removeSelector: #testCopyNonEmpty!!Trait method!testCopyEmpty		| copy | 	copy := self empty copy.	self assert: copy isEmpty.! !TDictionaryCopyingTest removeSelector: #testCopyEmpty!!Trait method!testCopyCreatesNewObject	 		| copy | 	copy := self nonEmpty copy.	self deny: self nonEmpty == copy.	! !TDictionaryCopyingTest removeSelector: #testCopyCreatesNewObject!TDictionaryCopyingTest removeSelector: #test0FixtureDictionaryCopyingTest!!Trait method!test0FixtureCloneTest	self nonEmpty.	self deny: self nonEmpty isEmpty.	self empty.	self assert: self empty isEmpty! !TDictionaryCopyingTest removeSelector: #test0FixtureCloneTest!TDictionaryCopyingTest removeSelector: #nonEmptyDifferentFromNonEmptyDict!TDictionaryCopyingTest removeSelector: #nonEmptyDict!!Trait method!nonEmpty	^ self explicitRequirement! !TDictionaryCopyingTest removeSelector: #nonEmpty!TDictionaryCopyingTest removeSelector: #newEmptyDict!TDictionaryCopyingTest removeSelector: #emptyDict!!Trait method!empty	^ self explicitRequirement! !TDictionaryCopyingTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryCopyingTest!TDictionaryComparingTest removeSelector: #testEquality!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryComparingTest!TDictionaryAssociationAccessTest removeSelector: #testAssociationAtIfPresent!TDictionaryAssociationAccessTest removeSelector: #testAssociationAtIfAbsent!TDictionaryAssociationAccessTest removeSelector: #testAssociationAtError!TDictionaryAssociationAccessTest removeSelector: #testAssociationAt!TDictionaryAssociationAccessTest removeSelector: #test0FixtureDictionaryAssocitionAccess!TDictionaryAssociationAccessTest removeSelector: #nonEmpty!TDictionaryAssociationAccessTest removeSelector: #keyNotIn!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryAssociationAccessTest!TDictionaryAddingTest removeSelector: #testDeclareFrom!TDictionaryAddingTest removeSelector: #testAddWithKeyNotIn!TDictionaryAddingTest removeSelector: #testAddWithKeyAlreadyIn!TDictionaryAddingTest removeSelector: #testAddAll!TDictionaryAddingTest removeSelector: #test0FixtureDictionaryAddingTest!TDictionaryAddingTest removeSelector: #nonEmptyDict!TDictionaryAddingTest removeSelector: #associationWithKeyNotInToAdd!TDictionaryAddingTest removeSelector: #associationWithKeyAlreadyInToAdd!Smalltalk globals removeClassNamed: #AnObsoleteTDictionaryAddingTest!TCreationWithTest removeSelector: #testWithWithWithWithWith!TCreationWithTest removeSelector: #testWithWithWithWith!TCreationWithTest removeSelector: #testWithWithWith!TCreationWithTest removeSelector: #testWithWith!TCreationWithTest removeSelector: #testWithAll!TCreationWithTest removeSelector: #testWith!TCreationWithTest removeSelector: #testOfSize!TCreationWithTest removeSelector: #test0FixtureCreationWithTest!TCreationWithTest removeSelector: #collectionMoreThan5Elements!TCreationWithTest removeSelector: #collectionClass!Smalltalk globals removeClassNamed: #AnObsoleteTCreationWithTest!TCopyTest removeSelector: #testCopySameClass!TCopyTest removeSelector: #testCopyNotSame!TCopyTest removeSelector: #testCopyNonEmptyWithoutNotIncluded!TCopyTest removeSelector: #testCopyNonEmptyWithoutAllNotIncluded!TCopyTest removeSelector: #testCopyNonEmptyWithoutAll!TCopyTest removeSelector: #testCopyNonEmptyWithout!TCopyTest removeSelector: #testCopyNonEmptyWith!TCopyTest removeSelector: #testCopyEquals!TCopyTest removeSelector: #testCopyEmptyWithoutAll!TCopyTest removeSelector: #testCopyEmptyWithout!TCopyTest removeSelector: #testCopyEmptyWith!TCopyTest removeSelector: #test0CopyTest!TCopyTest removeSelector: #nonEmpty!TCopyTest removeSelector: #empty!TCopyTest removeSelector: #elementToAdd!TCopyTest removeSelector: #collectionWithElementsToRemove!TCopyTest removeSelector: #collectionNotIncluded!Smalltalk globals removeClassNamed: #AnObsoleteTCopyTest!TCopySequenceableWithReplacementForSorted removeSelector: #testCopyReplaceAllWithForSorted!TCopySequenceableWithReplacementForSorted removeSelector: #testCopyFromToWithForSorted!TCopySequenceableWithReplacementForSorted removeSelector: #test0FixtureCopyWithReplacementForSorted!TCopySequenceableWithReplacementForSorted removeSelector: #replacementCollection!TCopySequenceableWithReplacementForSorted removeSelector: #empty!TCopySequenceableWithReplacementForSorted removeSelector: #collectionOfSize5!Smalltalk globals removeClassNamed: #AnObsoleteTCopySequenceableWithReplacementForSorted!TCopySequenceableWithReplacement removeSelector: #testCopyReplaceFromToWithInsertion!TCopySequenceableWithReplacement removeSelector: #testCopyReplaceFromToWith!TCopySequenceableWithReplacement removeSelector: #testCopyReplaceAllWithManyOccurence!TCopySequenceableWithReplacement removeSelector: #testCopyReplaceAllWith1Occurence!TCopySequenceableWithReplacement removeSelector: #test0FixtureCopyWithReplacementTest!TCopySequenceableWithReplacement removeSelector: #replacementCollection!TCopySequenceableWithReplacement removeSelector: #oldSubCollection!TCopySequenceableWithReplacement removeSelector: #howMany:in:!TCopySequenceableWithReplacement removeSelector: #firstIndexesOf:in:!TCopySequenceableWithReplacement removeSelector: #collectionWith2TimeSubcollection!TCopySequenceableWithReplacement removeSelector: #collectionWith1TimeSubcollection!Smalltalk globals removeClassNamed: #AnObsoleteTCopySequenceableWithReplacement!TCopySequenceableWithOrWithoutSpecificElements removeSelector: #testForceToPaddingWith!TCopySequenceableWithOrWithoutSpecificElements removeSelector: #testForceToPaddingStartWith!TCopySequenceableWithOrWithoutSpecificElements removeSelector: #testCopyWithoutIndex!TCopySequenceableWithOrWithoutSpecificElements removeSelector: #testCopyWithoutFirst!TCopySequenceableWithOrWithoutSpecificElements removeSelector: #testCopyWithSequenceable!TCopySequenceableWithOrWithoutSpecificElements removeSelector: #testCopyWithFirst!TCopySequenceableWithOrWithoutSpecificElements removeSelector: #test0FixtureCopyWithOrWithoutSpecificElementsTest!TCopySequenceableWithOrWithoutSpecificElements removeSelector: #nonEmpty!TCopySequenceableWithOrWithoutSpecificElements removeSelector: #indexInNonEmpty!Smalltalk globals removeClassNamed: #AnObsoleteTCopySequenceableWithOrWithoutSpecificElements!TCopySequenceableSameContents removeSelector: #testShuffled!TCopySequenceableSameContents removeSelector: #testShallowCopyEmpty!TCopySequenceableSameContents removeSelector: #testShallowCopy!TCopySequenceableSameContents removeSelector: #testReversed!TCopySequenceableSameContents removeSelector: #testReverse!TCopySequenceableSameContents removeSelector: #test0FixtureCopySameContentsTest!TCopySequenceableSameContents removeSelector: #nonEmpty!TCopySequenceableSameContents removeSelector: #empty!TCopySequenceableSameContents removeSelector: #collectionWithSortableElements!Smalltalk globals removeClassNamed: #AnObsoleteTCopySequenceableSameContents!TCopyPreservingIdentityTest removeSelector: #testCopyReturnsIdentity!TCopyPreservingIdentityTest removeSelector: #nonEmpty!Smalltalk globals removeClassNamed: #AnObsoleteTCopyPreservingIdentityTest!TCopyPartOfSequenceableForMultipliness removeSelector: #testCopyUpToWithDuplicate!TCopyPartOfSequenceableForMultipliness removeSelector: #testCopyUpToLastWithDuplicate!TCopyPartOfSequenceableForMultipliness removeSelector: #testCopyAfterWithDuplicate!TCopyPartOfSequenceableForMultipliness removeSelector: #testCopyAfterLastWithDuplicate!TCopyPartOfSequenceableForMultipliness removeSelector: #test0FixtureCopyPartOfForMultipliness!TCopyPartOfSequenceableForMultipliness removeSelector: #collectionWithSameAtEndAndBegining!Smalltalk globals removeClassNamed: #AnObsoleteTCopyPartOfSequenceableForMultipliness!TCopyPartOfSequenceable removeSelector: #testCopyUpToLastEmpty!TCopyPartOfSequenceable removeSelector: #testCopyUpToLast!TCopyPartOfSequenceable removeSelector: #testCopyUpToEmpty!TCopyPartOfSequenceable removeSelector: #testCopyUpTo!TCopyPartOfSequenceable removeSelector: #testCopyFromTo!TCopyPartOfSequenceable removeSelector: #testCopyEmptyMethod!TCopyPartOfSequenceable removeSelector: #testCopyAfterLastEmpty!TCopyPartOfSequenceable removeSelector: #testCopyAfterLast!TCopyPartOfSequenceable removeSelector: #testCopyAfterEmpty!TCopyPartOfSequenceable removeSelector: #testCopyAfter!TCopyPartOfSequenceable removeSelector: #test0FixtureCopyPartOfSequenceableTest!TCopyPartOfSequenceable removeSelector: #indexInForCollectionWithoutDuplicates!TCopyPartOfSequenceable removeSelector: #empty!TCopyPartOfSequenceable removeSelector: #collectionWithoutEqualElements!Smalltalk globals removeClassNamed: #AnObsoleteTCopyPartOfSequenceable!TConvertTest removeSelector: #testAsSet!TConvertTest removeSelector: #testAsOrderedCollection!TConvertTest removeSelector: #testAsIdentitySet!TConvertTest removeSelector: #testAsByteArray!TConvertTest removeSelector: #testAsBag!TConvertTest removeSelector: #testAsArray!TConvertTest removeSelector: #test0FixtureTConvertTest!TConvertTest removeSelector: #integerCollectionWithoutEqualElements!TConvertTest removeSelector: #collectionWithoutEqualElements!TConvertTest removeSelector: #assertSameContents:whenConvertedTo:!TConvertTest removeSelector: #assertNonDuplicatedContents:whenConvertedTo:!TConvertTest removeSelector: #assertNoDuplicates:whenConvertedTo:!Smalltalk globals removeClassNamed: #AnObsoleteTConvertTest!TConvertAsSortedTest removeSelector: #testAsSortedCollectionWithSortBlock!TConvertAsSortedTest removeSelector: #testAsSortedCollection!TConvertAsSortedTest removeSelector: #testAsSortedArray!TConvertAsSortedTest removeSelector: #test0FixtureConverAsSortedTest!TConvertAsSortedTest removeSelector: #collectionWithSortableElements!Smalltalk globals removeClassNamed: #AnObsoleteTConvertAsSortedTest!TConvertAsSetForMultiplinessTest removeSelector: #withEqualElements!TConvertAsSetForMultiplinessTest removeSelector: #testAsSetWithEqualsElements!TConvertAsSetForMultiplinessTest removeSelector: #testAsIdentitySetWithEqualsElements!TConvertAsSetForMultiplinessTest removeSelector: #test0FixtureTConvertAsSetForMultiplinessTest!TConvertAsSetForMultiplinessIdentityTest removeSelector: #withEqualElements!TConvertAsSetForMultiplinessIdentityTest removeSelector: #testAsSetWithEqualsElements!TConvertAsSetForMultiplinessIdentityTest removeSelector: #testAsIdentitySetWithoutIdentityEqualsElements!TConvertAsSetForMultiplinessIdentityTest removeSelector: #testAsIdentitySetWithIdentityEqualsElements!TConvertAsSetForMultiplinessIdentityTest removeSelector: #testAsIdentitySetWithEqualsElements!TConvertAsSetForMultiplinessIdentityTest removeSelector: #test0FixtureTConvertAsSetForMultiplinessTest!TConvertAsSetForMultiplinessIdentityTest removeSelector: #test0FixtureAsSetForIdentityMultiplinessTest!TConvertAsSetForMultiplinessIdentityTest removeSelector: #elementsCopyNonIdenticalWithoutEqualElements!TConvertAsSetForMultiplinessIdentityTest removeSelector: #collectionWithIdentical!TConvertAsSetForMultiplinessIdentityTest removeSelector: #collectionWithCopy!Smalltalk globals removeClassNamed: #AnObsoleteTConvertAsSetForMultiplinessIdentityTest!Smalltalk globals removeClassNamed: #AnObsoleteTConvertAsSetForMultiplinessTest!TConcatenationTest removeSelector: #testConcatenationWithEmpty!TConcatenationTest removeSelector: #testConcatenationWithDuplicate!TConcatenationTest removeSelector: #testConcatenation!TConcatenationTest removeSelector: #test0FixtureConcatenationTest!TConcatenationTest removeSelector: #secondCollection!TConcatenationTest removeSelector: #firstCollection!TConcatenationTest removeSelector: #empty!TConcatenationEqualElementsRemovedTest removeSelector: #testConcatenationWithEmpty!TConcatenationEqualElementsRemovedTest removeSelector: #testConcatenationWithDuplicate!TConcatenationEqualElementsRemovedTest removeSelector: #testConcatenation!TConcatenationEqualElementsRemovedTest removeSelector: #test0FixtureConcatenationTest!TConcatenationEqualElementsRemovedTest removeSelector: #secondCollection!TConcatenationEqualElementsRemovedTest removeSelector: #firstCollection!TConcatenationEqualElementsRemovedTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTConcatenationEqualElementsRemovedTest!Smalltalk globals removeClassNamed: #AnObsoleteTConcatenationTest!TCloneTest removeSelector: #testCopyNonEmpty!TCloneTest removeSelector: #testCopyEmpty!TCloneTest removeSelector: #testCopyCreatesNewObject!TCloneTest removeSelector: #test0FixtureCloneTest!TCloneTest removeSelector: #nonEmpty!TCloneTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTCloneTest!TBeginsEndsWith removeSelector: #testsEndsWithEmpty!TBeginsEndsWith removeSelector: #testsEndsWith!TBeginsEndsWith removeSelector: #testsBeginsWithEmpty!TBeginsEndsWith removeSelector: #testsBeginsWith!TBeginsEndsWith removeSelector: #test0FixtureBeginsEndsWithTest!TBeginsEndsWith removeSelector: #nonEmpty!TBeginsEndsWith removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTBeginsEndsWith!TAsStringCommaAndDelimiterTest removeSelector: #testAsStringOnDelimiterOne!TAsStringCommaAndDelimiterTest removeSelector: #testAsStringOnDelimiterMore!TAsStringCommaAndDelimiterTest removeSelector: #testAsStringOnDelimiterLastOne!TAsStringCommaAndDelimiterTest removeSelector: #testAsStringOnDelimiterLastMore!TAsStringCommaAndDelimiterTest removeSelector: #testAsStringOnDelimiterLastEmpty!TAsStringCommaAndDelimiterTest removeSelector: #testAsStringOnDelimiterEmpty!TAsStringCommaAndDelimiterTest removeSelector: #testAsCommaStringOne!TAsStringCommaAndDelimiterTest removeSelector: #testAsCommaStringMore!TAsStringCommaAndDelimiterTest removeSelector: #testAsCommaStringEmpty!TAsStringCommaAndDelimiterTest removeSelector: #test0FixtureAsStringCommaAndDelimiterTest!TAsStringCommaAndDelimiterTest removeSelector: #nonEmpty1Element!TAsStringCommaAndDelimiterTest removeSelector: #nonEmpty!TAsStringCommaAndDelimiterTest removeSelector: #empty!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #testAsStringOnDelimiterOne!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #testAsStringOnDelimiterMore!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #testAsStringOnDelimiterLastOne!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #testAsStringOnDelimiterLastMore!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #testAsStringOnDelimiterLastEmpty!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #testAsStringOnDelimiterEmpty!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #testAsCommaStringOne!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #testAsCommaStringMore!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #testAsCommaStringEmpty!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #test0FixtureAsStringCommaAndDelimiterTest!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #nonEmpty1Element!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #nonEmpty!TAsStringCommaAndDelimiterSequenceableTest removeSelector: #empty!Smalltalk globals removeClassNamed: #AnObsoleteTAsStringCommaAndDelimiterSequenceableTest!Smalltalk globals removeClassNamed: #AnObsoleteTAsStringCommaAndDelimiterTest!TAddTest removeSelector: #testTWriteTwice!TAddTest removeSelector: #testTWrite!TAddTest removeSelector: #testTAddWithOccurences!TAddTest removeSelector: #testTAddTwice!TAddTest removeSelector: #testTAddIfNotPresentWithNewElement!TAddTest removeSelector: #testTAddIfNotPresentWithElementAlreadyIn!TAddTest removeSelector: #testTAddAll!TAddTest removeSelector: #testTAdd!TAddTest removeSelector: #test0FixtureRequirementsOfTAddTest!TAddTest removeSelector: #otherCollection!TAddTest removeSelector: #element!TAddTest removeSelector: #collectionWithElement!Smalltalk globals removeClassNamed: #AnObsoleteTAddTest!TAddForUniquenessTest removeSelector: #testTAddIfNotPresentWithNewElement!TAddForUniquenessTest removeSelector: #testTAddIfNotPresentWithElementAlreadyIn!TAddForUniquenessTest removeSelector: #testAddNewElementIncrementsSize!TAddForUniquenessTest removeSelector: #testAddAlreadyThereDoesNotCount!TAddForUniquenessTest removeSelector: #test0FixtureAddForUniquenessTest!TAddForUniquenessTest removeSelector: #element!TAddForUniquenessTest removeSelector: #collectionWithoutElement!TAddForUniquenessTest removeSelector: #collectionWithElement!Smalltalk globals removeClassNamed: #AnObsoleteTAddForUniquenessTest!TAddForIdentityCollectionsTest removeSelector: #testTAddIfNotPresentWithElementCopy!TAddForIdentityCollectionsTest removeSelector: #test0FixtureAddForIdentityCollectionsTest!TAddForIdentityCollectionsTest removeSelector: #identityCollectionWithElementsCopyNotIdentical!Smalltalk globals removeClassNamed: #AnObsoleteTAddForIdentityCollectionsTest!HistoryNodeTest removeSelector: #testTwoGroups!HistoryNodeTest removeSelector: #testTwoConsecutiveCloseGroup!HistoryNodeTest removeSelector: #testReset!HistoryNodeTest removeSelector: #testOneItem!HistoryNodeTest removeSelector: #testOneGroup!HistoryNodeTest removeSelector: #testGroup!HistoryNodeTest removeSelector: #testEmptyHistory!HistoryNodeTest removeSelector: #testClose!Smalltalk globals removeClassNamed: #AnObsoleteHistoryNodeTest!HistoryIteratorTest removeSelector: #testUndo2!HistoryIteratorTest removeSelector: #testUndo1!HistoryIteratorTest removeSelector: #testMaxSize!HistoryIteratorTest removeSelector: #testGrouping!HistoryIteratorTest removeSelector: #testGroupedUndo2!HistoryIteratorTest removeSelector: #testGroupedUndo1!HistoryIteratorTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteHistoryIteratorTest!NECTestSuperClass removeSelector: #toBeOverridenWithReturn!NECTestSuperClass removeSelector: #toBeOverriden:!NECTestSuperClass removeSelector: #testIt:!NECTestSuperClass removeSelector: #initialize!NECTestSuperClass class removeSelector: #initialize!NECTestClass removeSelector: #testIt:!NECTestClass removeSelector: #lowPriorityOverrides:!NECTestClass removeSelector: #initialize:!NECTestClass class removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteNECTestClass!Smalltalk globals removeClassNamed: #AnObsoleteNECTestSuperClass!NECUntypedModelTest removeSelector: #testTitle!NECUntypedModelTest removeSelector: #testNoEntriesWithSpace!NECUntypedModelTest removeSelector: #testNarrowWith!NECUntypedModelTest removeSelector: #testMessage!NECUntypedModelTest removeSelector: #testForClassVars!NECUntypedModelTest removeSelector: #testForClassLocals!NECUntypedModelTest removeSelector: #testForClassInstVars!NECUntypedModelTest removeSelector: #testEmpty!NECUntypedModelTest removeSelector: #testCaseSensitivity!NECUntypedModelTest removeSelector: #testCaseSensitive!NECUntypedModelTest removeSelector: #testAdditionalLocals!NECUntypedModelTest removeSelector: #tearDown!NECUntypedModelTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteNECUntypedModelTest!NECTypedModelTest removeSelector: #testTyped!NECTypedModelTest removeSelector: #testTitle!NECTypedModelTest removeSelector: #testMessage!NECTypedModelTest removeSelector: #testExpand!Smalltalk globals removeClassNamed: #AnObsoleteNECTypedModelTest!NECStringSortingTest removeSelector: #testCompareWithCase!NECStringSortingTest removeSelector: #testCompare!NECStringSortingTest removeSelector: #testCaseSensitiveMap!Smalltalk globals removeClassNamed: #AnObsoleteNECStringSortingTest!NECOverrideModelTest removeSelector: #testTitle!NECOverrideModelTest removeSelector: #testOverride!NECOverrideModelTest removeSelector: #testExpand!NECOverrideModelTest removeSelector: #testCompletionAtWithReturn!NECOverrideModelTest removeSelector: #testCompletionAt!NECOverrideModelTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteNECOverrideModelTest!NECInstVarTypeGuesserTest removeSelector: #testTypeSuggestingParameter!NECInstVarTypeGuesserTest removeSelector: #testSuperWithAnotherInit!NECInstVarTypeGuesserTest removeSelector: #testMessageSend2!NECInstVarTypeGuesserTest removeSelector: #testMessageSend!NECInstVarTypeGuesserTest removeSelector: #testGlobalVarKeyword2!NECInstVarTypeGuesserTest removeSelector: #testGlobalVarKeyword!NECInstVarTypeGuesserTest removeSelector: #testConstantSymbol!NECInstVarTypeGuesserTest removeSelector: #testConstantString!NECInstVarTypeGuesserTest removeSelector: #testConstantIntegerNil!NECInstVarTypeGuesserTest removeSelector: #testConstantInteger!NECInstVarTypeGuesserTest removeSelector: #testConstantBoolean!NECInstVarTypeGuesserTest removeSelector: #testConstantArray!NECInstVarTypeGuesserTest removeSelector: #testComplexInit2!NECInstVarTypeGuesserTest removeSelector: #testComplexInit!NECInstVarTypeGuesserTest removeSelector: #guessVariable:in:expected:!Smalltalk globals removeClassNamed: #AnObsoleteNECInstVarTypeGuesserTest!NECEntryTest removeSelector: #testPrintOn!NECEntryTest removeSelector: #testLocal!NECEntryTest removeSelector: #testInstance!NECEntryTest removeSelector: #testCompletion!Smalltalk globals removeClassNamed: #AnObsoleteNECEntryTest!NECControllerTest removeSelector: #testSmartNeedExtraRemoveInForOppositeAt!NECControllerTest removeSelector: #tearDown!NECControllerTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteNECControllerTest!NECContextTest removeSelector: #testUntypedVarsOnly!NECContextTest removeSelector: #testUntypedSelectorsOnly!NECContextTest removeSelector: #testUnfinishedString!NECContextTest removeSelector: #testTemporaries!NECContextTest removeSelector: #testReceiverTempVar3!NECContextTest removeSelector: #testReceiverTempVar2!NECContextTest removeSelector: #testReceiverTempVar!NECContextTest removeSelector: #testReceiverGlobalVarNew!NECContextTest removeSelector: #testReceiverGlobal!NECContextTest removeSelector: #testReceiverConstant!NECContextTest removeSelector: #testReceiverClassVar!NECContextTest removeSelector: #testReceiverCascade!NECContextTest removeSelector: #testReceiverArgument!NECContextTest removeSelector: #testInTheMiddelOfAWord!NECContextTest removeSelector: #testEmpty!NECContextTest removeSelector: #testCreateModel!NECContextTest removeSelector: #testCompletionTokenEmpty!NECContextTest removeSelector: #testCompletionToken!NECContextTest removeSelector: #testBlockTemporariesBoxed!NECContextTest removeSelector: #testBlockTemporaries!NECContextTest removeSelector: #createContextFor:at:!NECContextTest removeSelector: #checkUntypedVariablesOnly:!Smalltalk globals removeClassNamed: #AnObsoleteNECContextTest!NECClassVarTypeGuesserTest removeSelector: #testSuperClassVar!NECClassVarTypeGuesserTest removeSelector: #testDependentsFieldsClassVar!NECClassVarTypeGuesserTest removeSelector: #testClassVar!NECClassVarTypeGuesserTest removeSelector: #guessVariable:in:expected:!Smalltalk globals removeClassNamed: #AnObsoleteNECClassVarTypeGuesserTest!ShClassInstallerTest removeSelector: #testTryingToModifyReadOnlySubInstances!ShClassInstallerTest removeSelector: #testTryingToModifyReadOnlyInstances!ShClassInstallerTest removeSelector: #testModifyingSuperclassInOtherOrder!ShClassInstallerTest removeSelector: #testModifyingSuperclass!ShClassInstallerTest removeSelector: #testModifyingClassKeepsOrganizationOfMethods!ShClassInstallerTest removeSelector: #testClassWithComment!ShClassInstallerTest removeSelector: #tearDown!ShClassInstallerTest removeSelector: #newClass:superclass:slots:!ShClassInstallerTest removeSelector: #newClass:slots:!Smalltalk globals removeClassNamed: #AnObsoleteShClassInstallerTest!ShAnonymousClassInstallerTest removeSelector: #testSubclasses!Smalltalk globals removeClassNamed: #AnObsoleteShAnonymousClassInstallerTest!PointTest removeSelector: #testToIntersectsTo!PointTest removeSelector: #testTheta!PointTest removeSelector: #testSign!PointTest removeSelector: #testSideOf!PointTest removeSelector: #testRightRotated!PointTest removeSelector: #testReciprocal!PointTest removeSelector: #testNormalized!PointTest removeSelector: #testNegated!PointTest removeSelector: #testLeftRotated!PointTest removeSelector: #testIsZero!PointTest removeSelector: #testIsPoint!PointTest removeSelector: #testIsIntegerPoint!PointTest removeSelector: #testIsFloatPoint!PointTest removeSelector: #testInsideTriangleWithWith!PointTest removeSelector: #testFlipByCenterAt!PointTest removeSelector: #testEightNeighbors!PointTest removeSelector: #testDistanceTo!PointTest removeSelector: #testDist!PointTest removeSelector: #testCrossProduct!PointTest removeSelector: #testCloseTo!PointTest removeSelector: #testBearingToPoint!PointTest removeSelector: #testBasicFourDirections!PointTest removeSelector: #testAsPoint!PointTest removeSelector: #testAsIntegerPoint!PointTest removeSelector: #testAsFloatPoint!PointTest removeSelector: #testAbs!Smalltalk globals removeClassNamed: #AnObsoletePointTest!FormTest removeSelector: #testIsAllWhite!FormTest removeSelector: #test32BitTranslucentBlackIsBlack!FormTest removeSelector: #test32BitFormBlackShouldStayBlackAfterSave!Smalltalk globals removeClassNamed: #AnObsoleteFormTest!ColorTest removeSelector: #testMultiplyByNumber!ColorTest removeSelector: #testMultiplyByArrayIdentityTransform!ColorTest removeSelector: #testMultiplyByArray!ColorTest removeSelector: #testFromString!ColorTest removeSelector: #testColorFrom!ColorTest removeSelector: #testAsHexString!ColorTest removeSelector: #testAsColorrefPrimaryColors!ColorTest removeSelector: #test32BitTranslucentPixelValueKeepsRGB!ColorTest removeSelector: #test32BitOpaqueBlackIsTotallyBlack!ColorTest removeSelector: #test32BitBlackColorTranformation!ColorTest removeSelector: #assertColorrefFor:equals:!Smalltalk globals removeClassNamed: #AnObsoleteColorTest!BitBltTest removeSelector: #testPokerUnhibernateBug!BitBltTest removeSelector: #testPeekerUnhibernateBug!BitBltTest removeSelector: #testAlphaCompositingSimulated!BitBltTest removeSelector: #testAlphaCompositing2Simulated!BitBltTest removeSelector: #testAlphaCompositing2!BitBltTest removeSelector: #testAlphaCompositing!Smalltalk globals removeClassNamed: #AnObsoleteBitBltTest!RectangleTest removeSelector: #testWithWidth!RectangleTest removeSelector: #testWithTopDoesNotProduceInvalidRectangle!RectangleTest removeSelector: #testWithTop!RectangleTest removeSelector: #testWithRightDoesNotProduceInvalidRectangle!RectangleTest removeSelector: #testWithLeftDoesNotProduceInvalidRectangle!RectangleTest removeSelector: #testWithHeight!RectangleTest removeSelector: #testWithBottomDoesNotProduceInvalidRectangle!RectangleTest removeSelector: #testWithBottom!RectangleTest removeSelector: #testTwoRectanglesWithAnAdjascentCornerDoNotIntersect!RectangleTest removeSelector: #testTwoRectanglesWithAnAdjascentBorderDoNotIntersect!RectangleTest removeSelector: #testTranslateBy!RectangleTest removeSelector: #testTop!RectangleTest removeSelector: #testStoreOn!RectangleTest removeSelector: #testSideNearestTo!RectangleTest removeSelector: #testSettingLeftDoesNotProduceInvalidRectangle!RectangleTest removeSelector: #testScaleBy!RectangleTest removeSelector: #testRotateBy!RectangleTest removeSelector: #testRight!RectangleTest removeSelector: #testRectanglesWithSameOriginIntersect!RectangleTest removeSelector: #testRectangleWithNegativeExtentShouldHaveZeroExtent!RectangleTest removeSelector: #testPointPointConstructorIsSymmetrical!RectangleTest removeSelector: #testPointNearestTo!RectangleTest removeSelector: #testMergingTwoRectangles!RectangleTest removeSelector: #testMergingOverlappingRects!RectangleTest removeSelector: #testMergingOverlappingRectangles!RectangleTest removeSelector: #testMergingOneRectangleReturnsThisRectangle!RectangleTest removeSelector: #testMergingNestedRectanglesReturnTheContainer!RectangleTest removeSelector: #testMergingDisjointRectangles!RectangleTest removeSelector: #testLeft!RectangleTest removeSelector: #testInsettingSmallerThanRectangleExtentShouldProduceCorrectExtent!RectangleTest removeSelector: #testInsettingLargerThanRectangleExtentShouldNotProduceNegativeExtent!RectangleTest removeSelector: #testInsettingByRectangleShouldNotProduceNegativeRectangle!RectangleTest removeSelector: #testInsettingByNumberShouldWork!RectangleTest removeSelector: #testFlipByCenterAt!RectangleTest removeSelector: #testFlip!RectangleTest removeSelector: #testCenterEmptyBasedOnPointPoint!RectangleTest removeSelector: #testCenterEmpty2!RectangleTest removeSelector: #testCenterEmpty!RectangleTest removeSelector: #testCenter!RectangleTest removeSelector: #testBottom!RectangleTest removeSelector: #testAreasOutside2!RectangleTest removeSelector: #testAreasOutside1!RectangleTest removeSelector: #testArea!RectangleTest removeSelector: #testAnEmptyRectangleHasNoArea!RectangleTest removeSelector: #testARectangleIntersectsWithItself!RectangleTest removeSelector: #testARectangleDoesNotContainItsCorner!RectangleTest removeSelector: #testARectangleContainsItsOrigin!RectangleTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRectangleTest!PNGReadWriterTest removeSelector: #writeEncoded:!PNGReadWriterTest removeSelector: #testRed8!PNGReadWriterTest removeSelector: #testRed32!PNGReadWriterTest removeSelector: #testRed16!PNGReadWriterTest removeSelector: #testPngSuite!PNGReadWriterTest removeSelector: #testPngEncodingColors8!PNGReadWriterTest removeSelector: #testPngEncodingColors32!PNGReadWriterTest removeSelector: #testPngEncodingColors16!PNGReadWriterTest removeSelector: #testPngDecodingColors8!PNGReadWriterTest removeSelector: #testPngDecodingColors32!PNGReadWriterTest removeSelector: #testPngDecodingColors16!PNGReadWriterTest removeSelector: #testNewFromSampleBytes!PNGReadWriterTest removeSelector: #testGreen8!PNGReadWriterTest removeSelector: #testGreen32!PNGReadWriterTest removeSelector: #testGreen16!PNGReadWriterTest removeSelector: #testBlue8!PNGReadWriterTest removeSelector: #testBlue32!PNGReadWriterTest removeSelector: #testBlue16!PNGReadWriterTest removeSelector: #testBlack8!PNGReadWriterTest removeSelector: #testBlack32!PNGReadWriterTest removeSelector: #testBlack16!PNGReadWriterTest removeSelector: #testAlphaCoding!PNGReadWriterTest removeSelector: #test8BitReversed!PNGReadWriterTest removeSelector: #test8BitDisplay!PNGReadWriterTest removeSelector: #test8BitColors!PNGReadWriterTest removeSelector: #test8Bit!PNGReadWriterTest removeSelector: #test4BitReversed!PNGReadWriterTest removeSelector: #test4BitDisplay!PNGReadWriterTest removeSelector: #test4BitColors!PNGReadWriterTest removeSelector: #test4Bit!PNGReadWriterTest removeSelector: #test32BitReversed!PNGReadWriterTest removeSelector: #test32BitDisplay!PNGReadWriterTest removeSelector: #test32Bit!PNGReadWriterTest removeSelector: #test2BitReversed!PNGReadWriterTest removeSelector: #test2BitDisplay!PNGReadWriterTest removeSelector: #test2BitColors!PNGReadWriterTest removeSelector: #test2Bit!PNGReadWriterTest removeSelector: #test1BitReversed!PNGReadWriterTest removeSelector: #test1BitDisplay!PNGReadWriterTest removeSelector: #test1BitColors!PNGReadWriterTest removeSelector: #test1Bit!PNGReadWriterTest removeSelector: #test16BitReversed!PNGReadWriterTest removeSelector: #test16BitDisplay!PNGReadWriterTest removeSelector: #test16Bit!PNGReadWriterTest removeSelector: #tearDown!PNGReadWriterTest removeSelector: #setUp!PNGReadWriterTest removeSelector: #readEncoded:!PNGReadWriterTest removeSelector: #encodeColors:depth:!PNGReadWriterTest removeSelector: #encodeAndDecodeWithError:!PNGReadWriterTest removeSelector: #encodeAndDecodeWithColors:!PNGReadWriterTest removeSelector: #encodeAndDecodeStream:!PNGReadWriterTest removeSelector: #encodeAndDecodeReverse:!PNGReadWriterTest removeSelector: #encodeAndDecodeForm:!PNGReadWriterTest removeSelector: #encodeAndDecodeDisplay:!PNGReadWriterTest removeSelector: #encodeAndDecodeColor:depth:!PNGReadWriterTest removeSelector: #encodeAndDecodeAlpha:!PNGReadWriterTest removeSelector: #encodeAndDecode:!PNGReadWriterTest removeSelector: #drawTransparentStuffOn:!PNGReadWriterTest removeSelector: #drawStuffOn:!PNGReadWriterTest removeSelector: #deleteFile!PNGReadWriterTest removeSelector: #decodeColors:depth:!PNGReadWriterTest removeSelector: #coloredFiles8!PNGReadWriterTest removeSelector: #coloredFiles32!PNGReadWriterTest removeSelector: #coloredFiles16!Smalltalk globals removeClassNamed: #AnObsoletePNGReadWriterTest!MarginTest removeSelector: #testWidth!MarginTest removeSelector: #testInsetRectangle!MarginTest removeSelector: #testInitialization!MarginTest removeSelector: #testHeight!MarginTest removeSelector: #testFromPoint!MarginTest removeSelector: #testExtendRectangle!MarginTest removeSelector: #testExpandRectangle!MarginTest removeSelector: #testConstruction!Smalltalk globals removeClassNamed: #AnObsoleteMarginTest!BitBltClipBugsTest removeSelector: #testFillingWayOutside3!BitBltClipBugsTest removeSelector: #testFillingWayOutside2!BitBltClipBugsTest removeSelector: #testFillingWayOutside!BitBltClipBugsTest removeSelector: #testDrawingWayOutside6!BitBltClipBugsTest removeSelector: #testDrawingWayOutside5!BitBltClipBugsTest removeSelector: #testDrawingWayOutside4!BitBltClipBugsTest removeSelector: #testDrawingWayOutside3!BitBltClipBugsTest removeSelector: #testDrawingWayOutside2!BitBltClipBugsTest removeSelector: #testDrawingWayOutside!Smalltalk globals removeClassNamed: #AnObsoleteBitBltClipBugsTest!BMPReadWriterTest removeSelector: #testBmp8Bit!BMPReadWriterTest removeSelector: #testBmp4Bit!BMPReadWriterTest removeSelector: #testBmp32Bit!BMPReadWriterTest removeSelector: #testBmp24Bit!BMPReadWriterTest removeSelector: #testBmp16Bit!BMPReadWriterTest removeSelector: #bmpDataX8R8G8B8!BMPReadWriterTest removeSelector: #bmpDataX4R4G4B4!BMPReadWriterTest removeSelector: #bmpDataR5G6B5!BMPReadWriterTest removeSelector: #bmpData8bit!BMPReadWriterTest removeSelector: #bmpData4bit!BMPReadWriterTest removeSelector: #bmpData32bit!BMPReadWriterTest removeSelector: #bmpData24bit!BMPReadWriterTest removeSelector: #bmpData16bit!Smalltalk globals removeClassNamed: #AnObsoleteBMPReadWriterTest!EpTestLogBuilder removeSelector: #useLogWithSessionStore!EpTestLogBuilder removeSelector: #oneTriggerWithOneChildLog!EpTestLogBuilder removeSelector: #oneTriggerWithFourChildrenLog!EpTestLogBuilder removeSelector: #newStore!EpTestLogBuilder removeSelector: #newSessionStore!EpTestLogBuilder removeSelector: #newLogWithSessionStore!EpTestLogBuilder removeSelector: #newLog!EpTestLogBuilder removeSelector: #newDirectory!EpTestLogBuilder removeSelector: #logInitial!EpTestLogBuilder removeSelector: #logHeadReference!EpTestLogBuilder removeSelector: #logEvent:triggerReference:!EpTestLogBuilder removeSelector: #logEvent:!EpTestLogBuilder removeSelector: #logChildren:triggerReference:!EpTestLogBuilder removeSelector: #logChildren:!EpTestLogBuilder removeSelector: #log!EpTestLogBuilder removeSelector: #directory!EpTestLogBuilder removeSelector: #cleanUp!Smalltalk globals removeClassNamed: #AnObsoleteEpTestLogBuilder!EpMonitorIntegrationTest removeSelector: #tearDown!EpMonitorIntegrationTest removeSelector: #setUp!EpMonitorIntegrationTest removeSelector: #countLogEventsWith:!EpMonitorIntegrationTest removeSelector: #allLogEventsWith:!EpMonitorIntegrationTest removeSelector: #allLogEntriesWith:!EpTriggeringIntegrationTest removeSelector: #testRefactoring!EpTriggeringIntegrationTest removeSelector: #testNoTrigger!EpTriggeringIntegrationTest removeSelector: #testMCVersionLoad!EpTriggeringIntegrationTest removeSelector: #resources!EpTriggeringIntegrationTest removeSelector: #monticelloRepository!EpTriggeringIntegrationTest removeSelector: #changesBrowserOpenedWindows!Smalltalk globals removeClassNamed: #AnObsoleteEpTriggeringIntegrationTest!EpEventIntegrationTest removeSelector: #testMCVersionSaved!EpEventIntegrationTest removeSelector: #mockVersionInfo!EpEventIntegrationTest removeSelector: #mockVersion!EpEventIntegrationTest removeSelector: #mockPackage!Smalltalk globals removeClassNamed: #AnObsoleteEpEventIntegrationTest!EpEnabledIntegrationTest removeSelector: #setUp!EpCodeChangeIntegrationTest removeSelector: #wideStringSourceCode!EpCodeChangeIntegrationTest removeSelector: #testTraitRemoval!EpCodeChangeIntegrationTest removeSelector: #testTraitModificationOfTraitComposition!EpCodeChangeIntegrationTest removeSelector: #testTraitAddition!EpCodeChangeIntegrationTest removeSelector: #testRemoveTraitFromComposition!EpCodeChangeIntegrationTest removeSelector: #testRedundantClassDefinition!EpCodeChangeIntegrationTest removeSelector: #testProtocolRemovalOfUnclassifiedProtocol!EpCodeChangeIntegrationTest removeSelector: #testProtocolRemoval!EpCodeChangeIntegrationTest removeSelector: #testProtocolAddition!EpCodeChangeIntegrationTest removeSelector: #testMethodRecompilationShouldNotLog!EpCodeChangeIntegrationTest removeSelector: #testMethodProtocolChange!EpCodeChangeIntegrationTest removeSelector: #testMethodModificationWithWideString!EpCodeChangeIntegrationTest removeSelector: #testMethodModificationOfSourceCode!EpCodeChangeIntegrationTest removeSelector: #testMethodModificationOfProtocol!EpCodeChangeIntegrationTest removeSelector: #testMethodAddition!EpCodeChangeIntegrationTest removeSelector: #testMetaclassInstanceVariableAdditionWithTrait!EpCodeChangeIntegrationTest removeSelector: #testMetaclassInstanceVariableAddition!EpCodeChangeIntegrationTest removeSelector: #testInstanceVariableRemoval!EpCodeChangeIntegrationTest removeSelector: #testInstanceVariableAddition!EpCodeChangeIntegrationTest removeSelector: #testClassRemoval!EpCodeChangeIntegrationTest removeSelector: #testClassModificationOfTraitComposition!EpCodeChangeIntegrationTest removeSelector: #testClassInstanceVariableRemoval!EpCodeChangeIntegrationTest removeSelector: #testClassInstanceVariableAddition!EpCodeChangeIntegrationTest removeSelector: #testClassAddition!EpCodeChangeIntegrationTest removeSelector: #testCategoryRemoval!EpCodeChangeIntegrationTest removeSelector: #testCategoryAddition!EpCodeChangeIntegrationTest removeSelector: #testBehaviorCommentChange!EpCodeChangeIntegrationTest removeSelector: #tearDown!EpCodeChangeIntegrationTest removeSelector: #categoryNameForTesting!Smalltalk globals removeClassNamed: #AnObsoleteEpCodeChangeIntegrationTest!Smalltalk globals removeClassNamed: #AnObsoleteEpEnabledIntegrationTest!EpDisabledIntegrationTest removeSelector: #testWhenEnabledTwiceShouldNotDuplicateEntries!EpDisabledIntegrationTest removeSelector: #testWhenEnabledShouldLog!EpDisabledIntegrationTest removeSelector: #testWhenDisabledShouldNotLog!EpDisabledIntegrationTest removeSelector: #testIsEnabled!EpDisabledIntegrationTest removeSelector: #testEnable!Smalltalk globals removeClassNamed: #AnObsoleteEpDisabledIntegrationTest!EpAnnouncementsTest removeSelector: #testMonitorAnnouncesUpdateWhenRedundantlyEnabled!EpAnnouncementsTest removeSelector: #testMonitorAnnouncesUpdateWhenRedundantlyDisabled!EpAnnouncementsTest removeSelector: #testMonitorAnnouncesUpdateWhenEnabled!EpAnnouncementsTest removeSelector: #testMonitorAnnouncesUpdateWhenDisabled!EpAnnouncementsTest removeSelector: #assertMonitorAnnouncesUpdateWhen:!Smalltalk globals removeClassNamed: #AnObsoleteEpAnnouncementsTest!Smalltalk globals removeClassNamed: #AnObsoleteEpMonitorIntegrationTest!EpLogTest removeSelector: #testShouldKeepHeadReferenceAfterRefresh!EpLogTest removeSelector: #testShouldKeepHeadReferenceAfterReOpen!EpLogTest removeSelector: #testPriorEntriesFromNullReferenceIsEmpty!EpLogTest removeSelector: #testHeadReference!EpLogTest removeSelector: #testFromNullReferenceDetectNotFound!EpLogTest removeSelector: #testFromHeadDetectIfNotFound!EpLogTest removeSelector: #testFromHeadDetect!EpLogTest removeSelector: #testFromDetectIfNotFound!EpLogTest removeSelector: #testFromDetect!EpLogTest removeSelector: #testFirstEntryIfAbsent!EpLogTest removeSelector: #testEntryReferences!EpLogTest removeSelector: #testEntriesCount!EpLogTest removeSelector: #testEntries!EpLogTest removeSelector: #tearDown!EpLogTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteEpLogTest!EpAsEpiceaRingDefinitionTest removeSelector: #testPackageIsString!EpAsEpiceaRingDefinitionTest removeSelector: #definitions!Smalltalk globals removeClassNamed: #AnObsoleteEpAsEpiceaRingDefinitionTest!SugsMockContext removeSelector: #withTemporaryVar!SugsMockContext removeSelector: #withSuper!SugsMockContext removeSelector: #withSourceContext!SugsMockContext removeSelector: #withSelf!SugsMockContext removeSelector: #withMethod!SugsMockContext removeSelector: #withMesage!SugsMockContext removeSelector: #withLiteral!SugsMockContext removeSelector: #withInstanceVar!SugsMockContext removeSelector: #withClassVariable!SugsMockContext removeSelector: #withClass!SugsMockContext removeSelector: #withAssigment!SugsMockContext removeSelector: #sourceTextArea!SugsMockContext removeSelector: #selectorToUse:!SugsMockContext removeSelector: #selectorToUse!SugsMockContext removeSelector: #selectedVariableName!SugsMockContext removeSelector: #selectedVariable:!SugsMockContext removeSelector: #selectedMethod!SugsMockContext removeSelector: #selectedMessageName!SugsMockContext removeSelector: #selectedInterval:!SugsMockContext removeSelector: #selectedInterval!SugsMockContext removeSelector: #selectedClass:!SugsMockContext removeSelector: #selectedClass!SugsMockContext removeSelector: #message:!SugsMockContext removeSelector: #interval:!SugsMockContext removeSelector: #code!SugsMockContext removeSelector: #browsedEnvironment!SugsMockContext class removeSelector: #withNode:!SugsMockContext class removeSelector: #withMessageName:!SugsMockContext class removeSelector: #tempVarContext!SugsMockContext class removeSelector: #superContext!SugsMockContext class removeSelector: #sourceContext!SugsMockContext class removeSelector: #selfContext!SugsMockContext class removeSelector: #methodContext!SugsMockContext class removeSelector: #methodClassContext!SugsMockContext class removeSelector: #messageContext!SugsMockContext class removeSelector: #literalContext!SugsMockContext class removeSelector: #instVarContext!SugsMockContext class removeSelector: #for:selectedVariable:!SugsMockContext class removeSelector: #for:!SugsMockContext class removeSelector: #classVariableContext!SugsMockContext class removeSelector: #classContext!SugsMockContext class removeSelector: #assigmentContext!Smalltalk globals removeClassNamed: #AnObsoleteSugsMockContext!MockContainer removeSelector: #model:!MockContainer removeSelector: #model!MockContainer class removeSelector: #for:!Smalltalk globals removeClassNamed: #AnObsoleteMockContainer!SugsSuggestionTest removeSelector: #tearDown!SugsSuggestionTest removeSelector: #setUp!SugsSuggestionTest removeSelector: #removeClass:!SugsSuggestionTest removeSelector: #nameFor:!SugsSuggestionTest removeSelector: #emptyClass!SugsSuggestionTest removeSelector: #createSetter:in:!SugsSuggestionTest removeSelector: #createGetter:in:!SugsSuggestionTest removeSelector: #createContext:!SugsSuggestionTest removeSelector: #createClass:!SugsSuggestionTest removeSelector: #createAccessorsFor:in:!SugsSuggestionTest removeSelector: #addVariable:to:!SugsSuggestionTest removeSelector: #addMethodToDelegate!SugsSuggestionTest class removeSelector: #isAbstract!SugsSuggestionSwapMethodTest removeSelector: #testLabelForSwapWithoutSelectedMethodIsGeneric!SugsSuggestionSwapMethodTest removeSelector: #testLabelForSwapInstanceMethodRefersToClass!SugsSuggestionSwapMethodTest removeSelector: #testLabelForSwapClassMethodRefersToInstance!Smalltalk globals removeClassNamed: #AnObsoleteSugsSuggestionSwapMethodTest!SugsSuggestionRemoveArgTest removeSelector: #testRemoveArgsWithoutArgsItsNotValid!SugsSuggestionRemoveArgTest removeSelector: #testRemoveArgsWithArgsItsValid!Smalltalk globals removeClassNamed: #AnObsoleteSugsSuggestionRemoveArgTest!SugsSuggestionPushDownTest removeSelector: #testPushDownWithoutSubclassIsNotValid!SugsSuggestionPushDownTest removeSelector: #testPushDownWithSubclassIsValid!SugsSuggestionPushDownTest removeSelector: #createSuggestionPushDown:!SugsSuggestionPushDownTest removeSelector: #createSubclassFrom:named:!SugsSuggestionPushDownTest removeSelector: #createContext:!Smalltalk globals removeClassNamed: #AnObsoleteSugsSuggestionPushDownTest!SugsSuggestionExtractLocalTest removeSelector: #testExtractLocalInASequenceNodeWithOneSentenceIsValid!SugsSuggestionExtractLocalTest removeSelector: #testExtractLocalInASequenceNodeWithMoreSentencesIsNotValid!SugsSuggestionExtractLocalTest removeSelector: #testExtractLocalInAMessageNodeIsValid!SugsSuggestionExtractLocalTest removeSelector: #testExtractLocalInALiteralNodeIsValid!Smalltalk globals removeClassNamed: #AnObsoleteSugsSuggestionExtractLocalTest!SugsSuggestionDelegateTest removeSelector: #testDelegateSelectionWithoutInstaceVariablesItsNotValid!SugsSuggestionDelegateTest removeSelector: #testDelegateSelectionWithInstaceVariablesItsValid!SugsSuggestionDelegateTest removeSelector: #createSuggestionDelegate:!SugsSuggestionDelegateTest removeSelector: #createContexForDelegate!Smalltalk globals removeClassNamed: #AnObsoleteSugsSuggestionDelegateTest!SugsSuggestionCreateAccessorsTest removeSelector: #testCreateClassAccessorsIsValidIfMuttatorMissed!SugsSuggestionCreateAccessorsTest removeSelector: #testCreateClassAccessorsIsValidIfAccessorsAreMissed!SugsSuggestionCreateAccessorsTest removeSelector: #testCreateClassAccessorsIsValidIfAccessIsMissed!SugsSuggestionCreateAccessorsTest removeSelector: #testCreateClassAccessorsIsNotValidIfAccessorsAreAlreadyCreated!SugsSuggestionCreateAccessorsTest removeSelector: #testCreateAccessorsIsValidIfMuttatorMissed!SugsSuggestionCreateAccessorsTest removeSelector: #testCreateAccessorsIsValidIfAccessorsAreMissed!SugsSuggestionCreateAccessorsTest removeSelector: #testCreateAccessorsIsValidIfAccessIsMissed!SugsSuggestionCreateAccessorsTest removeSelector: #testCreateAccessorsIsNotValidIfAccessorsAreAlreadyCreated!SugsSuggestionCreateAccessorsTest removeSelector: #targetFor:in:!SugsSuggestionCreateAccessorsTest removeSelector: #createSuggestionAccesorsInstVar:!SugsSuggestionCreateAccessorsTest removeSelector: #createSuggestionAccesorsClassVar:!Smalltalk globals removeClassNamed: #AnObsoleteSugsSuggestionCreateAccessorsTest!Smalltalk globals removeClassNamed: #AnObsoleteSugsSuggestionTest!SugsMenuBuilderTest removeSelector: #testSuggestionForSourceNodeIncludesAllValid!SugsMenuBuilderTest removeSelector: #testSuggestionForLiteralNodeIncludesAllExpected!SugsMenuBuilderTest removeSelector: #testSuggestionForAnInstanceVariableNodeIncludesAllDeclared!SugsMenuBuilderTest removeSelector: #testSuggestionForATemporaryVariableNodeIncludesAllDeclared!SugsMenuBuilderTest removeSelector: #testSuggestionForAMessageNodeIncludesAllDeclared!SugsMenuBuilderTest removeSelector: #testSuggestionForAMehodNodeIncludesAllValid!SugsMenuBuilderTest removeSelector: #testSuggestionForAClassVariableNodeIncludesAllDeclared!SugsMenuBuilderTest removeSelector: #testSuggestionForAClassNodeIncludesAllDeclared!SugsMenuBuilderTest removeSelector: #testSuggestionForAAssigmentNodeIncludesAllDeclared!SugsMenuBuilderTest removeSelector: #testNoSuggestionForSuperNode!SugsMenuBuilderTest removeSelector: #testNoSuggestionForSelfNode!SugsMenuBuilderTest removeSelector: #testFindBestNodeForTemporaryVariableItsRBVariable!SugsMenuBuilderTest removeSelector: #testFindBestNodeForSelfNodeItsRBSuper!SugsMenuBuilderTest removeSelector: #testFindBestNodeForSelfNodeItsRBSelf!SugsMenuBuilderTest removeSelector: #testFindBestNodeForMultilineItsRBSequence!SugsMenuBuilderTest removeSelector: #testFindBestNodeForMethodNodeItsRBMehod!SugsMenuBuilderTest removeSelector: #testFindBestNodeForMessageNodeItsRBMessageSend!SugsMenuBuilderTest removeSelector: #testFindBestNodeForLiteralItsRBLiteral!SugsMenuBuilderTest removeSelector: #testFindBestNodeForInstanceVariableItsRBVariable!SugsMenuBuilderTest removeSelector: #testFindBestNodeForClassVarItsRBVariable!SugsMenuBuilderTest removeSelector: #testFindBestNodeForClassItsRBVariable!Smalltalk globals removeClassNamed: #AnObsoleteSugsMenuBuilderTest!SugsContextTest removeSelector: #testTetModelIsAValidContext!SugsContextTest removeSelector: #testDebuggerIsAValidContext!Smalltalk globals removeClassNamed: #AnObsoleteSugsContextTest!GlobalIdentifierPersistenceMockChecker removeSelector: #isEnabled!GlobalIdentifierPersistenceMockChecker removeSelector: #answer:!GlobalIdentifierPersistenceMockChecker removeSelector: #answer!Smalltalk globals removeClassNamed: #AnObsoleteGlobalIdentifierPersistenceMockChecker!GlobalIdentifierWithSton removeSelector: #setUpPersistenceStrategyAndChecker!GlobalIdentifierWithSton removeSelector: #actualPreferencesFileName!Smalltalk globals removeClassNamed: #AnObsoleteGlobalIdentifierWithSton!GlobalIdentifierWithFuel removeSelector: #setUpPersistenceStrategyAndChecker!GlobalIdentifierWithFuel removeSelector: #actualPreferencesFileName!Smalltalk globals removeClassNamed: #AnObsoleteGlobalIdentifierWithFuel!GlobalIdentifierWithDefaultConfiguration removeSelector: #testEnsure!GlobalIdentifierWithDefaultConfiguration removeSelector: #tearDown!GlobalIdentifierWithDefaultConfiguration removeSelector: #setUpPersistenceStrategyAndChecker!GlobalIdentifierWithDefaultConfiguration removeSelector: #oldPreferencesFileName!Smalltalk globals removeClassNamed: #AnObsoleteGlobalIdentifierWithDefaultConfiguration!GlobalIdentifierTest removeSelector: #testPreferenceFilesNotCollideWithRealPreferences!GlobalIdentifierTest removeSelector: #testEnsure!GlobalIdentifierTest removeSelector: #testDoNotStoreIfHomeDoesNotExists!GlobalIdentifierTest removeSelector: #testDefault!GlobalIdentifierTest removeSelector: #testComputerUUID!GlobalIdentifierTest removeSelector: #testBackwardCompatibility4!GlobalIdentifierTest removeSelector: #testBackwardCompatibility3!GlobalIdentifierTest removeSelector: #testBackwardCompatibility2!GlobalIdentifierTest removeSelector: #testBackwardCompatibility!GlobalIdentifierTest removeSelector: #tearDown!GlobalIdentifierTest removeSelector: #setUpPersistenceStrategyAndChecker!GlobalIdentifierTest removeSelector: #setUp!GlobalIdentifierTest removeSelector: #newChecker!GlobalIdentifierTest removeSelector: #folderName!GlobalIdentifierTest removeSelector: #actualPreferencesFileName!GlobalIdentifierTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteGlobalIdentifierTest!GlobalIdentifierStonPersistenceTest removeSelector: #setUpPreferencesAndChecker!GlobalIdentifierStonPersistenceTest removeSelector: #persistenceClass!Smalltalk globals removeClassNamed: #AnObsoleteGlobalIdentifierStonPersistenceTest!GlobalIdentifierPersistenceTest removeSelector: #testSave2!GlobalIdentifierPersistenceTest removeSelector: #testSave!GlobalIdentifierPersistenceTest removeSelector: #testLoad3!GlobalIdentifierPersistenceTest removeSelector: #testLoad2!GlobalIdentifierPersistenceTest removeSelector: #testLoad!GlobalIdentifierPersistenceTest removeSelector: #testIsEnabled2!GlobalIdentifierPersistenceTest removeSelector: #testIsEnabled!GlobalIdentifierPersistenceTest removeSelector: #testEnsureDirectory!GlobalIdentifierPersistenceTest removeSelector: #testDelete!GlobalIdentifierPersistenceTest removeSelector: #testDefault!GlobalIdentifierPersistenceTest removeSelector: #tearDown!GlobalIdentifierPersistenceTest removeSelector: #setUpPreferencesAndChecker!GlobalIdentifierPersistenceTest removeSelector: #setUp!GlobalIdentifierPersistenceTest removeSelector: #persistenceClass!GlobalIdentifierPersistenceTest removeSelector: #newFalseChecker!GlobalIdentifierPersistenceTest removeSelector: #folderName!GlobalIdentifierPersistenceTest class removeSelector: #isAbstract!GlobalIdentifierFuelPersistenceTest removeSelector: #tearDown!GlobalIdentifierFuelPersistenceTest removeSelector: #setUpPreferencesAndChecker!GlobalIdentifierFuelPersistenceTest removeSelector: #persistenceClass!Smalltalk globals removeClassNamed: #AnObsoleteGlobalIdentifierFuelPersistenceTest!Smalltalk globals removeClassNamed: #AnObsoleteGlobalIdentifierPersistenceTest!GlobalIdentifierMergerTest removeSelector: #testMerge8!GlobalIdentifierMergerTest removeSelector: #testMerge7!GlobalIdentifierMergerTest removeSelector: #testMerge6!GlobalIdentifierMergerTest removeSelector: #testMerge5!GlobalIdentifierMergerTest removeSelector: #testMerge4!GlobalIdentifierMergerTest removeSelector: #testMerge3!GlobalIdentifierMergerTest removeSelector: #testMerge2!GlobalIdentifierMergerTest removeSelector: #testMerge!GlobalIdentifierMergerTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGlobalIdentifierMergerTest!EpOmbuExporterTest removeSelector: #testRoundtrip!EpOmbuExporterTest removeSelector: #testCommentExportWithDependencyFix!EpOmbuExporterTest removeSelector: #testBasicExport!EpOmbuExporterTest removeSelector: #tearDown!EpOmbuExporterTest removeSelector: #setUp!EpOmbuExporterTest removeSelector: #outputLogNameForTest!Smalltalk globals removeClassNamed: #AnObsoleteEpOmbuExporterTest!EpFilterTest removeSelector: #testNoTrigger!EpFilterTest removeSelector: #testMethod!EpFilterTest removeSelector: #testLogBrowserOperation!EpFilterTest removeSelector: #testEquality!EpFilterTest removeSelector: #testAnd!EpFilterTest removeSelector: #refactoring!EpFilterTest removeSelector: #redo!EpFilterTest removeSelector: #methodAddition!EpFilterTest removeSelector: #expressionEvaluation!EpFilterTest removeSelector: #entryWith:!EpFilterTest removeSelector: #diverseEvents!EpFilterTest removeSelector: #classAddition!EpFilterTest removeSelector: #assert:accepts:rejects:!Smalltalk globals removeClassNamed: #AnObsoleteEpFilterTest!EpRevertTest removeSelector: #testTraitRemovalWithTraitAlreadyAdded!EpRevertTest removeSelector: #testTraitRemoval!EpRevertTest removeSelector: #testTraitAdditionWithTraitAlreadyRemoved!EpRevertTest removeSelector: #testTraitAddition!EpRevertTest removeSelector: #testProtocolRemoval!EpRevertTest removeSelector: #testProtocolAddition!EpRevertTest removeSelector: #testMethodRemovalWithMethodAlreadyAdded!EpRevertTest removeSelector: #testMethodRemoval!EpRevertTest removeSelector: #testMethodModificationWithProtocolChanged!EpRevertTest removeSelector: #testMethodModification!EpRevertTest removeSelector: #testMethodAdditionWithMethodAlreadyRemoved!EpRevertTest removeSelector: #testMethodAddition!EpRevertTest removeSelector: #testClassRemovalWithClassAlreadyAdded!EpRevertTest removeSelector: #testClassRemoval!EpRevertTest removeSelector: #testClassModificationWithClassRemoved!EpRevertTest removeSelector: #testClassAdditionWithClassAlreadyRemoved!EpRevertTest removeSelector: #testClassAddition!EpRevertTest removeSelector: #testCategoryRename!EpRevertTest removeSelector: #testCategoryRemovalWithCategoryAdded!EpRevertTest removeSelector: #testCategoryAdditionWithCategoryRemoved!EpRevertTest removeSelector: #testBehaviorNameChange!EpRevertTest removeSelector: #testBehaviorCommentChange!EpRevertTest removeSelector: #testBehaviorCategoryChange!EpRevertTest removeSelector: #revertInputEntry!Smalltalk globals removeClassNamed: #AnObsoleteEpRevertTest!EpLostChangesDetectorTest removeSelector: #testDetectOneChange!EpLostChangesDetectorTest removeSelector: #testDetectNoChange!EpLostChangesDetectorTest removeSelector: #testDetectInEmptyLog!Smalltalk globals removeClassNamed: #AnObsoleteEpLostChangesDetectorTest!EpLogBrowserOperationFactoryTest removeSelector: #setMonitorLogAsInputEntries!EpLogBrowserOperationFactoryTest removeSelector: #setHeadAsInputEntry!EpCommentTest removeSelector: #testComment!Smalltalk globals removeClassNamed: #AnObsoleteEpCommentTest!EpApplyTest removeSelector: #testTraitRemovalWithTraitAdded!EpApplyTest removeSelector: #testTraitModification!EpApplyTest removeSelector: #testTraitAdditionWithTraitRemoved!EpApplyTest removeSelector: #testProtocolRemoval!EpApplyTest removeSelector: #testProtocolAddition!EpApplyTest removeSelector: #testMethodRemovalWithMethodAdded!EpApplyTest removeSelector: #testMethodModificationWithMethodRemoved!EpApplyTest removeSelector: #testMethodAdditionWithSourceCodeChanged!EpApplyTest removeSelector: #testMethodAdditionWithProtocolChanged!EpApplyTest removeSelector: #testMethodAdditionWithMethodRemoved!EpApplyTest removeSelector: #testClassRemovalWithClassAdded!EpApplyTest removeSelector: #testClassModificationWithClassRemoved!EpApplyTest removeSelector: #testClassAdditionWithSuperclassChanged!EpApplyTest removeSelector: #testClassAdditionWithMetaclassInstanceVariablesChanged!EpApplyTest removeSelector: #testClassAdditionWithInstanceVariablesChanged!EpApplyTest removeSelector: #testClassAdditionWithClassRemoved!EpApplyTest removeSelector: #testClassAdditionWithCategoryChanged!EpApplyTest removeSelector: #testCategoryRename!EpApplyTest removeSelector: #testCategoryRemovalWithCategoryAdded!EpApplyTest removeSelector: #testCategoryAdditionWithCategoryRemoved!EpApplyTest removeSelector: #testBehaviorNameChange!EpApplyTest removeSelector: #applyInputEntry!Smalltalk globals removeClassNamed: #AnObsoleteEpApplyTest!EpApplyPreviewerTest removeSelector: #testTraitRemovalWithTraitAdded!EpApplyPreviewerTest removeSelector: #testTraitModification!EpApplyPreviewerTest removeSelector: #testTraitAdditionWithTraitRemoved!EpApplyPreviewerTest removeSelector: #testSequenceOfMethodModifications!EpApplyPreviewerTest removeSelector: #testSequenceOfClassAndMethodAddition!EpApplyPreviewerTest removeSelector: #testRedundantSequenceOfMethodModifications!EpApplyPreviewerTest removeSelector: #testRedundantProtocolRemoval!EpApplyPreviewerTest removeSelector: #testRedundantProtocolAddition!EpApplyPreviewerTest removeSelector: #testRedundantMethodRemovalWithAbsentBehavior!EpApplyPreviewerTest removeSelector: #testRedundantMethodRemoval!EpApplyPreviewerTest removeSelector: #testRedundantMethodModification!EpApplyPreviewerTest removeSelector: #testRedundantMethodAddition!EpApplyPreviewerTest removeSelector: #testRedundantClassRemoval!EpApplyPreviewerTest removeSelector: #testRedundantClassAddition!EpApplyPreviewerTest removeSelector: #testRedundantCategoryRenameWithAbsentCategory!EpApplyPreviewerTest removeSelector: #testRedundantCategoryRemoval!EpApplyPreviewerTest removeSelector: #testRedundantCategoryAddition!EpApplyPreviewerTest removeSelector: #testRedundantBehaviorCommentChangeWithAbsentBehavior!EpApplyPreviewerTest removeSelector: #testRedundantBehaviorCommentChange!EpApplyPreviewerTest removeSelector: #testRedundantBehaviorCategoryChangeWithAbsentBehavior!EpApplyPreviewerTest removeSelector: #testRedundantBehaviorCategoryChange!EpApplyPreviewerTest removeSelector: #testProtocolRemovalWithProtocolAdded!EpApplyPreviewerTest removeSelector: #testProtocolAdditionWithProtocolRemoved!EpApplyPreviewerTest removeSelector: #testNonCodeChangeEvent!EpApplyPreviewerTest removeSelector: #testMethodRemovalWithMethodAdded!EpApplyPreviewerTest removeSelector: #testMethodModificationWithMethodRemoved!EpApplyPreviewerTest removeSelector: #testMethodAdditionWithSourceCodeChanged!EpApplyPreviewerTest removeSelector: #testMethodAdditionWithProtocolChanged!EpApplyPreviewerTest removeSelector: #testMethodAdditionWithMethodRemoved!EpApplyPreviewerTest removeSelector: #testKeepChangeWhenMethodModificationWithAbsentBehavior!EpApplyPreviewerTest removeSelector: #testKeepChangeWhenMethodAdditionWithAbsentBehavior!EpApplyPreviewerTest removeSelector: #testClassRemovalWithClassAdded!EpApplyPreviewerTest removeSelector: #testClassAdditionWithSuperclassChanged!EpApplyPreviewerTest removeSelector: #testClassAdditionWithInstanceVariablesChanged!EpApplyPreviewerTest removeSelector: #testClassAdditionWithClassRemoved!EpApplyPreviewerTest removeSelector: #testCategoryRenameWithPreviousRollback!EpApplyPreviewerTest removeSelector: #testCategoryRemovalWithCategoryAdded!EpApplyPreviewerTest removeSelector: #testCategoryAdditionWithCategoryRemoved!EpApplyPreviewerTest removeSelector: #testBehaviorNameChange!EpApplyPreviewerTest removeSelector: #testBehaviorCommentChange!EpApplyPreviewerTest removeSelector: #testBehaviorCategoryChange!EpApplyPreviewerTest removeSelector: #outputEvents!EpApplyPreviewerTest removeSelector: #assertOutputsEventsWith:!EpApplyPreviewerTest removeSelector: #assertOutputsAnEventWith:!EpApplyPreviewerTest removeSelector: #assertEmptyPreviewLog!Smalltalk globals removeClassNamed: #AnObsoleteEpApplyPreviewerTest!Smalltalk globals removeClassNamed: #AnObsoleteEpLogBrowserOperationFactoryTest!ShortIntegerArrayTest removeSelector: #testWriteLittleEndianOn!ShortIntegerArrayTest removeSelector: #testWriteBigEndianOn!ShortIntegerArrayTest removeSelector: #testSwapBytePairs!ShortIntegerArrayTest removeSelector: #testSetUp!ShortIntegerArrayTest removeSelector: #testAtPut!ShortIntegerArrayTest removeSelector: #testAt!ShortIntegerArrayTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteShortIntegerArrayTest!PointArrayTest removeSelector: #testSize!PointArrayTest removeSelector: #testDefaultElement!PointArrayTest removeSelector: #testBounds!PointArrayTest removeSelector: #testAtPutLargeInteger!PointArrayTest removeSelector: #testAtPutInt4!PointArrayTest removeSelector: #testAtPutFraction!PointArrayTest removeSelector: #testAtPutFloat!PointArrayTest removeSelector: #testAtPut!PointArrayTest removeSelector: #testAt!PointArrayTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoletePointArrayTest!SystemDependenciesTest removeSelector: #tonelCorePackageNames!SystemDependenciesTest removeSelector: #testExternalUIDependencies!SystemDependenciesTest removeSelector: #testExternalUFFIDependencies!SystemDependenciesTest removeSelector: #testExternalSpecDependencies!SystemDependenciesTest removeSelector: #testExternalSUnitKernelDependencies!SystemDependenciesTest removeSelector: #testExternalSUnitDependencies!SystemDependenciesTest removeSelector: #testExternalMorphicDependencies!SystemDependenciesTest removeSelector: #testExternalMorphicCoreDependencies!SystemDependenciesTest removeSelector: #testExternalMonticelloDependencies!SystemDependenciesTest removeSelector: #testExternalMetacelloDependencies!SystemDependenciesTest removeSelector: #testExternalLocalMonticelloDependencies!SystemDependenciesTest removeSelector: #testExternalKernelDependencies!SystemDependenciesTest removeSelector: #testExternalIDEDependencies!SystemDependenciesTest removeSelector: #testExternalFileSystemDependencies!SystemDependenciesTest removeSelector: #testExternalDisplayDependencies!SystemDependenciesTest removeSelector: #testExternalCompilerDependencies!SystemDependenciesTest removeSelector: #testExternalBasicToolsDependencies!SystemDependenciesTest removeSelector: #specPackageNames!SystemDependenciesTest removeSelector: #metacelloPackageNames!SystemDependenciesTest removeSelector: #longTestCase!SystemDependenciesTest removeSelector: #knownUIDependencies!SystemDependenciesTest removeSelector: #knownUFFIDependencies!SystemDependenciesTest removeSelector: #knownSUnitKernelDependencies!SystemDependenciesTest removeSelector: #knownSUnitDependencies!SystemDependenciesTest removeSelector: #knownMorphicDependencies!SystemDependenciesTest removeSelector: #knownMorphicCoreDependencies!SystemDependenciesTest removeSelector: #knownMonticelloDependencies!SystemDependenciesTest removeSelector: #knownMetacelloDependencies!SystemDependenciesTest removeSelector: #knownLocalMonticelloDependencies!SystemDependenciesTest removeSelector: #knownKernelDependencies!SystemDependenciesTest removeSelector: #knownIDEDependencies!SystemDependenciesTest removeSelector: #knownFileSystemDependencies!SystemDependenciesTest removeSelector: #knownDisplayDependencies!SystemDependenciesTest removeSelector: #knownCompilerDependencies!SystemDependenciesTest removeSelector: #knownBasicToolsDependencies!SystemDependenciesTest removeSelector: #externalDependendiesOf:!SystemDependenciesTest removeSelector: #dependenciesReport!SystemDependenciesTest class removeSelector: #resetDependenciesReport!SystemDependenciesTest class removeSelector: #rebuildDependenciesReport!SystemDependenciesTest class removeSelector: #dependenciesReport!Smalltalk globals removeClassNamed: #AnObsoleteSystemDependenciesTest!GoferResource removeSelector: #versionReferences!GoferResource removeSelector: #setUpVersionReferences!GoferResource removeSelector: #setUpMonticelloRepository!GoferResource removeSelector: #setUp!GoferResource removeSelector: #monticelloRepository!Smalltalk globals removeClassNamed: #AnObsoleteGoferResource!GoferTest removeSelector: #versionReferences!GoferTest removeSelector: #setUp!GoferTest removeSelector: #monticelloRepository!GoferTest class removeSelector: #resources!GoferTest class removeSelector: #packageNamesUnderTest!GoferTest class removeSelector: #isUnitTest!GoferTest class removeSelector: #isAbstract!GoferReferenceTest removeSelector: #testVersionShouldParseComplexName!GoferReferenceTest removeSelector: #testVersionShouldFindWorkingCopy!GoferReferenceTest removeSelector: #testVersionShouldFindLatestVersion!GoferReferenceTest removeSelector: #testResolvedShouldFindWorkingCopy!GoferReferenceTest removeSelector: #testResolvedShouldFindLatestVersion!GoferReferenceTest removeSelector: #testPackageShouldFindWorkingCopy!GoferReferenceTest removeSelector: #testPackageShouldFindLatestVersion!GoferReferenceTest removeSelector: #testLoadableShouldSortCorrectly!GoferReferenceTest removeSelector: #testContraintShouldFindWorkingCopy!GoferReferenceTest removeSelector: #testContraintShouldFindLatestVersion!GoferReferenceTest removeSelector: #testBranchAfterAuthorIsNotABranch!GoferReferenceTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGoferReferenceTest!GoferOperationTest removeSelector: #testUpdate!GoferOperationTest removeSelector: #testUnload!GoferOperationTest removeSelector: #testRevert!GoferOperationTest removeSelector: #testRemoteChanges!GoferOperationTest removeSelector: #testReinitialize!GoferOperationTest removeSelector: #testRecompile!GoferOperationTest removeSelector: #testPush!GoferOperationTest removeSelector: #testMerge!GoferOperationTest removeSelector: #testLocalChanges!GoferOperationTest removeSelector: #testLoad!GoferOperationTest removeSelector: #testFetch!GoferOperationTest removeSelector: #testCommit!GoferOperationTest removeSelector: #testCleanup!GoferOperationTest removeSelector: #tearDown!GoferOperationTest removeSelector: #setUp!GoferOperationTest removeSelector: #hasVersion:!GoferOperationTest removeSelector: #hasPackage:!GoferOperationTest removeSelector: #hasClass:selector:!GoferOperationTest removeSelector: #hasClass:!GoferOperationTest removeSelector: #allManagers!Smalltalk globals removeClassNamed: #AnObsoleteGoferOperationTest!GoferApiTest removeSelector: #testWiresong!GoferApiTest removeSelector: #testVersionReference!GoferApiTest removeSelector: #testSubDirectoryRepository!GoferApiTest removeSelector: #testSqueaksource!GoferApiTest removeSelector: #testSqueakfoundation!GoferApiTest removeSelector: #testSmalltalkhub!GoferApiTest removeSelector: #testRepositoryErrors!GoferApiTest removeSelector: #testRenggli!GoferApiTest removeSelector: #testPackageReference!GoferApiTest removeSelector: #testPackageCache!GoferApiTest removeSelector: #testInitialRepositories!GoferApiTest removeSelector: #testInitialReferences!GoferApiTest removeSelector: #testImpara!GoferApiTest removeSelector: #testHttpRepositoryUseStoredCredentials!GoferApiTest removeSelector: #testHttpRepositoryOverrideStoredCredentials!GoferApiTest removeSelector: #testHttpRepository!GoferApiTest removeSelector: #testGemsource!GoferApiTest removeSelector: #testDirectoryRepository!GoferApiTest removeSelector: #testCustomRepository!GoferApiTest removeSelector: #testConstraintReference!GoferApiTest removeSelector: #testBlueplane!GoferApiTest removeSelector: #assert:repositories:!GoferApiTest removeSelector: #assert:on:hasUser:withPassword:!Smalltalk globals removeClassNamed: #AnObsoleteGoferApiTest!Smalltalk globals removeClassNamed: #AnObsoleteGoferTest!Smalltalk globals removeClassNamed: #AnObsoleteNautilusUtilsTestStubUntested!NautilusUtilsTestStub removeSelector: #untestedTwo:!NautilusUtilsTestStub removeSelector: #untestedTwo!NautilusUtilsTestStub removeSelector: #untestedOneTwo:!NautilusUtilsTestStub removeSelector: #untestedOne:two:!NautilusUtilsTestStub removeSelector: #untestedOne:!NautilusUtilsTestStub removeSelector: #untestedOne!NautilusUtilsTestStub removeSelector: #two:!NautilusUtilsTestStub removeSelector: #two!NautilusUtilsTestStub removeSelector: #oneTwo:!NautilusUtilsTestStub removeSelector: #one:two:!NautilusUtilsTestStub removeSelector: #one:!NautilusUtilsTestStub removeSelector: #one!NautilusUtilsTestStub class removeSelector: #untestedOne:two:!NautilusUtilsTestStub class removeSelector: #one:two:!Smalltalk globals removeClassNamed: #AnObsoleteNautilusUtilsTestStub!SortHierarchicallyTests removeSelector: #testUnrelatedClassesUnsorted!SortHierarchicallyTests removeSelector: #testUnrelatedClassesUnchanged!SortHierarchicallyTests removeSelector: #testUnrelatedClassesReversed!SortHierarchicallyTests removeSelector: #testPartialTreeUnsorted!SortHierarchicallyTests removeSelector: #testPartialTreeUnchanged!SortHierarchicallyTests removeSelector: #testPartialTreeReversed!SortHierarchicallyTests removeSelector: #testOneClass!SortHierarchicallyTests removeSelector: #testCompleteTreeUnordered!SortHierarchicallyTests removeSelector: #testCompleteTreeUnchanged!SortHierarchicallyTests removeSelector: #testCompleteTreeReversed!SortHierarchicallyTests removeSelector: #testArchivesClassesUnordered!SortHierarchicallyTests removeSelector: #testArchivesClassesUnchanged!SortHierarchicallyTests removeSelector: #testArchivesClassesReversed!SortHierarchicallyTests removeSelector: #sortByNameSize:!SortHierarchicallyTests removeSelector: #setUp!SortHierarchicallyTests removeSelector: #nodes:shouldBe:!Smalltalk globals removeClassNamed: #AnObsoleteSortHierarchicallyTests!PackageTreeNautilusTest removeSelector: #testPackagePatternStringRootPackageTag!PackageTreeNautilusTest removeSelector: #testPackagePatternString!PackageTreeNautilusTest removeSelector: #testOpenOnMethodLastValueNotNil!PackageTreeNautilusTest removeSelector: #testOpenOnMethodLastValueIsNil!PackageTreeNautilusTest removeSelector: #testOpenOnMethod!PackageTreeNautilusTest removeSelector: #testOpenLastValueNotNil!PackageTreeNautilusTest removeSelector: #testOpenLastValueIsNil!PackageTreeNautilusTest removeSelector: #testOpen!PackageTreeNautilusTest removeSelector: #testFullBrowseOnClass!PackageTreeNautilusTest removeSelector: #testFullBrowseLastValueNotNilSelectedCategoryIsNil!PackageTreeNautilusTest removeSelector: #testFullBrowseLastValueNotNil2!PackageTreeNautilusTest removeSelector: #testFullBrowseLastValueNotNil!PackageTreeNautilusTest removeSelector: #testFullBrowseLastValueIsNil!PackageTreeNautilusTest removeSelector: #tearDown!PackageTreeNautilusTest removeSelector: #setUp!PackageTreeNautilusTest removeSelector: #compiledMethod:!PackageTreeNautilusTest removeSelector: #assertSelectedCompiledMethod!PackageTreeNautilusTest removeSelector: #assertPackageWidget!PackageTreeNautilusTest removeSelector: #assertPackageMorph:!PackageTreeNautilusTest removeSelector: #assertMethodWidgetPluggableListMorph!PackageTreeNautilusTest removeSelector: #assertMethodWidgetAdaptor!PackageTreeNautilusTest removeSelector: #assertMethodWidget!Smalltalk globals removeClassNamed: #AnObsoletePackageTreeNautilusTest!NautilusUtilsTestStubTest removeSelector: #testTwo!NautilusUtilsTestStubTest removeSelector: #testOneTwo!NautilusUtilsTestStubTest removeSelector: #testOne!NautilusUtilsTestStubTest removeSelector: #stubClass!NautilusUtilsTestStubTest removeSelector: #newStub!Smalltalk globals removeClassNamed: #AnObsoleteNautilusUtilsTestStubTest!NautilusUtilsTest removeSelector: #testNormalizedSelectorForComparison!NautilusUtilsTest removeSelector: #testCorrespondingTestedMethods!NautilusUtilsTest removeSelector: #testCorrespondingTestMethod!NautilusUtilsTest removeSelector: #testCorrespondingTestCase!NautilusUtilsTest removeSelector: #testAsTestMethod!NautilusUtilsTest removeSelector: #stubTestClass!NautilusUtilsTest removeSelector: #stubClass!Smalltalk globals removeClassNamed: #AnObsoleteNautilusUtilsTest!NautilusUITest removeSelector: #testMethodSortBlock!NautilusUITest removeSelector: #testBuildTestSelectorFor!NautilusUITest removeSelector: #tearDown!NautilusUITest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteNautilusUITest!NautilusTest removeSelector: #testSelectedMethod!NautilusTest removeSelector: #testSelectedClass!NautilusTest removeSelector: #testSelectedCategory!NautilusTest removeSelector: #tearDown!NautilusTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteNautilusTest!MethodWidgetTest removeSelector: #testElementInCacheShouldBeNotNil!MethodWidgetTest removeSelector: #foo!Smalltalk globals removeClassNamed: #AnObsoleteMethodWidgetTest!AbstractNautilusUITest removeSelector: #testSortClassesInCachedHierarchyB!AbstractNautilusUITest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteAbstractNautilusUITest!AdvancedHelpBrowserDummy removeSelector: #rootTopic:!AdvancedHelpBrowserDummy removeSelector: #rootTopic!AdvancedHelpBrowserDummy removeSelector: #open!AdvancedHelpBrowserDummy removeSelector: #isOpen!AdvancedHelpBrowserDummy removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteAdvancedHelpBrowserDummy!WikiStyleHelpTest removeSelector: #testOpenBrowserOnThisHelpType!Smalltalk globals removeClassNamed: #AnObsoleteWikiStyleHelpTest!WikiStyleHelpBuilderTest removeSelector: #testExtractHelpContentsFromMarkedString!WikiStyleHelpBuilderTest removeSelector: #testDefaultSyntaxAlwaysPier!WikiStyleHelpBuilderTest removeSelector: #setUp!WikiStyleHelpBuilderTest removeSelector: #defaultTestClass!Smalltalk globals removeClassNamed: #AnObsoleteWikiStyleHelpBuilderTest!HelpTopicTest removeSelector: #testSubtopicOwnership!HelpTopicTest removeSelector: #testSortOrder!HelpTopicTest removeSelector: #testInstanceCreation!HelpTopicTest removeSelector: #testInitialization!HelpTopicTest removeSelector: #testAddingSubtopic!HelpTopicTest removeSelector: #setUp!HelpTopicTest removeSelector: #defaultTestClass!Smalltalk globals removeClassNamed: #AnObsoleteHelpTopicTest!HelpTopicListItemWrapperTest removeSelector: #testDisplayLabel!HelpTopicListItemWrapperTest removeSelector: #defaultTestClass!Smalltalk globals removeClassNamed: #AnObsoleteHelpTopicListItemWrapperTest!HelpBrowserTest removeSelector: #testOpen!HelpBrowserTest removeSelector: #testLazyDefaultHelpBrowser!HelpBrowserTest removeSelector: #testDefaultHelpBrowserIsReplacable!HelpBrowserTest removeSelector: #testDefaultHelpBrowser!HelpBrowserTest removeSelector: #defaultTestClass!Smalltalk globals removeClassNamed: #AnObsoleteHelpBrowserTest!CustomHelpTest removeSelector: #testOpenBrowserOnThisHelpType!Smalltalk globals removeClassNamed: #AnObsoleteCustomHelpTest!ClassAPIHelpBuilderTest removeSelector: #testMethodsButNoSubclasses!ClassAPIHelpBuilderTest removeSelector: #testDefaultBuilding!ClassAPIHelpBuilderTest removeSelector: #testBuildingTraits!Smalltalk globals removeClassNamed: #AnObsoleteClassAPIHelpBuilderTest!FileTest removeSelector: #testRegistryShouldBeCleaned!FileTest removeSelector: #testOpeningForAppendSetsPositionAtEnd!FileTest removeSelector: #testOpeningFileSetsPositionAtBeggining!FileTest removeSelector: #testOpeningFileObjectCreatesFile!FileTest removeSelector: #testOpeningFileNormallyDoesNotDeleteExistingFile!FileTest removeSelector: #testOpenFileForReadDoesNotDeleteExistingFile!FileTest removeSelector: #testFilesAreRegisteredInWeakRegistry!FileTest removeSelector: #testFileExists!FileTest removeSelector: #testFileDelete!FileTest removeSelector: #testCheckExistenceOfNonExistingFileDoesNotThrowException!FileTest removeSelector: #testCheckExistenceOfExistingFileThrowsException!FileTest removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoleteFileTest!BinaryFileStreamTest removeSelector: #testWriteToClosedFileFails!BinaryFileStreamTest removeSelector: #testWriteReadInt!BinaryFileStreamTest removeSelector: #testWriteMultipleBytes!BinaryFileStreamTest removeSelector: #testSkipLecture!BinaryFileStreamTest removeSelector: #testReadWhenNothingAvailableYieldsNil!BinaryFileStreamTest removeSelector: #testReadMultipleBytes!BinaryFileStreamTest removeSelector: #testReadMoreThanAvailableYieldsOnlyAvailable!BinaryFileStreamTest removeSelector: #testReadLessThanAvailableYieldsJustRead!BinaryFileStreamTest removeSelector: #testReadFullFileIsAtEnd!BinaryFileStreamTest removeSelector: #testPeekDoesNotAdvanceTheStream!BinaryFileStreamTest removeSelector: #testOpenFile!BinaryFileStreamTest removeSelector: #testFullFileIsAtEnd!BinaryFileStreamTest removeSelector: #testFileWithSomeBytesSizeIsNotZero!BinaryFileStreamTest removeSelector: #testEmptyFileIsAtEnd!BinaryFileStreamTest removeSelector: #tearDown!BinaryFileStreamTest removeSelector: #setUp!BinaryFileStreamTest removeSelector: #killTestFile!BinaryFileStreamTest removeSelector: #fileStreamForFileNamed:!Smalltalk globals removeClassNamed: #AnObsoleteBinaryFileStreamTest!TestStartupUIManager removeSelector: #sessionManager:!TestStartupUIManager removeSelector: #sessionManager!Smalltalk globals removeClassNamed: #AnObsoleteTestStartupUIManager!TestWorkingSession removeSelector: #start:!TestWorkingSession removeSelector: #initialize!TestWorkingSession removeSelector: #handleError:!TestWorkingSession removeSelector: #executeDeferredStartupActions:!TestWorkingSession removeSelector: #errors!TestWorkingSession removeSelector: #errorHandler:!TestWorkingSession removeSelector: #errorHandler!Smalltalk globals removeClassNamed: #AnObsoleteTestWorkingSession!SessionManagerUnregistrationTest removeSelector: #testUnregisterUnknownClassDoesNotFail!SessionManagerUnregistrationTest removeSelector: #testCanUnregisterClass!SessionManagerUnregistrationTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSessionManagerUnregistrationTest!SessionManagerRegistrationTest removeSelector: #testGivenUnknonwnHandledIdShouldHasRegisteredReturnsFalse!SessionManagerRegistrationTest removeSelector: #testGivenManyRegistrationsInSameCategoryShoudlAClassBePresentOnlyOnceInStartupList!SessionManagerRegistrationTest removeSelector: #testGivenManyRegistrationsInSameCategoryAtDifferentPriorityShoudlAClassBePresentOnlyOnceInStartupList!SessionManagerRegistrationTest removeSelector: #testGivenManyRegistrationsInDifferentCategoriesShoudlLastClassRegistrationBeTheOnlyOccurenceInStartupList!SessionManagerRegistrationTest removeSelector: #testGivenARegisteredClassRenamedThenItsHandlerIsUpdated!SessionManagerRegistrationTest removeSelector: #testGivenARegisteredClassHandlerShouldHasRegisteredReturnsTrue!SessionManagerRegistrationTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSessionManagerRegistrationTest!SessionManagerRegistrationOrderTest removeSelector: #testSubscriptionReverseOrder!SessionManagerRegistrationOrderTest removeSelector: #testRegisterSystemElement!SessionManagerRegistrationOrderTest removeSelector: #testRegisterElementByDefault!SessionManagerRegistrationOrderTest removeSelector: #testPriorityOrderInTheSameCategoryIsRespected!SessionManagerRegistrationOrderTest removeSelector: #testCustomCategoryOrderIsPreserved!SessionManagerRegistrationOrderTest removeSelector: #testCustomCategoryGoesAfterSystemCategoryByDefault!SessionManagerRegistrationOrderTest removeSelector: #testCreateCategoryFailsIfAfterUnexistentCategory!SessionManagerRegistrationOrderTest removeSelector: #testCategoriesPriorityOrder!SessionManagerRegistrationOrderTest removeSelector: #setUp!SessionManagerRegistrationOrderTest removeSelector: #register:atSystemPriority:!SessionManagerRegistrationOrderTest removeSelector: #assertHandledId:equals:!Smalltalk globals removeClassNamed: #AnObsoleteSessionManagerRegistrationOrderTest!SessionErrorHandlingTest removeSelector: #testErrorHandledIfExceptionSignaledAtStartupWhenDefaultUiManagerActive!SessionErrorHandlingTest removeSelector: #testErrorHandledIfExceptionSignaledAtShutdownWhenStartupUiManagerActive!SessionErrorHandlingTest removeSelector: #testErrorCaughtIfExceptionSignaledAtShutdownWhenDefaultUiManagerActive!SessionErrorHandlingTest removeSelector: #testErrorCaughtAndDefferedIfExceptionSignaledAtStartupWhenStartupUiManagerActive!SessionErrorHandlingTest removeSelector: #setUp!SessionErrorHandlingTest removeSelector: #newTestSessionfor:!Smalltalk globals removeClassNamed: #AnObsoleteSessionErrorHandlingTest!SessionCreationTest removeSelector: #testStartup!SessionCreationTest removeSelector: #testShutdown!SessionCreationTest removeSelector: #testNewSession!Smalltalk globals removeClassNamed: #AnObsoleteSessionCreationTest!TestSessionHandler removeSelector: #startupHandler:!TestSessionHandler removeSelector: #startup:!TestSessionHandler removeSelector: #shutdownHandler:!TestSessionHandler removeSelector: #shutdown:!TestSessionHandler removeSelector: #printOn:!TestSessionHandler removeSelector: #handledId!TestSessionHandler class removeSelector: #onStartup:!TestSessionHandler class removeSelector: #onShutdown:!Smalltalk globals removeClassNamed: #AnObsoleteTestSessionHandler!RegisterableTranslatorMock removeSelector: #translate:toLocale:!RegisterableTranslatorMock removeSelector: #translate:!RegisterableTranslatorMock removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteRegisterableTranslatorMock!NaturalLanguageTranslatorTest removeSelector: #testTranslatePureString!NaturalLanguageTranslatorTest removeSelector: #testRegisterCustomTranslator!NaturalLanguageTranslatorTest removeSelector: #tearDown!NaturalLanguageTranslatorTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteNaturalLanguageTranslatorTest!LocaleTest removeSelector: #testCurrent!Smalltalk globals removeClassNamed: #AnObsoleteLocaleTest!LocaleIDTest removeSelector: #testPrintString!LocaleIDTest removeSelector: #testPosixNameConversion!LocaleIDTest removeSelector: #testInstanceCreationWithISOLanguageAndCountry!LocaleIDTest removeSelector: #testInstanceCreationWithISOLanguage!LocaleIDTest removeSelector: #testHashing!LocaleIDTest removeSelector: #testFromSingleISOString!LocaleIDTest removeSelector: #testFromISOString!LocaleIDTest removeSelector: #testComparision!LocaleIDTest removeSelector: #germanLocaleID!LocaleIDTest removeSelector: #frenchLocaleID!Smalltalk globals removeClassNamed: #AnObsoleteLocaleIDTest!LocaleChangedTest removeSelector: #testInstanceCreation!LocaleChangedTest removeSelector: #germanLocale!LocaleChangedTest removeSelector: #englishLocale!Smalltalk globals removeClassNamed: #AnObsoleteLocaleChangedTest!LocaleAnnouncementTests removeSelector: #tearDown!LocaleAnnouncementTests removeSelector: #setUp!LocaleAnnouncementTests removeSelector: #localeWasChanged:!LocaleAnnouncementTests removeSelector: #frenchLocale!Smalltalk globals removeClassNamed: #AnObsoleteLocaleAnnouncementTests!ISOLanguageDefinitionTest removeSelector: #testISO3LanguageDefinition!ISOLanguageDefinitionTest removeSelector: #testISO2LanguageDefinition!Smalltalk globals removeClassNamed: #AnObsoleteISOLanguageDefinitionTest!SimpleTestResourceCircular1 class removeSelector: #resources!Smalltalk globals removeClassNamed: #AnObsoleteSimpleTestResourceCircular1!SimpleTestResourceCircular class removeSelector: #resources!Smalltalk globals removeClassNamed: #AnObsoleteSimpleTestResourceCircular!Smalltalk globals removeClassNamed: #AnObsoleteSimpleTestResourceB1!SimpleTestResourceB class removeSelector: #resources!Smalltalk globals removeClassNamed: #AnObsoleteSimpleTestResourceB!Smalltalk globals removeClassNamed: #AnObsoleteSimpleTestResourceA2!Smalltalk globals removeClassNamed: #AnObsoleteSimpleTestResourceA1!SimpleTestResourceA class removeSelector: #resources!Smalltalk globals removeClassNamed: #AnObsoleteSimpleTestResourceA!SimpleTestResource removeSelector: #tearDown!SimpleTestResource removeSelector: #stoppedStateSymbol!SimpleTestResource removeSelector: #startedStateSymbol!SimpleTestResource removeSelector: #setUp!SimpleTestResource removeSelector: #setRun!SimpleTestResource removeSelector: #runningState:!SimpleTestResource removeSelector: #runningState!SimpleTestResource removeSelector: #isAvailable!SimpleTestResource removeSelector: #hasSetup!SimpleTestResource removeSelector: #hasRun!SimpleTestResource class removeSelector: #rawCurrentForTest!SimpleTestResource class removeSelector: #preventAvailabilityDuring:!SimpleTestResource class removeSelector: #allowAvailability!Smalltalk globals removeClassNamed: #AnObsoleteSimpleTestResource!TestCaseTest removeSelector: #testIsUnitTest!TestCaseTest removeSelector: #testAssertEqualsActualAndExpectedOrder!TestCaseTest removeSelector: #testAnnouncement!Smalltalk globals removeClassNamed: #AnObsoleteTestCaseTest!SimpleTestResourceTestCase removeSelector: #testRunTestWithResource!SimpleTestResourceTestCase removeSelector: #testRunSuiteWithResource!SimpleTestResourceTestCase removeSelector: #testResourceInitRelease!SimpleTestResourceTestCase removeSelector: #testResourceCollection!SimpleTestResourceTestCase removeSelector: #testDebugTestWithResource!SimpleTestResourceTestCase removeSelector: #setUp!SimpleTestResourceTestCase removeSelector: #setRun!SimpleTestResourceTestCase removeSelector: #error!SimpleTestResourceTestCase removeSelector: #dummy!SimpleTestResourceTestCase removeSelector: #clearOuterResourceStateDuring:!SimpleTestResourceTestCase class removeSelector: #resources!SimpleTestResourceTestCase class removeSelector: #lastStoredRun!ManyTestResourceTestCase removeSelector: #testTearDownOrder!ManyTestResourceTestCase removeSelector: #clearOuterResourceStateDuring:!ManyTestResourceTestCase class removeSelector: #shouldInheritSelectors!ManyTestResourceTestCase class removeSelector: #resources!Smalltalk globals removeClassNamed: #AnObsoleteManyTestResourceTestCase!FailingTestResourceTestCase removeSelector: #clearOuterResourceStateDuring:!Smalltalk globals removeClassNamed: #AnObsoleteFailingTestResourceTestCase!Smalltalk globals removeClassNamed: #AnObsoleteSimpleTestResourceTestCase!SUnitTest removeSelector: #testWithExceptionDo!SUnitTest removeSelector: #testWatchDogProcessShouldNotBeCatchedAsForkedProcess!SUnitTest removeSelector: #testSuite!SUnitTest removeSelector: #testShouldIgnoreTimeLimitWhenTestProcessIsSuspended!SUnitTest removeSelector: #testShould!SUnitTest removeSelector: #testSelectorWithArg:!SUnitTest removeSelector: #testRunningLongTime!SUnitTest removeSelector: #testRunning!SUnitTest removeSelector: #testResult!SUnitTest removeSelector: #testRanOnlyOnce!SUnitTest removeSelector: #testRan!SUnitTest removeSelector: #testRaiseDeprecationWarnings!SUnitTest removeSelector: #testLongRunningTestThenGreenTest!SUnitTest removeSelector: #testLongRunningTest!SUnitTest removeSelector: #testIsNotRerunOnDebug!SUnitTest removeSelector: #testIgnoreDeprecationWarnings!SUnitTest removeSelector: #testHangedTestDueToFailedChildProcess!SUnitTest removeSelector: #testHangedChildProcessTest!SUnitTest removeSelector: #testGreenTestThenLongRunningTest!SUnitTest removeSelector: #testFileOutResult!SUnitTest removeSelector: #testFailedTestWithFailedChildProcessTestShouldNotEffectFollowingAnotherTest!SUnitTest removeSelector: #testFailedChildProcessTestShouldNotEffectFollowingAnotherTest!SUnitTest removeSelector: #testFailedChildProcessTest!SUnitTest removeSelector: #testFail!SUnitTest removeSelector: #testExpectedFailurePass!SUnitTest removeSelector: #testExpectedFailureDetection!SUnitTest removeSelector: #testExpectedFailure!SUnitTest removeSelector: #testExecutionEnvironmentShouldBeInstalled!SUnitTest removeSelector: #testException!SUnitTest removeSelector: #testErrorShouldResetWatchDog!SUnitTest removeSelector: #testError!SUnitTest removeSelector: #testDialectLocalizedException!SUnitTest removeSelector: #testDefects!SUnitTest removeSelector: #testChildProcessShouldNotBeStoredStronglyByTestEnvironment!SUnitTest removeSelector: #testAssert!SUnitTest removeSelector: #setUp!SUnitTest removeSelector: #setRun!SUnitTest removeSelector: #raiseDeprecationWarnings!SUnitTest removeSelector: #noop!SUnitTest removeSelector: #longRunningTest!SUnitTest removeSelector: #hasSetup!SUnitTest removeSelector: #hasRun!SUnitTest removeSelector: #hangedTestDueToFailedChildProcess!SUnitTest removeSelector: #hangedChildProcessTest!SUnitTest removeSelector: #failedTestWithFailedChildProcessTest!SUnitTest removeSelector: #failedChildProcesses!SUnitTest removeSelector: #failedChildProcessTest!SUnitTest removeSelector: #expectedFailures!SUnitTest removeSelector: #expectedFailurePasses!SUnitTest removeSelector: #expectedFailureFails!SUnitTest removeSelector: #errorShouldntRaise!SUnitTest removeSelector: #error!SUnitTest removeSelector: #deprecatedMessage!SUnitTest removeSelector: #assertTerminatedFailedChildProcessesFor:!SUnitTest removeSelector: #assertForTestResult:runCount:passed:failed:errors:expectedFailures:!SUnitTest removeSelector: #assertForTestResult:runCount:passed:failed:errors:!SUnitTest class removeSelector: #lastStoredRun!Smalltalk globals removeClassNamed: #AnObsoleteSUnitTest!SUnitExtensionsTest removeSelector: #validShouldNotTakeMoreThanMilliseconds!SUnitExtensionsTest removeSelector: #validShouldNotTakeMoreThan!SUnitExtensionsTest removeSelector: #testValidShouldNotTakeMoreThanMilliseconds!SUnitExtensionsTest removeSelector: #testValidShouldNotTakeMoreThan!SUnitExtensionsTest removeSelector: #testShouldRaiseWithExceptionDo!SUnitExtensionsTest removeSelector: #testShouldFix!SUnitExtensionsTest removeSelector: #testNoExceptionWithNoMatchingString!SUnitExtensionsTest removeSelector: #testNoExceptionWithMatchingString!SUnitExtensionsTest removeSelector: #testNoExceptionInShouldRaiseWithExceptionDo!SUnitExtensionsTest removeSelector: #testInvalidShouldNotTakeMoreThanMilliseconds!SUnitExtensionsTest removeSelector: #testInvalidShouldNotTakeMoreThan!SUnitExtensionsTest removeSelector: #testExceptionWithoutMatchingString!SUnitExtensionsTest removeSelector: #testExceptionWithMatchingString!SUnitExtensionsTest removeSelector: #testErrorInRaiseWithExceptionDo!SUnitExtensionsTest removeSelector: #testDifferentExceptionInShouldRaiseWithExceptionDo!SUnitExtensionsTest removeSelector: #testAutoDenyTrue!SUnitExtensionsTest removeSelector: #testAutoDenyFalse!SUnitExtensionsTest removeSelector: #testAutoAssertTrue!SUnitExtensionsTest removeSelector: #testAutoAssertFalse!SUnitExtensionsTest removeSelector: #testAssertionFailedInRaiseWithExceptionDo!SUnitExtensionsTest removeSelector: #stream!SUnitExtensionsTest removeSelector: #shouldRaiseWithSignalDoTest!SUnitExtensionsTest removeSelector: #shouldRaiseWithExceptionDoTest!SUnitExtensionsTest removeSelector: #shouldFixTest!SUnitExtensionsTest removeSelector: #noExceptionInShouldRaiseWithExceptionDoTest!SUnitExtensionsTest removeSelector: #isLogging!SUnitExtensionsTest removeSelector: #invalidShouldNotTakeMoreThanMilliseconds!SUnitExtensionsTest removeSelector: #invalidShouldNotTakeMoreThan!SUnitExtensionsTest removeSelector: #failureLog!SUnitExtensionsTest removeSelector: #errorInRaiseWithExceptionDoTest!SUnitExtensionsTest removeSelector: #differentExceptionInShouldRaiseWithExceptionDoTest!SUnitExtensionsTest removeSelector: #assertionFailedInRaiseWithExceptionDoTest!SUnitExtensionsTest class removeSelector: #lastStoredRun!Smalltalk globals removeClassNamed: #AnObsoleteSUnitExtensionsTest!ResumableTestFailureTestCase removeSelector: #testResumable!ResumableTestFailureTestCase removeSelector: #tearDown!ResumableTestFailureTestCase removeSelector: #setUp!ResumableTestFailureTestCase removeSelector: #resumableTestFailureTest!ResumableTestFailureTestCase removeSelector: #regularTestFailureTest!ResumableTestFailureTestCase removeSelector: #okTest!ResumableTestFailureTestCase removeSelector: #logFailure:!ResumableTestFailureTestCase removeSelector: #failureTest!ResumableTestFailureTestCase removeSelector: #errorTest!ResumableTestFailureTestCase class removeSelector: #lastStoredRun!Smalltalk globals removeClassNamed: #AnObsoleteResumableTestFailureTestCase!ExampleSetTest removeSelector: #testRemove!ExampleSetTest removeSelector: #testOccurrences!ExampleSetTest removeSelector: #testIncludes!ExampleSetTest removeSelector: #testIllegal!ExampleSetTest removeSelector: #testGrow!ExampleSetTest removeSelector: #testAdd!ExampleSetTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteExampleSetTest!ClassFactoryWithOrganizationTest removeSelector: #testedOrganization!ClassFactoryWithOrganizationTest removeSelector: #testedEnvironment!ClassFactoryWithOrganizationTest removeSelector: #testSingleClassFastCreation!ClassFactoryWithOrganizationTest removeSelector: #testSingleClassCreation!ClassFactoryWithOrganizationTest removeSelector: #testPackageCleanUp!ClassFactoryWithOrganizationTest removeSelector: #testMultipleClassCreation!ClassFactoryWithOrganizationTest removeSelector: #testDefaultCategoryCleanUp!ClassFactoryWithOrganizationTest removeSelector: #testClassFastCreationInDifferentCategories!ClassFactoryWithOrganizationTest removeSelector: #testClassCreationInDifferentCategories!ClassFactoryWithOrganizationTest removeSelector: #setUp!ClassFactoryWithOrganizationTest removeSelector: #assertEnvironmentOf:!ClassFactoryWithOrganizationTest class removeSelector: #defaultTimeLimit!Smalltalk globals removeClassNamed: #AnObsoleteClassFactoryWithOrganizationTest!ClassFactoryForTestCaseTest removeSelector: #testTraitCreationInDifferentCategories!ClassFactoryForTestCaseTest removeSelector: #testSingleTraitCreation!ClassFactoryForTestCaseTest removeSelector: #testSingleClassFastCreation!ClassFactoryForTestCaseTest removeSelector: #testSingleClassCreation!ClassFactoryForTestCaseTest removeSelector: #testPackageCleanUp!ClassFactoryForTestCaseTest removeSelector: #testMultipleClassCreation!ClassFactoryForTestCaseTest removeSelector: #testDuplicateClassWithNewName!ClassFactoryForTestCaseTest removeSelector: #testDefaultCategoryCleanUp!ClassFactoryForTestCaseTest removeSelector: #testClassFastCreationInDifferentCategories!ClassFactoryForTestCaseTest removeSelector: #testClassCreationInDifferentCategories!ClassFactoryForTestCaseTest removeSelector: #tearDown!ClassFactoryForTestCaseTest removeSelector: #setUp!ClassFactoryForTestCaseTest class removeSelector: #lastStoredRun!ClassFactoryForTestCaseTest class removeSelector: #defaultTimeLimit!Smalltalk globals removeClassNamed: #AnObsoleteClassFactoryForTestCaseTest!SHStyleElementTest removeSelector: #testStyleForTable!SHStyleElementTest removeSelector: #testPrintOn!SHStyleElementTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSHStyleElementTest!SHParserST80Test removeSelector: #verifyHierarchy:!SHParserST80Test removeSelector: #verifyClass:selector:!SHParserST80Test removeSelector: #verifyClass:!SHParserST80Test removeSelector: #tokensIn:!SHParserST80Test removeSelector: #tokenTypesIn:!SHParserST80Test removeSelector: #testObjectClass!SHParserST80Test removeSelector: #testNumbers!SHParserST80Test removeSelector: #testNumberHierarchy!SHParserST80Test removeSelector: #testCollectionHierarchy!SHParserST80Test removeSelector: #testBooleanHierarchy!SHParserST80Test removeSelector: #s!SHParserST80Test removeSelector: #r!SHParserST80Test removeSelector: #q!SHParserST80Test removeSelector: #e!SHParserST80Test removeSelector: #d!SHParserST80Test removeSelector: #>------->!Smalltalk globals removeClassNamed: #AnObsoleteSHParserST80Test!ZnPercentEncoderTests removeSelector: #testStringUrlEncoded!ZnPercentEncoderTests removeSelector: #testStringUrlDecoded!ZnPercentEncoderTests removeSelector: #testSimple!ZnPercentEncoderTests removeSelector: #testNonAscii!ZnPercentEncoderTests removeSelector: #testLeadingZero!ZnPercentEncoderTests removeSelector: #testDecodingErrors!ZnPercentEncoderTests removeSelector: #testDecodePlusAsSpace!Smalltalk globals removeClassNamed: #AnObsoleteZnPercentEncoderTests!ZnFastLineReaderTests removeSelector: #testNextLine!ZnFastLineReaderTests removeSelector: #testLinesDo!Smalltalk globals removeClassNamed: #AnObsoleteZnFastLineReaderTests!ZnCrPortableWriteStreamTests removeSelector: #testNextPut!Smalltalk globals removeClassNamed: #AnObsoleteZnCrPortableWriteStreamTests!ZnCharacterStreamTests removeSelector: #testUTF8ReadStreamReadInto!ZnCharacterStreamTests removeSelector: #testSimpleUTF8WriteStream!ZnCharacterStreamTests removeSelector: #testSimpleUTF8ReadStream!ZnCharacterStreamTests removeSelector: #testReadStream!ZnCharacterStreamTests removeSelector: #testPeek!ZnCharacterStreamTests removeSelector: #testNextLine!Smalltalk globals removeClassNamed: #AnObsoleteZnCharacterStreamTests!ZnCharacterEncoderTests removeSelector: #testUTF8SurrogateCodePointsShouldFail!ZnCharacterEncoderTests removeSelector: #testUTF8ReadFaultyInput!ZnCharacterEncoderTests removeSelector: #testUTF8Overlong!ZnCharacterEncoderTests removeSelector: #testUTF8EncoderWide!ZnCharacterEncoderTests removeSelector: #testUTF8EncoderRandom!ZnCharacterEncoderTests removeSelector: #testUTF8EncoderIncomplete!ZnCharacterEncoderTests removeSelector: #testUTF8EncoderByteCount!ZnCharacterEncoderTests removeSelector: #testUTF8EncoderAuto!ZnCharacterEncoderTests removeSelector: #testUTF8Encoder!ZnCharacterEncoderTests removeSelector: #testUTF8ByteOrderMark!ZnCharacterEncoderTests removeSelector: #testUTF8Boundaries!ZnCharacterEncoderTests removeSelector: #testUTF8Back!ZnCharacterEncoderTests removeSelector: #testUTF32EncoderWide!ZnCharacterEncoderTests removeSelector: #testUTF32EncoderSimple!ZnCharacterEncoderTests removeSelector: #testUTF32EncoderExampleFromD99!ZnCharacterEncoderTests removeSelector: #testUTF32EncoderExampleFromD101!ZnCharacterEncoderTests removeSelector: #testUTF32EncoderExampleFromD100!ZnCharacterEncoderTests removeSelector: #testUTF16EncoderWide1!ZnCharacterEncoderTests removeSelector: #testUTF16EncoderLittleEndian!ZnCharacterEncoderTests removeSelector: #testUTF16EncoderByteOrderMark!ZnCharacterEncoderTests removeSelector: #testUTF16EncoderBigEndian!ZnCharacterEncoderTests removeSelector: #testUTF16Back!ZnCharacterEncoderTests removeSelector: #testStringEncoding!ZnCharacterEncoderTests removeSelector: #testReadIntoStartingAtCountFromStreamWithOffset!ZnCharacterEncoderTests removeSelector: #testReadIntoStartingAtCountFromStreamWide!ZnCharacterEncoderTests removeSelector: #testReadIntoStartingAtCountFromStreamAtEnd!ZnCharacterEncoderTests removeSelector: #testReadIntoStartingAtCountFromStream!ZnCharacterEncoderTests removeSelector: #testNullEncoder!ZnCharacterEncoderTests removeSelector: #testNextPutAllStartingAtToStream!ZnCharacterEncoderTests removeSelector: #testLatin2Encoder!ZnCharacterEncoderTests removeSelector: #testLatin1Encoder!ZnCharacterEncoderTests removeSelector: #testKnownEncodingIdentifiers!ZnCharacterEncoderTests removeSelector: #testDetectEncoding!ZnCharacterEncoderTests removeSelector: #testDefault!ZnCharacterEncoderTests removeSelector: #testConvencienceMethods!ZnCharacterEncoderTests removeSelector: #testCodePointStreams!ZnCharacterEncoderTests removeSelector: #testCodePointEncodingDecoding!ZnCharacterEncoderTests removeSelector: #testByteEncoderFromUrl!ZnCharacterEncoderTests removeSelector: #testByteDecoding!ZnCharacterEncoderTests removeSelector: #testBeLenient!ZnCharacterEncoderTests removeSelector: #testAllByteEncoderDomains!ZnCharacterEncoderTests removeSelector: #encodeString:with:!ZnCharacterEncoderTests removeSelector: #decodeBytes:with:!ZnCharacterEncoderTests class removeSelector: #unicodeCharacterSource!ZnCharacterEncoderTests class removeSelector: #stringOfSize:fromSource:!ZnCharacterEncoderTests class removeSelector: #latin1CharacterSource!ZnCharacterEncoderTests class removeSelector: #asciiCharacterSource!Smalltalk globals removeClassNamed: #AnObsoleteZnCharacterEncoderTests!ZnBufferedWriteStreamTests removeSelector: #testWritingOverflow!ZnBufferedWriteStreamTests removeSelector: #testWriting!ZnBufferedWriteStreamTests removeSelector: #testNextPutAllStartingAt!Smalltalk globals removeClassNamed: #AnObsoleteZnBufferedWriteStreamTests!ZnBufferedReadStreamTests removeSelector: #testReadUpToEnd!ZnBufferedReadStreamTests removeSelector: #testReadUpTo!ZnBufferedReadStreamTests removeSelector: #testReadIntoLarger!ZnBufferedReadStreamTests removeSelector: #testReadInto!ZnBufferedReadStreamTests removeSelector: #testPeek!ZnBufferedReadStreamTests removeSelector: #testBuffering!Smalltalk globals removeClassNamed: #AnObsoleteZnBufferedReadStreamTests!ZnBase64EncoderTests removeSelector: #testWhitespaceAtEnd!ZnBase64EncoderTests removeSelector: #testSimple!ZnBase64EncoderTests removeSelector: #testQuote!ZnBase64EncoderTests removeSelector: #testPadding!ZnBase64EncoderTests removeSelector: #testFullSpectrum!ZnBase64EncoderTests removeSelector: #testFullAlphabet!ZnBase64EncoderTests removeSelector: #testEmpty!ZnBase64EncoderTests removeSelector: #testDecodingErrors!ZnBase64EncoderTests removeSelector: #testCustomLineBreaking!ZnBase64EncoderTests class removeSelector: #benchmarks!ZnBase64EncoderTests class removeSelector: #bench1kEncode!ZnBase64EncoderTests class removeSelector: #bench1kDecode!ZnBase64EncoderTests class removeSelector: #bench10kEncode!ZnBase64EncoderTests class removeSelector: #bench10kDecode!Smalltalk globals removeClassNamed: #AnObsoleteZnBase64EncoderTests!TextEditorTest removeSelector: #testSetSearchString!TextEditorTest removeSelector: #testCursorEnd!TextEditorTest removeSelector: #keyboardEvent!Smalltalk globals removeClassNamed: #AnObsoleteTextEditorTest!FreeTypeCacheTest removeSelector: #validateSizes:!FreeTypeCacheTest removeSelector: #validateCollections:!FreeTypeCacheTest removeSelector: #testSingleton!FreeTypeCacheTest removeSelector: #testSetMaximumSizeUnbounded!FreeTypeCacheTest removeSelector: #testSetMaximumSizeShrink!FreeTypeCacheTest removeSelector: #testSetMaximumSizeGrow!FreeTypeCacheTest removeSelector: #testSetMaximumSize!FreeTypeCacheTest removeSelector: #testReport!FreeTypeCacheTest removeSelector: #testRemoveAllForType!FreeTypeCacheTest removeSelector: #testRemoveAllForFont!FreeTypeCacheTest removeSelector: #testRemoveAll!FreeTypeCacheTest removeSelector: #testPutSameElementTwice!FreeTypeCacheTest removeSelector: #testNormalPutGetWidth!FreeTypeCacheTest removeSelector: #testNormalPutGetTwice!FreeTypeCacheTest removeSelector: #testNormalPutGet!FreeTypeCacheTest removeSelector: #testNormalGetIfAbsentPutTwiceIntoNonEmptyCache!FreeTypeCacheTest removeSelector: #testNormalGetIfAbsentPutTwice!FreeTypeCacheTest removeSelector: #testNormalGetIfAbsentPut!FreeTypeCacheTest removeSelector: #testMaximumSizeRespectedOnPut!FreeTypeCacheTest removeSelector: #testMaximumSizeRespectedOnIfAbsentPut!FreeTypeCacheTest removeSelector: #testInstanceInitialization!FreeTypeCacheTest removeSelector: #testFreeTypeCacheEntry!FreeTypeCacheTest removeSelector: #testFailedGet!FreeTypeCacheTest removeSelector: #testEntriesRemovedFIFO!FreeTypeCacheTest removeSelector: #testConstants!FreeTypeCacheTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteFreeTypeCacheTest!LRUCache removeSelector: #testSupportGetCachedAssociations!TTLCacheTests removeSelector: #testRemoveStaleValues!TTLCacheTests removeSelector: #testExpiring!TTLCacheTests removeSelector: #newCache!TTLCacheTests class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteTTLCacheTests!LRUCacheTests removeSelector: #testTwo!LRUCacheTests removeSelector: #testThreeHitSameOne!LRUCacheTests removeSelector: #testThree!LRUCacheTests removeSelector: #testTenThreadSafe!LRUCacheTests removeSelector: #testTen!LRUCacheTests removeSelector: #testRemoveOneOfThree!LRUCacheTests removeSelector: #testRemoveOne!LRUCacheTests removeSelector: #testRemoveAll!LRUCacheTests removeSelector: #testRandomAccess!LRUCacheTests removeSelector: #testPrimeFactors!LRUCacheTests removeSelector: #testPopulate!LRUCacheTests removeSelector: #testOneHitTwice!LRUCacheTests removeSelector: #testOneHit!LRUCacheTests removeSelector: #testOne!LRUCacheTests removeSelector: #testFixedAccess!LRUCacheTests removeSelector: #testFibonacci!LRUCacheTests removeSelector: #testFactoryStyle!LRUCacheTests removeSelector: #testFactory!LRUCacheTests removeSelector: #testEviction!LRUCacheTests removeSelector: #testEnumeration!LRUCacheTests removeSelector: #testEmpty!LRUCacheTests removeSelector: #testCustomWeight!LRUCacheTests removeSelector: #testAt!LRUCacheTests removeSelector: #testAdditionInIfAbsentPut!LRUCacheTests removeSelector: #test6k!LRUCacheTests removeSelector: #test5kClasses!LRUCacheTests removeSelector: #newCache!Smalltalk globals removeClassNamed: #AnObsoleteLRUCacheTests!ZnMessageBenchmark removeSelector: #writeUsingGzipEncodingAndChunkingRepresentation!ZnMessageBenchmark removeSelector: #writeRepresentation!ZnMessageBenchmark removeSelector: #write:!ZnMessageBenchmark removeSelector: #write!ZnMessageBenchmark removeSelector: #textResponseWide8k!ZnMessageBenchmark removeSelector: #textResponseWide64k!ZnMessageBenchmark removeSelector: #textResponseWide256k!ZnMessageBenchmark removeSelector: #textResponse8k!ZnMessageBenchmark removeSelector: #textResponse64k!ZnMessageBenchmark removeSelector: #textResponse256k!ZnMessageBenchmark removeSelector: #standardRequest!ZnMessageBenchmark removeSelector: #sizeBuffer:!ZnMessageBenchmark removeSelector: #simpleResponse!ZnMessageBenchmark removeSelector: #simpleRequest!ZnMessageBenchmark removeSelector: #read:!ZnMessageBenchmark removeSelector: #read!ZnMessageBenchmark removeSelector: #randomUnicodeWideString:!ZnMessageBenchmark removeSelector: #randomUnicodeString:!ZnMessageBenchmark removeSelector: #randomBytes:!ZnMessageBenchmark removeSelector: #randomAsciiString:!ZnMessageBenchmark removeSelector: #postRequest!ZnMessageBenchmark removeSelector: #message!ZnMessageBenchmark removeSelector: #buffer!ZnMessageBenchmark removeSelector: #binaryResponse8k!ZnMessageBenchmark removeSelector: #binaryResponse64k!ZnMessageBenchmark removeSelector: #binaryResponse256k!ZnMessageBenchmark removeSelector: #benchWrite!ZnMessageBenchmark removeSelector: #benchRead!ZnMessageBenchmark removeSelector: #asciiResponse8k!ZnMessageBenchmark removeSelector: #asciiResponse64k!ZnMessageBenchmark removeSelector: #asciiResponse256k!ZnMessageBenchmark class removeSelector: #responses!ZnMessageBenchmark class removeSelector: #requests!ZnMessageBenchmark class removeSelector: #messages!ZnMessageBenchmark class removeSelector: #benchAll!ZnMessageBenchmark class removeSelector: #bench:!Smalltalk globals removeClassNamed: #AnObsoleteZnMessageBenchmark!ZnUtilsTests removeSelector: #testStreamingNonBinaryWithoutSize!ZnUtilsTests removeSelector: #testStreamingNonBinary!ZnUtilsTests removeSelector: #testStreamingBinaryWithoutSize!ZnUtilsTests removeSelector: #testStreamingBinary!ZnUtilsTests removeSelector: #testReadUpToEndNonBinary!ZnUtilsTests removeSelector: #testReadUpToEndBinary!ZnUtilsTests removeSelector: #testParseHttpDateDashesAlternative1!ZnUtilsTests removeSelector: #testParseHttpDateDashes!ZnUtilsTests removeSelector: #testParseHttpDateAlternative1!ZnUtilsTests removeSelector: #testParseHttpDate!ZnUtilsTests removeSelector: #testNextPutAll!ZnUtilsTests removeSelector: #testIsCapitalizedString!ZnUtilsTests removeSelector: #testHttpDate!ZnUtilsTests removeSelector: #testCapitalizeString!ZnUtilsTests removeSelector: #testBase64!Smalltalk globals removeClassNamed: #AnObsoleteZnUtilsTests!ZnUserAgentSessionTests removeSelector: #testWithCookieJar!ZnUserAgentSessionTests removeSelector: #testAddCredential!ZnUserAgentSessionTests removeSelector: #testAccessors!ZnUserAgentSessionTests removeSelector: #dummyCredential!Smalltalk globals removeClassNamed: #AnObsoleteZnUserAgentSessionTests!ZnStatusLineTests removeSelector: #testWriting!ZnStatusLineTests removeSelector: #testReadingWrongVersion2!ZnStatusLineTests removeSelector: #testReadingWrongVersion!ZnStatusLineTests removeSelector: #testReadingWrongCode!ZnStatusLineTests removeSelector: #testReadingNonStandardCode!ZnStatusLineTests removeSelector: #testReading!ZnStatusLineTests removeSelector: #testInitialization!Smalltalk globals removeClassNamed: #AnObsoleteZnStatusLineTests!ZnStaticFileServerDelegateTests removeSelector: #withServerDo:!ZnStaticFileServerDelegateTests removeSelector: #wideHtml!ZnStaticFileServerDelegateTests removeSelector: #testIfModifiedSinceNotModified!ZnStaticFileServerDelegateTests removeSelector: #testBasicHead!ZnStaticFileServerDelegateTests removeSelector: #testBasicGetWide!ZnStaticFileServerDelegateTests removeSelector: #testBasicGetLarge!ZnStaticFileServerDelegateTests removeSelector: #testBasicGet!ZnStaticFileServerDelegateTests removeSelector: #tearDown!ZnStaticFileServerDelegateTests removeSelector: #smallHtml!ZnStaticFileServerDelegateTests removeSelector: #setUp!ZnStaticFileServerDelegateTests removeSelector: #largeHtml!Smalltalk globals removeClassNamed: #AnObsoleteZnStaticFileServerDelegateTests!ZnServerTests removeSelector: #withServerDo:!ZnServerTests removeSelector: #usingClassicSocketStreamsOnWindowsDo:!ZnServerTests removeSelector: #testZeroContentLength!ZnServerTests removeSelector: #testUrl!ZnServerTests removeSelector: #testTooManyHeaders!ZnServerTests removeSelector: #testSmall!ZnServerTests removeSelector: #testSessionRoute!ZnServerTests removeSelector: #testSessionExpired!ZnServerTests removeSelector: #testSession!ZnServerTests removeSelector: #testRespond!ZnServerTests removeSelector: #testRequestLineTooLong!ZnServerTests removeSelector: #testReadEvalPrint!ZnServerTests removeSelector: #testOSAssignedPort!ZnServerTests removeSelector: #testLocalUrl!ZnServerTests removeSelector: #testHeaderLineTooLong!ZnServerTests removeSelector: #testGzipCompressionAndChunking!ZnServerTests removeSelector: #testGetUnicodeUtf8!ZnServerTests removeSelector: #testGetConnectionClose!ZnServerTests removeSelector: #testFormTest3Unspecified!ZnServerTests removeSelector: #testFormTest3!ZnServerTests removeSelector: #testFormTest2!ZnServerTests removeSelector: #testFormTest1!ZnServerTests removeSelector: #testError!ZnServerTests removeSelector: #testEntityTooLarge!ZnServerTests removeSelector: #testEchoLocalInterface!ZnServerTests removeSelector: #testEchoBinary!ZnServerTests removeSelector: #testEcho!ZnServerTests removeSelector: #testDefault!ZnServerTests removeSelector: #testCustomDefaultDelegate!ZnServerTests removeSelector: #testAuthorizationSuccessful!ZnServerTests removeSelector: #testAuthorizationFailed!ZnServerTests removeSelector: #runningOnWindows!ZnServerTests removeSelector: #port!ZnServerTests removeSelector: #entitySizeLimit!ZnServerTests removeSelector: #assertTooManyHeaders:!ZnServerTests removeSelector: #assertRequestLineTooLong:!ZnServerTests removeSelector: #assertHeaderLineTooLong:!ZnServerTests removeSelector: #assertEntityTooLarge:!Smalltalk globals removeClassNamed: #AnObsoleteZnServerTests!ZnResponseTests removeSelector: #testWritingCharacter!ZnResponseTests removeSelector: #testWritingBinary!ZnResponseTests removeSelector: #testSlashdotGzipChunked!ZnResponseTests removeSelector: #testRedirect!ZnResponseTests removeSelector: #testNotFound!ZnResponseTests removeSelector: #testIsError!ZnResponseTests removeSelector: #testDefaultUTF8Encoding!ZnResponseTests removeSelector: #testCreated!ZnResponseTests removeSelector: #testCookies!ZnResponseTests removeSelector: #testCookie!ZnResponseTests removeSelector: #testAbsoluteRedirect!ZnResponseTests removeSelector: #testAbsoluteCreated!Smalltalk globals removeClassNamed: #AnObsoleteZnResponseTests!ZnRequestTests removeSelector: #testUrl!ZnRequestTests removeSelector: #testReadingWithEntity!ZnRequestTests removeSelector: #testReading!ZnRequestTests removeSelector: #testMergedFields!ZnRequestTests removeSelector: #testCookiesWriting!ZnRequestTests removeSelector: #testCookiesParsing!ZnRequestTests removeSelector: #testBasicAuthenticate!Smalltalk globals removeClassNamed: #AnObsoleteZnRequestTests!ZnRequestLineTests removeSelector: #testWriting!ZnRequestLineTests removeSelector: #testReadingWrongVersion!ZnRequestLineTests removeSelector: #testReadingWrongMethod!ZnRequestLineTests removeSelector: #testReading!Smalltalk globals removeClassNamed: #AnObsoleteZnRequestLineTests!ZnMessageBenchmarkTests removeSelector: #testResponses!ZnMessageBenchmarkTests removeSelector: #testRequests!Smalltalk globals removeClassNamed: #AnObsoleteZnMessageBenchmarkTests!ZnMagicCookieTests removeSelector: #testInPath!ZnMagicCookieTests removeSelector: #testInDomain!ZnMagicCookieTests removeSelector: #testFromString!ZnMagicCookieTests removeSelector: #cookieStringSubpath!ZnMagicCookieTests removeSelector: #cookieString!Smalltalk globals removeClassNamed: #AnObsoleteZnMagicCookieTests!ZnMagicCookieJarTests removeSelector: #testCookiesForUrl!ZnMagicCookieJarTests removeSelector: #testCookieAtForUrl!ZnMagicCookieJarTests removeSelector: #testAdd!ZnMagicCookieJarTests removeSelector: #cookieStringAlt!ZnMagicCookieJarTests removeSelector: #cookieString!Smalltalk globals removeClassNamed: #AnObsoleteZnMagicCookieJarTests!ZnLineReaderTests removeSelector: #testSimple!ZnLineReaderTests removeSelector: #testLineTooLongDefault!ZnLineReaderTests removeSelector: #testLineTooLong!ZnLineReaderTests removeSelector: #testBinary!Smalltalk globals removeClassNamed: #AnObsoleteZnLineReaderTests!ZnLimitedReadStreamTests removeSelector: #testSimpleEof!ZnLimitedReadStreamTests removeSelector: #testSimple!ZnLimitedReadStreamTests removeSelector: #testNextCountShort!ZnLimitedReadStreamTests removeSelector: #testNextCountIntoShort!ZnLimitedReadStreamTests removeSelector: #testNextCountInto!ZnLimitedReadStreamTests removeSelector: #testNextCount!ZnLimitedReadStreamTests removeSelector: #testNext!ZnLimitedReadStreamTests removeSelector: #testMatch!ZnLimitedReadStreamTests removeSelector: #testBinaryAll!ZnLimitedReadStreamTests removeSelector: #testBinary!Smalltalk globals removeClassNamed: #AnObsoleteZnLimitedReadStreamTests!ZnImageExampleDelegateTests removeSelector: #withServerDo:!ZnImageExampleDelegateTests removeSelector: #testUpload!ZnImageExampleDelegateTests removeSelector: #testMainPage!ZnImageExampleDelegateTests removeSelector: #testDefaultImage!ZnImageExampleDelegateTests removeSelector: #image!Smalltalk globals removeClassNamed: #AnObsoleteZnImageExampleDelegateTests!ZnHtmlOutputStreamTests removeSelector: #testTagWithMultipleAttributes!ZnHtmlOutputStreamTests removeSelector: #testTagWithId!ZnHtmlOutputStreamTests removeSelector: #testTagWithEmptyAttributes!ZnHtmlOutputStreamTests removeSelector: #testTagWithClass!ZnHtmlOutputStreamTests removeSelector: #testSmallPage!ZnHtmlOutputStreamTests removeSelector: #testSmall!ZnHtmlOutputStreamTests removeSelector: #testSelfClosingTag!ZnHtmlOutputStreamTests removeSelector: #testNesting!ZnHtmlOutputStreamTests removeSelector: #testHtml5Tag!ZnHtmlOutputStreamTests removeSelector: #testFormat!ZnHtmlOutputStreamTests removeSelector: #testEscaping!ZnHtmlOutputStreamTests removeSelector: #testEncoding!ZnHtmlOutputStreamTests removeSelector: #testComment!ZnHtmlOutputStreamTests removeSelector: #testAttributeEscaping!Smalltalk globals removeClassNamed: #AnObsoleteZnHtmlOutputStreamTests!ZnHeadersTests removeSelector: #testWriting!ZnHeadersTests removeSelector: #testReadingMultilineNonBinary!ZnHeadersTests removeSelector: #testReadingMultilineMultiValue!ZnHeadersTests removeSelector: #testReadingMultiline!ZnHeadersTests removeSelector: #testReading!ZnHeadersTests removeSelector: #testNormalization!ZnHeadersTests removeSelector: #testMultiValuedStreaming!ZnHeadersTests removeSelector: #testMultiValued!ZnHeadersTests removeSelector: #testMergeValued!Smalltalk globals removeClassNamed: #AnObsoleteZnHeadersTests!ZnEntityWriterTests removeSelector: #testPlainUsingReader!ZnEntityWriterTests removeSelector: #testPlain!ZnEntityWriterTests removeSelector: #testGzippedAndChunked!ZnEntityWriterTests removeSelector: #testChunkedOnly!Smalltalk globals removeClassNamed: #AnObsoleteZnEntityWriterTests!ZnEntityTests removeSelector: #testWritingApplicationUrlEncodingWithTextEncodingUtf8!ZnEntityTests removeSelector: #testWritingApplicationUrlEncodingWithTextEncodingLatin1!ZnEntityTests removeSelector: #testWritingApplicationUrlEncoding!ZnEntityTests removeSelector: #testUnspecifiedEncoding!ZnEntityTests removeSelector: #testUTF8Writing!ZnEntityTests removeSelector: #testUTF8ReadingUndetermined!ZnEntityTests removeSelector: #testUTF8ReadingDetermined!ZnEntityTests removeSelector: #testStringEntityEncoderInitialization!ZnEntityTests removeSelector: #testReadingLimited!ZnEntityTests removeSelector: #testReadingBinary!ZnEntityTests removeSelector: #testReadingApplicationFormUrlEncodingNoLength!ZnEntityTests removeSelector: #testReadingApplicationFormUrlEncoding!ZnEntityTests removeSelector: #testReading!ZnEntityTests removeSelector: #testMultiPartFormDataWriteReadBinary!ZnEntityTests removeSelector: #testMultiPartFormDataWriteRead!ZnEntityTests removeSelector: #testApplicationUrlEncodingAddAll!Smalltalk globals removeClassNamed: #AnObsoleteZnEntityTests!ZnEntityReaderTests removeSelector: #testReadStreamingWriting!ZnEntityReaderTests removeSelector: #testReadStreaming!ZnEntityReaderTests removeSelector: #testChunkedWithExtraHeaders!ZnEntityReaderTests removeSelector: #testChunked!Smalltalk globals removeClassNamed: #AnObsoleteZnEntityReaderTests!ZnEasyTests removeSelector: #withServerDo:!ZnEasyTests removeSelector: #testTimeout!ZnEasyTests removeSelector: #testPut!ZnEasyTests removeSelector: #testPostUnicodeUtf8!ZnEasyTests removeSelector: #testPost!ZnEasyTests removeSelector: #testHeadSmallHTMLDocument!ZnEasyTests removeSelector: #testGetSmallHTMLDocument!ZnEasyTests removeSelector: #testGetPng!ZnEasyTests removeSelector: #testGetJpeg!ZnEasyTests removeSelector: #testGetGif!ZnEasyTests removeSelector: #testDelete!ZnEasyTests removeSelector: #smallHtmlUrl!Smalltalk globals removeClassNamed: #AnObsoleteZnEasyTests!ZnDispatcherDelegateTest removeSelector: #withServerDo:!ZnDispatcherDelegateTest removeSelector: #testDispatcherDelegate!Smalltalk globals removeClassNamed: #AnObsoleteZnDispatcherDelegateTest!ZnDigestAuthenticatorTests removeSelector: #testParseOK!ZnDigestAuthenticatorTests removeSelector: #testParseEmpty!Smalltalk globals removeClassNamed: #AnObsoleteZnDigestAuthenticatorTests!ZnClientTests removeSelector: #withServerDo:!ZnClientTests removeSelector: #testUsernamePasswordTwice!ZnClientTests removeSelector: #testUsernamePasswordInUserInfo!ZnClientTests removeSelector: #testUsernamePassword!ZnClientTests removeSelector: #testUploadSmallDocument!ZnClientTests removeSelector: #testTimeout!ZnClientTests removeSelector: #testSpecialPosts!ZnClientTests removeSelector: #testRelativeRedirect307!ZnClientTests removeSelector: #testRelativeRedirect!ZnClientTests removeSelector: #testRedirectWithCustomHeader!ZnClientTests removeSelector: #testRedirectWithCookies!ZnClientTests removeSelector: #testRedirectDontFollow!ZnClientTests removeSelector: #testRedirect!ZnClientTests removeSelector: #testQueryGoogle!ZnClientTests removeSelector: #testProgressNoIfFail!ZnClientTests removeSelector: #testProgress!ZnClientTests removeSelector: #testPrepareRequest!ZnClientTests removeSelector: #testPostTwice!ZnClientTests removeSelector: #testPostMultipart!ZnClientTests removeSelector: #testPostForm!ZnClientTests removeSelector: #testPatch!ZnClientTests removeSelector: #testOptions!ZnClientTests removeSelector: #testLogging!ZnClientTests removeSelector: #testIfModifiedSinceNotModified!ZnClientTests removeSelector: #testIfFailWrongType!ZnClientTests removeSelector: #testIfFailNotFound!ZnClientTests removeSelector: #testIfFailNonExistingHost!ZnClientTests removeSelector: #testHeadSmallHTML!ZnClientTests removeSelector: #testGetWideStringHTML!ZnClientTests removeSelector: #testGetSmallHTMLUrlConstruction!ZnClientTests removeSelector: #testGetSmallHTMLTwice!ZnClientTests removeSelector: #testGetSmallHTMLStreaming!ZnClientTests removeSelector: #testGetSmallHTMLOneShot!ZnClientTests removeSelector: #testGetSmallHTMLBinary!ZnClientTests removeSelector: #testGetSmallHTML!ZnClientTests removeSelector: #testGetLargeWideStringHTML!ZnClientTests removeSelector: #testGetGeoIP!ZnClientTests removeSelector: #testGetForm!ZnClientTests removeSelector: #testGetAfterPost!ZnClientTests removeSelector: #testDownloadSmallHTML!ZnClientTests removeSelector: #testCookies!ZnClientTests removeSelector: #testConstruction!ZnClientTests removeSelector: #testConnectionCloseOnReuseTimeout!ZnClientTests removeSelector: #t3EasyGeoIPUrl!ZnClientTests removeSelector: #smallHtmlUrl!Smalltalk globals removeClassNamed: #AnObsoleteZnClientTests!ZnChunkedStreamTests removeSelector: #testWritingBuffered!ZnChunkedStreamTests removeSelector: #testWriting!ZnChunkedStreamTests removeSelector: #testReadingNextInto!ZnChunkedStreamTests removeSelector: #testReadingNext!ZnChunkedStreamTests removeSelector: #testReadingGzipStepped!ZnChunkedStreamTests removeSelector: #testReadingGzip!ZnChunkedStreamTests removeSelector: #testReadingBuffered!ZnChunkedStreamTests removeSelector: #testReading!ZnChunkedStreamTests removeSelector: #testGzipWriteRead!ZnChunkedStreamTests removeSelector: #testBinaryWriteRead!ZnChunkedStreamTests removeSelector: #nextPutAll:on:chunked:!Smalltalk globals removeClassNamed: #AnObsoleteZnChunkedStreamTests!ZnBivalentWriteStreamTests removeSelector: #testCharacterWriting!ZnBivalentWriteStreamTests removeSelector: #testByteWriting!Smalltalk globals removeClassNamed: #AnObsoleteZnBivalentWriteStreamTests!RandomTest removeSelector: #testUnixRandomGeneratorSeed!RandomTest removeSelector: #testNextInto!RandomTest removeSelector: #testNextInt!RandomTest removeSelector: #testNext!RandomTest removeSelector: #testIfCompletelyBroken!RandomTest removeSelector: #testDistribution!RandomTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRandomTest!ReflectivityExamples removeSelector: #tagExec:!ReflectivityExamples removeSelector: #tag!ReflectivityExamples removeSelector: #initialize!ReflectivityExamples removeSelector: #exampleWithArg:!ReflectivityExamples removeSelector: #exampleTwoSends!ReflectivityExamples removeSelector: #exampleSendTwoArgs!ReflectivityExamples removeSelector: #exampleSendNoReturn!ReflectivityExamples removeSelector: #examplePrimitiveMethod!ReflectivityExamples removeSelector: #exampleMethodWithMetaLinkOptions!ReflectivityExamples removeSelector: #exampleMethodMultipleSites!ReflectivityExamples removeSelector: #exampleMethod!ReflectivityExamples removeSelector: #exampleLiteralArray!ReflectivityExamples removeSelector: #exampleLiteral!ReflectivityExamples removeSelector: #exampleLazyInit!ReflectivityExamples removeSelector: #exampleIvarRead!ReflectivityExamples removeSelector: #exampleIfTrueIfFalse!ReflectivityExamples removeSelector: #exampleGlobalRead!ReflectivityExamples removeSelector: #exampleClassVarRead!ReflectivityExamples removeSelector: #exampleBlockNoValue!ReflectivityExamples removeSelector: #exampleBlock!ReflectivityExamples removeSelector: #exampleAssignment!ReflectivityExamples removeSelector: #exampleArray!ReflectivityExamples class removeSelector: #metaLinkOptions!ReflectivityExamples class removeSelector: #exampleMethodWithMetaLinkOptionsViaClass!Smalltalk globals removeClassNamed: #AnObsoleteReflectivityExamples!Smalltalk globals removeClassNamed: #AnObsoleteGlobalForTesting!ReflectivityTest removeSelector: #testTwoLinksUnstallOne!ReflectivityTest removeSelector: #tearDown!ReflectivityTest removeSelector: #tagExec:!ReflectivityTest removeSelector: #tagExec!ReflectivityTest removeSelector: #increase!Smalltalk globals removeClassNamed: #AnObsoleteReflectivityTest!ReflectivityReificationTest removeSelector: #testReifyTempValue!ReflectivityReificationTest removeSelector: #testReifyTempNewValue!ReflectivityReificationTest removeSelector: #testReifyTempName!ReflectivityReificationTest removeSelector: #testReifySlotVariable!ReflectivityReificationTest removeSelector: #testReifySlotValue!ReflectivityReificationTest removeSelector: #testReifySlotName!ReflectivityReificationTest removeSelector: #testReifySlotClass!ReflectivityReificationTest removeSelector: #testReifySendValue!ReflectivityReificationTest removeSelector: #testReifySendThisContext!ReflectivityReificationTest removeSelector: #testReifySendSelector!ReflectivityReificationTest removeSelector: #testReifySendReceiver!ReflectivityReificationTest removeSelector: #testReifySendArguments2!ReflectivityReificationTest removeSelector: #testReifySendArguments!ReflectivityReificationTest removeSelector: #testReifySendArgsAsArray!ReflectivityReificationTest removeSelector: #testReifySendAll!ReflectivityReificationTest removeSelector: #testReifyReturnValue!ReflectivityReificationTest removeSelector: #testReifyReceiverOnSendWithArguments!ReflectivityReificationTest removeSelector: #testReifyObject!ReflectivityReificationTest removeSelector: #testReifyNode!ReflectivityReificationTest removeSelector: #testReifyNewValueAssignment!ReflectivityReificationTest removeSelector: #testReifyMethodThisContext!ReflectivityReificationTest removeSelector: #testReifyMethodSelector!ReflectivityReificationTest removeSelector: #testReifyMethodReceiver!ReflectivityReificationTest removeSelector: #testReifyMethodArgsAfter!ReflectivityReificationTest removeSelector: #testReifyMethodArgs!ReflectivityReificationTest removeSelector: #testReifyIvarVariable!ReflectivityReificationTest removeSelector: #testReifyIvarValue!ReflectivityReificationTest removeSelector: #testReifyIvarName!ReflectivityReificationTest removeSelector: #testReifyGlobalVariableValue!ReflectivityReificationTest removeSelector: #testReifyGlobalVariable!ReflectivityReificationTest removeSelector: #testReifyGlobalValue!ReflectivityReificationTest removeSelector: #testReifyGlobalName!ReflectivityReificationTest removeSelector: #testReifyEntity!ReflectivityReificationTest removeSelector: #testReifyClassVariableVariable!ReflectivityReificationTest removeSelector: #testReifyClassVariableValue!ReflectivityReificationTest removeSelector: #testReifyClassVariableObject!ReflectivityReificationTest removeSelector: #testReifyClassVariableName!ReflectivityReificationTest removeSelector: #testReifyClassVariableLink!ReflectivityReificationTest removeSelector: #testReifyClassVariableEntity!ReflectivityReificationTest removeSelector: #testReifyClassVariableContext!ReflectivityReificationTest removeSelector: #testReifyClassVariableClass!ReflectivityReificationTest removeSelector: #testAccessTemp!ReflectivityReificationTest removeSelector: #tearDown!ReflectivityReificationTest removeSelector: #tagExec:!ReflectivityReificationTest removeSelector: #tagExec!Smalltalk globals removeClassNamed: #AnObsoleteReflectivityReificationTest!ReflectivityControlTest removeSelector: #testbeforeArray!ReflectivityControlTest removeSelector: #testLinkoptionInlineMetaObject!ReflectivityControlTest removeSelector: #testLinkoptionInlineCondition!ReflectivityControlTest removeSelector: #testLinkOptionDisabledLink!ReflectivityControlTest removeSelector: #testLinkOneShot!ReflectivityControlTest removeSelector: #testInsteadVariableWrite!ReflectivityControlTest removeSelector: #testInsteadVariableReadTemp!ReflectivityControlTest removeSelector: #testInsteadVariableReadIvar!ReflectivityControlTest removeSelector: #testInsteadVariableReadGlobal!ReflectivityControlTest removeSelector: #testInsteadSequence!ReflectivityControlTest removeSelector: #testInsteadSendMultipleSites!ReflectivityControlTest removeSelector: #testInsteadSend!ReflectivityControlTest removeSelector: #testInsteadReturn!ReflectivityControlTest removeSelector: #testInsteadPrimitiveMethod!ReflectivityControlTest removeSelector: #testInsteadMethod!ReflectivityControlTest removeSelector: #testInsteadLiteralArray!ReflectivityControlTest removeSelector: #testInsteadLiteral!ReflectivityControlTest removeSelector: #testInsteadClassVariable!ReflectivityControlTest removeSelector: #testInsteadBlockSequence!ReflectivityControlTest removeSelector: #testInsteadBlock!ReflectivityControlTest removeSelector: #testInsteadAssign!ReflectivityControlTest removeSelector: #testInsteadArray!ReflectivityControlTest removeSelector: #testFailingDoubleRWInsteadSimplified!ReflectivityControlTest removeSelector: #testFailingDoubleRWInstead!ReflectivityControlTest removeSelector: #testConditionWithArgument2!ReflectivityControlTest removeSelector: #testConditionWithArgument!ReflectivityControlTest removeSelector: #testConditionDisableEnableWithArguments!ReflectivityControlTest removeSelector: #testConditionDisableEnableNoArguments!ReflectivityControlTest removeSelector: #testBeforeVariable!ReflectivityControlTest removeSelector: #testBeforeSequence!ReflectivityControlTest removeSelector: #testBeforeSend!ReflectivityControlTest removeSelector: #testBeforeReturn!ReflectivityControlTest removeSelector: #testBeforeMethodPrimitive!ReflectivityControlTest removeSelector: #testBeforeMethod!ReflectivityControlTest removeSelector: #testBeforeLiteralArray!ReflectivityControlTest removeSelector: #testBeforeLiteral!ReflectivityControlTest removeSelector: #testBeforeClassVariable!ReflectivityControlTest removeSelector: #testBeforeBlockSequenceNoValue!ReflectivityControlTest removeSelector: #testBeforeBlockSequence!ReflectivityControlTest removeSelector: #testBeforeBlock!ReflectivityControlTest removeSelector: #testBeforeAssignment!ReflectivityControlTest removeSelector: #testAfterVariableNode!ReflectivityControlTest removeSelector: #testAfterSlot!ReflectivityControlTest removeSelector: #testAfterSequence!ReflectivityControlTest removeSelector: #testAfterSendWeak!ReflectivityControlTest removeSelector: #testAfterSend!ReflectivityControlTest removeSelector: #testAfterReturn!ReflectivityControlTest removeSelector: #testAfterMethodWithTemps!ReflectivityControlTest removeSelector: #testAfterMethodPrimitive!ReflectivityControlTest removeSelector: #testAfterMethod!ReflectivityControlTest removeSelector: #testAfterLiteralArray!ReflectivityControlTest removeSelector: #testAfterLiteral!ReflectivityControlTest removeSelector: #testAfterClassVariable!ReflectivityControlTest removeSelector: #testAfterBlockSequence!ReflectivityControlTest removeSelector: #testAfterBlock!ReflectivityControlTest removeSelector: #testAfterAssignment!ReflectivityControlTest removeSelector: #testAfterArray!ReflectivityControlTest removeSelector: #tearDown!ReflectivityControlTest removeSelector: #tagExec:!ReflectivityControlTest removeSelector: #tagExec!ReflectivityControlTest removeSelector: #return3!Smalltalk globals removeClassNamed: #AnObsoleteReflectivityControlTest!ReflectiveMethodTest removeSelector: #testSetLinkWithPragmaOptionsPerClass!ReflectiveMethodTest removeSelector: #testSetLinkWithPragmaOptions!ReflectiveMethodTest removeSelector: #testSetLinkOnPrimitive!ReflectiveMethodTest removeSelector: #testSetLinkOnInstanceVariableAndUninstall!ReflectiveMethodTest removeSelector: #testSetLinkOnInstanceVariable!ReflectiveMethodTest removeSelector: #testSetLinkOnGlobalVariableAndUninstall!ReflectiveMethodTest removeSelector: #testSetLinkOnGlobalVariable!ReflectiveMethodTest removeSelector: #testSetLinkOnClassVariableAndUninstall!ReflectiveMethodTest removeSelector: #testSetLinkOnClassVariable!ReflectiveMethodTest removeSelector: #testSetLinkInPrimitive!ReflectiveMethodTest removeSelector: #testSetLink!ReflectiveMethodTest removeSelector: #testLinkCountTwoLinks!ReflectiveMethodTest removeSelector: #testInvalidateWithLinkCount!ReflectiveMethodTest removeSelector: #testInvalidateNoJit!ReflectiveMethodTest removeSelector: #testInvalidate!ReflectiveMethodTest removeSelector: #testCreateReflectiveMethodAndInvalidate!ReflectiveMethodTest removeSelector: #testCreateReflectiveMethod!ReflectiveMethodTest removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoleteReflectiveMethodTest!MetaLinkTest removeSelector: #testSimpleHaltLink!MetaLinkTest removeSelector: #testReificationError!MetaLinkTest removeSelector: #testOptionFor!MetaLinkTest removeSelector: #testLinkOptionsDefault!MetaLinkTest removeSelector: #testLinkOption!MetaLinkTest removeSelector: #testCotrolLink!MetaLinkTest removeSelector: #testCotrolInstead!MetaLinkTest removeSelector: #testConditionLink!MetaLinkTest removeSelector: #testBlockLink!MetaLinkTest removeSelector: #testAvailableReifications!Smalltalk globals removeClassNamed: #AnObsoleteMetaLinkTest!CoverageDemoTest removeSelector: #testCoverageMethod!CoverageDemoTest removeSelector: #testCoverageControlFlow!CoverageDemoTest removeSelector: #testCoverageAST!CoverageDemoTest removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoleteCoverageDemoTest!ASTCacheResetTest removeSelector: #testCacheResetPreserveLinks!ASTCacheResetTest removeSelector: #tearDown!ASTCacheResetTest removeSelector: #setUp!ASTCacheResetTest removeSelector: #increment!ASTCacheResetTest removeSelector: #annotatedMethod!Smalltalk globals removeClassNamed: #AnObsoleteASTCacheResetTest!MCSnapshotResource removeSelector: #snapshot!MCSnapshotResource removeSelector: #setUp!MCSnapshotResource removeSelector: #definitions!MCSnapshotResource class removeSelector: #takeSnapshot!MCSnapshotResource class removeSelector: #mockPackageName!MCSnapshotResource class removeSelector: #mockPackage!Smalltalk globals removeClassNamed: #AnObsoleteMCSnapshotResource!MCMockDependency removeSelector: #uuidForName:!MCMockDependency removeSelector: #resolve!MCMockDependency removeSelector: #name!MCMockDependency removeSelector: #mockVersionInfo!MCMockDependency removeSelector: #initializeWithTree:!MCMockDependency removeSelector: #hash!MCMockDependency removeSelector: #hasResolution!MCMockDependency removeSelector: #children!MCMockDependency removeSelector: #=!MCMockDependency class removeSelector: #fromTree:!Smalltalk globals removeClassNamed: #AnObsoleteMCMockDependency!MCServerRegistry removeSelector: #removeCredentialsFor:!MCWorkingCopyTest removeSelector: #testSnapshotAndLoad!MCWorkingCopyTest removeSelector: #testSimpleMerge!MCWorkingCopyTest removeSelector: #testSelectiveBackport!MCWorkingCopyTest removeSelector: #testRepositoryFallback!MCWorkingCopyTest removeSelector: #testRepeatedMerge!MCWorkingCopyTest removeSelector: #testRedundantMerge!MCWorkingCopyTest removeSelector: #testOptimizedLoad!MCWorkingCopyTest removeSelector: #testNaming!MCWorkingCopyTest removeSelector: #testMergeIntoUnmodifiedImage!MCWorkingCopyTest removeSelector: #testMergeIntoImageWithNoChanges!MCWorkingCopyTest removeSelector: #testDoubleRepeatedMerge!MCWorkingCopyTest removeSelector: #testBackport!MCWorkingCopyTest removeSelector: #testAncestorMerge!MCWorkingCopyTest removeSelector: #tearDown!MCWorkingCopyTest removeSelector: #snapshot!MCWorkingCopyTest removeSelector: #setUp!MCWorkingCopyTest removeSelector: #packageName!MCWorkingCopyTest removeSelector: #merge:!MCWorkingCopyTest removeSelector: #load:!MCWorkingCopyTest removeSelector: #description!MCWorkingCopyTest removeSelector: #clearPackageCache!MCWorkingCopyTest removeSelector: #basicMerge:!MCWorkingCopyTest removeSelector: #assertNumberWhenSavingTo:is:!MCWorkingCopyTest removeSelector: #assertNameWhenSavingTo:is:!Smalltalk globals removeClassNamed: #AnObsoleteMCWorkingCopyTest!MCVersionTest removeSelector: #versionFromTree:!MCVersionTest removeSelector: #testWithAllUnresolved!MCVersionTest removeSelector: #testWithAllMissing!MCVersionTest removeSelector: #testWithAll!MCVersionTest removeSelector: #testPostOrder!MCVersionTest removeSelector: #testDependencyOrder!MCVersionTest removeSelector: #testAllUnresolved!MCVersionTest removeSelector: #testAllMissing!MCVersionTest removeSelector: #testAllAvailablePostOrder!MCVersionTest removeSelector: #setUp!MCVersionTest removeSelector: #dependencyFromTree:!MCVersionTest removeSelector: #assert:orders:as:unresolved:!MCVersionTest removeSelector: #assert:orders:as:!Smalltalk globals removeClassNamed: #AnObsoleteMCVersionTest!MCTestCase removeSelector: #treeFrom:!MCTestCase removeSelector: #runCase!MCTestCase removeSelector: #restoreMocks!MCTestCase removeSelector: #mockVersionWithDependencies!MCTestCase removeSelector: #mockVersionWithAncestor:!MCTestCase removeSelector: #mockVersionName!MCTestCase removeSelector: #mockVersionInfoWithAncestor:!MCTestCase removeSelector: #mockVersionInfo:!MCTestCase removeSelector: #mockVersionInfo!MCTestCase removeSelector: #mockVersion!MCTestCase removeSelector: #mockToken:!MCTestCase removeSelector: #mockSnapshot!MCTestCase removeSelector: #mockPackage!MCTestCase removeSelector: #mockOverrideMethodCategory!MCTestCase removeSelector: #mockMethod:class:source:meta:!MCTestCase removeSelector: #mockMessageString!MCTestCase removeSelector: #mockInstanceA!MCTestCase removeSelector: #mockExtensionMethodCategory!MCTestCase removeSelector: #mockEmptyPackage!MCTestCase removeSelector: #mockDependencies!MCTestCase removeSelector: #mockClassB!MCTestCase removeSelector: #mockClassA!MCTestCase removeSelector: #mockClass:super:!MCTestCase removeSelector: #mockCategoryName!MCTestCase removeSelector: #compileClass:source:category:!MCTestCase removeSelector: #commentStampForClass:!MCTestCase removeSelector: #commentForClass:!MCTestCase removeSelector: #change:toReturn:!MCTestCase removeSelector: #assertVersionInfo:matches:!MCTestCase removeSelector: #assertVersion:matches:!MCTestCase removeSelector: #assertSnapshot:matches:!MCTestCase removeSelector: #assertPackage:matches:!MCTestCase class removeSelector: #resources!MCTestCase class removeSelector: #isUnitTest!MCTestCase class removeSelector: #isAbstract!MCSubDirectoryRepositoryTest removeSelector: #testIssue7368!Smalltalk globals removeClassNamed: #AnObsoleteMCSubDirectoryRepositoryTest!MCStWriterTest removeSelector: #testOrganizationDefinition!MCStWriterTest removeSelector: #testMethodDefinitionWithBangs!MCStWriterTest removeSelector: #testMethodDefinition!MCStWriterTest removeSelector: #testInitializerDefinition!MCStWriterTest removeSelector: #testClassMethodDefinition!MCStWriterTest removeSelector: #testClassDefinitionB!MCStWriterTest removeSelector: #testClassDefinitionA!MCStWriterTest removeSelector: #setUp!MCStWriterTest removeSelector: #methodWithBangs!MCStWriterTest removeSelector: #expectedOrganizationDefinition!MCStWriterTest removeSelector: #expectedMethodDefinitionWithBangs!MCStWriterTest removeSelector: #expectedMethodDefinition!MCStWriterTest removeSelector: #expectedInitializerASubclass!MCStWriterTest removeSelector: #expectedInitializerA!MCStWriterTest removeSelector: #expectedClassMethodDefinition!MCStWriterTest removeSelector: #expectedClassDefinitionB!MCStWriterTest removeSelector: #expectedClassDefinitionA!MCStWriterTest removeSelector: #assertMethodChunkIsWellFormed:!MCStWriterTest removeSelector: #assertContentsOf:match:!MCStWriterTest removeSelector: #assertChunkIsWellFormed:!MCStWriterTest removeSelector: #assertAllChunksAreWellFormed!Smalltalk globals removeClassNamed: #AnObsoleteMCStWriterTest!MCStReaderTest removeSelector: #testMethodWithStyle!MCStReaderTest removeSelector: #testCommentWithoutStyle!MCStReaderTest removeSelector: #testCommentWithStyle!MCStReaderTest removeSelector: #methodWithStyle!MCStReaderTest removeSelector: #commentWithoutStyle!MCStReaderTest removeSelector: #commentWithStyle!Smalltalk globals removeClassNamed: #AnObsoleteMCStReaderTest!MCSnapshotTest removeSelector: #testInstanceReuse!MCSnapshotTest removeSelector: #testCreation!MCSnapshotTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteMCSnapshotTest!MCSnapshotBrowserTest removeSelector: #textMorph!MCSnapshotBrowserTest removeSelector: #testThreeButtons!MCSnapshotBrowserTest removeSelector: #testTextPane!MCSnapshotBrowserTest removeSelector: #testProtocolSelected!MCSnapshotBrowserTest removeSelector: #testProtocolIsCleared!MCSnapshotBrowserTest removeSelector: #testNoSelection!MCSnapshotBrowserTest removeSelector: #testMethodSelected!MCSnapshotBrowserTest removeSelector: #testMethodIsCleared!MCSnapshotBrowserTest removeSelector: #testFourColumns!MCSnapshotBrowserTest removeSelector: #testComment!MCSnapshotBrowserTest removeSelector: #testClassSideClassSelected!MCSnapshotBrowserTest removeSelector: #testClassSelected!MCSnapshotBrowserTest removeSelector: #testCategorySelected!MCSnapshotBrowserTest removeSelector: #testButtonMutex!MCSnapshotBrowserTest removeSelector: #setUp!MCSnapshotBrowserTest removeSelector: #selectMockClassA!MCSnapshotBrowserTest removeSelector: #protocolsForClass:!MCSnapshotBrowserTest removeSelector: #morphsOfClass:!MCSnapshotBrowserTest removeSelector: #listMorphs!MCSnapshotBrowserTest removeSelector: #findListContaining:!MCSnapshotBrowserTest removeSelector: #findButtonWithLabel:!MCSnapshotBrowserTest removeSelector: #falsehoodMethodSource!MCSnapshotBrowserTest removeSelector: #denyButtonOn:!MCSnapshotBrowserTest removeSelector: #denyAListIncludesAnyOf:!MCSnapshotBrowserTest removeSelector: #denyAListHasSelection:!MCSnapshotBrowserTest removeSelector: #definedClasses!MCSnapshotBrowserTest removeSelector: #clickOnListItem:!MCSnapshotBrowserTest removeSelector: #clickOnButton:!MCSnapshotBrowserTest removeSelector: #classAclassDefinitionString!MCSnapshotBrowserTest removeSelector: #classAProtocols!MCSnapshotBrowserTest removeSelector: #classADefinitionString!MCSnapshotBrowserTest removeSelector: #classAComment!MCSnapshotBrowserTest removeSelector: #classAClassProtocols!MCSnapshotBrowserTest removeSelector: #classABooleanMethods!MCSnapshotBrowserTest removeSelector: #buttonMorphs!MCSnapshotBrowserTest removeSelector: #assertTextIs:!MCSnapshotBrowserTest removeSelector: #assertButtonOn:!MCSnapshotBrowserTest removeSelector: #assertButtonExists:!MCSnapshotBrowserTest removeSelector: #assertAListMatches:!MCSnapshotBrowserTest removeSelector: #assertAListIncludes:!MCSnapshotBrowserTest removeSelector: #annotationTextMorph!MCSnapshotBrowserTest removeSelector: #allProtocols!MCSnapshotBrowserTest removeSelector: #allMethods!MCSnapshotBrowserTest removeSelector: #allCategories!Smalltalk globals removeClassNamed: #AnObsoleteMCSnapshotBrowserTest!MCSerializationTest removeSelector: #testStSerialization!MCSerializationTest removeSelector: #testMczSerialization!MCSerializationTest removeSelector: #testMcdSerialization!MCSerializationTest removeSelector: #mockDiffyVersion!MCSerializationTest removeSelector: #assertVersionsMatchWith:!MCSerializationTest removeSelector: #assertVersionInfosMatchWith:!MCSerializationTest removeSelector: #assertSnapshotsMatchWith:!MCSerializationTest removeSelector: #assertExtensionProvidedBy:!MCSerializationTest removeSelector: #assertDependenciesMatchWith:!Smalltalk globals removeClassNamed: #AnObsoleteMCSerializationTest!MCScannerTest removeSelector: #test6!MCScannerTest removeSelector: #test5!MCScannerTest removeSelector: #test4!MCScannerTest removeSelector: #test3!MCScannerTest removeSelector: #test2!MCScannerTest removeSelector: #test1!MCScannerTest removeSelector: #assertScans:!Smalltalk globals removeClassNamed: #AnObsoleteMCScannerTest!MCRepositoryTest removeSelector: #versionWithSnapshot:name:!MCRepositoryTest removeSelector: #testStoreAndLoad!MCRepositoryTest removeSelector: #testLoadMissingNode!MCRepositoryTest removeSelector: #testIncludesName!MCRepositoryTest removeSelector: #testCannotCreateDictionaryRepositoryFromUrl!MCRepositoryTest removeSelector: #testCanCreateHttpsRepositoryFromUrl!MCRepositoryTest removeSelector: #testCanCreateHttpRepositoryFromUrl!MCRepositoryTest removeSelector: #testCanCreateGitHubRepositoryFromUrl!MCRepositoryTest removeSelector: #testCanCreateFtpRepositoryFromUrl!MCRepositoryTest removeSelector: #testCanCreateFiletreeRepositoryFromUrlWithRelativePath!MCRepositoryTest removeSelector: #testCanCreateFiletreeRepositoryFromUrl!MCRepositoryTest removeSelector: #testCanCreateFileRepositoryFromUrl!MCRepositoryTest removeSelector: #testAddAndLoad!MCRepositoryTest removeSelector: #snapshotAt:!MCRepositoryTest removeSelector: #snapshot2!MCRepositoryTest removeSelector: #snapshot1!MCRepositoryTest removeSelector: #saveSnapshot:named:!MCRepositoryTest removeSelector: #saveSnapshot2!MCRepositoryTest removeSelector: #saveSnapshot1!MCRepositoryTest removeSelector: #homeDirectoryUrl!MCRepositoryTest removeSelector: #assertVersionInfos:!MCRepositoryTest removeSelector: #assertMissing:!MCRepositoryTest removeSelector: #addVersionWithSnapshot:name:!MCRepositoryTest removeSelector: #addVersion:!MCRepositoryTest class removeSelector: #isAbstract!MCDirectoryRepositoryTest removeSelector: #tearDown!MCDirectoryRepositoryTest removeSelector: #setUp!MCDirectoryRepositoryTest removeSelector: #directory!MCDirectoryRepositoryTest removeSelector: #addVersion:!Smalltalk globals removeClassNamed: #AnObsoleteMCDirectoryRepositoryTest!MCDictionaryRepositoryTest removeSelector: #setUp!MCDictionaryRepositoryTest removeSelector: #dictionary!MCDictionaryRepositoryTest removeSelector: #deleteNode:!MCDictionaryRepositoryTest removeSelector: #addVersion:!Smalltalk globals removeClassNamed: #AnObsoleteMCDictionaryRepositoryTest!Smalltalk globals removeClassNamed: #AnObsoleteMCRepositoryTest!MCPatchTest removeSelector: #testPatchContents!MCPatchTest removeSelector: #tearDown!MCPatchTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteMCPatchTest!MCPackageTest removeSelector: #testUnloadWithAdditionalTracking!MCPackageTest removeSelector: #testUnload!MCPackageTest removeSelector: #tearDown!MCPackageTest removeSelector: #aMethodRemoved:!Smalltalk globals removeClassNamed: #AnObsoleteMCPackageTest!MCPackageManagerTest removeSelector: #testManagersForCategoryDo!MCPackageManagerTest removeSelector: #testClassRemoved!MCPackageManagerTest removeSelector: #testClassAdded!MCPackageManagerTest removeSelector: #tearDown!MCPackageManagerTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteMCPackageManagerTest!MCOrganizationTest removeSelector: #testReorderingWithRemovals!MCOrganizationTest removeSelector: #testReorderingWithNoCategoriesInVersion!MCOrganizationTest removeSelector: #testReordering!MCOrganizationTest removeSelector: #testLoadAndUnload!Smalltalk globals removeClassNamed: #AnObsoleteMCOrganizationTest!MCMethodDefinitionTest removeSelector: #testRevertOverrideMethod!MCMethodDefinitionTest removeSelector: #testRevertOldMethod!MCMethodDefinitionTest removeSelector: #testPartiallyRevertOverrideMethod!MCMethodDefinitionTest removeSelector: #testLoadAndUnload!MCMethodDefinitionTest removeSelector: #testComparison!MCMethodDefinitionTest removeSelector: #testCannotLoad!MCMethodDefinitionTest removeSelector: #tearDown!MCMethodDefinitionTest removeSelector: #setUp!MCMethodDefinitionTest removeSelector: #ownPackage!MCMethodDefinitionTest removeSelector: #override!Smalltalk globals removeClassNamed: #AnObsoleteMCMethodDefinitionTest!MCMergingTest removeSelector: #testSubtractiveConflictlessMerge!MCMergingTest removeSelector: #testSimultaneousRemove!MCMergingTest removeSelector: #testSimultaneousModification!MCMergingTest removeSelector: #testMultipleConflicts!MCMergingTest removeSelector: #testMultiPackageMerge3!MCMergingTest removeSelector: #testMultiPackageMerge2!MCMergingTest removeSelector: #testMultiPackageMerge!MCMergingTest removeSelector: #testLocalRemoveRemoteModify!MCMergingTest removeSelector: #testLocalModifyRemoteRemove!MCMergingTest removeSelector: #testIdenticalModification!MCMergingTest removeSelector: #testComplexConflictlessMerge!MCMergingTest removeSelector: #testAdditiveConflictlessMerge!MCMergingTest removeSelector: #snapshotWithElements:!MCMergingTest removeSelector: #handleConflict:!MCMergingTest removeSelector: #assertMerge:with:base:gives:conflicts:!MCMergingTest removeSelector: #assert:hasElements:!Smalltalk globals removeClassNamed: #AnObsoleteMCMergingTest!MCMczInstallerTest removeSelector: #testInstallFromStream!MCMczInstallerTest removeSelector: #testInstallFromFile!MCMczInstallerTest removeSelector: #tearDown!MCMczInstallerTest removeSelector: #setUp!MCMczInstallerTest removeSelector: #fileStream!MCMczInstallerTest removeSelector: #fileName!MCMczInstallerTest removeSelector: #deleteFile!MCMczInstallerTest removeSelector: #assertVersionInfoPresent!MCMczInstallerTest removeSelector: #assertNoChange!MCMczInstallerTest removeSelector: #assertDict:matchesInfo:!MCMczInstallerTest class removeSelector: #suite!MCMczInstallerTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteMCMczInstallerTest!MCFileInTest removeSelector: #testStWriter!MCFileInTest removeSelector: #tearDown!MCFileInTest removeSelector: #setUp!MCFileInTest removeSelector: #assertSuccessfulLoadWith:!MCFileInTest removeSelector: #assertNoChange!MCFileInTest removeSelector: #assertInitializersOrder!MCFileInTest removeSelector: #assertInitializersCalled!MCFileInTest removeSelector: #assertFileOutFrom:canBeFiledInWith:!MCFileInTest removeSelector: #alterInitialState!Smalltalk globals removeClassNamed: #AnObsoleteMCFileInTest!MCClassDefinitionTest removeSelector: #testValidTraitComposition4!MCClassDefinitionTest removeSelector: #testValidTraitComposition3!MCClassDefinitionTest removeSelector: #testValidTraitComposition2!MCClassDefinitionTest removeSelector: #testValidTraitComposition!MCClassDefinitionTest removeSelector: #testLoadAndUnload!MCClassDefinitionTest removeSelector: #testKindOfSubclass!MCClassDefinitionTest removeSelector: #testEqualsSensitivity!MCClassDefinitionTest removeSelector: #testEquals!MCClassDefinitionTest removeSelector: #testDefinitionString!MCClassDefinitionTest removeSelector: #testCreation!MCClassDefinitionTest removeSelector: #testComparison!MCClassDefinitionTest removeSelector: #testCannotLoad!MCClassDefinitionTest removeSelector: #tearDown!MCClassDefinitionTest removeSelector: #setUp!MCClassDefinitionTest removeSelector: #creationMessage!MCClassDefinitionTest removeSelector: #classAComment!MCClassDefinitionTest class removeSelector: #restoreClassAComment!MCClassDefinitionTest class removeSelector: #classACommentStamp!MCClassDefinitionTest class removeSelector: #classAComment!Smalltalk globals removeClassNamed: #AnObsoleteMCClassDefinitionTest!MCChangeNotificationTest removeSelector: #testForeignMethodModified!MCChangeNotificationTest removeSelector: #testExtMethodModified!MCChangeNotificationTest removeSelector: #testCoreMethodModified!MCChangeNotificationTest removeSelector: #setUp!MCChangeNotificationTest removeSelector: #modifiedEventFor:ofClass:!MCChangeNotificationTest removeSelector: #foreignMethod!Smalltalk globals removeClassNamed: #AnObsoleteMCChangeNotificationTest!MCAnnouncementTest removeSelector: #testMCVersionSaved!Smalltalk globals removeClassNamed: #AnObsoleteMCAnnouncementTest!MCAncestryTest removeSelector: #versionForName:in:!MCAncestryTest removeSelector: #twoPersonTree!MCAncestryTest removeSelector: #tree!MCAncestryTest removeSelector: #testPathToMissingAncestor!MCAncestryTest removeSelector: #testLinearPath!MCAncestryTest removeSelector: #testDescendants!MCAncestryTest removeSelector: #testCommonAncestors!MCAncestryTest removeSelector: #assertPathTo:is:!MCAncestryTest removeSelector: #assertNamesOf:are:!MCAncestryTest removeSelector: #assertCommonAncestorOf:and:is:in:!MCAncestryTest removeSelector: #assertCommonAncestorOf:and:in:in:!Smalltalk globals removeClassNamed: #AnObsoleteMCAncestryTest!Smalltalk globals removeClassNamed: #AnObsoleteMCTestCase!MCSortingTest removeSelector: #testSortOrder!MCSortingTest removeSelector: #testConsistentSorting!MCSortingTest removeSelector: #sortKeyFor:!MCSortingTest removeSelector: #sortDefinitions:!MCSortingTest removeSelector: #methodNamed:class:meta:!MCSortingTest removeSelector: #classNamed:!MCSortingTest class removeSelector: #isUnitTest!Smalltalk globals removeClassNamed: #AnObsoleteMCSortingTest!MCRepositoryAuthorizationTest removeSelector: #testStoredCredentialsUsesMostSpecific!MCRepositoryAuthorizationTest removeSelector: #testStoredCredentials!MCRepositoryAuthorizationTest removeSelector: #testOverrideStoredCredentials!MCRepositoryAuthorizationTest removeSelector: #testNoCredentials!MCRepositoryAuthorizationTest removeSelector: #testEmptyCredentials!MCRepositoryAuthorizationTest removeSelector: #exampleServerUrl!MCRepositoryAuthorizationTest removeSelector: #assert:on:hasUser:withPassword:!Smalltalk globals removeClassNamed: #AnObsoleteMCRepositoryAuthorizationTest!MCDependencySorterTest removeSelector: #testUnusedAlternateProvider!MCDependencySorterTest removeSelector: #testSimpleUnresolved!MCDependencySorterTest removeSelector: #testSimpleOrdering!MCDependencySorterTest removeSelector: #testMultiRequirementOrdering!MCDependencySorterTest removeSelector: #testExtraProvisions!MCDependencySorterTest removeSelector: #testCycle!MCDependencySorterTest removeSelector: #testCascadingUnresolved!MCDependencySorterTest removeSelector: #itemWithSpec:!MCDependencySorterTest removeSelector: #assertItems:orderAs:withRequired:toLoad:extraProvisions:!MCDependencySorterTest removeSelector: #assertItems:orderAs:withRequired:toLoad:!MCDependencySorterTest class removeSelector: #isUnitTest!Smalltalk globals removeClassNamed: #AnObsoleteMCDependencySorterTest!MCDataStreamTest removeSelector: #baseStreamType!Smalltalk globals removeClassNamed: #AnObsoleteMCDataStreamTest!ZdcSecureSocketStreamTests removeSelector: #testPlain!ZdcSecureSocketStreamTests removeSelector: #testIsNativeSSLPluginPresent!ZdcSecureSocketStreamTests removeSelector: #isNativeSSLPluginPresent!Smalltalk globals removeClassNamed: #AnObsoleteZdcSecureSocketStreamTests!ZdcPluginSSLSessionTests removeSelector: #testServerName!ZdcPluginSSLSessionTests removeSelector: #testCertificateName!ZdcPluginSSLSessionTests removeSelector: #tearDown!ZdcPluginSSLSessionTests removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteZdcPluginSSLSessionTests!ZdcIOBufferTests removeSelector: #testWriting!ZdcIOBufferTests removeSelector: #testString!ZdcIOBufferTests removeSelector: #testReading!ZdcIOBufferTests removeSelector: #testReadIntoStartingAtCount!ZdcIOBufferTests removeSelector: #testNextPutAllStartingAt!ZdcIOBufferTests removeSelector: #testCompactDoNothing!ZdcIOBufferTests removeSelector: #testCompactAtEnd!ZdcIOBufferTests removeSelector: #testCompactAtBeginning!ZdcIOBufferTests removeSelector: #testCompact!ZdcIOBufferTests removeSelector: #testBivalentWriting!ZdcIOBufferTests removeSelector: #testBivalentReading!ZdcIOBufferTests removeSelector: #testAdvanceWritePointer!ZdcIOBufferTests removeSelector: #testAdvanceReadPointer!Smalltalk globals removeClassNamed: #AnObsoleteZdcIOBufferTests!ZdcByteArrayManagerTests removeSelector: #testSimple!ZdcByteArrayManagerTests removeSelector: #testClearing!Smalltalk globals removeClassNamed: #AnObsoleteZdcByteArrayManagerTests!ZdcSocketStreamTests removeSelector: #socketStreamClass!ZdcSocketStreamTests class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteZdcSocketStreamTests!ZdcSimpleSocketStreamTests removeSelector: #socketStreamClass!ZdcSimpleSocketStreamTests class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteZdcSimpleSocketStreamTests!ZdcReferenceSocketStreamTests removeSelector: #socketStreamOn:!ZdcReferenceSocketStreamTests removeSelector: #socketStreamClass!ZdcReferenceSocketStreamTests removeSelector: #openConnectionToHostNamed:port:!ZdcReferenceSocketStreamTests removeSelector: #openConnectionToHost:port:!ZdcReferenceSocketStreamTests class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteZdcReferenceSocketStreamTests!ZdcOptimizedSocketStreamTests removeSelector: #socketStreamClass!ZdcOptimizedSocketStreamTests class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteZdcOptimizedSocketStreamTests!ZdcAbstractSocketStreamTests removeSelector: #testReverseEchoUpToEnd!ZdcAbstractSocketStreamTests removeSelector: #testReverseEcho10kSearch!ZdcAbstractSocketStreamTests removeSelector: #testReverseEcho10kFixed!ZdcAbstractSocketStreamTests removeSelector: #testReverseEcho!ZdcAbstractSocketStreamTests removeSelector: #testPlainClientWrite10kInPieces!ZdcAbstractSocketStreamTests removeSelector: #testPlainClientWrite10k!ZdcAbstractSocketStreamTests removeSelector: #testPlainClientWrite!ZdcAbstractSocketStreamTests removeSelector: #testPlainClientSkip10k!ZdcAbstractSocketStreamTests removeSelector: #testPlainClientSkip!ZdcAbstractSocketStreamTests removeSelector: #testPlainClientRead10kInPieces2!ZdcAbstractSocketStreamTests removeSelector: #testPlainClientRead10kInPieces1!ZdcAbstractSocketStreamTests removeSelector: #testPlainClientRead10k!ZdcAbstractSocketStreamTests removeSelector: #testPlainClientRead!ZdcAbstractSocketStreamTests removeSelector: #testAddOneEcho!ZdcAbstractSocketStreamTests removeSelector: #socketStreamTimeout!ZdcAbstractSocketStreamTests removeSelector: #socketStreamOn:!ZdcAbstractSocketStreamTests removeSelector: #socketStreamClass!ZdcAbstractSocketStreamTests removeSelector: #socketBufferSize!ZdcAbstractSocketStreamTests removeSelector: #setReferenceSocketStreamOptions:!ZdcAbstractSocketStreamTests removeSelector: #serverSocketOn:!ZdcAbstractSocketStreamTests removeSelector: #serverPriority!ZdcAbstractSocketStreamTests removeSelector: #runServer:!ZdcAbstractSocketStreamTests removeSelector: #runClient:!ZdcAbstractSocketStreamTests removeSelector: #referenceSocketStreamOn:!ZdcAbstractSocketStreamTests removeSelector: #port!ZdcAbstractSocketStreamTests removeSelector: #openConnectionToHostNamed:port:!ZdcAbstractSocketStreamTests removeSelector: #openConnectionToHost:port:!ZdcAbstractSocketStreamTests removeSelector: #listenBacklogSize!ZdcAbstractSocketStreamTests removeSelector: #bytes:!ZdcAbstractSocketStreamTests class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteZdcAbstractSocketStreamTests!TextKernTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTextKernTest!TextFontReferenceTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTextFontReferenceTest!TextFontChangeTest removeSelector: #testHash!TextFontChangeTest removeSelector: #testEquality!TextFontChangeTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTextFontChangeTest!TextEmphasisTest removeSelector: #testRemove!TextEmphasisTest removeSelector: #testPrependText!TextEmphasisTest removeSelector: #testPrependString!TextEmphasisTest removeSelector: #testFromCode!TextEmphasisTest removeSelector: #testAppendText!TextEmphasisTest removeSelector: #testAppendString!TextEmphasisTest removeSelector: #testAdd!TextEmphasisTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTextEmphasisTest!TextAlignmentTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteTextAlignmentTest!TextLineEndingsTest removeSelector: #testStringConversionNoLF!TextLineEndingsTest removeSelector: #testStringConversionJustLF!TextLineEndingsTest removeSelector: #testStringConversionCrLF!TextLineEndingsTest removeSelector: #testSimpleTextConversionJustLF!TextLineEndingsTest removeSelector: #testSimpleTextConversionJustCR!TextLineEndingsTest removeSelector: #testSimpleTextConversionCrLF!TextLineEndingsTest removeSelector: #testDecoratedTextConversionNoLF!TextLineEndingsTest removeSelector: #testDecoratedTextConversionJustLF!TextLineEndingsTest removeSelector: #testDecoratedTextConversionCrLF!Smalltalk globals removeClassNamed: #AnObsoleteTextLineEndingsTest!TextAndTextStreamTest removeSelector: #testTextStreamAdjacentRunsWithIdentitcalAttributes!TextAndTextStreamTest removeSelector: #testTextReplacementAtStartPos3!TextAndTextStreamTest removeSelector: #testTextReplacementAtStartPos2!TextAndTextStreamTest removeSelector: #testTextReplacementAtStartPos1!TextAndTextStreamTest removeSelector: #testTextReplacement3!TextAndTextStreamTest removeSelector: #testTextReplacement2!TextAndTextStreamTest removeSelector: #testTextReplacement1!TextAndTextStreamTest removeSelector: #testTextEmphasisRangeDetection4!TextAndTextStreamTest removeSelector: #testTextEmphasisRangeDetection3!TextAndTextStreamTest removeSelector: #testTextEmphasisRangeDetection2!TextAndTextStreamTest removeSelector: #testTextEmphasisRangeDetection1!TextAndTextStreamTest removeSelector: #testSettingRunsOfWrongSize!TextAndTextStreamTest removeSelector: #testRunArrayRunsSize!TextAndTextStreamTest removeSelector: #testRunArrayRunsAreNotMerged!TextAndTextStreamTest removeSelector: #testRunArrayReversal!TextAndTextStreamTest removeSelector: #testRunArrayInvariant!TextAndTextStreamTest removeSelector: #testRunArrayAdjacentMerge!TextAndTextStreamTest removeSelector: #testRemovingAttributesPastTheEnd!TextAndTextStreamTest removeSelector: #testRemovingAttributesBeforeBeg!TextAndTextStreamTest removeSelector: #testIncludesSubstringCaseSensitive!TextAndTextStreamTest removeSelector: #testIncludesSubstring!TextAndTextStreamTest removeSelector: #testExampleText2!TextAndTextStreamTest removeSelector: #testExampleText1!TextAndTextStreamTest removeSelector: #testAddingAttributesPastTheEnd!TextAndTextStreamTest removeSelector: #testAddingAttributesBeforeBeg!TextAndTextStreamTest removeSelector: #testAddStringToTextStream!TextAndTextStreamTest removeSelector: #replacementExample3!TextAndTextStreamTest removeSelector: #replacementAtStartExample3!TextAndTextStreamTest removeSelector: #example2!TextAndTextStreamTest removeSelector: #example1:!Smalltalk globals removeClassNamed: #AnObsoleteTextAndTextStreamTest!RunArrayTest removeSelector: #testWithStartStopAndValueDo!RunArrayTest removeSelector: #testScanFromANSICompatibility!RunArrayTest removeSelector: #testRunsValues!RunArrayTest removeSelector: #testRunLengthAt!RunArrayTest removeSelector: #testNewWithSize!RunArrayTest removeSelector: #testNewWithAll!RunArrayTest removeSelector: #testNewFrom!RunArrayTest removeSelector: #testNew!RunArrayTest removeSelector: #testLast!RunArrayTest removeSelector: #testIsSelfEvaluating!RunArrayTest removeSelector: #testFirst!RunArrayTest removeSelector: #testAtPut2!RunArrayTest removeSelector: #testAtPut!RunArrayTest removeSelector: #testAt!RunArrayTest removeSelector: #testANewRunArrayIsEmpty!Smalltalk globals removeClassNamed: #AnObsoleteRunArrayTest!Smalltalk globals removeClassNamed: #AnObsoleteMultiFontTest!FontTest removeSelector: #testParagraph!FontTest removeSelector: #testDisplay!Smalltalk globals removeClassNamed: #AnObsoleteFontTest!SettingTreeBuilder removeSelector: #mocksystemsettings!MockSettings class removeSelector: #twoStoredSettingsSTONString!MockSettings class removeSelector: #storedSettings!MockSettings class removeSelector: #settingTree!MockSettings class removeSelector: #rangeSettingNodeOn:!MockSettings class removeSelector: #rangeSettingNode!MockSettings class removeSelector: #rangeSetting:!MockSettings class removeSelector: #rangeSetting!MockSettings class removeSelector: #oneStoredSettingSTONString!MockSettings class removeSelector: #notExistingClassStoredSettingSTONString!MockSettings class removeSelector: #nodeSettings!MockSettings class removeSelector: #monticelloSettingsOn:!MockSettings class removeSelector: #defaultDirectoryName:!MockSettings class removeSelector: #defaultDirectoryName!MockSettings class removeSelector: #cleanUp!MockSettings class removeSelector: #changedClassStoredSettingVariable!MockSettings class removeSelector: #cacheDirectorySettingNode!MockSettings class removeSelector: #cacheDirectory:!MockSettings class removeSelector: #cacheDirectory!MockSettings class removeSelector: #booleanSettingNodeOn:!MockSettings class removeSelector: #booleanSettingNode!MockSettings class removeSelector: #booleanSetting:!MockSettings class removeSelector: #booleanSetting!Smalltalk globals removeClassNamed: #AnObsoleteMockSettings!SystemSettingsPersistenceTest removeSelector: #testWriteStream!SystemSettingsPersistenceTest removeSelector: #testWriteAndReadBoolean!SystemSettingsPersistenceTest removeSelector: #testUpdateAllSettings!SystemSettingsPersistenceTest removeSelector: #testUniqueNames!SystemSettingsPersistenceTest removeSelector: #testUniqueIdentifiers!SystemSettingsPersistenceTest removeSelector: #testStoredValueForSettingNoStoredValue!SystemSettingsPersistenceTest removeSelector: #testStoredValueForSetting!SystemSettingsPersistenceTest removeSelector: #testStoreTwoSettingNodeSeparately!SystemSettingsPersistenceTest removeSelector: #testStoreSettingNodes!SystemSettingsPersistenceTest removeSelector: #testStoreSettingNodeTwice!SystemSettingsPersistenceTest removeSelector: #testStoreSettingNode!SystemSettingsPersistenceTest removeSelector: #testStoreIdentifier!SystemSettingsPersistenceTest removeSelector: #testStoreBooleanToSton!SystemSettingsPersistenceTest removeSelector: #testStoreAndLoadAllSystemSettings!SystemSettingsPersistenceTest removeSelector: #testSettingNodeIdentifierForRootNode!SystemSettingsPersistenceTest removeSelector: #testSettingNodeIdentifierForChildNode!SystemSettingsPersistenceTest removeSelector: #testRealValues!SystemSettingsPersistenceTest removeSelector: #testRealValueModification!SystemSettingsPersistenceTest removeSelector: #testAllStoredSettings!SystemSettingsPersistenceTest removeSelector: #testAccessibleRealValues!SystemSettingsPersistenceTest removeSelector: #testAccessRealValues!SystemSettingsPersistenceTest removeSelector: #tearDown!SystemSettingsPersistenceTest removeSelector: #systemSettingNodeList!SystemSettingsPersistenceTest removeSelector: #setUp!SystemSettingsPersistenceTest removeSelector: #rangeSettingNode!SystemSettingsPersistenceTest removeSelector: #booleanSettingNode!Smalltalk globals removeClassNamed: #AnObsoleteSystemSettingsPersistenceTest!StoredSettingsMergerTest removeSelector: #testStoredSettings!StoredSettingsMergerTest removeSelector: #testEmpty!StoredSettingsMergerTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteStoredSettingsMergerTest!SettingsStonWriterTest removeSelector: #testStoreTwoObjects!SettingsStonWriterTest removeSelector: #testStore!SettingsStonWriterTest removeSelector: #testEmptyStream!SettingsStonWriterTest removeSelector: #testBasic!SettingsStonWriterTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSettingsStonWriterTest!SettingsStonReaderTest removeSelector: #testStoredSettingsIsNil!SettingsStonReaderTest removeSelector: #testNonExistingStoredSettingVariable!SettingsStonReaderTest removeSelector: #testLoadTwoObjects!SettingsStonReaderTest removeSelector: #testLoadNotExistingClassNameForRealValue!SettingsStonReaderTest removeSelector: #testLoad!SettingsStonReaderTest removeSelector: #testEmptyStream!SettingsStonReaderTest removeSelector: #testBasic!SettingsStonReaderTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSettingsStonReaderTest!SettingBrowserTest removeSelector: #testOpeningOnPackage!SettingBrowserTest removeSelector: #testOpening!Smalltalk globals removeClassNamed: #AnObsoleteSettingBrowserTest!AbstractStoredSettingTest removeSelector: #testPrintOn2!AbstractStoredSettingTest removeSelector: #testPrintOn!AbstractStoredSettingTest removeSelector: #testHash!AbstractStoredSettingTest removeSelector: #testEqual!Smalltalk globals removeClassNamed: #AnObsoleteAbstractStoredSettingTest!SocketStreamTest removeSelector: #testUpToWithByteArray!SocketStreamTest removeSelector: #testUpToTimeout!SocketStreamTest removeSelector: #testUpToSmallInteger!SocketStreamTest removeSelector: #testUpToMax!SocketStreamTest removeSelector: #testUpToEndCloseNonSignaling!SocketStreamTest removeSelector: #testUpToEndClose!SocketStreamTest removeSelector: #testUpToAllTimeout!SocketStreamTest removeSelector: #testUpToAllLimit!SocketStreamTest removeSelector: #testUpToAllAfterCloseSignaling!SocketStreamTest removeSelector: #testUpToAllAfterCloseNonSignaling!SocketStreamTest removeSelector: #testUpToAll!SocketStreamTest removeSelector: #testUpToAfterCloseSignaling!SocketStreamTest removeSelector: #testUpToAfterCloseNonSignaling!SocketStreamTest removeSelector: #testUpTo!SocketStreamTest removeSelector: #testNextIntoCloseNonSignaling!SocketStreamTest removeSelector: #testNextIntoClose!SocketStreamTest removeSelector: #tearDown!SocketStreamTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSocketStreamTest!MockSocketStream removeSelector: #upToAll:!MockSocketStream removeSelector: #sendCommand:!MockSocketStream removeSelector: #resetOutStream!MockSocketStream removeSelector: #resetInStream!MockSocketStream removeSelector: #outStream!MockSocketStream removeSelector: #nextLineCrLf!MockSocketStream removeSelector: #nextLine!MockSocketStream removeSelector: #initialize!MockSocketStream removeSelector: #inStream!MockSocketStream removeSelector: #atEnd:!MockSocketStream removeSelector: #atEnd!MockSocketStream class removeSelector: #on:!Smalltalk globals removeClassNamed: #AnObsoleteMockSocketStream!UUIDGeneratorTests removeSelector: #timeFromUUID:!UUIDGeneratorTests removeSelector: #testUniqueness!UUIDGeneratorTests removeSelector: #testTwoSameGenerator!UUIDGeneratorTests removeSelector: #testTwoDifferentGenerator!UUIDGeneratorTests removeSelector: #testSpeed!UUIDGeneratorTests removeSelector: #testOne!UUIDGeneratorTests removeSelector: #testDefault!UUIDGeneratorTests removeSelector: #testCounterRollover!UUIDGeneratorTests removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteUUIDGeneratorTests!UDPSocketEchoTest removeSelector: #withUDPEchoServer:!UDPSocketEchoTest removeSelector: #testEcho!UDPSocketEchoTest removeSelector: #runServer!UDPSocketEchoTest removeSelector: #receiveUDPDataFrom:!UDPSocketEchoTest removeSelector: #port!UDPSocketEchoTest removeSelector: #localhost!UDPSocketEchoTest removeSelector: #clientSend:!Smalltalk globals removeClassNamed: #AnObsoleteUDPSocketEchoTest!TCPSocketEchoTest removeSelector: #withTCPEchoServer:!TCPSocketEchoTest removeSelector: #testEcho!TCPSocketEchoTest removeSelector: #runServer!TCPSocketEchoTest removeSelector: #port!TCPSocketEchoTest removeSelector: #localhost!TCPSocketEchoTest removeSelector: #clientSend:!Smalltalk globals removeClassNamed: #AnObsoleteTCPSocketEchoTest!SocketTest removeSelector: #testUDPFaultySend!SocketTest removeSelector: #testUDPBroadcastError!SocketTest removeSelector: #testServerAccept!SocketTest removeSelector: #testRemotePort!SocketTest removeSelector: #testRemoteAddress!SocketTest removeSelector: #testLocalPort!SocketTest removeSelector: #testLocalAddress!SocketTest removeSelector: #testDataSending!SocketTest removeSelector: #testDataReceive!SocketTest removeSelector: #testClientConnect!SocketTest removeSelector: #tearDown!SocketTest removeSelector: #setUp!SocketTest removeSelector: #listenerPort!SocketTest removeSelector: #listenerAddress!SocketTest removeSelector: #faultyUDPSocket!Smalltalk globals removeClassNamed: #AnObsoleteSocketTest!SocketAddressTests removeSelector: #testZero!SocketAddressTests removeSelector: #testIsPrivateAddress!SocketAddressTests removeSelector: #testDottedRepresentationErrors!SocketAddressTests removeSelector: #testDottedRepresentation!SocketAddressTests removeSelector: #testByteArrayConversionErrors!Smalltalk globals removeClassNamed: #AnObsoleteSocketAddressTests!SMTPClientTest removeSelector: #testMailFrom!SMTPClientTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSMTPClientTest!QuotedPrintableMimeConverterTest removeSelector: #testLongLine!QuotedPrintableMimeConverterTest removeSelector: #testEncodeSoftLinebreak!QuotedPrintableMimeConverterTest removeSelector: #testEncodeSimpleStrings!QuotedPrintableMimeConverterTest removeSelector: #testEncodeLongLine!QuotedPrintableMimeConverterTest removeSelector: #testEncodeLF!QuotedPrintableMimeConverterTest removeSelector: #testEncodeEncodedStrings!QuotedPrintableMimeConverterTest removeSelector: #testEncodeCRLF!QuotedPrintableMimeConverterTest removeSelector: #testEncodeCR!QuotedPrintableMimeConverterTest removeSelector: #testDecodeSoftLinebreakLF!QuotedPrintableMimeConverterTest removeSelector: #testDecodeSoftLinebreakCRLF!QuotedPrintableMimeConverterTest removeSelector: #testDecodeSoftLinebreakCR!QuotedPrintableMimeConverterTest removeSelector: #testDecodeSoftLinebreak!QuotedPrintableMimeConverterTest removeSelector: #testDecodeSimpleStrings!QuotedPrintableMimeConverterTest removeSelector: #testDecodeDecodedStrings!QuotedPrintableMimeConverterTest removeSelector: #testDecodeCustomNewline!QuotedPrintableMimeConverterTest removeSelector: #testDecodeCRLF!QuotedPrintableMimeConverterTest removeSelector: #setUp!QuotedPrintableMimeConverterTest removeSelector: #encode:!QuotedPrintableMimeConverterTest removeSelector: #decode:!Smalltalk globals removeClassNamed: #AnObsoleteQuotedPrintableMimeConverterTest!NetNameResolverTest removeSelector: #testLocalHostName!NetNameResolverTest removeSelector: #testLocalHostAddress!NetNameResolverTest removeSelector: #localHostNameIsLoopBackName!NetNameResolverTest removeSelector: #localHostAddressIsLoopBackAddress!Smalltalk globals removeClassNamed: #AnObsoleteNetNameResolverTest!MailMessageTest removeSelector: #testSimpleCreate!MailMessageTest removeSelector: #testRecipientList!MailMessageTest removeSelector: #testMultiPartMixed!MailMessageTest removeSelector: #testMultiPartAlternative!MailMessageTest removeSelector: #testCreateFromString!Smalltalk globals removeClassNamed: #AnObsoleteMailMessageTest!MailAddressParserTest removeSelector: #testAmpersand!MailAddressParserTest removeSelector: #testAddressesIn!Smalltalk globals removeClassNamed: #AnObsoleteMailAddressParserTest!HTTPEncodingTest removeSelector: #testEncodeForHTTP!Smalltalk globals removeClassNamed: #AnObsoleteHTTPEncodingTest!Base64MimeConverterTest removeSelector: #testOnByteArray!Base64MimeConverterTest removeSelector: #testMimeEncodeDecode!Base64MimeConverterTest removeSelector: #testDecodeMimeHeader!Base64MimeConverterTest removeSelector: #testBase64Encoded!Base64MimeConverterTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteBase64MimeConverterTest!SHA256Test removeSelector: #testWikipediaExampleEmpty!SHA256Test removeSelector: #testWikipediaExample2!SHA256Test removeSelector: #testWikipediaExample1!SHA256Test removeSelector: #testLargeCharacterStream!SHA256Test removeSelector: #testFips180Example3!SHA256Test removeSelector: #testFips180Example2!SHA256Test removeSelector: #testFips180Example1!Smalltalk globals removeClassNamed: #AnObsoleteSHA256Test!SHA1Test removeSelector: #testLargeCharacterStream!SHA1Test removeSelector: #testExample3!SHA1Test removeSelector: #testExample2!SHA1Test removeSelector: #testExample1!SHA1Test removeSelector: #testEmptyInput!Smalltalk globals removeClassNamed: #AnObsoleteSHA1Test!MD5Test removeSelector: #testWikipedia2!MD5Test removeSelector: #testWikipedia1!MD5Test removeSelector: #testLargeCharacterStream!MD5Test removeSelector: #testEmpty!Smalltalk globals removeClassNamed: #AnObsoleteMD5Test!SpecWindowTest removeSelector: #testIsDisplayed!Smalltalk globals removeClassNamed: #AnObsoleteSpecWindowTest!TextPresenterTest removeSelector: #testSelectAll!TextPresenterTest removeSelector: #initializationText!TextPresenterTest removeSelector: #classToTest!TextInputFieldPresenterTest removeSelector: #classToTest!LabelledTextInputTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteLabelledTextInputTest!Smalltalk globals removeClassNamed: #AnObsoleteTextInputFieldPresenterTest!Smalltalk globals removeClassNamed: #AnObsoleteTextPresenterTest!TextFieldExampleTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteTextFieldExampleTest!TabsExampleTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteTabsExampleTest!TabPresenterTest removeSelector: #testSetOwner!TabPresenterTest removeSelector: #testChangeLabel!TabPresenterTest removeSelector: #redMorphTab!TabPresenterTest removeSelector: #initializeTestedInstance!TabPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteTabPresenterTest!TabManagerPresenterTest removeSelector: #testRemoveTabUnsetOwner!TabManagerPresenterTest removeSelector: #testRemoveTabFromMorphic!TabManagerPresenterTest removeSelector: #testRemoveTabFromManager2!TabManagerPresenterTest removeSelector: #testRemoveTabFromManager!TabManagerPresenterTest removeSelector: #testRemoveTab!TabManagerPresenterTest removeSelector: #testInitialSelectedTab!TabManagerPresenterTest removeSelector: #testAddTabUnopened!TabManagerPresenterTest removeSelector: #testAddTabSetOwner!TabManagerPresenterTest removeSelector: #testAddTabOpened!TabManagerPresenterTest removeSelector: #redMorphTab!TabManagerPresenterTest removeSelector: #morphicTabsFor:!TabManagerPresenterTest removeSelector: #initializeTestedInstance!TabManagerPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteTabManagerPresenterTest!SpecTestCase removeSelector: #testOpenWithSpec!SpecTestCase removeSelector: #testExample!SpecTestCase removeSelector: #tearDown!SpecTestCase removeSelector: #setUp!SpecTestCase removeSelector: #openInstance:!SpecTestCase removeSelector: #openInstance!SpecTestCase removeSelector: #initializeTestedInstance!SpecTestCase removeSelector: #classToTest!SpecTestCase class removeSelector: #shouldInheritSelectors!SpecTestCase class removeSelector: #isAbstract!SliderPresenterTest removeSelector: #testReset!SliderPresenterTest removeSelector: #testAbsoluteValue!SliderPresenterTest removeSelector: #initMinMax!SliderPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteSliderPresenterTest!SliderInputTest removeSelector: #classToTest!LabelledSliderInputTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteLabelledSliderInputTest!Smalltalk globals removeClassNamed: #AnObsoleteSliderInputTest!SearchableTreeTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteSearchableTreeTest!SearchableListTest removeSelector: #testFiltering!SearchableListTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteSearchableListTest!ScrollSyncExampleTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteScrollSyncExampleTest!RadioButtonPresenterTest removeSelector: #testToggleState!RadioButtonPresenterTest removeSelector: #testCanDeselectByClick!RadioButtonPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteRadioButtonPresenterTest!RadioButtonGroupPresenterTest removeSelector: #testRebuildWidget!RadioButtonGroupPresenterTest removeSelector: #testLinkRadioButton!RadioButtonGroupPresenterTest removeSelector: #testDefault!RadioButtonGroupPresenterTest removeSelector: #testCurrentActivated!RadioButtonGroupPresenterTest removeSelector: #testAddingFocusOrder!RadioButtonGroupPresenterTest removeSelector: #testAddRadioButton!RadioButtonGroupPresenterTest removeSelector: #initializeTestedInstance!RadioButtonGroupPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteRadioButtonGroupPresenterTest!RadioButtonGroupExampleTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteRadioButtonGroupExampleTest!RGBWidgetTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteRGBWidgetTest!RGBSlidersTest removeSelector: #testwhenChangedDo!RGBSlidersTest removeSelector: #testColor!RGBSlidersTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteRGBSlidersTest!PickListPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoletePickListPresenterTest!OpenOnStringExampleTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteOpenOnStringExampleTest!OpenOnNilExampleTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteOpenOnNilExampleTest!OpenOnIntExampleTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteOpenOnIntExampleTest!MethodToolbarTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteMethodToolbarTest!MethodBrowserTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteMethodBrowserTest!MenuPresenterTest removeSelector: #testFromSpecSubMenu!MenuPresenterTest removeSelector: #testFromSpecSingle!MenuPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteMenuPresenterTest!ListSelectionPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteListSelectionPresenterTest!ListPresenterTest removeSelector: #testWhenListChangedOldContents!ListPresenterTest removeSelector: #testWhenListChanged!ListPresenterTest removeSelector: #testSelectAll!ListPresenterTest removeSelector: #classToTest!LabelledListTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteLabelledListTest!IconListPresenterTest removeSelector: #testGetIconFor!IconListPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteIconListPresenterTest!Smalltalk globals removeClassNamed: #AnObsoleteListPresenterTest!LabelledContainerTest removeSelector: #testLabelRight!LabelledContainerTest removeSelector: #testLabelLeft!LabelledContainerTest removeSelector: #testLabelBottom!LabelledContainerTest removeSelector: #testDoesNotUnderstand!LabelledContainerTest removeSelector: #testContent!LabelledContainerTest removeSelector: #initializeTestedInstance!LabelledContainerTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteLabelledContainerTest!LabelPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteLabelPresenterTest!LabelledInputTextDropListTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteLabelledInputTextDropListTest!InputTextDropListTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteInputTextDropListTest!ImagePresenterTest removeSelector: #testSwitchAutoScale!ImagePresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteImagePresenterTest!EditableListTest removeSelector: #testMoveElementAtTo!EditableListTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteEditableListTest!DynamicWidgetChangeTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteDynamicWidgetChangeTest!LabelledDropListTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteLabelledDropListTest!DropListPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteDropListPresenterTest!DropListExampleTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteDropListExampleTest!LabelledDropListButtonTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteLabelledDropListButtonTest!DropListButtonTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteDropListButtonTest!DatePresenterTest removeSelector: #testOnDateChosen!DatePresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteDatePresenterTest!ClassMethodBrowserTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteClassMethodBrowserTest!CheckBoxExampleTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteCheckBoxExampleTest!ButtonPresenterTest removeSelector: #testEnabled!ButtonPresenterTest removeSelector: #testAskBeforeChanging!ButtonPresenterTest removeSelector: #morph!ButtonPresenterTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteButtonPresenterTest!ApplicationWithToolbarTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteApplicationWithToolbarTest!AbstractTwoButtonsTest removeSelector: #testFirstLabelSecondLabel!AbstractTwoButtonsTest removeSelector: #testFirstIconSecondIcon!AbstractTwoButtonsTest removeSelector: #testFirstActionSecondAction!AbstractTwoButtonsTest removeSelector: #classToTest!Smalltalk globals removeClassNamed: #AnObsoleteAbstractTwoButtonsTest!Smalltalk globals removeClassNamed: #AnObsoleteSpecTestCase!SpecInterpreterTest removeSelector: #testInterpretASpecModelMorphAssociation!SpecInterpreterTest removeSelector: #testDynamicBuild!SpecInterpreterTest removeSelector: #testConvertRandomSymbolOfClassToInstance!SpecInterpreterTest removeSelector: #testBuildWidgetForWithSpec!SpecInterpreterTest removeSelector: #tearDown!SpecInterpreterTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSpecInterpreterTest!SpecFocusOrderTest removeSelector: #testRemoveAll!SpecFocusOrderTest removeSelector: #testGiveFocusToNextFrom!SpecFocusOrderTest removeSelector: #testAddLast!SpecFocusOrderTest removeSelector: #testAdd!SpecFocusOrderTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteSpecFocusOrderTest!MorphicTreeAdapterTest removeSelector: #testRowColorsBeforeBuild!MorphicTreeAdapterTest removeSelector: #testRowColorsAfterBuild!MorphicTreeAdapterTest removeSelector: #testDefaultRowColors!MorphicTreeAdapterTest removeSelector: #setUp!MorphicTreeAdapterTest removeSelector: #modelClass!Smalltalk globals removeClassNamed: #AnObsoleteMorphicTreeAdapterTest!MorphicLabelAdapterTest removeSelector: #testEmphasisNone!MorphicLabelAdapterTest removeSelector: #testEmphasisMultiple!MorphicLabelAdapterTest removeSelector: #testEmphasisBold!MorphicLabelAdapterTest removeSelector: #setUp!MorphicLabelAdapterTest removeSelector: #modelClass!Smalltalk globals removeClassNamed: #AnObsoleteMorphicLabelAdapterTest!ComposablePresenterWithModelTest removeSelector: #testUpdateModelWithValueHolder!ComposablePresenterWithModelTest removeSelector: #testUpdateModel!ComposablePresenterWithModelTest removeSelector: #testModelSettingValueHolderToValueHolder!ComposablePresenterWithModelTest removeSelector: #testModelSettingValueHolderToModel!ComposablePresenterWithModelTest removeSelector: #testModelSettingObjectToValueHolder!ComposablePresenterWithModelTest removeSelector: #testModelSettingObjectToModel!ComposablePresenterWithModelTest removeSelector: #testModelSettingModelToValueHolder!ComposablePresenterWithModelTest removeSelector: #testModelSettingModelToModel!ComposablePresenterWithModelTest removeSelector: #testInstanceCreationWithValueHolder!ComposablePresenterWithModelTest removeSelector: #testInstanceCreation!Smalltalk globals removeClassNamed: #AnObsoleteComposablePresenterWithModelTest!TestingComposablePresenter removeSelector: #list!TestingComposablePresenter removeSelector: #initializeWidgets!TestingComposablePresenter removeSelector: #getText!TestingComposablePresenter class removeSelector: #title!TestingComposablePresenter class removeSelector: #testingSpec!TestingComposablePresenter class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteTestingComposableModel!Smalltalk globals removeClassNamed: #AnObsoleteTestingComposablePresenter!TestAutoFractionComputation removeSelector: #text!TestAutoFractionComputation removeSelector: #list!TestAutoFractionComputation removeSelector: #initializeWidgets!TestAutoFractionComputation removeSelector: #button!TestAutoFractionComputation class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteTestAutoFractionComputation!Smalltalk globals removeClassNamed: #AnObsoleteManifestSpecTests!TestingPointModel removeSelector: #y:!TestingPointModel removeSelector: #y!TestingPointModel removeSelector: #x:!TestingPointModel removeSelector: #x!TestingPointModel removeSelector: #setX:setY:!TestingPointModel class removeSelector: #x:y:!Smalltalk globals removeClassNamed: #AnObsoleteTestingPointModel!TestingAbstractTwoButtons removeSelector: #initializeButtons!TestingAbstractTwoButtons class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteTestingAbstractTwoButtons!TestingComposablePresenterWithModel removeSelector: #y:!TestingComposablePresenterWithModel removeSelector: #y!TestingComposablePresenterWithModel removeSelector: #x:!TestingComposablePresenterWithModel removeSelector: #x!TestingComposablePresenterWithModel removeSelector: #title!TestingComposablePresenterWithModel removeSelector: #modelChanged!TestingComposablePresenterWithModel removeSelector: #initializeWidgets!TestingComposablePresenterWithModel class removeSelector: #open!TestingComposablePresenterWithModel class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteTestingComposablePresenterWithModel!RubEditingAreaTest removeSelector: #testMouseMoveAfterDoubleClick!RubEditingAreaTest removeSelector: #testMouseClickShiftClick!RubEditingAreaTest removeSelector: #testModifySelection!RubEditingAreaTest removeSelector: #testMarkBlockPointBlock!RubEditingAreaTest removeSelector: #setUp!RubEditingAreaTest removeSelector: #setSelectionFrom:to:text:!RubEditingAreaTest removeSelector: #sendMouseClickAt:withShift:!RubEditingAreaTest removeSelector: #sendDoubleClickAt:withShift:!RubEditingAreaTest removeSelector: #newCharacterBlockIndex:text:!Smalltalk globals removeClassNamed: #AnObsoleteRubEditingAreaTest!Smalltalk globals removeClassNamed: #AnObsoleteRubAbstractTextAreaTest!FuzzyMatcherExample removeSelector: #updatePattern:!FuzzyMatcherExample removeSelector: #update!FuzzyMatcherExample removeSelector: #setElements:!FuzzyMatcherExample removeSelector: #pattern:!FuzzyMatcherExample removeSelector: #open!FuzzyMatcherExample removeSelector: #match:for:!FuzzyMatcherExample removeSelector: #initialize!FuzzyMatcherExample removeSelector: #fontName!FuzzyMatcherExample removeSelector: #elements:!FuzzyMatcherExample removeSelector: #buildMorph!FuzzyMatcherExample removeSelector: #aquireFont!FuzzyMatcherExample class removeSelector: #exampleSelectors!FuzzyMatcherExample class removeSelector: #examplePackages!FuzzyMatcherExample class removeSelector: #exampleClasses!FuzzyMatcherExample class removeSelector: #exampleAuthors!Smalltalk globals removeClassNamed: #AnObsoleteFuzzyMatcherExample!FuzzyMatcherTests removeSelector: #testSortedByScore!FuzzyMatcherTests removeSelector: #testScoreValues!FuzzyMatcherTests removeSelector: #testMatching!FuzzyMatcherTests removeSelector: #testIsSeperator!FuzzyMatcherTests removeSelector: #testEmptyPattern!FuzzyMatcherTests removeSelector: #testClassSideAPI!FuzzyMatcherTests removeSelector: #testChangePattern!FuzzyMatcherTests removeSelector: #testAssumptions!FuzzyMatcherTests removeSelector: #testAllMatchingIn!FuzzyMatcherTests removeSelector: #newMatcher!FuzzyMatcherTests removeSelector: #assert:scoreFor:equals:!Smalltalk globals removeClassNamed: #AnObsoleteFuzzyMatcherTests!TestRPackagePrequisites removeSelector: #testNoPackagesOverride!Smalltalk globals removeClassNamed: #AnObsoleteTestRPackagePrequisites!RPackageWithDoTest removeSelector: #testWithDoIsCorrectlyReinstallingDefaultEvenIfHalt!RPackageWithDoTest removeSelector: #testWithDoIsCorrectlyReinstallingDefault!RPackageWithDoTest removeSelector: #testOnDo!RPackageWithDoTest removeSelector: #testInvariant!RPackageWithDoTest removeSelector: #testDoC!RPackageWithDoTest removeSelector: #testDo2!RPackageWithDoTest removeSelector: #testDo!RPackageWithDoTest removeSelector: #packageOrganizerClass!RPackageWithDoTest removeSelector: #packageClass!RPackageWithDoTest removeSelector: #info!RPackageWithDoTest removeSelector: #ensure!RPackageWithDoTest removeSelector: #doOnDo:!RPackageWithDoTest removeSelector: #doC:!RPackageWithDoTest removeSelector: #do:!RPackageWithDoTest removeSelector: #announcer!Smalltalk globals removeClassNamed: #AnObsoleteRPackageWithDoTest!RPackageTestCase removeSelector: #setupOrganizer!RPackageTestCase removeSelector: #setUp!RPackageTestCase removeSelector: #runCase!RPackageTestCase removeSelector: #restoreAnnouncers!RPackageTestCase removeSelector: #removePackage:!RPackageTestCase removeSelector: #packageOrganizerClass!RPackageTestCase removeSelector: #packageClass!RPackageTestCase removeSelector: #organizer!RPackageTestCase removeSelector: #initializeAnnouncers!RPackageTestCase removeSelector: #createNewTraitNamed:inPackage:!RPackageTestCase removeSelector: #createNewTraitNamed:inCategory:!RPackageTestCase removeSelector: #createNewTraitNamed:!RPackageTestCase removeSelector: #createNewPackageNamed:!RPackageTestCase removeSelector: #createNewClassNamed:inPackage:!RPackageTestCase removeSelector: #createNewClassNamed:inCategory:!RPackageTestCase removeSelector: #createNewClassNamed:!RPackageTestCase removeSelector: #allManagers!RPackageTest removeSelector: #testRenameToMakesMCDirty!RPackageTest removeSelector: #testPropertyAtPut!RPackageTest removeSelector: #testMcWorkingCopy!RPackageTest removeSelector: #testMcPackage!RPackageTest removeSelector: #testDemoteToRPackageNamedWithExtension!RPackageTest removeSelector: #testDemoteToRPackageNamedMultilevelPackage2!RPackageTest removeSelector: #testDemoteToRPackageNamedMultilevelPackage1!RPackageTest removeSelector: #testDemoteToRPackageNamedExistingPackage!RPackageTest removeSelector: #testDemoteToRPackageNamed!RPackageTest removeSelector: #testAnonymousClassAndSelector!RPackageTest removeSelector: #testAddClassFromTag!RPackageTest removeSelector: #testAddClass!RPackageTest removeSelector: #testActualClassTags!RPackageTest removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoleteRPackageTest!RPackageTagTest removeSelector: #testPromoteAsRPackageWithExtension!RPackageTagTest removeSelector: #testPromoteAsRPackage!RPackageTagTest removeSelector: #testAsRPackageWithExtensionMethods!RPackageTagTest removeSelector: #testAsRPackage!RPackageTagTest removeSelector: #testAddClassFromTag!RPackageTagTest removeSelector: #testAddClass!RPackageTagTest removeSelector: #tearDown!Smalltalk globals removeClassNamed: #AnObsoleteRPackageTagTest!RPackageOrganizerTest removeSelector: #testUnregistrationExtendingPackages!RPackageOrganizerTest removeSelector: #testUnregisterBasedOnNames!RPackageOrganizerTest removeSelector: #testTestingPackageExistence!RPackageOrganizerTest removeSelector: #testSilentlyRenameCategoryToBe!RPackageOrganizerTest removeSelector: #testRegistrationExtendingPackages!RPackageOrganizerTest removeSelector: #testRegisteredNumberOfPackageIsOk!RPackageOrganizerTest removeSelector: #testRegisteredIsThere!RPackageOrganizerTest removeSelector: #testRegisteredIsIncludedInPackageNames!RPackageOrganizerTest removeSelector: #testRegisterPackageTagConflictWithPackage!RPackageOrganizerTest removeSelector: #testRegisterPackageConflictWithPackageTag!RPackageOrganizerTest removeSelector: #testRegisterPackageConflictWithPackage!RPackageOrganizerTest removeSelector: #testFullUnregistration!RPackageOrganizerTest removeSelector: #testFullRegistration!RPackageOrganizerTest removeSelector: #testEmpty!RPackageOrganizerTest removeSelector: #testDefinedClassesInstanceAndMetaSideAPI!RPackageOrganizerTest removeSelector: #testAccessingPackage!RPackageOrganizerTest removeSelector: #tearDown!RPackageOrganizerTest removeSelector: #stringCharacterInCollPackage!RPackageOrganizerTest removeSelector: #setUp!RPackageOrganizerTest removeSelector: #removePackageIfExist:!RPackageOrganizerTest removeSelector: #removeClassNamedIfExists:!RPackageOrganizerTest removeSelector: #quadrangleClass!RPackageOrganizerTest removeSelector: #pointRectangleInGraphElement!RPackageOrganizerTest removeSelector: #packageOrganizer!RPackageOrganizerTest removeSelector: #p3Name!RPackageOrganizerTest removeSelector: #p2Name!RPackageOrganizerTest removeSelector: #p1Name!Smalltalk globals removeClassNamed: #AnObsoleteRPackageOrganizerTest!RPackageTraitSynchronisationTest removeSelector: #testTraitCompositionMethodsArePackagedWithTheirTraits!RPackageTraitSynchronisationTest removeSelector: #testRemoveTraitMethodOverridenByClassDoesRemoveMethodFromClassPackage!RPackageTraitSynchronisationTest removeSelector: #testRemoveTraitMethod!RPackageTraitSynchronisationTest removeSelector: #testRemoveMethodComingFromTraitDoesNotRemoveMethodFromTraitPackage!RPackageTraitSynchronisationTest removeSelector: #testAddTraitUpdateTheOrganizerMappings!RPackageTraitSynchronisationTest removeSelector: #testAddTraitAddItIntoPackageExactName!RPackageTraitSynchronisationTest removeSelector: #testAddTraitAddItIntoPackageBestMatchName!RPackageTraitSynchronisationTest removeSelector: #testAddMethodByUsingATraitDoesNotAddTheMethodToThePackage!Smalltalk globals removeClassNamed: #AnObsoleteRPackageTraitSynchronisationTest!RPackageMonticelloSynchronisationTest removeSelector: #testUnregisterMCPackageKeepsRPackage!RPackageMonticelloSynchronisationTest removeSelector: #testUnloadMCPackageRemovesRPackage!RPackageMonticelloSynchronisationTest removeSelector: #testAddMCPackageForCategoryAlreadyExistingDoesNotCreateAPackage!RPackageMonticelloSynchronisationTest removeSelector: #testAddMCPackageCreatesAPackage!Smalltalk globals removeClassNamed: #AnObsoleteRPackageMonticelloSynchronisationTest!RPackageMethodsSynchronisationTest removeSelector: #testRemoveMethodRemoveMethodFromItsPackage!RPackageMethodsSynchronisationTest removeSelector: #testModifyMethodByMovingFromExtensionCategoryToExtensionCategoryMoveItFromExtendingPackageToSecondExtendingPackage!RPackageMethodsSynchronisationTest removeSelector: #testModifyMethodByMovingFromExtensionCategoryToClassicCategoryMoveItFromExtendingPackageToClassPackage!RPackageMethodsSynchronisationTest removeSelector: #testModifyMethodByMovingFromClassicCategoryToExtensionCategoryMoveItFromClassPackageToExtendingPackage!RPackageMethodsSynchronisationTest removeSelector: #testModifyMethodByMovingFromClassicCategoryToClassicCategoryDoesNothing!RPackageMethodsSynchronisationTest removeSelector: #testAddMethodInClassicCategoryAddMethodToTheParentPackageOfItsTrait!RPackageMethodsSynchronisationTest removeSelector: #testAddMethodInClassicCategoryAddMethodToTheParentPackageOfItsClass!Smalltalk globals removeClassNamed: #AnObsoleteRPackageMethodsSynchronisationTest!RPackageMCSynchronisationTest removeSelector: #testisDefinedAsPackageOrSubPackageInMC!RPackageMCSynchronisationTest removeSelector: #testRepackagedAnnouncementWhenModifyMethodByMovingFromExtensionCategoryToClassicCategory!RPackageMCSynchronisationTest removeSelector: #testRepackagedAnnouncementWhenModifyMethodByMovingFromDifferentExtensionCategories!RPackageMCSynchronisationTest removeSelector: #testRepackagedAnnouncementWhenModifyMethodByMovingFromClassicCategoryToExtensionCategory!RPackageMCSynchronisationTest removeSelector: #testNotRepackagedAnnouncementWhenMovingClassicCategories!RPackageMCSynchronisationTest removeSelector: #testNotRepackagedAnnouncementWhenModifyMethodByMovingInSameExtensionCategory!RPackageMCSynchronisationTest removeSelector: #testCategoryMatching!RPackageMCSynchronisationTest removeSelector: #tearDown!RPackageMCSynchronisationTest removeSelector: #setUp!RPackageMCSynchronisationTest removeSelector: #restoreAnnouncers!RPackageMCSynchronisationTest removeSelector: #initializeAnnouncers!RPackageMCSynchronisationTest removeSelector: #emptyOrganizer!RPackageMCSynchronisationTest removeSelector: #createNewTraitNamed:inCategory:!RPackageMCSynchronisationTest removeSelector: #createNewClassNamed:inCategory:!RPackageMCSynchronisationTest removeSelector: #createNewClassNamed:!RPackageMCSynchronisationTest removeSelector: #createMethodNamed:inClassSideOfClass:inCategory:!RPackageMCSynchronisationTest removeSelector: #createMethodNamed:inClass:inCategory:!RPackageMCSynchronisationTest removeSelector: #cleanClassesPackagesAndCategories!RPackageMCSynchronisationTest removeSelector: #addZCategory!RPackageMCSynchronisationTest removeSelector: #addYCategory!RPackageMCSynchronisationTest removeSelector: #addXYZCategory!RPackageMCSynchronisationTest removeSelector: #addXYCategory!RPackageMCSynchronisationTest removeSelector: #addXMatchCategory!RPackageMCSynchronisationTest removeSelector: #addXCategory!RPackageExtensionMethodsSynchronisationTest removeSelector: #testRemoveExtensionMethodRemoveMethodFromItsPackage!RPackageExtensionMethodsSynchronisationTest removeSelector: #testRemoveExtensionMethodDoesNotRemoveExtendingPackage!RPackageExtensionMethodsSynchronisationTest removeSelector: #testRemoveAllExtensionMethodsRemoveTheClassFromExtendedClasses!RPackageExtensionMethodsSynchronisationTest removeSelector: #testRemoveAllExtensionMethodsFromMetaAndInstanceSideUpdateOrganizerExtensionsMapping!RPackageExtensionMethodsSynchronisationTest removeSelector: #testMoveClassInPackageWithExtensionsOnClassAndBack!RPackageExtensionMethodsSynchronisationTest removeSelector: #testMoveClassInPackageWithExtensionsOnClass2!RPackageExtensionMethodsSynchronisationTest removeSelector: #testMoveClassInPackageWithExtensionsOnClass!RPackageExtensionMethodsSynchronisationTest removeSelector: #testModifyMethodByChangingCode!RPackageExtensionMethodsSynchronisationTest removeSelector: #testAddMethodInExtensionCategoryWithExactMatchAddMethodToTheExtendingPackage!RPackageExtensionMethodsSynchronisationTest removeSelector: #testAddMethodInExtensionCategoryNotRespectingCaseAddMethodToTheExtendingPackage!RPackageExtensionMethodsSynchronisationTest removeSelector: #testAddMethodInExtensionCategoryNotExistingCreateANewPackageAndInstallsMethodInIt!RPackageExtensionMethodsSynchronisationTest removeSelector: #testAddMethodInExtensionCategoryNotExistingCreateANewPackage!RPackageExtensionMethodsSynchronisationTest removeSelector: #testAddMethodInExtensionCategoryMatchingNameAddMethodToTheExtendingPackage!RPackageExtensionMethodsSynchronisationTest removeSelector: #testAddMethodInExtensionCategoryBestMatchingNameAddMethodToTheExtendingPackage!Smalltalk globals removeClassNamed: #AnObsoleteRPackageExtensionMethodsSynchronisationTest!RPackageClassesSynchronisationTest removeSelector: #testReorganizeClassByRenamingExtensionCategoryToClassicCategoryMoveMethodsFromExtendingPackageToParentPackage!RPackageClassesSynchronisationTest removeSelector: #testReorganizeClassByRenamingExtensionCategoryToClassicCategoryMoveAllMethodsFromExtendingPackageToParentPackage!RPackageClassesSynchronisationTest removeSelector: #testReorganizeClassByRenamingExtensionCategoryToAnotherExtensionCategoryAddMethodsToTheNewPackage!RPackageClassesSynchronisationTest removeSelector: #testReorganizeClassByRenamingClassicCategoryToExtensionCategoryMoveMethodsFromParentPackageToExtendingPackage!RPackageClassesSynchronisationTest removeSelector: #testReorganizeClassByRenamingClassicCategoryToExtensionCategoryMoveAllMethodsFromParentPackageToExtendingPackage!RPackageClassesSynchronisationTest removeSelector: #testReorganizeClassByRemovingExtensionCategoryRemoveMethodsFromTheExtendingPackage!RPackageClassesSynchronisationTest removeSelector: #testReorganizeClassByRemovingClassicCategoryRemoveMethodsFromTheParentPackage!RPackageClassesSynchronisationTest removeSelector: #testReorganizeClassByAddingNewProtocolDoesNothing!RPackageClassesSynchronisationTest removeSelector: #testReorganizeClassByAddingExtensionProtocol!RPackageClassesSynchronisationTest removeSelector: #testRenameClassUpdateOrganizerClassPackageMapping!RPackageClassesSynchronisationTest removeSelector: #testRenameClassUpdateOrganizerClassExtendingPackagesMapping!RPackageClassesSynchronisationTest removeSelector: #testRenameClassUpdateMetaclassExtensionSelectorsInTheExtendingPackages!RPackageClassesSynchronisationTest removeSelector: #testRenameClassUpdateMetaclassDefinedSelectorsInTheParentPackage!RPackageClassesSynchronisationTest removeSelector: #testRenameClassUpdateClassExtensionSelectorsInTheExtendingPackages!RPackageClassesSynchronisationTest removeSelector: #testRenameClassUpdateClassDefinedSelectorsInTheParentPackage!RPackageClassesSynchronisationTest removeSelector: #testRenameClassUpdateClassDefinedInTheParentPackage!RPackageClassesSynchronisationTest removeSelector: #testRemoveClassUpdateTheOrganizerMappings!RPackageClassesSynchronisationTest removeSelector: #testRemoveClassUnregisterTheClassFromItsPackage!RPackageClassesSynchronisationTest removeSelector: #testRemoveClassUnregisterTheClassExtensionMethodsFromTheCorrespondingPackage!RPackageClassesSynchronisationTest removeSelector: #testRemoveClassUnregisterTheClassDefinedMethodsFromItsPackage!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassWithUnexistingPackageNameRegisterTheClassInANewPackage!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassWithMetaClassMethodsRegisterAllClassMethodsInTheNewPackage!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassUpdateTheOrganizerMappings!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassUnregisterTheClassMethodsFromTheOldPackage!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassUnregisterTheClassFromTheOldPackage!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassRegisterTheClassMethodsInTheNewPackage!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassRegisterTheClassInTheMatchingPackage!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassRegisterTheClassInTheExactMatchPackage!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassRegisterTheClassInTheBestMatchPackage!RPackageClassesSynchronisationTest removeSelector: #testRecategorizeClassRaisesClassRepackagedEvent!RPackageClassesSynchronisationTest removeSelector: #testAddClassUpdateTheOrganizerMappings!RPackageClassesSynchronisationTest removeSelector: #testAddClassAddItIntoPackageExactName!RPackageClassesSynchronisationTest removeSelector: #testAddClassAddItIntoPackageBestMatchName!Smalltalk globals removeClassNamed: #AnObsoleteRPackageClassesSynchronisationTest!RPackageCategorySynchronisationTest removeSelector: #testRenameUnknownCategoryCreatesNewRPackage!RPackageCategorySynchronisationTest removeSelector: #testRenameCategoryUpdateTheOrganizer!RPackageCategorySynchronisationTest removeSelector: #testRenameCategoryChangeTheNameOfThePackage!RPackageCategorySynchronisationTest removeSelector: #testRenameCategoryAlsoRenameAllExtensionProtocols!RPackageCategorySynchronisationTest removeSelector: #testAddCategoryIsAlreadyAPackageDoesNotCreatePackage!RPackageCategorySynchronisationTest removeSelector: #testAddCategoryCreatesPackage!Smalltalk globals removeClassNamed: #AnObsoleteRPackageCategorySynchronisationTest!Smalltalk globals removeClassNamed: #AnObsoleteRPackageMCSynchronisationTest!RPackageTraitTest removeSelector: #testStartingSituation!RPackageTraitTest removeSelector: #testPackageOfTraitMethodIsTraitPackage!RPackageTraitTest removeSelector: #testPackageOfClassMethodIsClassPackage!RPackageTraitTest removeSelector: #testPackageOfClassMethodFromTraitIsTraitPackage!RPackageTraitTest removeSelector: #testPackageOfClassMethodFromTraitExtensionIsExtendingPackage!RPackageTraitTest removeSelector: #setUp!RPackageTraitTest removeSelector: #p6Name!RPackageTraitTest removeSelector: #p5Name!RPackageTraitTest removeSelector: #p4Name!Smalltalk globals removeClassNamed: #AnObsoleteRPackageTraitTest!RPackageReadOnlyCompleteSetupTest removeSelector: #testStartingSituation!RPackageReadOnlyCompleteSetupTest removeSelector: #testSelectorsForClass!RPackageReadOnlyCompleteSetupTest removeSelector: #testSelectors!RPackageReadOnlyCompleteSetupTest removeSelector: #testRemoveTaggedClasses!RPackageReadOnlyCompleteSetupTest removeSelector: #testRemoveTag!RPackageReadOnlyCompleteSetupTest removeSelector: #testPackagesOfClass!RPackageReadOnlyCompleteSetupTest removeSelector: #testMethodsForClass!RPackageReadOnlyCompleteSetupTest removeSelector: #testMethods!RPackageReadOnlyCompleteSetupTest removeSelector: #testMetaclassHasExtensions!RPackageReadOnlyCompleteSetupTest removeSelector: #testExtensionSelectorsForClass!RPackageReadOnlyCompleteSetupTest removeSelector: #testExtensionSelectors!RPackageReadOnlyCompleteSetupTest removeSelector: #testExtensionMethods!RPackageReadOnlyCompleteSetupTest removeSelector: #testExtendingPackagesOfClass!RPackageReadOnlyCompleteSetupTest removeSelector: #testEmpty!RPackageReadOnlyCompleteSetupTest removeSelector: #testDefinedSelectorsForClass!RPackageReadOnlyCompleteSetupTest removeSelector: #testDefinedSelectors!RPackageReadOnlyCompleteSetupTest removeSelector: #testCompiledMethodPackageFromOrganizer!RPackageReadOnlyCompleteSetupTest removeSelector: #testCompiledMethodIsExtensionInPackage!RPackageReadOnlyCompleteSetupTest removeSelector: #testCompiledMethodIsDefinedInPackage!RPackageReadOnlyCompleteSetupTest removeSelector: #testClassesAndExtensionMethodsDo!RPackageReadOnlyCompleteSetupTest removeSelector: #testClassNamesAndExtensionSelectorsDo2!RPackageReadOnlyCompleteSetupTest removeSelector: #testClassIsExtendedInPackage!RPackageReadOnlyCompleteSetupTest removeSelector: #testAddTagsToAClass!RPackageReadOnlyCompleteSetupTest removeSelector: #testAddTagNames!RPackageReadOnlyCompleteSetupTest removeSelector: #testAddTag!RPackageReadOnlyCompleteSetupTest removeSelector: #setUp!RPackageReadOnlyCompleteSetupTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteRPackageReadOnlyCompleteSetupTest!RPackageObsoleteTest removeSelector: #testMethodPackageOfRemovedClass!RPackageObsoleteTest removeSelector: #testMethodPackageFromObsoleteClass!RPackageObsoleteTest removeSelector: #testAnnouncementClassRemovedIsRaisedOnRemoveFromSystem!RPackageObsoleteTest removeSelector: #setNotRun!Smalltalk globals removeClassNamed: #AnObsoleteRPackageObsoleteTest!RPackageIncrementalTest removeSelector: #testUniqueClassInDefinedClassesUsingAddClassDefinition!RPackageIncrementalTest removeSelector: #testRemoveExtensionMethodRemovesExtensionsFromRPackage!RPackageIncrementalTest removeSelector: #testRemoveClassRemovesExtensions!RPackageIncrementalTest removeSelector: #testRemoveClassAfterMethods!RPackageIncrementalTest removeSelector: #testPrivateClassRegisterUnregister!RPackageIncrementalTest removeSelector: #testPackageOfClassForDefinedClasses!RPackageIncrementalTest removeSelector: #testPackageOfClassForClassesNotDefinedInPackageButJustExtendingIt!RPackageIncrementalTest removeSelector: #testMethodPackageResolution!RPackageIncrementalTest removeSelector: #testMethodAddition!RPackageIncrementalTest removeSelector: #testIncludesOrTouches!RPackageIncrementalTest removeSelector: #testIncludesMethodOfClassInPresenceOfOtherPackageExtensions!RPackageIncrementalTest removeSelector: #testIncludeSelectorOfMetaClass!RPackageIncrementalTest removeSelector: #testIncludeSelectorOfClass!RPackageIncrementalTest removeSelector: #testIncludeClassMore!RPackageIncrementalTest removeSelector: #testIncludeClass!RPackageIncrementalTest removeSelector: #testExtensionMethods!RPackageIncrementalTest removeSelector: #testExtensionClassesWithCompiledMethod!RPackageIncrementalTest removeSelector: #testExtensionClasses!RPackageIncrementalTest removeSelector: #testExtensionClassNames!RPackageIncrementalTest removeSelector: #testDefinedClassesAndDefinedClassNames!RPackageIncrementalTest removeSelector: #testClasses!RPackageIncrementalTest removeSelector: #testClassDefinitionWithTagsRemoval!RPackageIncrementalTest removeSelector: #testClassDefinitionRemovalName!RPackageIncrementalTest removeSelector: #testClassDefinitionRemoval!RPackageIncrementalTest removeSelector: #testClassAddition!RPackageIncrementalTest removeSelector: #testBogusClassAddition!RPackageIncrementalTest removeSelector: #testAddRemoveSelectorOfMetaclass!RPackageIncrementalTest removeSelector: #testAddRemoveSelector!RPackageIncrementalTest removeSelector: #testAddRemoveMethod!RPackageIncrementalTest removeSelector: #testAddClassDefinitionNoDuplicate!RPackageIncrementalTest removeSelector: #testAddClassAfterMethodsAtMetaclassToo!RPackageIncrementalTest removeSelector: #testAddClassAfterMethods!RPackageIncrementalTest removeSelector: #tearDown!RPackageIncrementalTest removeSelector: #setUp!RPackageIncrementalTest removeSelector: #removeClassNamedIfExists:!RPackageIncrementalTest removeSelector: #p3Name!RPackageIncrementalTest removeSelector: #p2Name!RPackageIncrementalTest removeSelector: #p1Name!RPackageCompleteSetupButForModificationTest removeSelector: #testStartingSituation!RPackageCompleteSetupButForModificationTest removeSelector: #testRemoveShouldRaiseErrorWhenMethodIsNotInPackage!RPackageCompleteSetupButForModificationTest removeSelector: #testRemoveMethodDoesNotRemoveFromClass!RPackageCompleteSetupButForModificationTest removeSelector: #testRemoveMethod!RPackageCompleteSetupButForModificationTest removeSelector: #testExtensionMethodOfClass!RPackageCompleteSetupButForModificationTest removeSelector: #testBasicRemoveClass!RPackageCompleteSetupButForModificationTest removeSelector: #testAddMethod!RPackageCompleteSetupButForModificationTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRPackageCompleteSetupButForModificationTest!Smalltalk globals removeClassNamed: #AnObsoleteRPackageIncrementalTest!Smalltalk globals removeClassNamed: #AnObsoleteRPackageTestCase!RPackageStringExtensionTest removeSelector: #testAsPackageWithError!RPackageStringExtensionTest removeSelector: #testAsPackageIfAbsent!RPackageStringExtensionTest removeSelector: #testAsPackage!Smalltalk globals removeClassNamed: #AnObsoleteRPackageStringExtensionTest!RPackageRenameTest removeSelector: #testUnregisterPackage!RPackageRenameTest removeSelector: #testRenamePackageToOwnTagNameWithClassesInRoot!RPackageRenameTest removeSelector: #testRenamePackageToOwnTagName!RPackageRenameTest removeSelector: #testRenamePackage!RPackageRenameTest removeSelector: #tearDown!RPackageRenameTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRPackageRenameTest!NNavNavigateTest removeSelector: #testSameNodeIsTheBrotherWhenOnlyChild!NNavNavigateTest removeSelector: #testNotPreviousBrotherWhenOrphan!NNavNavigateTest removeSelector: #testNotBrotherWhenOrphan!NNavNavigateTest removeSelector: #testNextChildWhenItHasNotChildsItIsNil!NNavNavigateTest removeSelector: #testNextChildWhenHasChildsIsTheBiggerOne!NNavNavigateTest removeSelector: #testNextBrotherWhenItsTheLasItsTheFirst!NNavNavigateTest removeSelector: #testNextBrotherWhenItsTheFirstItsTheLast!NNavNavigateTest removeSelector: #testNextBrotherItsThePreviousOfTheChilds!NNavNavigateTest removeSelector: #testNextBrotherItsTheNextOfTheChilds!Smalltalk globals removeClassNamed: #AnObsoleteNNavNavigateTest!ReflectivitySourceCodeAgroupation removeSelector: #newSourceCodeFor:!ReflectivitySourceCodeAgroupation removeSelector: #initialize!ReflectivitySourceCodeAgroupation removeSelector: #defaultColor!Smalltalk globals removeClassNamed: #AnObsoleteReflectivitySourceCodeAgroupation!ReflectivityCodeMorph removeSelector: #textModel!ReflectivityCodeMorph removeSelector: #shoutAboutToStyle:!ReflectivityCodeMorph removeSelector: #newScrolledText!ReflectivityCodeMorph removeSelector: #initialize!ReflectivityCodeMorph removeSelector: #familyName!ReflectivityCodeMorph removeSelector: #drawTitleOn:!ReflectivityCodeMorph removeSelector: #drawOn:!ReflectivityCodeMorph removeSelector: #defaultColor!ReflectivityCodeMorph removeSelector: #defaultBounds!ReflectivityCodeMorph removeSelector: #compiledMethod:!ReflectivityCodeMorph removeSelector: #compiledMethod!ReflectivityCodeMorph removeSelector: #addSourceCode:!ReflectivityCodeMorph class removeSelector: #compiledMethod:!Smalltalk globals removeClassNamed: #AnObsoleteReflectivityCodeMorph!ReflectivityDemos removeSelector: #demoSelfSendLogging!ReflectivityDemos removeSelector: #cleanUp!Smalltalk globals removeClassNamed: #AnObsoleteReflectivityDemos!RBAssignmentNode removeSelector: #tagType:!CoverageDemo removeSelector: #updateRubricStyle!CoverageDemo removeSelector: #runCoverageCode!CoverageDemo removeSelector: #runCodeButton:!CoverageDemo removeSelector: #runCodeButton!CoverageDemo removeSelector: #removeMetalink!CoverageDemo removeSelector: #openWithSpec!CoverageDemo removeSelector: #metalinkBlock:!CoverageDemo removeSelector: #metalinkBlock!CoverageDemo removeSelector: #installMetalinkButton:!CoverageDemo removeSelector: #installMetalinkButton!CoverageDemo removeSelector: #installMetalink!CoverageDemo removeSelector: #initializeWidgets!CoverageDemo removeSelector: #initializePresenter!CoverageDemo removeSelector: #initialize!CoverageDemo removeSelector: #initialExtent!CoverageDemo removeSelector: #exampleNotCompleteCoverage!CoverageDemo removeSelector: #exampleMethod!CoverageDemo removeSelector: #coverageCode:!CoverageDemo removeSelector: #coverageCode!CoverageDemo removeSelector: #compiledMethods:!CoverageDemo removeSelector: #compiledMethods!CoverageDemo removeSelector: #codePanelMorph:!CoverageDemo removeSelector: #codePanelMorph!CoverageDemo removeSelector: #addCards!CoverageDemo class removeSelector: #title!CoverageDemo class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteCoverageDemo!MetalinkIconStyler removeSelector: #shouldStyleNode:!MetalinkIconStyler removeSelector: #iconLabel:!MetalinkIconStyler removeSelector: #iconFor:!MetalinkIconStyler removeSelector: #iconBlock:!MetalinkIconStyler class removeSelector: #shouldStyle!CoverageRubricStyler removeSelector: #addIconStyle:from:to:!Smalltalk globals removeClassNamed: #AnObsoleteCoverageRubricStyler!Smalltalk globals removeClassNamed: #AnObsoleteMetalinkIconStyler!AthensSurfaceExamples removeSelector: #renderOn:!AthensSurfaceExamples removeSelector: #renderBlock:!AthensSurfaceExamples removeSelector: #renderBlock!AthensSurfaceExamples removeSelector: #initialize!AthensSurfaceExamples removeSelector: #createSurface:!AthensSurfaceExamples class removeSelector: #openViewOn:!AthensSurfaceExamples class removeSelector: #newSurface:!AthensSurfaceExamples class removeSelector: #newAsSceneFrom:!AthensSurfaceExamples class removeSelector: #exampleUseForm!AthensSurfaceExamples class removeSelector: #exampleStrokeRect!AthensSurfaceExamples class removeSelector: #exampleDrawText!AthensSurfaceExamples class removeSelector: #exampleDrawForm2!AthensSurfaceExamples class removeSelector: #exampleDrawForm!AthensSurfaceExamples class removeSelector: #exampleClip!AthensSurfaceExamples class removeSelector: #example9!AthensSurfaceExamples class removeSelector: #example8!AthensSurfaceExamples class removeSelector: #example7!AthensSurfaceExamples class removeSelector: #example6stroke!AthensSurfaceExamples class removeSelector: #example6point1!AthensSurfaceExamples class removeSelector: #example6!AthensSurfaceExamples class removeSelector: #example5!AthensSurfaceExamples class removeSelector: #example4!AthensSurfaceExamples class removeSelector: #example3stroke!AthensSurfaceExamples class removeSelector: #example3!AthensSurfaceExamples class removeSelector: #example2!AthensSurfaceExamples class removeSelector: #example10!AthensSurfaceExamples class removeSelector: #example1!AthensSurfaceExamples class removeSelector: #drawFontMetrics!AthensSurfaceExamples class removeSelector: #draw2Strings!AthensCairoSurfaceExamples class removeSelector: #newSurface:!AthensCairoSurfaceExamples class removeSelector: #exampleInterop!Smalltalk globals removeClassNamed: #AnObsoleteAthensCairoSurfaceExamples!AthensBalloonSurfaceExamples class removeSelector: #newSurface:!Smalltalk globals removeClassNamed: #AnObsoleteAthensBalloonSurfaceExamples!Smalltalk globals removeClassNamed: #AnObsoleteAthensSurfaceExamples!Morph removeSelector: #openInSceneView!AthensFlakeDemo removeSelector: #stepTime!AthensFlakeDemo removeSelector: #step!AthensFlakeDemo removeSelector: #render!AthensFlakeDemo removeSelector: #initialize!AthensFlakeDemo removeSelector: #drawSpike:!AthensFlakeDemo removeSelector: #drawOn:!AthensFlakeDemo removeSelector: #drawCircles:!AthensFlakeDemo removeSelector: #defaultExtent!AthensFlakeDemo removeSelector: #circle!Smalltalk globals removeClassNamed: #AnObsoleteAthensFlakeDemo!AthensDemoMorph removeSelector: #wheelColor!AthensDemoMorph removeSelector: #stepTime!AthensDemoMorph removeSelector: #step!AthensDemoMorph removeSelector: #roundedRectanglePathOn:!AthensDemoMorph removeSelector: #render!AthensDemoMorph removeSelector: #prevFigure!AthensDemoMorph removeSelector: #nextFigure!AthensDemoMorph removeSelector: #initialize!AthensDemoMorph removeSelector: #figures!AthensDemoMorph removeSelector: #figure9:!AthensDemoMorph removeSelector: #figure8:!AthensDemoMorph removeSelector: #figure7:!AthensDemoMorph removeSelector: #figure6:!AthensDemoMorph removeSelector: #figure5:!AthensDemoMorph removeSelector: #figure4:!AthensDemoMorph removeSelector: #figure3:!AthensDemoMorph removeSelector: #figure2:!AthensDemoMorph removeSelector: #figure1:!AthensDemoMorph removeSelector: #figure10:!AthensDemoMorph removeSelector: #drawOn:!AthensDemoMorph removeSelector: #drawCarOn:!AthensDemoMorph removeSelector: #drawBackgroundOn:!AthensDemoMorph removeSelector: #defaultExtent!AthensDemoMorph removeSelector: #coloredCarColor!AthensDemoMorph removeSelector: #chasisLineColor!AthensDemoMorph removeSelector: #chasisDecoratorColor!AthensDemoMorph removeSelector: #carColor!AthensDemoMorph removeSelector: #backColor!AthensDemoMorph class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteAthensDemoMorph!VGTigerDemo removeSelector: #runDemo!VGTigerDemo removeSelector: #initialize!VGTigerDemo removeSelector: #convertPathData2!VGTigerDemo class removeSelector: #tigerPointsCount!VGTigerDemo class removeSelector: #tigerPoints!VGTigerDemo class removeSelector: #tigerMinY!VGTigerDemo class removeSelector: #tigerMinX!VGTigerDemo class removeSelector: #tigerMaxY!VGTigerDemo class removeSelector: #tigerMaxX!VGTigerDemo class removeSelector: #tigerCommands!VGTigerDemo class removeSelector: #tigerCommandCount!VGTigerDemo class removeSelector: #runDemo!VGTigerDemo class removeSelector: #commands!VGTigerDemo class removeSelector: #checkDataSizes!Smalltalk globals removeClassNamed: #AnObsoleteVGTigerDemo!CurveWorkshop removeSelector: #triangleColor!CurveWorkshop removeSelector: #middleRayColor!CurveWorkshop removeSelector: #drawQuadFrom:via:to:on:!CurveWorkshop removeSelector: #drawOn:!CurveWorkshop removeSelector: #draw!CurveWorkshop removeSelector: #curveColor!Smalltalk globals removeClassNamed: #AnObsoleteCurveWorkshop!AthensTreeView removeSelector: #spacingBetweenRows!AthensTreeView removeSelector: #rowAt:!AthensTreeView removeSelector: #root:extentBlock:childsBlock:!AthensTreeView removeSelector: #root:!AthensTreeView removeSelector: #renderOn:!AthensTreeView removeSelector: #layOutGeometry!AthensTreeView removeSelector: #buildSubtreeFor:level:!AthensTreeView class removeSelector: #openOn:extentBlock:childsBlock:!AthensTreeView class removeSelector: #example1!Smalltalk globals removeClassNamed: #AnObsoleteAthensTreeView!AthensTigerShape removeSelector: #strokeWidth:!AthensTigerShape removeSelector: #strokePaint:!AthensTigerShape removeSelector: #setPath:!AthensTigerShape removeSelector: #renderOn:!AthensTigerShape removeSelector: #prepareFor:!AthensTigerShape removeSelector: #miterLimit:!AthensTigerShape removeSelector: #joinStyle:!AthensTigerShape removeSelector: #initialize!AthensTigerShape removeSelector: #fillRule:!AthensTigerShape removeSelector: #fillRule!AthensTigerShape removeSelector: #fillPaint:!AthensTigerShape removeSelector: #capStyle:!AthensTigerShape removeSelector: #addStroke!AthensTigerShape removeSelector: #addFill!Smalltalk globals removeClassNamed: #AnObsoleteAthensTigerShape!AthensSimpleTreeNode removeSelector: #width!AthensSimpleTreeNode removeSelector: #subject:!AthensSimpleTreeNode removeSelector: #subject!AthensSimpleTreeNode removeSelector: #spacingBetweenChilds!AthensSimpleTreeNode removeSelector: #renderOn:!AthensSimpleTreeNode removeSelector: #originY:!AthensSimpleTreeNode removeSelector: #originY!AthensSimpleTreeNode removeSelector: #originX!AthensSimpleTreeNode removeSelector: #midTop!AthensSimpleTreeNode removeSelector: #midBottom!AthensSimpleTreeNode removeSelector: #layoutWidth!AthensSimpleTreeNode removeSelector: #layoutHorizontally:!AthensSimpleTreeNode removeSelector: #height!AthensSimpleTreeNode removeSelector: #extent:!AthensSimpleTreeNode removeSelector: #extent!AthensSimpleTreeNode removeSelector: #color:!AthensSimpleTreeNode removeSelector: #color!AthensSimpleTreeNode removeSelector: #children:!AthensSimpleTreeNode removeSelector: #children!AthensSimpleTreeNode removeSelector: #box:!AthensSimpleTreeNode removeSelector: #box!Smalltalk globals removeClassNamed: #AnObsoleteAthensSimpleTreeNode!AthensMorphScene removeSelector: #renderOn:!AthensMorphScene removeSelector: #morph:!AthensMorphScene removeSelector: #morph!Smalltalk globals removeClassNamed: #AnObsoleteAthensMorphScene!OSWindowGestureEventHandler removeSelector: #visitWindowCloseEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchTwoFingersScrollMoveEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchTwoFingersScrollEndEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchTwoFingersScrollBeginEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchTwoFingersRotationMoveEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchTwoFingersRotationEndEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchTwoFingersRotationBeginEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchTwoFingersPinchMoveEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchTwoFingersPinchEndEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchTwoFingersPinchBeginEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchThreeFingersSwipeMoveEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchThreeFingersSwipeEndEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchThreeFingersSwipeBeginEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchThreeFingersSwipeAbortEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchOneFingerHoldEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchOneFingerDoubleTapEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchActionPointerUpEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchActionPointerMoveEvent:!OSWindowGestureEventHandler removeSelector: #visitTouchActionPointerDownEvent:!OSWindowGestureEventHandler removeSelector: #touchExample:!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowGestureEventHandler!SDL2TuioObjectStateMachine removeSelector: #position:!SDL2TuioObjectStateMachine removeSelector: #position!SDL2TuioObjectStateMachine removeSelector: #objectNumber:!SDL2TuioObjectStateMachine removeSelector: #objectNumber!SDL2TuioObjectStateMachine removeSelector: #objectId:!SDL2TuioObjectStateMachine removeSelector: #objectId!SDL2TuioObjectStateMachine removeSelector: #initialize!SDL2TuioObjectStateMachine removeSelector: #color:!SDL2TuioObjectStateMachine removeSelector: #color!SDL2TuioObjectStateMachine removeSelector: #angle:!SDL2TuioObjectStateMachine removeSelector: #angle!Smalltalk globals removeClassNamed: #AnObsoleteSDL2TuioObjectStateMachine!SDL2TouchStateMachine removeSelector: #move:!SDL2TouchStateMachine removeSelector: #move!SDL2TouchStateMachine removeSelector: #initialize!SDL2TouchStateMachine removeSelector: #first:!SDL2TouchStateMachine removeSelector: #first!SDL2TouchStateMachine removeSelector: #finish:!SDL2TouchStateMachine removeSelector: #finish!SDL2TouchStateMachine removeSelector: #color!SDL2TouchStateMachine removeSelector: #add:!SDL2TouchStateMachine class removeSelector: #for:!Smalltalk globals removeClassNamed: #AnObsoleteSDL2TouchStateMachine!SDL2Example removeSelector: #simpleWindow!SDL2Example removeSelector: #simpleDrawWindow!SDL2Example removeSelector: #simpleDrawDisplay!SDL2Example removeSelector: #simpleBlackWindow!SDL2Example removeSelector: #osWindow!Smalltalk globals removeClassNamed: #AnObsoleteSDL2Example!SDL2TouchGestureExample2 removeSelector: #windowCenter!SDL2TouchGestureExample2 removeSelector: #switchDiscoMode!SDL2TouchGestureExample2 removeSelector: #swipe:!SDL2TouchGestureExample2 removeSelector: #scroll:!SDL2TouchGestureExample2 removeSelector: #rotation:!SDL2TouchGestureExample2 removeSelector: #redraw!SDL2TouchGestureExample2 removeSelector: #randomizeCircleColor!SDL2TouchGestureExample2 removeSelector: #pinch:!SDL2TouchGestureExample2 removeSelector: #initializeFromSurface!SDL2TouchGestureExample2 removeSelector: #initialize!SDL2TouchGestureExample2 removeSelector: #generateCircleOfSize:!SDL2TouchGestureExample2 removeSelector: #endSwipe:!SDL2TouchGestureExample2 removeSelector: #endScroll:!SDL2TouchGestureExample2 removeSelector: #endRotation:!SDL2TouchGestureExample2 removeSelector: #endPinch:!SDL2TouchGestureExample2 removeSelector: #drawCircle!SDL2TouchGestureExample2 removeSelector: #drawBlackBackground!SDL2TouchGestureExample2 removeSelector: #displayAbortMessage!SDL2TouchGestureExample2 removeSelector: #createEventHandler!SDL2TouchGestureExample2 removeSelector: #changeColors!SDL2TouchGestureExample2 removeSelector: #beginSwipe:!SDL2TouchGestureExample2 removeSelector: #beginScroll:!SDL2TouchGestureExample2 removeSelector: #beginRotation:!SDL2TouchGestureExample2 removeSelector: #beginPinch:!SDL2TouchGestureExample2 removeSelector: #abortedSwipe!SDL2TouchGestureExample2 class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteSDL2TouchGestureExample2!SDL2TouchGestureExample removeSelector: #scroll:!SDL2TouchGestureExample removeSelector: #redraw!SDL2TouchGestureExample removeSelector: #pinch:!SDL2TouchGestureExample removeSelector: #initialize!SDL2TouchGestureExample removeSelector: #generateCircleOfSize:!SDL2TouchGestureExample removeSelector: #endScroll:!SDL2TouchGestureExample removeSelector: #endPinch:!SDL2TouchGestureExample removeSelector: #drawCircle!SDL2TouchGestureExample removeSelector: #createEventHandler!SDL2TouchGestureExample removeSelector: #beginScroll:!SDL2TouchGestureExample removeSelector: #beginPinch:!SDL2TouchGestureExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteSDL2TouchGestureExample!SDL2TouchExample removeSelector: #redraw!SDL2TouchExample removeSelector: #move:at:!SDL2TouchExample removeSelector: #initializeFromSurface!SDL2TouchExample removeSelector: #initialize!SDL2TouchExample removeSelector: #endMove:at:!SDL2TouchExample removeSelector: #drawMoves!SDL2TouchExample removeSelector: #drawCircleAt:color:!SDL2TouchExample removeSelector: #createEventHandler!SDL2TouchExample removeSelector: #clearSurface!SDL2TouchExample removeSelector: #beginMove:at:!SDL2TouchExample removeSelector: #backgroundColor!SDL2TouchExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteSDL2TouchExample!SDL2AthensExample removeSelector: #updateSurface!SDL2AthensExample removeSelector: #redrawAndUpdateSurface!SDL2AthensExample removeSelector: #redraw!SDL2AthensExample removeSelector: #open!SDL2AthensExample removeSelector: #maxFPS!SDL2AthensExample removeSelector: #initializeFromSurface!SDL2AthensExample removeSelector: #destroy!SDL2AthensExample removeSelector: #defaultExtent!SDL2AthensExample removeSelector: #createEventHandler!SDL2AthensExample removeSelector: #createDrawingProcess!SDL2AthensDrawingExample removeSelector: #startStrokeAt:!SDL2AthensDrawingExample removeSelector: #redraw!SDL2AthensDrawingExample removeSelector: #moveAt:!SDL2AthensDrawingExample removeSelector: #initialize!SDL2AthensDrawingExample removeSelector: #endStroke!SDL2AthensDrawingExample removeSelector: #createEventHandler!SDL2AthensDrawingExample removeSelector: #clearSurface!SDL2AthensDrawingExample removeSelector: #clearStrokes!Smalltalk globals removeClassNamed: #AnObsoleteSDL2AthensDrawingExample!Smalltalk globals removeClassNamed: #AnObsoleteSDL2AthensExample!OSWindowJoystickExample removeSelector: #simulateCharacter:!OSWindowJoystickExample removeSelector: #simulateBullets:!OSWindowJoystickExample removeSelector: #simulate!OSWindowJoystickExample removeSelector: #shoot!OSWindowJoystickExample removeSelector: #reset!OSWindowJoystickExample removeSelector: #redraw!OSWindowJoystickExample removeSelector: #initialize!OSWindowJoystickExample removeSelector: #drawCharacter!OSWindowJoystickExample removeSelector: #drawBullets!OSWindowJoystickExample removeSelector: #createEventHandler!OSWindowJoystickExample removeSelector: #characterVelocity:!OSWindowJoystickExample removeSelector: #characterVelocity!OSWindowJoystickExample removeSelector: #characterPosition:!OSWindowJoystickExample removeSelector: #characterPosition!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowJoystickExample!OSWindowGenericRendererExample removeSelector: #redrawAndPresent!OSWindowGenericRendererExample removeSelector: #redraw!OSWindowGenericRendererExample removeSelector: #present!OSWindowGenericRendererExample removeSelector: #open!OSWindowGenericRendererExample removeSelector: #maxFPS!OSWindowGenericRendererExample removeSelector: #initializeWithRenderer!OSWindowGenericRendererExample removeSelector: #enqueueRender!OSWindowGenericRendererExample removeSelector: #destroy!OSWindowGenericRendererExample removeSelector: #defaultExtent!OSWindowGenericRendererExample removeSelector: #createEventHandler!OSWindowGenericRendererDrawingExample removeSelector: #redraw!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowGenericRendererDrawingExample!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowGenericRendererExample!OSWindowTouchEventHandler removeSelector: #visitWindowCloseEvent:!OSWindowTouchEventHandler removeSelector: #visitTouchPointerUpEvent:!OSWindowTouchEventHandler removeSelector: #visitTouchPointerMoveEvent:!OSWindowTouchEventHandler removeSelector: #visitTouchPointerDownEvent:!OSWindowTouchEventHandler removeSelector: #touchExample:!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowTouchEventHandler!OSWindowJoystickExampleEventHandler removeSelector: #visitJoyButtonUpEvent:!OSWindowJoystickExampleEventHandler removeSelector: #visitJoyButtonDownEvent:!OSWindowJoystickExampleEventHandler removeSelector: #visitJoyAxisEvent:!OSWindowJoystickExampleEventHandler removeSelector: #normalizeAxisValue:!OSWindowJoystickExampleEventHandler removeSelector: #axisMaxValue!OSWindowJoystickExampleEventHandler removeSelector: #axisDeadZoneThreshold!OSWindowJoystickExampleEventHandler class removeSelector: #axisMaxValue!OSWindowJoystickExampleEventHandler class removeSelector: #axisDeadZoneThreshold!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowJoystickExampleEventHandler!OSWindowGenericRendererExampleEventHandler removeSelector: #visitWindowFrameEvent:!OSWindowGenericRendererExampleEventHandler removeSelector: #visitWindowExposeEvent:!OSWindowGenericRendererExampleEventHandler removeSelector: #visitWindowCloseEvent:!OSWindowGenericRendererExampleEventHandler removeSelector: #example:!OSWindowGenericRendererExampleEventHandler removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowGenericRendererExampleEventHandler!OSWindowAthensExampleEventHandler removeSelector: #visitWindowCloseEvent:!OSWindowAthensExampleEventHandler removeSelector: #athensExample:!OSWindowAthensExampleEventHandler removeSelector: #athensExample!OSWindowAthensDrawingExampleEventHandler removeSelector: #visitMouseMoveEvent:!OSWindowAthensDrawingExampleEventHandler removeSelector: #visitMouseButtonReleaseEvent:!OSWindowAthensDrawingExampleEventHandler removeSelector: #visitMouseButtonPressEvent:!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowAthensDrawingExampleEventHandler!Smalltalk globals removeClassNamed: #AnObsoleteOSWindowAthensExampleEventHandler!GLMExamples class removeSelector: #title!GLMExamples class removeSelector: #open!GLMExamples class removeSelector: #allExamples!GLMBasicExamples removeSelector: #wrapper!GLMBasicExamples removeSelector: #wizard!GLMBasicExamples removeSelector: #watcher!GLMBasicExamples removeSelector: #validatorDynamic!GLMBasicExamples removeSelector: #validator!GLMBasicExamples removeSelector: #validatingPresentation!GLMBasicExamples removeSelector: #updateableBrowser!GLMBasicExamples removeSelector: #treeWithTagsMoreLevels!GLMBasicExamples removeSelector: #treeWithTags!GLMBasicExamples removeSelector: #treeWithMenu!GLMBasicExamples removeSelector: #treeWithInitialSelection!GLMBasicExamples removeSelector: #treeWithExpansion!GLMBasicExamples removeSelector: #treeWithChildrenByLevel!GLMBasicExamples removeSelector: #treeWithAmountFiltering!GLMBasicExamples removeSelector: #threeInterdependentPanes!GLMBasicExamples removeSelector: #textSelection!GLMBasicExamples removeSelector: #textPortsExamples!GLMBasicExamples removeSelector: #textPortAction!GLMBasicExamples removeSelector: #textAttributes!GLMBasicExamples removeSelector: #taggedTree!GLMBasicExamples removeSelector: #tabsWithDifferentLabels!GLMBasicExamples removeSelector: #tabsWithDifferentActions!GLMBasicExamples removeSelector: #tableWithIcons!GLMBasicExamples removeSelector: #tableWithCustomWidth!GLMBasicExamples removeSelector: #staticAndDynamicMenu!GLMBasicExamples removeSelector: #stacker!GLMBasicExamples removeSelector: #spawnBrowserSelectionActions!GLMBasicExamples removeSelector: #spawnBrowserActions!GLMBasicExamples removeSelector: #smalltalkEditorWithBindings!GLMBasicExamples removeSelector: #singleInitialSelection!GLMBasicExamples removeSelector: #simpleTableWithTags!GLMBasicExamples removeSelector: #simpleTableWithSorting!GLMBasicExamples removeSelector: #simpleTable!GLMBasicExamples removeSelector: #simplePager!GLMBasicExamples removeSelector: #simpleFinderWithMenu!GLMBasicExamples removeSelector: #simpleFinder!GLMBasicExamples removeSelector: #simpleExpander!GLMBasicExamples removeSelector: #simpleActionList!GLMBasicExamples removeSelector: #populatePortActionsWithDifferentTargets!GLMBasicExamples removeSelector: #populatePortAction!GLMBasicExamples removeSelector: #pharoScript!GLMBasicExamples removeSelector: #onChangeOfPortAction!GLMBasicExamples removeSelector: #multipleFinderWithFilterAndSearch!GLMBasicExamples removeSelector: #multipleFinderWithFilter!GLMBasicExamples removeSelector: #multipleActions!GLMBasicExamples removeSelector: #multiInitialSelection!GLMBasicExamples removeSelector: #morphWithCustomInteraction!GLMBasicExamples removeSelector: #morphIcons!GLMBasicExamples removeSelector: #listsWithUpdatedSelection!GLMBasicExamples removeSelector: #listsInDashboardWithUpdatedSelection!GLMBasicExamples removeSelector: #listDragAndDrop!GLMBasicExamples removeSelector: #interdependentPanes!GLMBasicExamples removeSelector: #formatAsWords!GLMBasicExamples removeSelector: #fixSizePanes!GLMBasicExamples removeSelector: #finderWithDifferentFirstPresentation!GLMBasicExamples removeSelector: #dropDownListWithInitialValue!GLMBasicExamples removeSelector: #dropDownList!GLMBasicExamples removeSelector: #doubleClick!GLMBasicExamples removeSelector: #differentComposites!GLMBasicExamples removeSelector: #diff!GLMBasicExamples removeSelector: #dashboardsInDashboard!GLMBasicExamples removeSelector: #dashboardWithSpecificLayouts!GLMBasicExamples removeSelector: #dashboard!GLMBasicExamples removeSelector: #compoundTaggedTree!GLMBasicExamples removeSelector: #changingTabsInComposite!GLMBasicExamples removeSelector: #browserWithToolbar!GLMBasicExamples removeSelector: #allowNil!GLMBasicExamples removeSelector: #allowAllNil!GLMBasicExamples removeSelector: #actionsWithShowTitle!GLMBasicExamples removeSelector: #actionsFor:!GLMBasicExamples removeSelector: #accumulator!GLMBasicExamples class removeSelector: #title!Smalltalk globals removeClassNamed: #AnObsoleteGLMBasicExamples!Smalltalk globals removeClassNamed: #AnObsoleteGLMExamples!GLMExamplesBrowser removeSelector: #exampleListIn:!GLMExamplesBrowser removeSelector: #exampleIn:!GLMExamplesBrowser removeSelector: #exampleBrowserForPragma:in:!GLMExamplesBrowser removeSelector: #compose!GLMExamplesBrowser class removeSelector: #open!GLMExamplesBrowser class removeSelector: #menuExamplesOn:!Smalltalk globals removeClassNamed: #AnObsoleteGLMExamplesBrowser!GLMBrowserWithoutBlocksExample removeSelector: #displayList:!GLMBrowserWithoutBlocksExample removeSelector: #compose!Smalltalk globals removeClassNamed: #AnObsoleteGLMBrowserWithoutBlocksExample!TextFieldExample removeSelector: #textField!TextFieldExample removeSelector: #methodBrowser!TextFieldExample removeSelector: #initializeWidgets!TextFieldExample removeSelector: #initializePresenter!TextFieldExample class removeSelector: #title!TextFieldExample class removeSelector: #example!TextFieldExample class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteTextFieldExample!TabsExample removeSelector: #title!TabsExample removeSelector: #populateManager!TabsExample removeSelector: #objectInspectorTab!TabsExample removeSelector: #objectClassTab!TabsExample removeSelector: #manager!TabsExample removeSelector: #initializeWidgets!TabsExample removeSelector: #dynamicTab!TabsExample removeSelector: #browserTab!TabsExample class removeSelector: #open!TabsExample class removeSelector: #example!TabsExample class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteTabsExample!ScrollSyncExample removeSelector: #text!ScrollSyncExample removeSelector: #syncMorphPosition!ScrollSyncExample removeSelector: #sideRuler!ScrollSyncExample removeSelector: #loremIpsum!ScrollSyncExample removeSelector: #initializeWidgets!ScrollSyncExample removeSelector: #initialize!ScrollSyncExample removeSelector: #defaultSpecLayout!ScrollSyncExample removeSelector: #currentVerticalScrollPosition!ScrollSyncExample class removeSelector: #title!ScrollSyncExample class removeSelector: #example!ScrollSyncExample class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteScrollSyncExample!RadioButtonGroupExample removeSelector: #setGroup!RadioButtonGroupExample removeSelector: #setFocus!RadioButtonGroupExample removeSelector: #on:show:!RadioButtonGroupExample removeSelector: #initializeWidgets!RadioButtonGroupExample removeSelector: #initializePresenter!RadioButtonGroupExample removeSelector: #initializeMorphs!RadioButtonGroupExample removeSelector: #initialize!RadioButtonGroupExample removeSelector: #container!RadioButtonGroupExample removeSelector: #button3!RadioButtonGroupExample removeSelector: #button2!RadioButtonGroupExample removeSelector: #button1!RadioButtonGroupExample class removeSelector: #title!RadioButtonGroupExample class removeSelector: #example!RadioButtonGroupExample class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteRadioButtonGroupExample!OpenOnStringExample removeSelector: #title!OpenOnStringExample removeSelector: #textToReset!OpenOnStringExample removeSelector: #openOnString!OpenOnStringExample removeSelector: #label!OpenOnStringExample removeSelector: #input!OpenOnStringExample removeSelector: #initializeWidgets!OpenOnStringExample removeSelector: #initializePresenter!OpenOnStringExample removeSelector: #initialize:!OpenOnStringExample removeSelector: #check!OpenOnStringExample removeSelector: #button!OpenOnStringExample class removeSelector: #new:!OpenOnStringExample class removeSelector: #example!OpenOnStringExample class removeSelector: #defaultSpec!OpenOnStringExample class removeSelector: #bottomLayout!Smalltalk globals removeClassNamed: #AnObsoleteOpenOnStringExample!OpenOnNilExample removeSelector: #title!OpenOnNilExample removeSelector: #text!OpenOnNilExample removeSelector: #initializeWidgets!OpenOnNilExample removeSelector: #initialize:!OpenOnNilExample class removeSelector: #example!OpenOnNilExample class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteOpenOnNilExample!OpenOnIntExample removeSelector: #title!OpenOnIntExample removeSelector: #text!OpenOnIntExample removeSelector: #plus!OpenOnIntExample removeSelector: #minus!OpenOnIntExample removeSelector: #initializeWidgets!OpenOnIntExample removeSelector: #initializePresenter!OpenOnIntExample removeSelector: #initialize:!OpenOnIntExample class removeSelector: #new:!OpenOnIntExample class removeSelector: #example!OpenOnIntExample class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteOpenOnIntExample!MethodBrowser removeSelector: #wrapWith:!MethodBrowser removeSelector: #toolbarModel!MethodBrowser removeSelector: #textModel!MethodBrowser removeSelector: #takeKeyboardFocus!MethodBrowser removeSelector: #sortingBlock:!MethodBrowser removeSelector: #methods:!MethodBrowser removeSelector: #listModel!MethodBrowser removeSelector: #initializeWidgets!MethodBrowser removeSelector: #initializePresenter!MethodBrowser removeSelector: #displayBlock:!MethodBrowser removeSelector: #action!MethodBrowser removeSelector: #acceptBlock:!MethodBrowser class removeSelector: #title!MethodBrowser class removeSelector: #example!MethodBrowser class removeSelector: #defaultSpec2!MethodBrowser class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteMethodBrowser!ListSelectionPresenter removeSelector: #updateText!ListSelectionPresenter removeSelector: #textModel2!ListSelectionPresenter removeSelector: #textModel1!ListSelectionPresenter removeSelector: #listModel!ListSelectionPresenter removeSelector: #initializeWidgets!ListSelectionPresenter removeSelector: #initializePresenter!ListSelectionPresenter class removeSelector: #example!ListSelectionPresenter class removeSelector: #defaultSpec!ListSelectionPresenter class removeSelector: #bottomSpec!Smalltalk globals removeClassNamed: #AnObsoleteListSelectionModel!Smalltalk globals removeClassNamed: #AnObsoleteListSelectionPresenter!DynamicWidgetChange removeSelector: #initializeWidgets!DynamicWidgetChange removeSelector: #initialize!DynamicWidgetChange removeSelector: #changeToList!DynamicWidgetChange removeSelector: #changeToButton!DynamicWidgetChange removeSelector: #change!DynamicWidgetChange removeSelector: #button!DynamicWidgetChange removeSelector: #bottom!DynamicWidgetChange class removeSelector: #example!DynamicWidgetChange class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteDynamicWidgetChange!DropListExample removeSelector: #uniformDropList!DropListExample removeSelector: #setFocus!DropListExample removeSelector: #instantiateMorphs!DropListExample removeSelector: #initializeWidgets!DropListExample removeSelector: #initialize!DropListExample removeSelector: #heterogeneousDropList!DropListExample removeSelector: #container!DropListExample class removeSelector: #topSpec!DropListExample class removeSelector: #title!DropListExample class removeSelector: #example!DropListExample class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteDropListExample!ClassMethodBrowser removeSelector: #methodModel!ClassMethodBrowser removeSelector: #listModel!ClassMethodBrowser removeSelector: #initializeWidgets!ClassMethodBrowser removeSelector: #initializePresenter!ClassMethodBrowser removeSelector: #classes:!ClassMethodBrowser class removeSelector: #title!ClassMethodBrowser class removeSelector: #example!ClassMethodBrowser class removeSelector: #defaultSpec2!ClassMethodBrowser class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteClassMethodBrowser!CheckBoxExample removeSelector: #setGroup!CheckBoxExample removeSelector: #setFocus!CheckBoxExample removeSelector: #setActionsForButton3!CheckBoxExample removeSelector: #setActionsForButton2!CheckBoxExample removeSelector: #setActionsForButton1!CheckBoxExample removeSelector: #instantiateMorphs!CheckBoxExample removeSelector: #initializeWidgets!CheckBoxExample removeSelector: #initializePresenter!CheckBoxExample removeSelector: #initialize!CheckBoxExample removeSelector: #container!CheckBoxExample removeSelector: #button3!CheckBoxExample removeSelector: #button2!CheckBoxExample removeSelector: #button1!CheckBoxExample class removeSelector: #topSpec!CheckBoxExample class removeSelector: #title!CheckBoxExample class removeSelector: #example!CheckBoxExample class removeSelector: #defaultSpec3!CheckBoxExample class removeSelector: #defaultSpec2!CheckBoxExample class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteCheckBoxExample!ApplicationWithToolbar removeSelector: #title!ApplicationWithToolbar removeSelector: #text!ApplicationWithToolbar removeSelector: #subMenu!ApplicationWithToolbar removeSelector: #menu!ApplicationWithToolbar removeSelector: #initializeWidgets!ApplicationWithToolbar removeSelector: #addItemTo:!ApplicationWithToolbar class removeSelector: #example!ApplicationWithToolbar class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteApplicationWithToolbar!DynamicSpecExample removeSelector: #title!DynamicSpecExample removeSelector: #openOnString:!DynamicSpecExample removeSelector: #openOnString!DynamicSpecExample removeSelector: #openOnNil!DynamicSpecExample removeSelector: #openOnInteger:!DynamicSpecExample removeSelector: #openOnInteger!DynamicSpecExample removeSelector: #open:!DynamicSpecExample removeSelector: #open!DynamicSpecExample removeSelector: #object:!DynamicSpecExample removeSelector: #object!DynamicSpecExample removeSelector: #initialize!DynamicSpecExample class removeSelector: #object:!DynamicSpecExample class removeSelector: #exampleString!DynamicSpecExample class removeSelector: #exampleNil!DynamicSpecExample class removeSelector: #exampleInt!Smalltalk globals removeClassNamed: #AnObsoleteDynamicSpecExample!PersonDataExample removeSelector: #secondName:!PersonDataExample removeSelector: #secondName!PersonDataExample removeSelector: #married:!PersonDataExample removeSelector: #married!PersonDataExample removeSelector: #firstName:!PersonDataExample removeSelector: #firstName!PersonDataExample removeSelector: #age:!PersonDataExample removeSelector: #age!PersonDataExample class removeSelector: #firstName:secondName:age:married:!Smalltalk globals removeClassNamed: #AnObsoletePersonDataExample!SimplestClassListExample removeSelector: #selected:!SimplestClassListExample removeSelector: #selected!SimplestClassListExample removeSelector: #rootItemsTest!SimplestClassListExample removeSelector: #rootItemsOrig!SimplestClassListExample removeSelector: #rootItems!SimplestClassListExample removeSelector: #plugOne!SimplestClassListExample removeSelector: #openOn:!SimplestClassListExample removeSelector: #openDialogOn:!SimplestClassListExample removeSelector: #defaultTreeMorph!SimplestClassListExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteSimplestClassListExample!SimpleGridExample removeSelector: #treeMorph!SimpleGridExample removeSelector: #rootNodeClassFromItem:!SimpleGridExample removeSelector: #rootItems!SimpleGridExample removeSelector: #open!SimpleGridExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteSimpleGridExample!PackageTreeExample removeSelector: #rootNodeClassFromItem:!PackageTreeExample removeSelector: #rootItems!PackageTreeExample removeSelector: #open!PackageTreeExample removeSelector: #menu:shifted:!PackageTreeExample removeSelector: #keyStroke:from:!PackageTreeExample removeSelector: #doubleClick!PackageTreeExample removeSelector: #defaultTreeMorph!PackageTreeExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoletePackageTreeExample!ClassTreeExample removeSelector: #treeMorph!ClassTreeExample removeSelector: #rootNodeClassFromItem:!ClassTreeExample removeSelector: #rootItems!ClassTreeExample removeSelector: #rootClass:!ClassTreeExample removeSelector: #rootClass!ClassTreeExample removeSelector: #openOn:!ClassTreeExample removeSelector: #open!ClassTreeExample removeSelector: #menu:shifted:!ClassTreeExample removeSelector: #keyStroke:from:!ClassTreeExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteClassTreeExample!LazyClassListExample removeSelector: #treeMorphClass!LazyClassListExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteLazyClassListExample!ClassListExample removeSelector: #treeMorph!ClassListExample removeSelector: #rootNodeClassFromItem:!ClassListExample removeSelector: #rootItems!ClassListExample removeSelector: #rootClass:!ClassListExample removeSelector: #rootClass!ClassListExample removeSelector: #openOn:!ClassListExample removeSelector: #open!ClassListExample removeSelector: #menu:shifted:!ClassListExample removeSelector: #keyStroke:from:!ClassListExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteClassListExample!ExampleBuilderMorph removeSelector: #openModal:!!Trait method!chooseColor: aColor title: title	"Answer the result of a color selector dialog with the given title and initial colour."	^self theme		chooseColorIn: self		title: title		color: aColor! !ExampleBuilderMorph removeSelector: #chooseColor:title:!Smalltalk globals removeClassNamed: #AnObsoleteExampleBuilderMorph!SimpleGridNodeExample removeSelector: #secondNameMorph!SimpleGridNodeExample removeSelector: #secondName:!SimpleGridNodeExample removeSelector: #secondName!SimpleGridNodeExample removeSelector: #marriedMorph!SimpleGridNodeExample removeSelector: #married:!SimpleGridNodeExample removeSelector: #married!SimpleGridNodeExample removeSelector: #firstNameMorph!SimpleGridNodeExample removeSelector: #firstName:!SimpleGridNodeExample removeSelector: #firstName!SimpleGridNodeExample removeSelector: #ageMorph!SimpleGridNodeExample removeSelector: #age:!SimpleGridNodeExample removeSelector: #age!Smalltalk globals removeClassNamed: #AnObsoleteSimpleGridNodeExample!PackageNodeExample removeSelector: #childrenItems!PackageNodeExample removeSelector: #childNodeClassFromItem:!PackageNodeExample removeSelector: #asString!Smalltalk globals removeClassNamed: #AnObsoletePackageNodeExample!PackageMethodNodeExample removeSelector: #selector!PackageMethodNodeExample removeSelector: #itemClass!PackageMethodNodeExample removeSelector: #compiledMethod!PackageMethodNodeExample removeSelector: #browseItem!Smalltalk globals removeClassNamed: #AnObsoletePackageMethodNodeExample!PackageMethodCategoryNodeExample removeSelector: #childrenItems!PackageMethodCategoryNodeExample removeSelector: #childNodeClassFromItem:!Smalltalk globals removeClassNamed: #AnObsoletePackageMethodCategoryNodeExample!PackageClassNodeExample removeSelector: #methodsInCategory:!PackageClassNodeExample removeSelector: #childrenItems!PackageClassNodeExample removeSelector: #childNodeClassFromItem:!PackageClassNodeExample removeSelector: #browseItem!Smalltalk globals removeClassNamed: #AnObsoletePackageClassNodeExample!PackageAbstractNodeExample removeSelector: #menu:shifted:!PackageAbstractNodeExample removeSelector: #keyStroke:from:!PackageAbstractNodeExample removeSelector: #inspectItem!PackageAbstractNodeExample removeSelector: #exploreItem!PackageAbstractNodeExample removeSelector: #doubleClick!PackageAbstractNodeExample removeSelector: #contents!PackageAbstractNodeExample removeSelector: #browseItem!Smalltalk globals removeClassNamed: #AnObsoletePackageAbstractNodeExample!ClassTreeNodeExample removeSelector: #menu:shifted:!ClassTreeNodeExample removeSelector: #keyStroke:from:!ClassTreeNodeExample removeSelector: #inspectItem!ClassTreeNodeExample removeSelector: #icon!ClassTreeNodeExample removeSelector: #exploreItem!ClassTreeNodeExample removeSelector: #contents!ClassTreeNodeExample removeSelector: #commentText!ClassTreeNodeExample removeSelector: #classButton!ClassTreeNodeExample removeSelector: #childrenItems!ClassTreeNodeExample removeSelector: #browseItem!Smalltalk globals removeClassNamed: #AnObsoleteClassTreeNodeExample!ClassListNodeExample removeSelector: #menu:shifted:!ClassListNodeExample removeSelector: #keyStroke:from:!ClassListNodeExample removeSelector: #inspectItem!ClassListNodeExample removeSelector: #icon!ClassListNodeExample removeSelector: #exploreItem!ClassListNodeExample removeSelector: #commentText!ClassListNodeExample removeSelector: #classButton!ClassListNodeExample removeSelector: #browseItem!Smalltalk globals removeClassNamed: #AnObsoleteClassListNodeExample!SimplestPaginatedClassListExample removeSelector: #rootItems!SimplestPaginatedClassListExample removeSelector: #openOn:!SimplestPaginatedClassListExample removeSelector: #openDialogOn:!SimplestPaginatedClassListExample removeSelector: #itemsForTest!SimplestPaginatedClassListExample removeSelector: #defaultTreeMorph!SimplestPaginatedClassListExample class removeSelector: #example!SimplestClassListWithPagerExample removeSelector: #defaultTreeMorph!SimplestClassListWithPagerExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteSimplestClassListWithPagerExample!SimplestClassListWithChunkExample removeSelector: #defaultTreeMorph!SimplestClassListWithChunkExample class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteSimplestClassListWithChunkExample!Smalltalk globals removeClassNamed: #AnObsoleteSimplestPaginatedClassListExample!WidgetExamples class removeSelector: #exampleWindowWithToolbars!WidgetExamples class removeSelector: #exampleTextEntryWithCompletionDialog!WidgetExamples class removeSelector: #exampleOtherControls!WidgetExamples class removeSelector: #exampleGroups!WidgetExamples class removeSelector: #exampleDialogs!WidgetExamples class removeSelector: #exampleColorControls!WidgetExamples class removeSelector: #exampleBasicControls!WidgetExamples class removeSelector: #colorControls!WidgetExamples class removeSelector: #closeExampleDialogs!WidgetExamples class removeSelector: #builder!Smalltalk globals removeClassNamed: #AnObsoleteWidgetExamples!TabExample removeSelector: #window!TabExample removeSelector: #tabs!TabExample removeSelector: #storedListTab!TabExample removeSelector: #redMorphTab!TabExample removeSelector: #open!TabExample removeSelector: #initialize!TabExample removeSelector: #freshListTab!TabExample removeSelector: #delete!TabExample removeSelector: #blueMorphTab!TabExample removeSelector: #addTabs!TabExample class removeSelector: #open!Smalltalk globals removeClassNamed: #AnObsoleteTabExample!PluggableToggleButtonMorphExample removeSelector: #toggleAction:!PluggableToggleButtonMorphExample removeSelector: #buildToggleButtonWithIcon!PluggableToggleButtonMorphExample removeSelector: #buildToggleButtonNoLabel!PluggableToggleButtonMorphExample removeSelector: #buildToggleButton!PluggableToggleButtonMorphExample class removeSelector: #exampleToggleButtonWithIcon!PluggableToggleButtonMorphExample class removeSelector: #exampleToggleButtonNoLabel!PluggableToggleButtonMorphExample class removeSelector: #exampleToggleButton!Smalltalk globals removeClassNamed: #AnObsoletePluggableToggleButtonMorphExample!PluggableButtonMorphExample removeSelector: #state:!PluggableButtonMorphExample removeSelector: #state!PluggableButtonMorphExample removeSelector: #label:!PluggableButtonMorphExample removeSelector: #label!PluggableButtonMorphExample removeSelector: #initialize!PluggableButtonMorphExample removeSelector: #icon:!PluggableButtonMorphExample removeSelector: #icon!PluggableButtonMorphExample removeSelector: #buildButtonWithIconTop!PluggableButtonMorphExample removeSelector: #buildButtonWithIconRight!PluggableButtonMorphExample removeSelector: #buildButtonWithIconBottom!PluggableButtonMorphExample removeSelector: #buildButtonWithIcon!PluggableButtonMorphExample removeSelector: #buildButtonNoLabel!PluggableButtonMorphExample removeSelector: #buildButton!PluggableButtonMorphExample removeSelector: #action!PluggableButtonMorphExample class removeSelector: #exampleButtonWithIconTop!PluggableButtonMorphExample class removeSelector: #exampleButtonWithIconRight!PluggableButtonMorphExample class removeSelector: #exampleButtonWithIconBottom!PluggableButtonMorphExample class removeSelector: #exampleButtonWithIcon!PluggableButtonMorphExample class removeSelector: #exampleButtonNoLabel!PluggableButtonMorphExample class removeSelector: #exampleButtonFont!PluggableButtonMorphExample class removeSelector: #exampleButton!Smalltalk globals removeClassNamed: #AnObsoletePluggableButtonMorphExample!ExampleRadioButtonModel removeSelector: #option:!ExampleRadioButtonModel removeSelector: #option!ExampleRadioButtonModel removeSelector: #isRight!ExampleRadioButtonModel removeSelector: #isLeft!ExampleRadioButtonModel removeSelector: #isCenter!ExampleRadioButtonModel removeSelector: #initialize!ExampleRadioButtonModel removeSelector: #beRight!ExampleRadioButtonModel removeSelector: #beLeft!ExampleRadioButtonModel removeSelector: #beCenter!Smalltalk globals removeClassNamed: #AnObsoleteExampleRadioButtonModel!Smalltalk globals removeClassNamed: #AnObsoleteMCMockClassB!MCMockClassA removeSelector: #two!MCMockClassA removeSelector: #truth!MCMockClassA removeSelector: #q!MCMockClassA removeSelector: #one!MCMockClassA removeSelector: #moreTruth!MCMockClassA removeSelector: #falsehood!MCMockClassA removeSelector: #d!MCMockClassA removeSelector: #c!MCMockClassA removeSelector: #b!MCMockClassA removeSelector: #a!MCMockClassA class removeSelector: #touchCVar!MCMockClassA class removeSelector: #one!MCMockClassA class removeSelector: #initialize!MCMockClassA class removeSelector: #initializationOrder!MCMockClassA class removeSelector: #cVar!MCMockASubclass removeSelector: #variables2!MCMockASubclass removeSelector: #variables!MCMockASubclass class removeSelector: #initialize!Smalltalk globals removeClassNamed: #AnObsoleteMCMockASubclass!Smalltalk globals removeClassNamed: #AnObsoleteMCMockClassA!Smalltalk globals removeClassNamed: #AnObsoleteMCMockClassI!Smalltalk globals removeClassNamed: #AnObsoleteMCMockClassH!Smalltalk globals removeClassNamed: #AnObsoleteMCMockClassG!Smalltalk globals removeClassNamed: #AnObsoleteMCMockClassF!MCMockClassE class removeSelector: #two!Smalltalk globals removeClassNamed: #AnObsoleteMCMockClassE!MCMockClassD removeSelector: #one!Smalltalk globals removeClassNamed: #AnObsoleteMCMockClassD!WeakAnnouncerTest removeSelector: #testWeakSubscriptionRelease!WeakAnnouncerTest removeSelector: #testWeakSubscription!WeakAnnouncerTest removeSelector: #testWeakObject!WeakAnnouncerTest removeSelector: #testWeakDoubleAnnouncer!WeakAnnouncerTest removeSelector: #testNoWeakBlock!WeakAnnouncerTest removeSelector: #testNoDeadWeakSubscriptions!WeakAnnouncerTest removeSelector: #longTestCase!WeakAnnouncerTest removeSelector: #benchWeakSubscriptionStatic!WeakAnnouncerTest removeSelector: #benchWeakSubscriptionDynamic!WeakAnnouncerTest removeSelector: #benchManyWeakGuys!Smalltalk globals removeClassNamed: #AnObsoleteWeakAnnouncerTest!AnnouncerTest removeSelector: #testUnsubscribeSet!AnnouncerTest removeSelector: #testUnsubscribeSend!AnnouncerTest removeSelector: #testUnsubscribeBlock!AnnouncerTest removeSelector: #testTwoArgBlock!AnnouncerTest removeSelector: #testSymbolIdentifier!AnnouncerTest removeSelector: #testSubscribeSubclass!AnnouncerTest removeSelector: #testSubscribeSetWithExclusionOfSetItem!AnnouncerTest removeSelector: #testSubscribeSetWithExclusionOfMultipleAnnouncements!AnnouncerTest removeSelector: #testSubscribeSetWithExclusion!AnnouncerTest removeSelector: #testSubscribeSet!AnnouncerTest removeSelector: #testSubscribeSend!AnnouncerTest removeSelector: #testSubscribeOnSpecificAnnouncer!AnnouncerTest removeSelector: #testSubscribeClassWithExclusion!AnnouncerTest removeSelector: #testSubscribeBlock!AnnouncerTest removeSelector: #testPreparationAnnouncementDeliveryWhenNoSubscriptions!AnnouncerTest removeSelector: #testPreparationAnnouncementDelivery!AnnouncerTest removeSelector: #testNoArgBlock!AnnouncerTest removeSelector: #testAnnouncingReentrant!AnnouncerTest removeSelector: #testAnnounceInstance!AnnouncerTest removeSelector: #testAnnounceClass!AnnouncerTest removeSelector: #setUp!AnnouncerTest removeSelector: #newAnnouncer!AnnouncerTest class removeSelector: #shouldInheritSelectors!Smalltalk globals removeClassNamed: #AnObsoleteAnnouncerTest!AnnouncementSetTest removeSelector: #testInstanceCreation!AnnouncementSetTest removeSelector: #testIncludeOnlyOnce!Smalltalk globals removeClassNamed: #AnObsoleteAnnouncementSetTest!AnnouncementMockC removeSelector: #prepareForDelivery!AnnouncementMockC removeSelector: #initialize!AnnouncementMockC removeSelector: #announcingCounter!Smalltalk globals removeClassNamed: #AnObsoleteAnnouncementMockC!AnnouncementMockB removeSelector: #parameter:!AnnouncementMockB removeSelector: #parameter!AnnouncementMockB class removeSelector: #with:!Smalltalk globals removeClassNamed: #AnObsoleteAnnouncementMockB!Smalltalk globals removeClassNamed: #AnObsoleteAnnouncementMockA!NumberParserTest removeSelector: #testcheckForCoverage!NumberParserTest removeSelector: #testSqueezingOutNumbers!NumberParserTest removeSelector: #testScaledDecimalWithoutScaleSpecification!NumberParserTest removeSelector: #testScaledDecimalWithTrailingZeroes!NumberParserTest removeSelector: #testIsNumber!NumberParserTest removeSelector: #testIntegerWithNegExponentIsAFloat!NumberParserTest removeSelector: #testIntegerReadWithRadix!NumberParserTest removeSelector: #testIntegerReadFrom!NumberParserTest removeSelector: #testFloatmin!NumberParserTest removeSelector: #testFloatReadWithRadix!NumberParserTest removeSelector: #testFloatReadError!NumberParserTest removeSelector: #testFloatPrintString!NumberParserTest removeSelector: #testFloatMaxAndMin!NumberParserTest removeSelector: #testFloatGradualUnderflow!NumberParserTest removeSelector: #testFloatFromStreamWithExponent!NumberParserTest removeSelector: #testFloatFromStreamAsNumber!NumberParserTest removeSelector: #testFail!NumberParserTest removeSelector: #areLowercaseDigitsAllowed!Smalltalk globals removeClassNamed: #AnObsoleteNumberParserTest!RBVariableNodeTest removeSelector: #testStartForReplacement02!RBVariableNodeTest removeSelector: #testStartForReplacement!Smalltalk globals removeClassNamed: #AnObsoleteRBVariableNodeTest!RBScannerTest removeSelector: #verifyErrorToken:message:valueExpected:!RBScannerTest removeSelector: #testNextWithTwoDoubleQuotesInCommentGetError!RBScannerTest removeSelector: #testNextWithTwoDoubleQuotesInComment!RBScannerTest removeSelector: #testNextWithAnUnknownCharacterGetError!RBScannerTest removeSelector: #testNextWithAnOpeningStringsGetError!RBScannerTest removeSelector: #testNextWithAnOpeningCommentGetError!RBScannerTest removeSelector: #testNextWithAnOpeningCommentAtEndGetError!RBScannerTest removeSelector: #testNextWithAnIdentifierTokenGetTheIdentifierToken!RBScannerTest removeSelector: #testNextWithAWrongSymbolGetError!RBScannerTest removeSelector: #testNextLiteralCharacterWithAMissingCharacter!RBScannerTest removeSelector: #buildScannerForText:!Smalltalk globals removeClassNamed: #AnObsoleteRBScannerTest!RBReadBeforeWrittenTesterTest removeSelector: #testReadBeforeWritten1!RBReadBeforeWrittenTesterTest removeSelector: #testReadBeforeWritten!Smalltalk globals removeClassNamed: #AnObsoleteRBReadBeforeWrittenTesterTest!RBProgramNodeTest removeSelector: #testSetCommentsToNil!RBProgramNodeTest removeSelector: #testReplaceVariable!RBProgramNodeTest removeSelector: #testReplaceMethodUnary!RBProgramNodeTest removeSelector: #testReplaceMethodKeywordLong!RBProgramNodeTest removeSelector: #testReplaceMethodKeyword!RBProgramNodeTest removeSelector: #testReplaceMethodBinary!RBProgramNodeTest removeSelector: #testReplaceMessageReceiver!RBProgramNodeTest removeSelector: #testReplaceMessageArgument!RBProgramNodeTest removeSelector: #testReplaceMessage!RBProgramNodeTest removeSelector: #testReplaceLiteralArray2!RBProgramNodeTest removeSelector: #testReplaceLiteralArray1!RBProgramNodeTest removeSelector: #testReplaceLiteral!RBProgramNodeTest removeSelector: #testReplaceBlock!RBProgramNodeTest removeSelector: #testReplaceAssignment!RBProgramNodeTest removeSelector: #testRemovePropertyIfAbsent!RBProgramNodeTest removeSelector: #testRemoveProperty!RBProgramNodeTest removeSelector: #testPropertyAtIfAbsentPut!RBProgramNodeTest removeSelector: #testPropertyAtIfAbsent!RBProgramNodeTest removeSelector: #testPropertyAt!RBProgramNodeTest removeSelector: #testHasProperty!RBProgramNodeTest removeSelector: #testAddTemporaryNamed!RBProgramNodeTest removeSelector: #testAddTemporariesNamed!RBProgramNodeTest removeSelector: #testAddSelfReturn!RBProgramNodeTest removeSelector: #testAddReturn!RBProgramNodeTest removeSelector: #testAddNodesFirst!RBProgramNodeTest removeSelector: #testAddNodesBefore!RBProgramNodeTest removeSelector: #testAddNodes!RBProgramNodeTest removeSelector: #testAddNodeFirst!RBProgramNodeTest removeSelector: #testAddNodeBefore!RBProgramNodeTest removeSelector: #testAddNode!RBProgramNodeTest removeSelector: #parseMethod:!RBProgramNodeTest removeSelector: #parseExpression:!RBProgramNodeTest removeSelector: #node!RBProgramNodeTest class removeSelector: #packageNamesUnderTest!Smalltalk globals removeClassNamed: #AnObsoleteRBProgramNodeTest!RBPatternParserTest removeSelector: #testParseFaultyPatternBlock!RBPatternParserTest class removeSelector: #parserClass!Smalltalk globals removeClassNamed: #AnObsoleteRBPatternParserTest!RBParserTest removeSelector: #treeWithReallyEverything!RBParserTest removeSelector: #treeWithEverything!RBParserTest removeSelector: #testSymbolLiteral!RBParserTest removeSelector: #testString!RBParserTest removeSelector: #testStatements!RBParserTest removeSelector: #testReplacingNodes!RBParserTest removeSelector: #testQueryingPrimitiveErrorVar!RBParserTest removeSelector: #testQuerying!RBParserTest removeSelector: #testPrimitives!RBParserTest removeSelector: #testPragmas!RBParserTest removeSelector: #testPragmaPrimitiveError!RBParserTest removeSelector: #testPragmaImplicitLiteralArrayIsInvalid!RBParserTest removeSelector: #testPragmaConstantLiteralArgument!RBParserTest removeSelector: #testPositions!RBParserTest removeSelector: #testParsingLiteralMessages!RBParserTest removeSelector: #testParserErrors!RBParserTest removeSelector: #testParseUnfinishedBlockWithFaultyBody!RBParserTest removeSelector: #testParseMethodWithErrorTokenIsWellFormed!RBParserTest removeSelector: #testParseFaultyMethodMessagePattern!RBParserTest removeSelector: #testParseFaultyMethodExpresionHasErrorNodeAsFinal!RBParserTest removeSelector: #testParseFaultyMethod!RBParserTest removeSelector: #testParseFaultyLiteral!RBParserTest removeSelector: #testParseFaultyBlock!RBParserTest removeSelector: #testParents!RBParserTest removeSelector: #testNumberRadixParsing!RBParserTest removeSelector: #testNumberParsing!RBParserTest removeSelector: #testNodesDo!RBParserTest removeSelector: #testNegativeNumberError!RBParserTest removeSelector: #testModifying!RBParserTest removeSelector: #testMethodPatterns!RBParserTest removeSelector: #testMatchInContext!RBParserTest removeSelector: #testLiteralIntevals!RBParserTest removeSelector: #testLiteralArray!RBParserTest removeSelector: #testIsA!RBParserTest removeSelector: #testInvalidPragmaPosition!RBParserTest removeSelector: #testIntervals!RBParserTest removeSelector: #testFormatter!RBParserTest removeSelector: #testEquivalentExceptRenaming!RBParserTest removeSelector: #testEqualToWithMapping!RBParserTest removeSelector: #testCreationProtocol!RBParserTest removeSelector: #testCopyInContext!RBParserTest removeSelector: #testCopy!RBParserTest removeSelector: #testComparingTrees!RBParserTest removeSelector: #testCascadeReplacement!RBParserTest removeSelector: #testCascade!RBParserTest removeSelector: #testBlockReturnNode!RBParserTest removeSelector: #testBlockNodeIsUsed!RBParserTest removeSelector: #testBinarySelectors!RBParserTest removeSelector: #testBestNodeFor!RBParserTest removeSelector: #testArrayNodesArentArrays!RBParserTest removeSelector: #testArray!RBParserTest removeSelector: #parserClass!RBParserTest removeSelector: #parseFaultyMethod:!RBParserTest removeSelector: #parseFaultyExpression:!RBParserTest removeSelector: #parseError:!RBParserTest removeSelector: #exampleClasses!RBParserTest removeSelector: #compare:to:!RBParserTest class removeSelector: #parserClass!Smalltalk globals removeClassNamed: #AnObsoleteRBParserTest!RBParseTreeSearcherTest removeSelector: #testSearchingComposedSelector2!RBParseTreeSearcherTest removeSelector: #testSearchingComposedSelector!RBParseTreeSearcherTest removeSelector: #testSearching!RBParseTreeSearcherTest removeSelector: #testDynamicArrayWithStatementListPattern!RBParseTreeSearcherTest removeSelector: #testDynamicArrayStatements!RBParseTreeSearcherTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBParseTreeSearcherTest!RBParseTreeRewriterTest removeSelector: #treeToBeRewritten!RBParseTreeRewriterTest removeSelector: #testRewrites!RBParseTreeRewriterTest removeSelector: #testRewriteMethods!RBParseTreeRewriterTest removeSelector: #testRewriteDynamicArray!RBParseTreeRewriterTest removeSelector: #testRewriteDoesNotReuseOriginalNodes!RBParseTreeRewriterTest removeSelector: #testPatternCascade!RBParseTreeRewriterTest removeSelector: #testMultimatch!RBParseTreeRewriterTest removeSelector: #testBlockRewritesWithTrueConditionIsNotExecutedWhenNotMatchingCorrectNode!RBParseTreeRewriterTest removeSelector: #testBlockRewritesFirstRuleTakePrecedence!RBParseTreeRewriterTest removeSelector: #testBlockRewritesArgumentsTakeIntoAccountConditions!RBParseTreeRewriterTest removeSelector: #testBlockRewritesArguments!RBParseTreeRewriterTest removeSelector: #testBlockRewritesAreNotChained!RBParseTreeRewriterTest removeSelector: #testBlockRewrites!RBParseTreeRewriterTest removeSelector: #setUp!RBParseTreeRewriterTest removeSelector: #compare:to:!Smalltalk globals removeClassNamed: #AnObsoleteRBParseTreeRewriterTest!RBNullFormatterTest removeSelector: #testGivenAMethodNodeWhenSourceNotAvailableThenSelectorWithWarningMessageReturnedAsResultOfFormatting!RBNullFormatterTest removeSelector: #testGivenAMethodNodeWhenSourceAvailableThenSourceReturnedAsResultOfFormatting!Smalltalk globals removeClassNamed: #AnObsoleteRBNullFormatterTest!RBMethodNodeTest removeSelector: #testSelectorAndArgumentNames!Smalltalk globals removeClassNamed: #AnObsoleteRBMethodNodeTest!RBFormatterTest removeSelector: #testPreserveLiteralNumberFormat!RBFormatterTest removeSelector: #testPreserveLiteralArrayFormat!RBFormatterTest removeSelector: #testLiteralDynamicArray!RBFormatterTest removeSelector: #testFormatPragmaWithLastIsSymbolArgument!RBFormatterTest removeSelector: #testCoreSystem!RBFormatterTest removeSelector: #formatterClass!RBFormatterTest removeSelector: #formatClass:selector:!RBFormatterTest removeSelector: #formatClass:!Smalltalk globals removeClassNamed: #AnObsoleteRBFormatterTest!NumberParsingTest removeSelector: #testScaledDecimalWithoutScaleSpecification!NumberParsingTest removeSelector: #testScaledDecimalWithTrailingZeroes!NumberParsingTest removeSelector: #testNumberReadOnlyDigit!NumberParsingTest removeSelector: #testNumberReadExactlyError!NumberParsingTest removeSelector: #testNegativeZero!NumberParsingTest removeSelector: #testIntegerReadWithRadix!NumberParsingTest removeSelector: #testIntegerReadFrom!NumberParsingTest removeSelector: #testIntegerFromString!NumberParsingTest removeSelector: #testFloatReadWithRadix!NumberParsingTest removeSelector: #testFloatFromStringWithExponent!NumberParsingTest removeSelector: #testFloatFromStringAsNumber!NumberParsingTest removeSelector: #testFloatFromStreamWithExponent!NumberParsingTest removeSelector: #testFloatFromStreamAsNumber!Smalltalk globals removeClassNamed: #AnObsoleteNumberParsingTest!RGSliceTest removeSelector: #testNewSlice!RGSliceTest removeSelector: #testNestingContainers!RGSliceTest removeSelector: #testAddingClasses!Smalltalk globals removeClassNamed: #AnObsoleteRGSliceTest!RGPackageTest removeSelector: #testNewPackage!RGPackageTest removeSelector: #testAddingPackage!RGPackageTest removeSelector: #testAddingClass!Smalltalk globals removeClassNamed: #AnObsoleteRGPackageTest!RGNamespaceTest removeSelector: #testCreatingNamespace!Smalltalk globals removeClassNamed: #AnObsoleteRGNamespaceTest!Smalltalk globals removeClassNamed: #AnObsoleteRGContainerTest!RGVariableDefinitionTest removeSelector: #testVariableEquality!RGVariableDefinitionTest removeSelector: #testPoolVariable!RGVariableDefinitionTest removeSelector: #testInstanceVariable!RGVariableDefinitionTest removeSelector: #testClassVariable!RGVariableDefinitionTest removeSelector: #testClassInstanceVariable!Smalltalk globals removeClassNamed: #AnObsoleteRGVariableDefinitionTest!RGTraitDefinitionTest removeSelector: #testTraitEquality!RGTraitDefinitionTest removeSelector: #testNonExistingClass!RGTraitDefinitionTest removeSelector: #testExistingTrait!RGTraitDefinitionTest removeSelector: #testAsTraitDefinition2!RGTraitDefinitionTest removeSelector: #testAsTraitDefinition!RGTraitDefinitionTest removeSelector: #testAddingMethods!Smalltalk globals removeClassNamed: #AnObsoleteRGTraitDefinitionTest!RGMethodDefinitionTest removeSelector: #testSorting!RGMethodDefinitionTest removeSelector: #testSameMethodInSet!RGMethodDefinitionTest removeSelector: #testNonExistingMethodWithClass!RGMethodDefinitionTest removeSelector: #testMethodEquality!RGMethodDefinitionTest removeSelector: #testMessagesNonExistingMethodWithSource!RGMethodDefinitionTest removeSelector: #testMessagesNonExistingMethodWithNoSource!RGMethodDefinitionTest removeSelector: #testMessagesExistingMethod!RGMethodDefinitionTest removeSelector: #testIsAbstractNonExistingMethod!RGMethodDefinitionTest removeSelector: #testIsAbstractExistingMethod!RGMethodDefinitionTest removeSelector: #testExtensionMethod!RGMethodDefinitionTest removeSelector: #testExistingMethodWithoutClass!RGMethodDefinitionTest removeSelector: #testExistingMethodWithPointer!RGMethodDefinitionTest removeSelector: #testExistingMethodWithClass!RGMethodDefinitionTest removeSelector: #testDifferentObjectButSameMethodInSet!RGMethodDefinitionTest removeSelector: #testCreatingMethodsWithoutFactory!RGMethodDefinitionTest removeSelector: #testClassNameSelectorIsMetaSide!RGMethodDefinitionTest removeSelector: #testAsPassive!RGMethodDefinitionTest removeSelector: #testAsMethodDefinition2!RGMethodDefinitionTest removeSelector: #testAsMethodDefinition!RGMethodDefinitionTest removeSelector: #testAsHistorical!RGMethodDefinitionTest removeSelector: #testAsActive!RGMethodDefinitionTest removeSelector: #testArgumentNamesNonExistingMethodWithSource!RGMethodDefinitionTest removeSelector: #testArgumentNamesNonExistingMethodWithNoSource!RGMethodDefinitionTest removeSelector: #testArgumentNamesExistingMethod!RGMethodDefinitionTest removeSelector: #testASTNonExistingMethodWithSource!RGMethodDefinitionTest removeSelector: #testASTNonExistingMethodWithNoSource!RGMethodDefinitionTest removeSelector: #testASTExistingMethod!RGMethodDefinitionTest removeSelector: #tearDown!RGMethodDefinitionTest removeSelector: #runCase!Smalltalk globals removeClassNamed: #AnObsoleteRGMethodDefinitionTest!RGMetatraitDefinitionTest removeSelector: #testAsClassTraitfinition!Smalltalk globals removeClassNamed: #AnObsoleteRGMetatraitDefinitionTest!RGMetaclassDefinitionTest removeSelector: #testAsMetaclassDefinition!Smalltalk globals removeClassNamed: #AnObsoleteRGMetaclassDefinitionTest!RGGlobalDefinitionTest removeSelector: #testPoolDefinition!RGGlobalDefinitionTest removeSelector: #testGlobalVariableDefinition!RGGlobalDefinitionTest removeSelector: #testEquality!Smalltalk globals removeClassNamed: #AnObsoleteRGGlobalDefinitionTest!RGCommentDefinitionTest removeSelector: #testingConversion!RGCommentDefinitionTest removeSelector: #testSorting!RGCommentDefinitionTest removeSelector: #testNewComment!RGCommentDefinitionTest removeSelector: #testCommentWithoutAuthor!RGCommentDefinitionTest removeSelector: #testCommentFromSourceFile!RGCommentDefinitionTest removeSelector: #testActiveComment!Smalltalk globals removeClassNamed: #AnObsoleteRGCommentDefinitionTest!RGClassDefinitionTest removeSelector: #testWithSuperclass!RGClassDefinitionTest removeSelector: #testWithProtocols!RGClassDefinitionTest removeSelector: #testWithPoolDictionaries!RGClassDefinitionTest removeSelector: #testWithInstanceVariables!RGClassDefinitionTest removeSelector: #testWithDefaultNamespace!RGClassDefinitionTest removeSelector: #testWithComment!RGClassDefinitionTest removeSelector: #testWithClassVariables!RGClassDefinitionTest removeSelector: #testWithClassInstanceVariables!RGClassDefinitionTest removeSelector: #testWithCategory!RGClassDefinitionTest removeSelector: #testStoreOn!RGClassDefinitionTest removeSelector: #testRemovingMethods!RGClassDefinitionTest removeSelector: #testReadFrom!RGClassDefinitionTest removeSelector: #testNonExistingClass!RGClassDefinitionTest removeSelector: #testExistingClass!RGClassDefinitionTest removeSelector: #testClassEquality!RGClassDefinitionTest removeSelector: #testAsRingDefinition!RGClassDefinitionTest removeSelector: #testAsClassDefinitionSourceDefinition!RGClassDefinitionTest removeSelector: #testAsClassDefinition2!RGClassDefinitionTest removeSelector: #testAsClassDefinition!RGClassDefinitionTest removeSelector: #testAddingMethods!Smalltalk globals removeClassNamed: #AnObsoleteRGClassDefinitionTest!RGMonticelloTest removeSelector: #testConvertingMCTraitDefinition!RGMonticelloTest removeSelector: #testConvertingMCOrganizationDefinition!RGMonticelloTest removeSelector: #testConvertingMCMethodDefinition!RGMonticelloTest removeSelector: #testConvertingMCClassDefinition!RGMonticelloTest removeSelector: #testAsMCMethodDefinition!Smalltalk globals removeClassNamed: #AnObsoleteRGMonticelloTest!RxParserTest removeSelector: #toDotestSpecialCharacterInSetRange!RxParserTest removeSelector: #testTranslatingMatchesUsing!RxParserTest removeSelector: #testStarPrecedence!RxParserTest removeSelector: #testStarPlusQuestionMark!RxParserTest removeSelector: #testSpecialCharacterInSetRange!RxParserTest removeSelector: #testSimpleMatchesRegexWithStar!RxParserTest removeSelector: #testSimpleMatchesRegex!RxParserTest removeSelector: #testQuotingOperators!RxParserTest removeSelector: #testQuantifierSimple!RxParserTest removeSelector: #testQuantifier!RxParserTest removeSelector: #testOrOperator!RxParserTest removeSelector: #testMatchesInwW!RxParserTest removeSelector: #testLookaround!RxParserTest removeSelector: #testCharacterSetRange!RxParserTest removeSelector: #testCharacterSetInversion!RxParserTest removeSelector: #testCharacterSetBinaryNumber!RxParserTest removeSelector: #testCharacterSet!RxParserTest removeSelector: #testCadrMatching!RxParserTest removeSelector: #test!RxParserTest removeSelector: #DoesNotWorktestBackQuotesEscape!Smalltalk globals removeClassNamed: #AnObsoleteRxParserTest!RxMatcherTest removeSelector: #testSubexpressionCount!RxMatcherTest removeSelector: #testStringRegexMatchesDo!RxMatcherTest removeSelector: #testStringRegexMatchesCollect!RxMatcherTest removeSelector: #testStringPrefixMatchesRegexIgnoringCase!RxMatcherTest removeSelector: #testStringPrefixMatchesRegex!RxMatcherTest removeSelector: #testStringMatchesRegexIgnoringCase!RxMatcherTest removeSelector: #testStringMatchesRegex!RxMatcherTest removeSelector: #testStringCopyWithRegexMatchesTranslatedUsing!RxMatcherTest removeSelector: #testStringCopyWithRegexMatchesReplacedWith!RxMatcherTest removeSelector: #testStringAsRegexIgnoringCase!RxMatcherTest removeSelector: #testStringAsRegex!RxMatcherTest removeSelector: #testStringAllRegexMatches!RxMatcherTest removeSelector: #testStringAllRangesOfRegexMatches!RxMatcherTest removeSelector: #testRegex004!RxMatcherTest removeSelector: #testRegex003!RxMatcherTest removeSelector: #testRegex002!RxMatcherTest removeSelector: #testRegex001!RxMatcherTest removeSelector: #testMatchingRangesIn!RxMatcherTest removeSelector: #testMatchesStream!RxMatcherTest removeSelector: #testMatchesOnStreamDo!RxMatcherTest removeSelector: #testMatchesOnStreamCollect!RxMatcherTest removeSelector: #testMatchesOnStream!RxMatcherTest removeSelector: #testMatchesInDo!RxMatcherTest removeSelector: #testMatchesInCollect!RxMatcherTest removeSelector: #testMatchesIn!RxMatcherTest removeSelector: #testMatches!RxMatcherTest removeSelector: #testHenry137!RxMatcherTest removeSelector: #testHenry136!RxMatcherTest removeSelector: #testHenry135!RxMatcherTest removeSelector: #testHenry134!RxMatcherTest removeSelector: #testHenry133!RxMatcherTest removeSelector: #testHenry132!RxMatcherTest removeSelector: #testHenry131!RxMatcherTest removeSelector: #testHenry130!RxMatcherTest removeSelector: #testHenry129!RxMatcherTest removeSelector: #testHenry128!RxMatcherTest removeSelector: #testHenry127!RxMatcherTest removeSelector: #testHenry126!RxMatcherTest removeSelector: #testHenry125!RxMatcherTest removeSelector: #testHenry124!RxMatcherTest removeSelector: #testHenry123!RxMatcherTest removeSelector: #testHenry122!RxMatcherTest removeSelector: #testHenry121!RxMatcherTest removeSelector: #testHenry120!RxMatcherTest removeSelector: #testHenry119!RxMatcherTest removeSelector: #testHenry118!RxMatcherTest removeSelector: #testHenry117!RxMatcherTest removeSelector: #testHenry116!RxMatcherTest removeSelector: #testHenry115!RxMatcherTest removeSelector: #testHenry114!RxMatcherTest removeSelector: #testHenry113!RxMatcherTest removeSelector: #testHenry112!RxMatcherTest removeSelector: #testHenry111!RxMatcherTest removeSelector: #testHenry110!RxMatcherTest removeSelector: #testHenry109!RxMatcherTest removeSelector: #testHenry108!RxMatcherTest removeSelector: #testHenry107!RxMatcherTest removeSelector: #testHenry106!RxMatcherTest removeSelector: #testHenry105!RxMatcherTest removeSelector: #testHenry104!RxMatcherTest removeSelector: #testHenry103!RxMatcherTest removeSelector: #testHenry102!RxMatcherTest removeSelector: #testHenry101!RxMatcherTest removeSelector: #testHenry100!RxMatcherTest removeSelector: #testHenry099!RxMatcherTest removeSelector: #testHenry098!RxMatcherTest removeSelector: #testHenry097!RxMatcherTest removeSelector: #testHenry096!RxMatcherTest removeSelector: #testHenry095!RxMatcherTest removeSelector: #testHenry094!RxMatcherTest removeSelector: #testHenry093!RxMatcherTest removeSelector: #testHenry092!RxMatcherTest removeSelector: #testHenry091!RxMatcherTest removeSelector: #testHenry090!RxMatcherTest removeSelector: #testHenry089!RxMatcherTest removeSelector: #testHenry088!RxMatcherTest removeSelector: #testHenry087!RxMatcherTest removeSelector: #testHenry086!RxMatcherTest removeSelector: #testHenry085!RxMatcherTest removeSelector: #testHenry084!RxMatcherTest removeSelector: #testHenry083!RxMatcherTest removeSelector: #testHenry082!RxMatcherTest removeSelector: #testHenry081!RxMatcherTest removeSelector: #testHenry080!RxMatcherTest removeSelector: #testHenry079!RxMatcherTest removeSelector: #testHenry078!RxMatcherTest removeSelector: #testHenry077!RxMatcherTest removeSelector: #testHenry076!RxMatcherTest removeSelector: #testHenry075!RxMatcherTest removeSelector: #testHenry074!RxMatcherTest removeSelector: #testHenry073!RxMatcherTest removeSelector: #testHenry072!RxMatcherTest removeSelector: #testHenry071!RxMatcherTest removeSelector: #testHenry070!RxMatcherTest removeSelector: #testHenry069!RxMatcherTest removeSelector: #testHenry068!RxMatcherTest removeSelector: #testHenry067!RxMatcherTest removeSelector: #testHenry066!RxMatcherTest removeSelector: #testHenry065!RxMatcherTest removeSelector: #testHenry064!RxMatcherTest removeSelector: #testHenry063!RxMatcherTest removeSelector: #testHenry062!RxMatcherTest removeSelector: #testHenry061!RxMatcherTest removeSelector: #testHenry060!RxMatcherTest removeSelector: #testHenry059!RxMatcherTest removeSelector: #testHenry058!RxMatcherTest removeSelector: #testHenry057!RxMatcherTest removeSelector: #testHenry056!RxMatcherTest removeSelector: #testHenry055!RxMatcherTest removeSelector: #testHenry054!RxMatcherTest removeSelector: #testHenry053!RxMatcherTest removeSelector: #testHenry052!RxMatcherTest removeSelector: #testHenry051!RxMatcherTest removeSelector: #testHenry050!RxMatcherTest removeSelector: #testHenry049!RxMatcherTest removeSelector: #testHenry048!RxMatcherTest removeSelector: #testHenry047!RxMatcherTest removeSelector: #testHenry046!RxMatcherTest removeSelector: #testHenry045!RxMatcherTest removeSelector: #testHenry044!RxMatcherTest removeSelector: #testHenry043!RxMatcherTest removeSelector: #testHenry042!RxMatcherTest removeSelector: #testHenry041!RxMatcherTest removeSelector: #testHenry040!RxMatcherTest removeSelector: #testHenry039!RxMatcherTest removeSelector: #testHenry038!RxMatcherTest removeSelector: #testHenry037!RxMatcherTest removeSelector: #testHenry036!RxMatcherTest removeSelector: #testHenry035!RxMatcherTest removeSelector: #testHenry034!RxMatcherTest removeSelector: #testHenry033!RxMatcherTest removeSelector: #testHenry032!RxMatcherTest removeSelector: #testHenry031!RxMatcherTest removeSelector: #testHenry030!RxMatcherTest removeSelector: #testHenry029!RxMatcherTest removeSelector: #testHenry028!RxMatcherTest removeSelector: #testHenry027!RxMatcherTest removeSelector: #testHenry026!RxMatcherTest removeSelector: #testHenry025!RxMatcherTest removeSelector: #testHenry024!RxMatcherTest removeSelector: #testHenry023!RxMatcherTest removeSelector: #testHenry022!RxMatcherTest removeSelector: #testHenry021!RxMatcherTest removeSelector: #testHenry020!RxMatcherTest removeSelector: #testHenry019!RxMatcherTest removeSelector: #testHenry018!RxMatcherTest removeSelector: #testHenry017!RxMatcherTest removeSelector: #testHenry016!RxMatcherTest removeSelector: #testHenry015!RxMatcherTest removeSelector: #testHenry014!RxMatcherTest removeSelector: #testHenry013!RxMatcherTest removeSelector: #testHenry012!RxMatcherTest removeSelector: #testHenry011!RxMatcherTest removeSelector: #testHenry010!RxMatcherTest removeSelector: #testHenry009!RxMatcherTest removeSelector: #testHenry008!RxMatcherTest removeSelector: #testHenry007!RxMatcherTest removeSelector: #testHenry006!RxMatcherTest removeSelector: #testHenry005!RxMatcherTest removeSelector: #testHenry004!RxMatcherTest removeSelector: #testHenry003!RxMatcherTest removeSelector: #testHenry002!RxMatcherTest removeSelector: #testHenry001!RxMatcherTest removeSelector: #testEmptyStringNotAtWordBoundary!RxMatcherTest removeSelector: #testEmptyStringAtWordBoundary!RxMatcherTest removeSelector: #testEmptyStringAtEndOfWord!RxMatcherTest removeSelector: #testEmptyStringAtEndOfLine!RxMatcherTest removeSelector: #testEmptyStringAtBeginningOfWord!RxMatcherTest removeSelector: #testEmptyStringAtBeginningOfLine!RxMatcherTest removeSelector: #testCopyTranslatingMatches!RxMatcherTest removeSelector: #testCopyReplacingMatches!RxMatcherTest removeSelector: #testCaseSensitive!RxMatcherTest removeSelector: #testCaseInsensitive!RxMatcherTest removeSelector: #runRegex:!RxMatcherTest removeSelector: #runMatcher:with:expect:withSubexpressions:!RxMatcherTest removeSelector: #matcherClass!RxMatcherTest removeSelector: #henryReadme!RxMatcherTest removeSelector: #compileRegex:!RxMatcherTest class removeSelector: #packageNamesUnderTest!Smalltalk globals removeClassNamed: #AnObsoleteRxMatcherTest!RxExtensionsTest removeSelector: #testSplitStringOnRegex!RxExtensionsTest removeSelector: #testSplitJoinBoundaryCases!Smalltalk globals removeClassNamed: #AnObsoleteRxExtensionsTest!RBRefactoringChangeTests removeSelector: #universalTestFor:!RBRefactoringChangeTests removeSelector: #undoTestFor:!RBRefactoringChangeTests removeSelector: #text!RBRefactoringChangeTests removeSelector: #testRenameInstanceVariable!RBRefactoringChangeTests removeSelector: #testRenameClassVariable!RBRefactoringChangeTests removeSelector: #testRenameClassInstanceVariable!RBRefactoringChangeTests removeSelector: #testRenameClass!RBRefactoringChangeTests removeSelector: #testRemovePool!RBRefactoringChangeTests removeSelector: #testRemoveMethod!RBRefactoringChangeTests removeSelector: #testRemoveInstanceVariable!RBRefactoringChangeTests removeSelector: #testRemoveClassVariable!RBRefactoringChangeTests removeSelector: #testRemoveClassNamed!RBRefactoringChangeTests removeSelector: #testRemoveClassInstanceVariable!RBRefactoringChangeTests removeSelector: #testRemoveClass!RBRefactoringChangeTests removeSelector: #testPerformRenameInstanceVariable!RBRefactoringChangeTests removeSelector: #testPerformRenameClassVariable!RBRefactoringChangeTests removeSelector: #testPerformRenameClassInstanceVariable!RBRefactoringChangeTests removeSelector: #testPerformRenameClass!RBRefactoringChangeTests removeSelector: #testPerformCompositeChange!RBRefactoringChangeTests removeSelector: #testPerformChangeMethod!RBRefactoringChangeTests removeSelector: #testPerformChangeMetaclass!RBRefactoringChangeTests removeSelector: #testPerformChangeComment!RBRefactoringChangeTests removeSelector: #testPerformChangeClass!RBRefactoringChangeTests removeSelector: #testPerformAddRemoveMethodInteractively!RBRefactoringChangeTests removeSelector: #testPerformAddRemoveMethod!RBRefactoringChangeTests removeSelector: #testPerformAddRemoveInstanceVariable!RBRefactoringChangeTests removeSelector: #testPerformAddRemoveClassVariable!RBRefactoringChangeTests removeSelector: #testPerformAddRemoveClassMethod!RBRefactoringChangeTests removeSelector: #testPerformAddRemoveClassInteractively!RBRefactoringChangeTests removeSelector: #testPerformAddRemoveClassInstanceVariable!RBRefactoringChangeTests removeSelector: #testPerformAddRemoveClass!RBRefactoringChangeTests removeSelector: #testComposite!RBRefactoringChangeTests removeSelector: #testCompileInMetaclass!RBRefactoringChangeTests removeSelector: #testCompileInInteractively!RBRefactoringChangeTests removeSelector: #testCompileInClassified!RBRefactoringChangeTests removeSelector: #testCompileInClass!RBRefactoringChangeTests removeSelector: #testComment!RBRefactoringChangeTests removeSelector: #testAddTraitPattern!RBRefactoringChangeTests removeSelector: #testAddPool!RBRefactoringChangeTests removeSelector: #testAddMetaclassPattern!RBRefactoringChangeTests removeSelector: #testAddInstanceVariable!RBRefactoringChangeTests removeSelector: #testAddClassVariable!RBRefactoringChangeTests removeSelector: #testAddClassTraitPattern!RBRefactoringChangeTests removeSelector: #testAddClassPattern!RBRefactoringChangeTests removeSelector: #testAddClassInteractively!RBRefactoringChangeTests removeSelector: #testAddClassInstanceVariable!RBRefactoringChangeTests removeSelector: #tearDown!RBRefactoringChangeTests removeSelector: #stringTestFor:!RBRefactoringChangeTests removeSelector: #setUp!RBRefactoringChangeTests removeSelector: #selectionInterval!RBRefactoringChangeTests removeSelector: #removeMockClass!RBRefactoringChangeTests removeSelector: #perform:do:!RBRefactoringChangeTests removeSelector: #exampleTraits!RBRefactoringChangeTests removeSelector: #exampleClasses!RBRefactoringChangeTests removeSelector: #equalityTestFor:!RBRefactoringChangeTests removeSelector: #createMockClass!RBRefactoringChangeTests removeSelector: #changeMock!RBRefactoringChangeTests class removeSelector: #packageNamesUnderTest!Smalltalk globals removeClassNamed: #AnObsoleteRBRefactoringChangeTests!RBSubclassOfClassToRename removeSelector: #symbolReference!RBSubclassOfClassToRename removeSelector: #rewriteRule1:!RBSubclassOfClassToRename removeSelector: #rewriteRule1!RBSubclassOfClassToRename removeSelector: #reference!RBSubclassOfClassToRename removeSelector: #name!RBSubclassOfClassToRename removeSelector: #calls1!RBSubclassOfClassToRename removeSelector: #calls!Smalltalk globals removeClassNamed: #AnObsoleteRBSubclassOfClassToRename!RBClassToRename removeSelector: #method2!RBClassToRename removeSelector: #method1!Smalltalk globals removeClassNamed: #AnObsoleteRBClassToRename!RBRefactoryTestDataApp removeSelector: #yourselfNotUsed!RBRefactoryTestDataApp removeSelector: #whileTrue!RBRefactoryTestDataApp removeSelector: #variableAssignedLiteral!RBRefactoryTestDataApp removeSelector: #usesAdd!RBRefactoryTestDataApp removeSelector: #toDoWithIncrement!RBRefactoryTestDataApp removeSelector: #toDoCollect!RBRefactoryTestDataApp removeSelector: #toDo!RBRefactoryTestDataApp removeSelector: #threeElementPoint!RBRefactoryTestDataApp removeSelector: #testMethod1!RBRefactoryTestDataApp removeSelector: #testMethod!RBRefactoryTestDataApp removeSelector: #testFoo:!RBRefactoryTestDataApp removeSelector: #tempsReadBeforeWritten!RBRefactoryTestDataApp removeSelector: #tempVarOverridesInstVar!RBRefactoryTestDataApp removeSelector: #symbolReference!RBRefactoryTestDataApp removeSelector: #stringConcatenation!RBRefactoryTestDataApp removeSelector: #sizeCheck!RBRefactoryTestDataApp removeSelector: #sendsDifferentSuper!RBRefactoryTestDataApp removeSelector: #sendInlineParameterMethod!RBRefactoryTestDataApp removeSelector: #selectorNotReferenced!RBRefactoryTestDataApp removeSelector: #searchingLiteral!RBRefactoryTestDataApp removeSelector: #returnsIfTrue!RBRefactoryTestDataApp removeSelector: #returnsBooleanAndOther!RBRefactoryTestDataApp removeSelector: #returnInEnsure!RBRefactoryTestDataApp removeSelector: #renameThisMethod:!RBRefactoryTestDataApp removeSelector: #rename:two:!RBRefactoryTestDataApp removeSelector: #release!RBRefactoryTestDataApp removeSelector: #refersToClass!RBRefactoryTestDataApp removeSelector: #referencesConditionFor:!RBRefactoryTestDataApp removeSelector: #precedence!RBRefactoryTestDataApp removeSelector: #noMoveDefinition!RBRefactoryTestDataApp removeSelector: #multipleCalls!RBRefactoryTestDataApp removeSelector: #moveDefinition!RBRefactoryTestDataApp removeSelector: #modifiesCollection!RBRefactoryTestDataApp removeSelector: #missingYourself!RBRefactoryTestDataApp removeSelector: #minMax!RBRefactoryTestDataApp removeSelector: #longMethods!RBRefactoryTestDataApp removeSelector: #literalArrayWithTrueFalseOrNil2!RBRefactoryTestDataApp removeSelector: #literalArrayWithTrueFalseOrNil!RBRefactoryTestDataApp removeSelector: #literalArrayCharacters!RBRefactoryTestDataApp removeSelector: #justSendsSuper!RBRefactoryTestDataApp removeSelector: #inlineTemporary!RBRefactoryTestDataApp removeSelector: #inlineParameterMethod:!RBRefactoryTestDataApp removeSelector: #inlineMethod!RBRefactoryTestDataApp removeSelector: #inlineMax!RBRefactoryTestDataApp removeSelector: #inlineLast!RBRefactoryTestDataApp removeSelector: #inlineJunk!RBRefactoryTestDataApp removeSelector: #inlineFoo:!RBRefactoryTestDataApp removeSelector: #inlineFailed!RBRefactoryTestDataApp removeSelector: #inlineComponent!RBRefactoryTestDataApp removeSelector: #ifTrueReturns!RBRefactoryTestDataApp removeSelector: #guardingClause!RBRefactoryTestDataApp removeSelector: #fullBlocks!RBRefactoryTestDataApp removeSelector: #foo:!RBRefactoryTestDataApp removeSelector: #fileBlocks!RBRefactoryTestDataApp removeSelector: #extraBlock!RBRefactoryTestDataApp removeSelector: #exampleCall!RBRefactoryTestDataApp removeSelector: #equalsTrue!RBRefactoryTestDataApp removeSelector: #equalNotUsed!RBRefactoryTestDataApp removeSelector: #endTrueFalse!RBRefactoryTestDataApp removeSelector: #detectContains!RBRefactoryTestDataApp removeSelector: #demoRenameMethod:PermuteArgs:!RBRefactoryTestDataApp removeSelector: #demoMethodWithDuplicates!RBRefactoryTestDataApp removeSelector: #demoExampleCall!RBRefactoryTestDataApp removeSelector: #cruft!RBRefactoryTestDataApp removeSelector: #contains!RBRefactoryTestDataApp removeSelector: #consistencyCheck!RBRefactoryTestDataApp removeSelector: #collectionProtocol!RBRefactoryTestDataApp removeSelector: #collectionMessagesToExternalObject!RBRefactoryTestDataApp removeSelector: #collectSelectNotUsed!RBRefactoryTestDataApp removeSelector: #caller2!RBRefactoryTestDataApp removeSelector: #caller1!RBRefactoryTestDataApp removeSelector: #caller!RBRefactoryTestDataApp removeSelector: #called:on:!RBRefactoryTestDataApp removeSelector: #called:on1:!RBRefactoryTestDataApp removeSelector: #callMethod!RBRefactoryTestDataApp removeSelector: #callFoo!RBRefactoryTestDataApp removeSelector: #booleanPrecedence!RBRefactoryTestDataApp removeSelector: #badMessage!RBRefactoryTestDataApp removeSelector: #atIfAbsent!RBRefactoryTestDataApp removeSelector: #assignmentInIfTrue!RBRefactoryTestDataApp removeSelector: #assignmentInBlock!RBRefactoryTestDataApp removeSelector: #asOrderedCollectionNotNeeded!Smalltalk globals removeClassNamed: #AnObsoleteRBRefactoryTestDataApp!RBLintRuleTest removeSelector: #viewResults!RBLintRuleTest removeSelector: #someOtherDemoMethod!RBLintRuleTest removeSelector: #runOnEnvironment:!RBLintRuleTest removeSelector: #run!RBLintRuleTest removeSelector: #resetResult!RBLintRuleTest removeSelector: #problemCount!RBLintRuleTest removeSelector: #printOn:!RBLintRuleTest removeSelector: #openEditor!RBLintRuleTest removeSelector: #name:!RBLintRuleTest removeSelector: #name!RBLintRuleTest removeSelector: #junk!RBLintRuleTest removeSelector: #isEmpty!RBLintRuleTest removeSelector: #isComposite!RBLintRuleTest removeSelector: #initialize!RBLintRuleTest removeSelector: #hasConflicts!RBLintRuleTest removeSelector: #failedRules!RBLintRuleTest removeSelector: #displayName!RBLintRuleTest removeSelector: #checkMethod:!RBLintRuleTest removeSelector: #checkClass:!RBLintRuleTest class removeSelector: #someOtherFooMethod!RBLintRuleTest class removeSelector: #someFooMethod!Smalltalk globals removeClassNamed: #AnObsoleteRBTransformationRuleTest1!Smalltalk globals removeClassNamed: #AnObsoleteRBFooLintRuleTest1!RBTransformationRuleTest removeSelector: #viewResults!RBTransformationRuleTest removeSelector: #superSends!RBTransformationRuleTest removeSelector: #rewriteUsing:!RBTransformationRuleTest removeSelector: #resetResult!RBTransformationRuleTest removeSelector: #problemCount!RBTransformationRuleTest removeSelector: #isEmpty!RBTransformationRuleTest removeSelector: #hasConflicts!RBTransformationRuleTest removeSelector: #checkMethod:!RBTransformationRuleTest class removeSelector: #unwindBlocks!RBTransformationRuleTest class removeSelector: #superSends!RBTransformationRuleTest class removeSelector: #showWhileBlocks!RBTransformationRuleTest class removeSelector: #rewrite:methods:name:!RBTransformationRuleTest class removeSelector: #nuke!RBTransformationRuleTest class removeSelector: #notElimination!RBTransformationRuleTest class removeSelector: #minMax!RBTransformationRuleTest class removeSelector: #initializeAfterLoad1!RBTransformationRuleTest class removeSelector: #guardClause!RBTransformationRuleTest class removeSelector: #equalNil!RBTransformationRuleTest class removeSelector: #detectIfNone!RBTransformationRuleTest class removeSelector: #cleanUp!RBTransformationRuleTest class removeSelector: #betweenAnd!RBTransformationRuleTest class removeSelector: #atIfAbsent!RBTransformationRuleTest class removeSelector: #assignmentInIfTrue!Smalltalk globals removeClassNamed: #AnObsoleteRBTransformationRuleTest!RBFooLintRuleTest removeSelector: #foo!Smalltalk globals removeClassNamed: #AnObsoleteRBFooLintRuleTest!RBCompositeLintRuleTest removeSelector: #viewResults!RBCompositeLintRuleTest removeSelector: #rules:!RBCompositeLintRuleTest removeSelector: #rules!RBCompositeLintRuleTest removeSelector: #resetResult!RBCompositeLintRuleTest removeSelector: #problemCount!RBCompositeLintRuleTest removeSelector: #isEmpty!RBCompositeLintRuleTest removeSelector: #isComposite!RBCompositeLintRuleTest removeSelector: #hasConflicts!RBCompositeLintRuleTest removeSelector: #failedRules!RBCompositeLintRuleTest removeSelector: #checkMethod:!RBCompositeLintRuleTest removeSelector: #checkClass:!RBCompositeLintRuleTest class removeSelector: #transformations!RBCompositeLintRuleTest class removeSelector: #rules:name:!RBCompositeLintRuleTest class removeSelector: #rules:!RBCompositeLintRuleTest class removeSelector: #ruleFor:protocol:!RBCompositeLintRuleTest class removeSelector: #lintChecks!RBCompositeLintRuleTest class removeSelector: #allRules!Smalltalk globals removeClassNamed: #AnObsoleteRBCompositeLintRuleTest!RBBasicLintRuleTest removeSelector: #viewResults!RBBasicLintRuleTest removeSelector: #someDemoMethod!RBBasicLintRuleTest removeSelector: #resultClass:!RBBasicLintRuleTest removeSelector: #result:!RBBasicLintRuleTest removeSelector: #result!RBBasicLintRuleTest removeSelector: #resetResult!RBBasicLintRuleTest removeSelector: #problemCount!RBBasicLintRuleTest removeSelector: #newResultClass:!RBBasicLintRuleTest removeSelector: #methodBlock:!RBBasicLintRuleTest removeSelector: #method:with:lots:of:arguments:!RBBasicLintRuleTest removeSelector: #isEmpty!RBBasicLintRuleTest removeSelector: #initialize!RBBasicLintRuleTest removeSelector: #foobar!RBBasicLintRuleTest removeSelector: #classBlock:!RBBasicLintRuleTest removeSelector: #classBlock!RBBasicLintRuleTest removeSelector: #checkMethod:!RBBasicLintRuleTest removeSelector: #checkClass:!RBBasicLintRuleTest removeSelector: #anInstVar:!RBBasicLintRuleTest removeSelector: #anInstVar!RBBasicLintRuleTest class removeSelector: #yourselfNotUsed!RBBasicLintRuleTest class removeSelector: #whileTrue!RBBasicLintRuleTest class removeSelector: #variableReferencedOnce!RBBasicLintRuleTest class removeSelector: #variableAssignedLiteral!RBBasicLintRuleTest class removeSelector: #utilityProtocols!RBBasicLintRuleTest class removeSelector: #utilityMethods!RBBasicLintRuleTest class removeSelector: #usesTrue!RBBasicLintRuleTest class removeSelector: #usesAdd!RBBasicLintRuleTest class removeSelector: #unreferencedVariables!RBBasicLintRuleTest class removeSelector: #toDo!RBBasicLintRuleTest class removeSelector: #threeElementPoint!RBBasicLintRuleTest class removeSelector: #tempsReadBeforeWritten!RBBasicLintRuleTest class removeSelector: #tempVarOverridesInstVar!RBBasicLintRuleTest class removeSelector: #superSends!RBBasicLintRuleTest class removeSelector: #superMessages!RBBasicLintRuleTest class removeSelector: #subclassResponsibilityNotDefined!RBBasicLintRuleTest class removeSelector: #subclassOf:overrides:!RBBasicLintRuleTest class removeSelector: #stringConcatenation!RBBasicLintRuleTest class removeSelector: #sizeCheck!RBBasicLintRuleTest class removeSelector: #sentNotImplementedInApplication!RBBasicLintRuleTest class removeSelector: #sentNotImplemented!RBBasicLintRuleTest class removeSelector: #sendsDifferentSuper!RBBasicLintRuleTest class removeSelector: #returnsIfTrue!RBBasicLintRuleTest class removeSelector: #returnsBooleanAndOther!RBBasicLintRuleTest class removeSelector: #refersToClass!RBBasicLintRuleTest class removeSelector: #protocolsToCheck!RBBasicLintRuleTest class removeSelector: #precedence!RBBasicLintRuleTest class removeSelector: #overridesSpecialMessage!RBBasicLintRuleTest class removeSelector: #onlyReadOrWritten!RBBasicLintRuleTest class removeSelector: #new!RBBasicLintRuleTest class removeSelector: #modifiesCollection!RBBasicLintRuleTest class removeSelector: #missingYourself!RBBasicLintRuleTest class removeSelector: #missingSubclassResponsibility!RBBasicLintRuleTest class removeSelector: #minMax!RBBasicLintRuleTest class removeSelector: #metaclassShouldNotOverride!RBBasicLintRuleTest class removeSelector: #longMethods!RBBasicLintRuleTest class removeSelector: #longMethodSize!RBBasicLintRuleTest class removeSelector: #justSendsSuper!RBBasicLintRuleTest class removeSelector: #instVarInSubclasses!RBBasicLintRuleTest class removeSelector: #implementedNotSent!RBBasicLintRuleTest class removeSelector: #ifTrueReturns!RBBasicLintRuleTest class removeSelector: #ifTrueBlocks!RBBasicLintRuleTest class removeSelector: #guardingClause!RBBasicLintRuleTest class removeSelector: #fullBlocks!RBBasicLintRuleTest class removeSelector: #fileBlocks!RBBasicLintRuleTest class removeSelector: #extraBlock!RBBasicLintRuleTest class removeSelector: #equivalentSuperclassMethods!RBBasicLintRuleTest class removeSelector: #equalsTrue!RBBasicLintRuleTest class removeSelector: #endTrueFalse!RBBasicLintRuleTest class removeSelector: #detectContains!RBBasicLintRuleTest class removeSelector: #definesEqualNotHash!RBBasicLintRuleTest class removeSelector: #createParseTreeRule:name:!RBBasicLintRuleTest class removeSelector: #createParseTreeRule:method:name:!RBBasicLintRuleTest class removeSelector: #createMatcherFor:method:!RBBasicLintRuleTest class removeSelector: #contains!RBBasicLintRuleTest class removeSelector: #consistencyCheck!RBBasicLintRuleTest class removeSelector: #collectionProtocol!RBBasicLintRuleTest class removeSelector: #collectionMessagesToExternalObject!RBBasicLintRuleTest class removeSelector: #collectionCopyEmpty!RBBasicLintRuleTest class removeSelector: #classShouldNotOverride!RBBasicLintRuleTest class removeSelector: #classNotReferenced!RBBasicLintRuleTest class removeSelector: #classNameInSelector!RBBasicLintRuleTest class removeSelector: #canCall:in:from:!RBBasicLintRuleTest class removeSelector: #booleanPrecedence!RBBasicLintRuleTest class removeSelector: #atIfAbsent!RBBasicLintRuleTest class removeSelector: #assignmentInIfTrue!RBBasicLintRuleTest class removeSelector: #assignmentInBlock!RBBasicLintRuleTest class removeSelector: #addRemoveDependents!RBBasicLintRuleTest class removeSelector: #abstractClass!Smalltalk globals removeClassNamed: #AnObsoleteRBBasicLintRuleTest!Smalltalk globals removeClassNamed: #AnObsoleteRBLintRuleTest!RBSearchTest removeSelector: #testAllSearches!RBSearchTest removeSelector: #setUp!RBSearchTest removeSelector: #currentSelector!RBSearchTest removeSelector: #createSearchWith:selectors:inClass:!RBSearchTest removeSelector: #createMethodSearchWith:selectors:inClass:!RBSearchTest removeSelector: #createArgumentSearchWith:selectors:inClass:!RBSearchTest removeSelector: #buildStatementSearch!RBSearchTest removeSelector: #buildSimpleVariableSearch!RBSearchTest removeSelector: #buildSimpleLiteralSearch!RBSearchTest removeSelector: #buildMethodTitleSearch!RBSearchTest removeSelector: #buildMethodSearch!RBSearchTest removeSelector: #buildMethodArgumentSearch!RBSearchTest removeSelector: #buildMessageSearch!RBSearchTest removeSelector: #buildArgumentSearch!Smalltalk globals removeClassNamed: #AnObsoleteRBSearchTest!RBVariableTypeTest removeSelector: #testParseTreeTypes!RBVariableTypeTest removeSelector: #testLintRuleTypes!RBVariableTypeTest removeSelector: #testCompositeLintRuleTypes!RBVariableTypeTest removeSelector: #testBasicLintRuleTypes!Smalltalk globals removeClassNamed: #AnObsoleteRBVariableTypeTest!RBTemporaryToInstanceVariableTest removeSelector: #testTemporaryToInstanceVariable!RBTemporaryToInstanceVariableTest removeSelector: #testRedefinedTemporary!RBTemporaryToInstanceVariableTest removeSelector: #testNonExistantName!RBTemporaryToInstanceVariableTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBTemporaryToInstanceVariableTest!RBSplitCascadeRefactoringTest removeSelector: #testSplitCascadeRefactoring!RBSplitCascadeRefactoringTest removeSelector: #methodWithCascades!Smalltalk globals removeClassNamed: #AnObsoleteRBSplitCascadeRefactoringTest!RBRenameTemporaryTest removeSelector: #testRenameTemporary!RBRenameTemporaryTest removeSelector: #testModelBadName!RBRenameTemporaryTest removeSelector: #testBadName!RBRenameTemporaryTest removeSelector: #testBadInterval!Smalltalk globals removeClassNamed: #AnObsoleteRBRenameTemporaryTest!RBRenameMethodTest removeSelector: #testRenameTestMethod1!RBRenameMethodTest removeSelector: #testRenameTestMethod!RBRenameMethodTest removeSelector: #testRenamePrimitive!RBRenameMethodTest removeSelector: #testRenamePermuteArgs!RBRenameMethodTest removeSelector: #testRenameMethodPermuteArgs!RBRenameMethodTest removeSelector: #testMultipleSelectors!RBRenameMethodTest removeSelector: #testExistingSelector!Smalltalk globals removeClassNamed: #AnObsoleteRBRenameMethodTest!RBRenameInstanceVariableTest removeSelector: #testRenameInstVarNotAccessors!RBRenameInstanceVariableTest removeSelector: #testRenameInstVar!RBRenameInstanceVariableTest removeSelector: #testNonExistantName!RBRenameInstanceVariableTest removeSelector: #testAlreadyExistingName!Smalltalk globals removeClassNamed: #AnObsoleteRBRenameInstanceVariableTest!RBRenameClassVariableTest removeSelector: #testRenameClassVar!RBRenameClassVariableTest removeSelector: #testNonExistantName!RBRenameClassVariableTest removeSelector: #testMetaClassFailure!RBRenameClassVariableTest removeSelector: #testAlreadyExistingName!Smalltalk globals removeClassNamed: #AnObsoleteRBRenameClassVariableTest!RBRenameClassTest removeSelector: #testUnmarkRemovedClassIfRenameTargetClass!RBRenameClassTest removeSelector: #testRenameClass!RBRenameClassTest removeSelector: #testModelRenameSequenceClass!RBRenameClassTest removeSelector: #testModelRenameClass!RBRenameClassTest removeSelector: #testMetaClassFailure!RBRenameClassTest removeSelector: #testExistingName!RBRenameClassTest removeSelector: #testBadName!Smalltalk globals removeClassNamed: #AnObsoleteRBRenameClassTest!RBRemoveParameterTest removeSelector: #testRemoveParameter!RBRemoveParameterTest removeSelector: #testPrimitiveMethods!RBRemoveParameterTest removeSelector: #testNonExistantName!Smalltalk globals removeClassNamed: #AnObsoleteRBRemoveParameterTest!RBRemoveMethodTest removeSelector: #testRemoveSameMethodButSendsSuper!RBRemoveMethodTest removeSelector: #testRemoveReferenced!RBRemoveMethodTest removeSelector: #testRemoveMethod!RBRemoveMethodTest removeSelector: #testModelRecursiveMethodThatIsNotReferencedFromOtherMethods!RBRemoveMethodTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteRBRemoveMethodTest!RBRemoveInstanceVariableTest removeSelector: #testRemoveInstVar!RBRemoveInstanceVariableTest removeSelector: #testReferencedVariable!RBRemoveInstanceVariableTest removeSelector: #testNonExistantName!RBRemoveInstanceVariableTest removeSelector: #testModelRemoveInstanceVariable!Smalltalk globals removeClassNamed: #AnObsoleteRBRemoveInstanceVariableTest!RBRemoveClassVariableTest removeSelector: #testRemoveClassVar!RBRemoveClassVariableTest removeSelector: #testReferencedVariable!RBRemoveClassVariableTest removeSelector: #testNonExistantName!Smalltalk globals removeClassNamed: #AnObsoleteRBRemoveClassVariableTest!RBRemoveClassTest removeSelector: #testRemoveEmptySuperclass!RBRemoveClassTest removeSelector: #testRemoveClassWithReferencesRaisesRBRefactoringError!RBRemoveClassTest removeSelector: #testRemoveClassWithBadNameRaisesRBRefactoringError!RBRemoveClassTest removeSelector: #testRaisesRBRefactoringErrorWhenRemovingNonEmptySuperclass!RBRemoveClassTest removeSelector: #resumeOnCannotRemoveTopLevelClassError:!Smalltalk globals removeClassNamed: #AnObsoleteRBRemoveClassTest!RBRefactoringTest removeSelector: #testPrintRefactoringManager!RBRefactoringTest removeSelector: #testConditions!RBRefactoringTest removeSelector: #tearDown!RBRefactoringTest removeSelector: #shouldWarn:!RBRefactoringTest removeSelector: #shouldFail:!RBRefactoringTest removeSelector: #setupVariableTypesFor:toReturn:!RBRefactoringTest removeSelector: #setupVariableToMoveToFor:toReturn:!RBRefactoringTest removeSelector: #setupSelfArgumentNameFor:toReturn:!RBRefactoringTest removeSelector: #setupMethodNameFor:toReturn:withArguments:!RBRefactoringTest removeSelector: #setupMethodNameFor:toReturn:!RBRefactoringTest removeSelector: #setupInlineExpressionFor:toReturn:!RBRefactoringTest removeSelector: #setupImplementorToInlineFor:toReturn:!RBRefactoringTest removeSelector: #setUp!RBRefactoringTest removeSelector: #inlineMethodTestData!RBRefactoringTest removeSelector: #childrenToSiblingTestData!RBRefactoringTest removeSelector: #abstractVariableTestData!RBPushDownMethodTest removeSelector: #testPushDownNonExistantMenu!RBPushDownMethodTest removeSelector: #testPushDownMethodThatReferencesPoolDictionary!RBPushDownMethodTest removeSelector: #testPushDownMethodOnNonAbstractClass!RBPushDownMethodTest removeSelector: #testPushDownMethod!Smalltalk globals removeClassNamed: #AnObsoleteRBPushDownMethodTest!RBPushDownInstanceVariableTest removeSelector: #testPushDownInstanceVariable!RBPushDownInstanceVariableTest removeSelector: #testNonExistantName!RBPushDownInstanceVariableTest removeSelector: #testModelRemoveUnusedVariable!RBPushDownInstanceVariableTest removeSelector: #testModelPushDownToMultipleSubclasses!RBPushDownInstanceVariableTest removeSelector: #testModelPushDownToMetaclass!Smalltalk globals removeClassNamed: #AnObsoleteRBPushDownInstanceVariableTest!RBPushDownClassVariableTest removeSelector: #testPushDownClassVariable!RBPushDownClassVariableTest removeSelector: #testNonExistantName!RBPushDownClassVariableTest removeSelector: #testModelRemoveUnusedVariable!RBPushDownClassVariableTest removeSelector: #testModelPushDownVariableToMultipleClassesInSameHierarchy!RBPushDownClassVariableTest removeSelector: #testModelPushDownVariableToClassDownTwoLevels!RBPushDownClassVariableTest removeSelector: #testModelPushDownVariable!RBPushDownClassVariableTest removeSelector: #testModelPushDownToMultipleSubclassesFailure!RBPushDownClassVariableTest removeSelector: #testModelNonExistantName!Smalltalk globals removeClassNamed: #AnObsoleteRBPushDownClassVariableTest!RBPullUpMethodTest removeSelector: #testPullUpWithSuperSendThatCannotBeCopiedDown!RBPullUpMethodTest removeSelector: #testPullUpWithMethodThatCannotBePushedDown!RBPullUpMethodTest removeSelector: #testPullUpWithInvalidSuperSend!RBPullUpMethodTest removeSelector: #testPullUpReferencesInstVar!RBPullUpMethodTest removeSelector: #testPullUpMethodWithCopyOverriddenMethodsDown!RBPullUpMethodTest removeSelector: #testPullUpClassMethod!RBPullUpMethodTest removeSelector: #testPullUpAndCopyDown!Smalltalk globals removeClassNamed: #AnObsoleteRBPullUpMethodTest!RBPullUpInstanceVariableTest removeSelector: #testPullUpVariableNotDefined!RBPullUpInstanceVariableTest removeSelector: #testPullUpInstVar!Smalltalk globals removeClassNamed: #AnObsoleteRBPullUpInstanceVariableTest!RBPullUpClassVariableTest removeSelector: #testPullUpClassVariable!RBPullUpClassVariableTest removeSelector: #testNonExistantName!RBPullUpClassVariableTest removeSelector: #testMetaClassFailure!Smalltalk globals removeClassNamed: #AnObsoleteRBPullUpClassVariableTest!RBProtectInstanceVariableTest removeSelector: #testVariableNotDefined!RBProtectInstanceVariableTest removeSelector: #testProtectInstanceVariable!Smalltalk globals removeClassNamed: #AnObsoleteRBProtectInstanceVariableTest!RBMoveVariableDefinitionTest removeSelector: #testNonExistantName!RBMoveVariableDefinitionTest removeSelector: #testNoMoveDefinition!RBMoveVariableDefinitionTest removeSelector: #testMoveDefinitionIntoBlockThatIsAReceiverOfACascadedMessage!RBMoveVariableDefinitionTest removeSelector: #testMoveDefinition!Smalltalk globals removeClassNamed: #AnObsoleteRBMoveVariableDefinitionTest!RBMoveMethodToClassTest removeSelector: #testMethodAlreadyDefined!Smalltalk globals removeClassNamed: #AnObsoleteRBMoveMethodToClassTest!RBMoveMethodTest removeSelector: #testMovePrimitiveMethod!RBMoveMethodTest removeSelector: #testMoveMethodThatReferencesPoolDictionary!RBMoveMethodTest removeSelector: #testMoveMethodIntoInstanceVariable!RBMoveMethodTest removeSelector: #testMoveMethodIntoClassVariable!RBMoveMethodTest removeSelector: #testMoveMethodIntoArgument!Smalltalk globals removeClassNamed: #AnObsoleteRBMoveMethodTest!RBMoveInstVarToClassTest removeSelector: #testMoveInstVarToClassAlreadyDefined!Smalltalk globals removeClassNamed: #AnObsoleteRBMoveInstVarToClassTest!RBInlineTemporaryTest removeSelector: #testInlineTemporaryReadBeforeWritten!RBInlineTemporaryTest removeSelector: #testInlineTemporaryMutlipleAssignment!RBInlineTemporaryTest removeSelector: #testInlineTemporaryBadInterval!RBInlineTemporaryTest removeSelector: #testInlineTemporary!Smalltalk globals removeClassNamed: #AnObsoleteRBInlineTemporaryTest!RBInlineParameterTest removeSelector: #testInlineLiteralArray!RBInlineParameterTest removeSelector: #testInlineBlockFailure!Smalltalk globals removeClassNamed: #AnObsoleteRBInlineParameterTest!RBInlineMethodTest removeSelector: #testReturn!RBInlineMethodTest removeSelector: #testPrimitive!RBInlineMethodTest removeSelector: #testOverriden!RBInlineMethodTest removeSelector: #testNonExistantSelector!RBInlineMethodTest removeSelector: #testModelInlineRecursiveMethod!RBInlineMethodTest removeSelector: #testInlineRecursiveCascadedMethod!RBInlineMethodTest removeSelector: #testInlineMethodForSuperSendThatAlsoSendsSuper!RBInlineMethodTest removeSelector: #testInlineMethodForSuperSend!RBInlineMethodTest removeSelector: #testInlineMethod5!RBInlineMethodTest removeSelector: #testInlineMethod4!RBInlineMethodTest removeSelector: #testInlineMethod3!RBInlineMethodTest removeSelector: #testInlineMethod2!RBInlineMethodTest removeSelector: #testInlineMethod1!RBInlineMethodTest removeSelector: #testInlineMethod!RBInlineMethodTest removeSelector: #testBadInterval!Smalltalk globals removeClassNamed: #AnObsoleteRBInlineMethodTest!RBInlineMethodFromComponentTest removeSelector: #testModelInlineMethodWithSameVariableNames2!RBInlineMethodFromComponentTest removeSelector: #testModelInlineMethodWithSameVariableNames1!RBInlineMethodFromComponentTest removeSelector: #testModelInlineMethodWithSameVariableNames!RBInlineMethodFromComponentTest removeSelector: #testInlineMethodFromComponentFailure!RBInlineMethodFromComponentTest removeSelector: #testInlineEmptyComponentMethod!RBInlineMethodFromComponentTest removeSelector: #testInlineComponentMethodMax!RBInlineMethodFromComponentTest removeSelector: #testInlineComponentIntoCascadedMessage!Smalltalk globals removeClassNamed: #AnObsoleteRBInlineMethodFromComponentTest!RBInlineAllMethodTest removeSelector: #testRecursiveMethod!RBInlineAllMethodTest removeSelector: #testInlineMethodWithMultipleSendersInMethod!Smalltalk globals removeClassNamed: #AnObsoleteRBInlineAllMethodTest!RBExtractToTemporaryTest removeSelector: #testNonExistantSelector!RBExtractToTemporaryTest removeSelector: #testExtractToTemporaryWithDuplicates!RBExtractToTemporaryTest removeSelector: #testExtractToTemporaryInsideBlock!RBExtractToTemporaryTest removeSelector: #testExtractToTemporaryForLastStatementInBlock!RBExtractToTemporaryTest removeSelector: #testBadName!RBExtractToTemporaryTest removeSelector: #testBadInterval!Smalltalk globals removeClassNamed: #AnObsoleteRBExtractToTemporaryTest!RBExtractMethodToComponentTest removeSelector: #testNonExistantSelector!RBExtractMethodToComponentTest removeSelector: #testMoveWithoutSelfReference!RBExtractMethodToComponentTest removeSelector: #testExtractMethodAtEndOfMethodThatNeedsReturn!RBExtractMethodToComponentTest removeSelector: #testExtractFailure!RBExtractMethodToComponentTest removeSelector: #testBadInterval!Smalltalk globals removeClassNamed: #AnObsoleteRBExtractMethodToComponentTest!RBExtractMethodTest removeSelector: #testNonExistantSelector!RBExtractMethodTest removeSelector: #testModelExtractMethodWithTemporaryAssigned!RBExtractMethodTest removeSelector: #testModelExtractMethodWithTemporariesSelected!RBExtractMethodTest removeSelector: #testExtractMethodThatNeedsTemporaryVariable!RBExtractMethodTest removeSelector: #testExtractMethodThatNeedsArgument!RBExtractMethodTest removeSelector: #testExtractMethodThatMovesTemporaryVariable!RBExtractMethodTest removeSelector: #testExtractMethodAtEndOfMethodThatNeedsReturn!RBExtractMethodTest removeSelector: #testExtractFailure!RBExtractMethodTest removeSelector: #testBadInterval!Smalltalk globals removeClassNamed: #AnObsoleteRBExtractMethodTest!RBCreateAccessorsForVariableTest removeSelector: #testNonExistantName!RBCreateAccessorsForVariableTest removeSelector: #testNewInstanceVariableAccessors!RBCreateAccessorsForVariableTest removeSelector: #testNewClassVariableAccessors!RBCreateAccessorsForVariableTest removeSelector: #testExistingInstanceVariableAccessors!RBCreateAccessorsForVariableTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBCreateAccessorsForVariableTest!RBChildrenToSiblingsTest removeSelector: #testModelChildrenToSibling!RBChildrenToSiblingsTest removeSelector: #testMetaClassFailure!RBChildrenToSiblingsTest removeSelector: #testInvalidSubclass!RBChildrenToSiblingsTest removeSelector: #testExistingName!RBChildrenToSiblingsTest removeSelector: #testBadName!RBChildrenToSiblingsTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBChildrenToSiblingsTest!RBAddParameterTest removeSelector: #testPrimitiveMethods!RBAddParameterTest removeSelector: #testNonExistantName!RBAddParameterTest removeSelector: #testModelNonExistantName!RBAddParameterTest removeSelector: #testModelBadInitializationCode!RBAddParameterTest removeSelector: #testBadInitializationCode!RBAddParameterTest removeSelector: #testAddParameterThatReferencesSelf!RBAddParameterTest removeSelector: #testAddParameterThatReferencesModelGlobal!RBAddParameterTest removeSelector: #testAddParameterThatReferencesGlobalAndLiteral!RBAddParameterTest removeSelector: #testAddParameterForTwoArgumentMessage!RBAddParameterTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBAddParameterTest!RBAddMethodTest removeSelector: #testModelInheritedSelector!RBAddMethodTest removeSelector: #testModelExistingSelector!RBAddMethodTest removeSelector: #testModelAddMethod!RBAddMethodTest removeSelector: #testExistingSelector!RBAddMethodTest removeSelector: #testBadMethod!RBAddMethodTest removeSelector: #testAddMethod!RBAddMethodTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBAddMethodTest!RBAddInstanceVariableTest removeSelector: #testNewHierarchyExistingName!RBAddInstanceVariableTest removeSelector: #testNewExistingName!RBAddInstanceVariableTest removeSelector: #testModelMetaclassAlreadyExistingName!RBAddInstanceVariableTest removeSelector: #testModelAlreadyExistingName!RBAddInstanceVariableTest removeSelector: #testAlreadyExistingName!RBAddInstanceVariableTest removeSelector: #testAddToModel!RBAddInstanceVariableTest removeSelector: #testAddInstanceVariable!RBAddInstanceVariableTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBAddInstanceVariableTest!RBAddClassVariableTest removeSelector: #testModelMetaclass!RBAddClassVariableTest removeSelector: #testModelAlreadyExistingName!RBAddClassVariableTest removeSelector: #testModelAddClassVariable!RBAddClassVariableTest removeSelector: #testMetaclass!RBAddClassVariableTest removeSelector: #testMetaClassFailure!RBAddClassVariableTest removeSelector: #testAlreadyExistingName!RBAddClassVariableTest removeSelector: #testAddClassVariable!RBAddClassVariableTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBAddClassVariableTest!RBAddClassTest removeSelector: #testModelInvalidSubclass!RBAddClassTest removeSelector: #testModelExistingName!RBAddClassTest removeSelector: #testModelAddClass!RBAddClassTest removeSelector: #testMetaClassFailure!RBAddClassTest removeSelector: #testInvalidSubclass!RBAddClassTest removeSelector: #testExistingName!RBAddClassTest removeSelector: #testAddClass!RBAddClassTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBAddClassTest!RBAbstractInstanceVariableTest removeSelector: #testNonExistantName!RBAbstractInstanceVariableTest removeSelector: #testMetaclassInstanceVariables!RBAbstractInstanceVariableTest removeSelector: #testInheritedName!RBAbstractInstanceVariableTest removeSelector: #testAbstractWithDefaultNamesUsed!RBAbstractInstanceVariableTest removeSelector: #testAbstractWithAssignmentUsed!RBAbstractInstanceVariableTest removeSelector: #testAbstractInstanceVariable!RBAbstractInstanceVariableTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBAbstractInstanceVariableTest!RBAbstractClassVariableTest removeSelector: #testNonExistantName!RBAbstractClassVariableTest removeSelector: #testModelAbstractClassVariableOverridenMethodsInSubclass!RBAbstractClassVariableTest removeSelector: #testModelAbstractClassVariable!RBAbstractClassVariableTest removeSelector: #testMetaClassFailure!RBAbstractClassVariableTest removeSelector: #testInheritedName!RBAbstractClassVariableTest removeSelector: #testAbstractClassVariable!RBAbstractClassVariableTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBAbstractClassVariableTest!Smalltalk globals removeClassNamed: #AnObsoleteRBRefactoringTest!RBRefactoringBrowserTest removeSelector: #proceedThroughWarning:!RBRefactoringBrowserTest removeSelector: #objectClassVariable!RBRefactoringBrowserTest removeSelector: #executeRefactoring:!RBRefactoringBrowserTest removeSelector: #convertInterval:for:!RBRefactoringBrowserTest class removeSelector: #isAbstract!RBNamespaceTest removeSelector: #testRoots!RBNamespaceTest removeSelector: #testReparentSuperclassChange!RBNamespaceTest removeSelector: #testRemoveClassChange!RBNamespaceTest removeSelector: #testReferencesPrintOnAfterRemove!RBNamespaceTest removeSelector: #testReferencesPrintOnAfterAddition!RBNamespaceTest removeSelector: #testReferencesPrintOn!RBNamespaceTest removeSelector: #testRedefineClassChange!RBNamespaceTest removeSelector: #testModelImplementorsSenders!RBNamespaceTest removeSelector: #testIncludesClass!RBNamespaceTest removeSelector: #testImplementors!RBNamespaceTest removeSelector: #testDefineClassChange!RBNamespaceTest removeSelector: #testDefineClassAfterDeletedChange!RBNamespaceTest removeSelector: #testCommentChange!RBNamespaceTest removeSelector: #testAllClassesDo!Smalltalk globals removeClassNamed: #AnObsoleteRBNamespaceTest!RBClassTest removeSelector: #testObjectIsNotAbstract!RBClassTest removeSelector: #testHierarchy!RBClassTest removeSelector: #testDefinesPoolDictionary!RBClassTest removeSelector: #testDefinesMethod!RBClassTest removeSelector: #testDefinesInstanceVariable!RBClassTest removeSelector: #testDefinesClassVariable!RBClassTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteRBClassTest!Smalltalk globals removeClassNamed: #AnObsoleteRBRefactoringBrowserTest!RBSmalllintTestSuperclassObject removeSelector: #equivalentSuperclassMethods!RBSmalllintTestSuperclassObject class removeSelector: #updateDefaultExplicitClassReferences!RBSmalllintTestSuperclassObject class removeSelector: #mustNotBeReferenced!RBSmalllintTestSuperclassObject class removeSelector: #defaultExplicitClassReferences!RBSmalllintTestObject removeSelector: #yourselfNotUsed!RBSmalllintTestObject removeSelector: #whileTrue!RBSmalllintTestObject removeSelector: #variableAssignedLiteral!RBSmalllintTestObject removeSelector: #usesTrue!RBSmalllintTestObject removeSelector: #usesAdd!RBSmalllintTestObject removeSelector: #unoptimizedAndOr!RBSmalllintTestObject removeSelector: #uncommonMessageSend2!RBSmalllintTestObject removeSelector: #uncommonMessageSend!RBSmalllintTestObject removeSelector: #unclassifiedMethods!RBSmalllintTestObject removeSelector: #unaryNonAccessingMethodWithoutReturn!RBSmalllintTestObject removeSelector: #unaryNonAccessingMessageStatementMethodWithoutReturn!RBSmalllintTestObject removeSelector: #unaryNonAccessingBranchingStatementMethodWithoutReturn!RBSmalllintTestObject removeSelector: #unaryAccessingMethodWithoutReturn!RBSmalllintTestObject removeSelector: #unaryAccessingMethodWithReturn!RBSmalllintTestObject removeSelector: #unaryAccessingMessageStatementMethodWithoutReturn!RBSmalllintTestObject removeSelector: #unaryAccessingMessageStatementMethodWithReturn!RBSmalllintTestObject removeSelector: #unaryAccessingBranchingStatementMethodWithoutReturn!RBSmalllintTestObject removeSelector: #unaryAccessingBranchingStatementMethodWithReturn!RBSmalllintTestObject removeSelector: #transcriptMentioned!RBSmalllintTestObject removeSelector: #toDoWithIncrement!RBSmalllintTestObject removeSelector: #toDoCollect!RBSmalllintTestObject removeSelector: #toDo!RBSmalllintTestObject removeSelector: #threeElementPoint!RBSmalllintTestObject removeSelector: #testMethod1!RBSmalllintTestObject removeSelector: #tempsReadBeforeWritten!RBSmalllintTestObject removeSelector: #temporaryVariableCapitalization!RBSmalllintTestObject removeSelector: #tempVarOverridesInstVar!RBSmalllintTestObject removeSelector: #stringConcatenation!RBSmalllintTestObject removeSelector: #sizeCheck!RBSmalllintTestObject removeSelector: #shouldntRaiseException!RBSmalllintTestObject removeSelector: #shouldntRaiseError!RBSmalllintTestObject removeSelector: #sendsDifferentSuper!RBSmalllintTestObject removeSelector: #searchingLiteral!RBSmalllintTestObject removeSelector: #returnsIfTrue!RBSmalllintTestObject removeSelector: #returnsBooleanAndOther!RBSmalllintTestObject removeSelector: #returnInEnsure!RBSmalllintTestObject removeSelector: #release!RBSmalllintTestObject removeSelector: #refersToClass!RBSmalllintTestObject removeSelector: #referencesConditionFor:!RBSmalllintTestObject removeSelector: #precedence!RBSmalllintTestObject removeSelector: #onlyReadOrWrittenTemporary!RBSmalllintTestObject removeSelector: #nonUnaryAccessingMethodWithoutReturn:!RBSmalllintTestObject removeSelector: #nonUnaryAccessingMessageStatementMethodWithoutReturn:!RBSmalllintTestObject removeSelector: #nonUnaryAccessingBranchingStatementMethodWithoutReturn:!RBSmalllintTestObject removeSelector: #noMoveDefinition!RBSmalllintTestObject removeSelector: #multiplePeriodsTerminatingStatement!RBSmalllintTestObject removeSelector: #multiplePeriodsTerminatingAssignmentStatement!RBSmalllintTestObject removeSelector: #modifiesCollection!RBSmalllintTestObject removeSelector: #missingYourself!RBSmalllintTestObject removeSelector: #minMax!RBSmalllintTestObject removeSelector: #longMethods!RBSmalllintTestObject removeSelector: #literalArrayContainsComma!RBSmalllintTestObject removeSelector: #literalArrayCharacters!RBSmalllintTestObject removeSelector: #justSendsSuper!RBSmalllintTestObject removeSelector: #inlineTemporary!RBSmalllintTestObject removeSelector: #ifTrueReturns!RBSmalllintTestObject removeSelector: #ifTrueBlocks!RBSmalllintTestObject removeSelector: #haltClassMentioned!RBSmalllintTestObject removeSelector: #guardingClause!RBSmalllintTestObject removeSelector: #fullBlocks!RBSmalllintTestObject removeSelector: #floatEqualityComparison!RBSmalllintTestObject removeSelector: #flagged!RBSmalllintTestObject removeSelector: #fileBlocks!RBSmalllintTestObject removeSelector: #extraBlock!RBSmalllintTestObject removeSelector: #equivalentSuperclassMethods!RBSmalllintTestObject removeSelector: #equalsTrue!RBSmalllintTestObject removeSelector: #equalNotUsed!RBSmalllintTestObject removeSelector: #endTrueFalse!RBSmalllintTestObject removeSelector: #emptyExceptionHandler!RBSmalllintTestObject removeSelector: #detectContains!RBSmalllintTestObject removeSelector: #debbuggingMessageSent!RBSmalllintTestObject removeSelector: #contains!RBSmalllintTestObject removeSelector: #consistencyCheck!RBSmalllintTestObject removeSelector: #collectionProtocol!RBSmalllintTestObject removeSelector: #collectionMessagesToExternalObject!RBSmalllintTestObject removeSelector: #collectSelectNotUsed!RBSmalllintTestObject removeSelector: #codeCruftLeftInMethods!RBSmalllintTestObject removeSelector: #booleanPrecedence!RBSmalllintTestObject removeSelector: #badMessage!RBSmalllintTestObject removeSelector: #atIfAbsent!RBSmalllintTestObject removeSelector: #assignmentWithoutEffect!RBSmalllintTestObject removeSelector: #assignmentInIfTrue!RBSmalllintTestObject removeSelector: #assignmentInBlock!RBSmalllintTestObject removeSelector: #asOrderedCollectionNotNeeded!RBSmalllintTestObject removeSelector: #abstractUnaryAccessingMethodWithoutReturn!Smalltalk globals removeClassNamed: #AnObsoleteRBSmalllintTestObject!Smalltalk globals removeClassNamed: #AnObsoleteRBSmalllintTestNoClassCommentObject!RBSmalllintTestDefinesEqualNotHashObject removeSelector: #=!Smalltalk globals removeClassNamed: #AnObsoleteRBSmalllintTestDefinesEqualNotHashObject!RBSmalllintTestDefinesEqualNotHashGoodObject removeSelector: #hash!RBSmalllintTestDefinesEqualNotHashGoodObject removeSelector: #=!Smalltalk globals removeClassNamed: #AnObsoleteRBSmalllintTestDefinesEqualNotHashGoodObject!RBSmalllintTestClassNotReferencedObject class removeSelector: #mustNotBeReferenced!Smalltalk globals removeClassNamed: #AnObsoleteRBSmalllintTestClassNotReferencedObject!RBSmalllintTestAddRemoveDependentsObject removeSelector: #removeDependentSends!RBSmalllintTestAddRemoveDependentsObject removeSelector: #addDependentSends!Smalltalk globals removeClassNamed: #AnObsoleteRBSmalllintTestAddRemoveDependentsObject!RBSmalllintTestAddRemoveDependentsGoodObject removeSelector: #removeDependentSends!RBSmalllintTestAddRemoveDependentsGoodObject removeSelector: #addDependentSends!Smalltalk globals removeClassNamed: #AnObsoleteRBSmalllintTestAddRemoveDependentsGoodObject!Smalltalk globals removeClassNamed: #AnObsoleteRBSmalllintTestSuperclassObject!RBBrowserEnvironmentTest removeSelector: #universalTestFor:!RBBrowserEnvironmentTest removeSelector: #uniqueClassesIn:!RBBrowserEnvironmentTest removeSelector: #testWithoutClassesRemovesClassesFromSender!RBBrowserEnvironmentTest removeSelector: #testVariableEnvironmentInstVars!RBBrowserEnvironmentTest removeSelector: #testVariableEnvironmentClassVars!RBBrowserEnvironmentTest removeSelector: #testVariableEnvironmentAddRemove!RBBrowserEnvironmentTest removeSelector: #testSystemIntegrity!RBBrowserEnvironmentTest removeSelector: #testSelectorEnvironment!RBBrowserEnvironmentTest removeSelector: #testSelectMethods!RBBrowserEnvironmentTest removeSelector: #testRemoveSelectorByAndAndNot!RBBrowserEnvironmentTest removeSelector: #testProtocolEnvironment!RBBrowserEnvironmentTest removeSelector: #testPragmaEnvironment!RBBrowserEnvironmentTest removeSelector: #testPackageEnvironment!RBBrowserEnvironmentTest removeSelector: #testOrEnvironment!RBBrowserEnvironmentTest removeSelector: #testNotEnvironmentWithClassEnvironments!RBBrowserEnvironmentTest removeSelector: #testNotEnvironment!RBBrowserEnvironmentTest removeSelector: #testMatches!RBBrowserEnvironmentTest removeSelector: #testImplementorsMatching!RBBrowserEnvironmentTest removeSelector: #testEnvironmentWrapper!RBBrowserEnvironmentTest removeSelector: #testConstructedSelectorEnvironment!RBBrowserEnvironmentTest removeSelector: #testConstructedClassEnvironment!RBBrowserEnvironmentTest removeSelector: #testClassEnvironment!RBBrowserEnvironmentTest removeSelector: #testCategoryEnvironment!RBBrowserEnvironmentTest removeSelector: #testBrowserEnvironment!RBBrowserEnvironmentTest removeSelector: #testAndEnvironmentWithStoreOn!RBBrowserEnvironmentTest removeSelector: #testAndEnvironment!RBBrowserEnvironmentTest removeSelector: #storeStringFor:!RBBrowserEnvironmentTest removeSelector: #setUp!RBBrowserEnvironmentTest removeSelector: #protocolsFor:!RBBrowserEnvironmentTest removeSelector: #numberSelectorsFor:!RBBrowserEnvironmentTest removeSelector: #labelFor:!RBBrowserEnvironmentTest removeSelector: #keysFor:!RBBrowserEnvironmentTest removeSelector: #copyFor:!RBBrowserEnvironmentTest removeSelector: #classesFor:!RBBrowserEnvironmentTest removeSelector: #classVariableWriter!RBBrowserEnvironmentTest removeSelector: #classVariableReader!RBBrowserEnvironmentTest removeSelector: #classNamesFor:!RBBrowserEnvironmentTest removeSelector: #categoriesFor:!RBBrowserEnvironmentTest class removeSelector: #packageNamesUnderTest!RBBrowserEnvironmentTest class removeSelector: #accessFromClassSideOnlyVariable!Smalltalk globals removeClassNamed: #AnObsoleteRBBrowserEnvironmentTest!ManifestFileSystemTestsCore class removeSelector: #description!Smalltalk globals removeClassNamed: #AnObsoleteManifestFileSystemTestsCore!PathTest removeSelector: #testWorkingDirectoryParent!PathTest removeSelector: #testWorkingDirPrintString!PathTest removeSelector: #testWithExtentionReplacesExtension!PathTest removeSelector: #testWithExtentionAddsExtension!PathTest removeSelector: #testWindowsAbsolutePathName!PathTest removeSelector: #testUnixAbsolutePathName!PathTest removeSelector: #testUnequalSize!PathTest removeSelector: #testUnequalContent!PathTest removeSelector: #testSlash!PathTest removeSelector: #testSimpleResolution!PathTest removeSelector: #testSiblingOfPath!PathTest removeSelector: #testRootPrintString!PathTest removeSelector: #testRootParent!PathTest removeSelector: #testResolveString!PathTest removeSelector: #testResolveRelative!PathTest removeSelector: #testResolvePath!PathTest removeSelector: #testResolveAbsolute!PathTest removeSelector: #testRelativeWithParents!PathTest removeSelector: #testRelativeToBranch!PathTest removeSelector: #testRelativeTo!PathTest removeSelector: #testRelativePrintString!PathTest removeSelector: #testRelativeFromStringParent!PathTest removeSelector: #testRelativeFromStringNormalizationParent!PathTest removeSelector: #testRelativeFromStringNormalization!PathTest removeSelector: #testRelativeFromString!PathTest removeSelector: #testRedundantSeparators!PathTest removeSelector: #testPrintWithDelimiter!PathTest removeSelector: #testPrintRelativeWithParent!PathTest removeSelector: #testPrintPathOnDelimiter!PathTest removeSelector: #testPrintPathOn!PathTest removeSelector: #testPathString!PathTest removeSelector: #testParseWindowsPathWithUnixDelimiters!PathTest removeSelector: #testParseTrailingSlash!PathTest removeSelector: #testParseBogus!PathTest removeSelector: #testParse!PathTest removeSelector: #testParentUpTo!PathTest removeSelector: #testParentResolution!PathTest removeSelector: #testParentParent!PathTest removeSelector: #testParent!PathTest removeSelector: #testMakeRelativeFrom2RelativePaths!PathTest removeSelector: #testMakeRelative!PathTest removeSelector: #testIsRoot!PathTest removeSelector: #testIsRelative!PathTest removeSelector: #testIsNotRoot!PathTest removeSelector: #testIsNotRelative!PathTest removeSelector: #testIsNotAbsolute!PathTest removeSelector: #testIsEmpty!PathTest removeSelector: #testIsChildOfReference!PathTest removeSelector: #testIsChildOfPath!PathTest removeSelector: #testIsAbsoluteWindowsPathReturnsTrueWhenWindowsAbsolutePathProvided!PathTest removeSelector: #testIsAbsoluteWindowsPathReturnsFalseWhenNoWindowsAbsolutePathProvided!PathTest removeSelector: #testIsAbsolute!PathTest removeSelector: #testGrandchildOfPath!PathTest removeSelector: #testFullName!PathTest removeSelector: #testExtensions!PathTest removeSelector: #testExtendingPath!PathTest removeSelector: #testEqual!PathTest removeSelector: #testContainsLocator!PathTest removeSelector: #testContains!PathTest removeSelector: #testCommaAddsExtensionAgain!PathTest removeSelector: #testCommaAddsExtension!PathTest removeSelector: #testCanonicalization!PathTest removeSelector: #testBasenameWithoutExtension!PathTest removeSelector: #testBasenameNoParent!PathTest removeSelector: #testBasename!PathTest removeSelector: #testAsReference!PathTest removeSelector: #testAbsoluteWithParents!PathTest removeSelector: #testAbsolutePrintString!PathTest removeSelector: #testAbsolutePath!Smalltalk globals removeClassNamed: #AnObsoletePathTest!SingleTreeTest removeSelector: #setUp!SingleTreeTest removeSelector: #createFile:!SingleTreeTest removeSelector: #createDirectory:!SingleTreeTest class removeSelector: #isAbstract!PreorderGuideTest removeSelector: #testAll!Smalltalk globals removeClassNamed: #AnObsoletePreorderGuideTest!PostorderGuideTest removeSelector: #testAll!Smalltalk globals removeClassNamed: #AnObsoletePostorderGuideTest!GuideTest removeSelector: #visitFile:!GuideTest removeSelector: #visitDirectory:!GuideTest removeSelector: #setUp!GuideTest removeSelector: #assertVisitedIs:!GuideTest class removeSelector: #isAbstract!BreadthFirstGuideTest removeSelector: #testAll!Smalltalk globals removeClassNamed: #AnObsoleteBreadthFirstGuideTest!Smalltalk globals removeClassNamed: #AnObsoleteGuideTest!DeleteVisitorTest removeSelector: #testBeta!Smalltalk globals removeClassNamed: #AnObsoleteDeleteVisitorTest!SelectVisitorTest removeSelector: #testPreorderSelect!SelectVisitorTest removeSelector: #testPreorder!SelectVisitorTest removeSelector: #testPostorderSelect!SelectVisitorTest removeSelector: #testPostorder!SelectVisitorTest removeSelector: #testBreadthFirstSelect!SelectVisitorTest removeSelector: #testBreadthFirst!Smalltalk globals removeClassNamed: #AnObsoleteSelectVisitorTest!CollectVisitorTest removeSelector: #testPreorder!CollectVisitorTest removeSelector: #testPostorder!CollectVisitorTest removeSelector: #testBreadthFirst!Smalltalk globals removeClassNamed: #AnObsoleteCollectVisitorTest!AbstractEnumerationVisitorTest removeSelector: #setUp!AbstractEnumerationVisitorTest removeSelector: #root!AbstractEnumerationVisitorTest removeSelector: #assertEntries:are:!AbstractEnumerationVisitorTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteAbstractEnumerationVisitorTest!Smalltalk globals removeClassNamed: #AnObsoleteSingleTreeTest!FileSystemTreeTest removeSelector: #setUpGreek!FileSystemTreeTest removeSelector: #createFile:!FileSystemTreeTest removeSelector: #createDirectory:!FileSystemTreeTest class removeSelector: #isAbstract!CopyVisitorTest removeSelector: #testAll!CopyVisitorTest removeSelector: #setUp!CopyVisitorTest removeSelector: #createFile:!CopyVisitorTest removeSelector: #createDirectory:!Smalltalk globals removeClassNamed: #AnObsoleteCopyVisitorTest!Smalltalk globals removeClassNamed: #AnObsoleteFileSystemTreeTest!FileSystemTest removeSelector: #testWriteStreamIfPresent!FileSystemTest removeSelector: #testWriteStreamDoIfPresent!FileSystemTest removeSelector: #testWriteStreamDo!FileSystemTest removeSelector: #testWriteStream!FileSystemTest removeSelector: #testWorking!FileSystemTest removeSelector: #testRootIsNotAFile!FileSystemTest removeSelector: #testRootIsDirectory!FileSystemTest removeSelector: #testRootExists!FileSystemTest removeSelector: #testRoot!FileSystemTest removeSelector: #testReferenceTo!FileSystemTest removeSelector: #testReadingAfterWriting!FileSystemTest removeSelector: #testReadStreamIfAbsent!FileSystemTest removeSelector: #testReadStreamDoIfAbsent!FileSystemTest removeSelector: #testReadStreamDo!FileSystemTest removeSelector: #testReadStream!FileSystemTest removeSelector: #testNonExistentFileSize!FileSystemTest removeSelector: #testNonExistentEntryAt!FileSystemTest removeSelector: #testMoveToFailingMissingSource!FileSystemTest removeSelector: #testMoveToFailingMissingDestination!FileSystemTest removeSelector: #testMoveToFailingExistingDestination!FileSystemTest removeSelector: #testMoveTo!FileSystemTest removeSelector: #testFileNames!FileSystemTest removeSelector: #testFile!FileSystemTest removeSelector: #testEntryAt!FileSystemTest removeSelector: #testEntriesAt!FileSystemTest removeSelector: #testEnsureDirectoryExists!FileSystemTest removeSelector: #testEnsureDirectoryCreatesParent!FileSystemTest removeSelector: #testEnsureDirectory!FileSystemTest removeSelector: #testDirectory!FileSystemTest removeSelector: #testDelimiter!FileSystemTest removeSelector: #testDelete!FileSystemTest removeSelector: #testDefaultWorkingDirectory!FileSystemTest removeSelector: #testCreateFileNotCreateParent!FileSystemTest removeSelector: #testCreateFile!FileSystemTest removeSelector: #testCreateDirectoryNotCreateParent!FileSystemTest removeSelector: #testCreateDirectoryNoParent!FileSystemTest removeSelector: #testCreateDirectoryExists!FileSystemTest removeSelector: #testCreateDirectory!FileSystemTest removeSelector: #testCopyWithCorrectBasename!FileSystemTest removeSelector: #testCopySourceDoesntExist!FileSystemTest removeSelector: #testCopyDestExists!FileSystemTest removeSelector: #testCopyAndDelete!FileSystemTest removeSelector: #testCopy!FileSystemTest removeSelector: #testChildrenSortingRoot!FileSystemTest removeSelector: #testChildrenSorting!FileSystemTest removeSelector: #testChildrenAt!FileSystemTest removeSelector: #testBinaryReadStreamIfAbsent!FileSystemTest removeSelector: #testBinaryReadStreamDoIfAbsent!FileSystemTest removeSelector: #testBinaryReadStreamDo!FileSystemTest removeSelector: #testBinaryReadStream!FileSystemTest removeSelector: #tearDown!FileSystemTest removeSelector: #setUp!FileSystemTest removeSelector: #markForCleanup:!FileSystemTest removeSelector: #createFileSystem!FileSystemTest class removeSelector: #shouldInheritSelectors!FileSystemTest class removeSelector: #packageNamesUnderTest!FileSystemTest class removeSelector: #isAbstract!FileSystemTest class removeSelector: #defaultTimeLimit!Smalltalk globals removeClassNamed: #AnObsoleteFileSystemTest!SystemResolverTest removeSelector: #testVmDirectory!SystemResolverTest removeSelector: #testVmBinary!SystemResolverTest removeSelector: #testLocalDirectory!SystemResolverTest removeSelector: #testImageDirectory!SystemResolverTest removeSelector: #testImage!SystemResolverTest removeSelector: #testChanges!SystemResolverTest removeSelector: #createResolver!Smalltalk globals removeClassNamed: #AnObsoleteSystemResolverTest!PlatformResolverTest removeSelector: #testHome!PlatformResolverTest removeSelector: #testCache!PlatformResolverTest removeSelector: #createResolver!Smalltalk globals removeClassNamed: #AnObsoletePlatformResolverTest!InteractiveResolverTest removeSelector: #testNew!InteractiveResolverTest removeSelector: #testCached!InteractiveResolverTest removeSelector: #home!InteractiveResolverTest removeSelector: #createResolver!Smalltalk globals removeClassNamed: #AnObsoleteInteractiveResolverTest!FileSystemResolverTest removeSelector: #setUp!FileSystemResolverTest removeSelector: #createResolver!FileSystemResolverTest removeSelector: #assertOriginResolves:!FileSystemResolverTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteFileSystemResolverTest!FileSystemHandleTest removeSelector: #testWriteStream!FileSystemHandleTest removeSelector: #testTruncate!FileSystemHandleTest removeSelector: #testSizeNoGrow!FileSystemHandleTest removeSelector: #testSizeAfterGrow!FileSystemHandleTest removeSelector: #testReference!FileSystemHandleTest removeSelector: #testReadOnly!FileSystemHandleTest removeSelector: #testReadBufferTooLarge!FileSystemHandleTest removeSelector: #testIO!FileSystemHandleTest removeSelector: #testEnsureClosed!FileSystemHandleTest removeSelector: #testCreatedOpen!FileSystemHandleTest removeSelector: #testClose!FileSystemHandleTest removeSelector: #testAtWriteBinaryAscii!FileSystemHandleTest removeSelector: #testAtPutBinaryAscii!FileSystemHandleTest removeSelector: #testAtPut!FileSystemHandleTest removeSelector: #testAt!FileSystemHandleTest removeSelector: #tearDown!FileSystemHandleTest removeSelector: #setUp!FileSystemHandleTest removeSelector: #createFileSystem!FileSystemHandleTest class removeSelector: #shouldInheritSelectors!FileSystemHandleTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteFileSystemHandleTest!FileReferenceTest removeSelector: #testWriteStreamifPresentExists!FileReferenceTest removeSelector: #testWriteStreamifPresent!FileReferenceTest removeSelector: #testWriteStreamExists!FileReferenceTest removeSelector: #testWriteStreamDoifPresentNot!FileReferenceTest removeSelector: #testWriteStreamDoifPresent!FileReferenceTest removeSelector: #testWriteStreamDoExists!FileReferenceTest removeSelector: #testWriteStreamDo!FileReferenceTest removeSelector: #testWriteStream!FileReferenceTest removeSelector: #testWorkingDirectoryParent!FileReferenceTest removeSelector: #testWithoutExtension!FileReferenceTest removeSelector: #testWithExtentionReplacesExtension!FileReferenceTest removeSelector: #testWithExtentionAddsExtension!FileReferenceTest removeSelector: #testUnequalSize!FileReferenceTest removeSelector: #testUnequalContent!FileReferenceTest removeSelector: #testTempFilePrefixSuffix!FileReferenceTest removeSelector: #testSlash!FileReferenceTest removeSelector: #testSimpleResolution!FileReferenceTest removeSelector: #testSiblingOfReference!FileReferenceTest removeSelector: #testRootParent!FileReferenceTest removeSelector: #testResolve!FileReferenceTest removeSelector: #testRenameTargetExists!FileReferenceTest removeSelector: #testRename!FileReferenceTest removeSelector: #testRelativeToReference!FileReferenceTest removeSelector: #testRelativeToPath!FileReferenceTest removeSelector: #testReadStreamNotFound!FileReferenceTest removeSelector: #testReadStreamIfAbsent!FileReferenceTest removeSelector: #testReadStreamDoifAbsentNot!FileReferenceTest removeSelector: #testReadStreamDoifAbsent!FileReferenceTest removeSelector: #testReadStreamDoNotFound!FileReferenceTest removeSelector: #testReadStreamDo!FileReferenceTest removeSelector: #testReadStream!FileReferenceTest removeSelector: #testPathRelativeTo!FileReferenceTest removeSelector: #testParentUpTo!FileReferenceTest removeSelector: #testParentResolutionWithRemoteReference!FileReferenceTest removeSelector: #testParentResolutionWithReference!FileReferenceTest removeSelector: #testParentResolutionWithPath!FileReferenceTest removeSelector: #testParentResolutionWithAbsoluteReference!FileReferenceTest removeSelector: #testParent!FileReferenceTest removeSelector: #testMakeRelative!FileReferenceTest removeSelector: #testIsRoot!FileReferenceTest removeSelector: #testIsRelative!FileReferenceTest removeSelector: #testIsNotRoot!FileReferenceTest removeSelector: #testIsNotRelative!FileReferenceTest removeSelector: #testIsNotAbsolute!FileReferenceTest removeSelector: #testIsAbsolute!FileReferenceTest removeSelector: #testIndicator!FileReferenceTest removeSelector: #testHasFiles!FileReferenceTest removeSelector: #testHasDirectories!FileReferenceTest removeSelector: #testHasChildren!FileReferenceTest removeSelector: #testGrandchildOfReference!FileReferenceTest removeSelector: #testGlob!FileReferenceTest removeSelector: #testExists!FileReferenceTest removeSelector: #testEqualityRelativeVsAbsolute!FileReferenceTest removeSelector: #testEqual!FileReferenceTest removeSelector: #testEntries!FileReferenceTest removeSelector: #testEnsureDeleteNonEmptyDirectory!FileReferenceTest removeSelector: #testEnsureDeleteAll!FileReferenceTest removeSelector: #testEnsureDelete!FileReferenceTest removeSelector: #testDoesntContainReferencePath!FileReferenceTest removeSelector: #testDoesntContainReferenceFileSystem!FileReferenceTest removeSelector: #testDoesntContainPath!FileReferenceTest removeSelector: #testDoesntContainLocator!FileReferenceTest removeSelector: #testDeleteIfAbsent!FileReferenceTest removeSelector: #testDeleteAllChildren!FileReferenceTest removeSelector: #testDeleteAll!FileReferenceTest removeSelector: #testContents!FileReferenceTest removeSelector: #testContainsReference!FileReferenceTest removeSelector: #testContainsPath!FileReferenceTest removeSelector: #testContainsLocator!FileReferenceTest removeSelector: #testCommaAddsExtensionAgain!FileReferenceTest removeSelector: #testCommaAddsExtension!FileReferenceTest removeSelector: #testChildren!FileReferenceTest removeSelector: #testChildOfReference!FileReferenceTest removeSelector: #testChildOfPath!FileReferenceTest removeSelector: #testChildFiles!FileReferenceTest removeSelector: #testChildDirectories!FileReferenceTest removeSelector: #testCanonicalization!FileReferenceTest removeSelector: #testBasenameWithoutExtension!FileReferenceTest removeSelector: #testBasename!FileReferenceTest removeSelector: #testBaseAndExtension!FileReferenceTest removeSelector: #testAsReference!FileReferenceTest removeSelector: #testAsAbsoluteIdentity!FileReferenceTest removeSelector: #testAsAbsoluteConverted!FileReferenceTest removeSelector: #testAllEntries!FileReferenceTest removeSelector: #testAllDirectories!FileReferenceTest removeSelector: #testAllChildren!FileReferenceTest removeSelector: #setUp!FileReferenceTest removeSelector: #createFile:!Smalltalk globals removeClassNamed: #AnObsoleteFileReferenceTest!FileLocatorTest removeSelector: #testWithExtensionReplacesExtension!FileLocatorTest removeSelector: #testWithExtensionAddsExtension!FileLocatorTest removeSelector: #testSlash!FileLocatorTest removeSelector: #testResolveString!FileLocatorTest removeSelector: #testResolveRelativeReference!FileLocatorTest removeSelector: #testResolvePath!FileLocatorTest removeSelector: #testResolveCompoundString!FileLocatorTest removeSelector: #testResolveAbsoluteReference!FileLocatorTest removeSelector: #testParent!FileLocatorTest removeSelector: #testOriginBasename!FileLocatorTest removeSelector: #testMoveTo!FileLocatorTest removeSelector: #testLocalDirectory!FileLocatorTest removeSelector: #testIsRoot!FileLocatorTest removeSelector: #testIsRelative!FileLocatorTest removeSelector: #testIsNotRoot!FileLocatorTest removeSelector: #testIsAbsolute!FileLocatorTest removeSelector: #testImageDirectory!FileLocatorTest removeSelector: #testFileSystem!FileLocatorTest removeSelector: #testExtension!FileLocatorTest removeSelector: #testEqual!FileLocatorTest removeSelector: #testContainsReference!FileLocatorTest removeSelector: #testContainsPath!FileLocatorTest removeSelector: #testContainsLocator!FileLocatorTest removeSelector: #testCommaAddsExtensionAgain!FileLocatorTest removeSelector: #testCommaAddsExtension!FileLocatorTest removeSelector: #testCPath!FileLocatorTest removeSelector: #testBasename!FileLocatorTest removeSelector: #testAsAbsolute!Smalltalk globals removeClassNamed: #AnObsoleteFileLocatorTest!DirectoryEntryTest removeSelector: #testSize!DirectoryEntryTest removeSelector: #testReference!DirectoryEntryTest removeSelector: #testModificationTimeIsADateAndTimeInstance!DirectoryEntryTest removeSelector: #testIsNotFile!DirectoryEntryTest removeSelector: #testIsNotDirectory!DirectoryEntryTest removeSelector: #testIsFile!DirectoryEntryTest removeSelector: #testIsDirectory!DirectoryEntryTest removeSelector: #testCreationTimeIsADateAndTimeInstance!DirectoryEntryTest removeSelector: #entry!Smalltalk globals removeClassNamed: #AnObsoleteDirectoryEntryTest!ManifestFileSystemTestsDisk class removeSelector: #description!Smalltalk globals removeClassNamed: #AnObsoleteManifestFileSystemTestsDisk!WindowsStoreTest removeSelector: #testRelativePath!WindowsStoreTest removeSelector: #testRelativeFullName!WindowsStoreTest removeSelector: #testPrintString!WindowsStoreTest removeSelector: #testAbsolutePath!WindowsStoreTest removeSelector: #testAbsoluteFullName!Smalltalk globals removeClassNamed: #AnObsoleteWindowsStoreTest!FileHandleTest removeSelector: #createFileSystem!Smalltalk globals removeClassNamed: #AnObsoleteFileHandleTest!DiskFileSystemTest removeSelector: #testMoveMemoryToDisk!DiskFileSystemTest removeSelector: #testIsDiskFileSystem!DiskFileSystemTest removeSelector: #testIsDirectory!DiskFileSystemTest removeSelector: #testEqual!DiskFileSystemTest removeSelector: #testDefaultWorkingDirectory!DiskFileSystemTest removeSelector: #createFileSystem!Smalltalk globals removeClassNamed: #AnObsoleteDiskFileSystemTest!ManifestFileSystemTestsMemory class removeSelector: #description!Smalltalk globals removeClassNamed: #AnObsoleteManifestFileSystemTestsMemory!MemoryHandleTest removeSelector: #createFileSystem!Smalltalk globals removeClassNamed: #AnObsoleteMemoryHandleTest!MemoryFileSystemTest removeSelector: #testIsMemoryFileSystem!MemoryFileSystemTest removeSelector: #testEqual!MemoryFileSystemTest removeSelector: #createFileSystem!Smalltalk globals removeClassNamed: #AnObsoleteMemoryFileSystemTest!GTUnprintableObjectTest removeSelector: #testInspectDoesNotCrash!GTUnprintableObjectTest removeSelector: #printString!Smalltalk globals removeClassNamed: #AnObsoleteGTUnprintableObjectTest!GTInspectorProtoObjectTest removeSelector: #testInspectDoesNotCrash!Smalltalk globals removeClassNamed: #AnObsoleteGTInspectorProtoObjectTest!GTInspectorVariableValuePairsTest removeSelector: #testFloatPairs!GTInspectorVariableValuePairsTest removeSelector: #testContextNodes!GTInspectorVariableValuePairsTest removeSelector: #testArrayPairsUnderLimit!GTInspectorVariableValuePairsTest removeSelector: #testArrayPairsSmall!GTInspectorVariableValuePairsTest removeSelector: #testArrayPairsOverLimit!GTInspectorVariableValuePairsTest removeSelector: #testArrayPairsLong!GTInspectorVariableValuePairsTest removeSelector: #testArrayPairsEqualLimit!Smalltalk globals removeClassNamed: #AnObsoleteGTInspectorVariableValuePairsTest!GLMTestPane removeSelector: #browser:!GLMTestPane removeSelector: #browser!GLMTestPane class removeSelector: #portClass!GLMTestPane class removeSelector: #new!Smalltalk globals removeClassNamed: #AnObsoleteGLMTestPane!GlamourousBenchmark removeSelector: #showOnlyFinderBrowser!GlamourousBenchmark removeSelector: #showOnlyBrowser!GlamourousBenchmark removeSelector: #measureSelectionTimeInFinderForSize:!GlamourousBenchmark removeSelector: #measureSelectionTimeForSize:!GlamourousBenchmark removeSelector: #measureSelectionTime!GlamourousBenchmark removeSelector: #measureOpeningTime!GlamourousBenchmark removeSelector: #defaultFinderBrowser!GlamourousBenchmark removeSelector: #defaultBrowser!Smalltalk globals removeClassNamed: #AnObsoleteGlamourousBenchmark!GLMTestPort removeSelector: #seenTransmissions!GLMTestPort removeSelector: #receive:in:!GLMTestPort removeSelector: #receive:!Smalltalk globals removeClassNamed: #AnObsoleteGLMTestPort!GLMWrapperTest removeSelector: #testPresentationsAreInstalled!GLMWrapperTest removeSelector: #testDefaultPane!Smalltalk globals removeClassNamed: #AnObsoleteGLMWrapperTest!GLMTreePresentationTest removeSelector: #testValidatePorts!GLMTreePresentationTest removeSelector: #testValidateOn!GLMTreePresentationTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGLMTreePresentationTest!GLMTransmissionTest removeSelector: #testWhenCondition!GLMTransmissionTest removeSelector: #testTriggerConditionsWithParentPort!GLMTransmissionTest removeSelector: #testTriggerConditions!GLMTransmissionTest removeSelector: #testSimple!GLMTransmissionTest removeSelector: #testNoOverrideStrategy!GLMTransmissionTest removeSelector: #testDefaultStrategy!GLMTransmissionTest removeSelector: #testCopy!GLMTransmissionTest removeSelector: #testBundleStrategy!Smalltalk globals removeClassNamed: #AnObsoleteGLMTransmissionTest!GLMTransmissionScriptingTest removeSelector: #testToWatcher!GLMTransmissionScriptingTest removeSelector: #testToPort!GLMTransmissionScriptingTest removeSelector: #testTo!GLMTransmissionScriptingTest removeSelector: #testFromPort!GLMTransmissionScriptingTest removeSelector: #testFrom!GLMTransmissionScriptingTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGLMTransmissionScriptingTest!GLMTransmissionContextTest removeSelector: #testInclues!GLMTransmissionContextTest removeSelector: #testForbiddenAnnouncements!GLMTransmissionContextTest removeSelector: #testCopy!Smalltalk globals removeClassNamed: #AnObsoleteGLMTransmissionContextTest!GLMTextPresentationTest removeSelector: #testTextPortIsPopulatedByDefault!GLMTextPresentationTest removeSelector: #testSelectionIntervalInitialization!GLMTextPresentationTest removeSelector: #testSelectedText!GLMTextPresentationTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteGLMTextPresentationTest!GLMTabulatorTest removeSelector: #testSimpleRows!GLMTabulatorTest removeSelector: #testSimpleColumns!GLMTabulatorTest removeSelector: #testOneSimpleRowAndOneNested!GLMTabulatorTest removeSelector: #testOneSimpleColumnAndOneNested!GLMTabulatorTest removeSelector: #testComplex!Smalltalk globals removeClassNamed: #AnObsoleteGLMTabulatorTest!GLMScriptingTest removeSelector: #testUpdateYourselfOn!GLMScriptingTest removeSelector: #testUpdateAction!GLMScriptingTest removeSelector: #testTwoTransmissionsWithOnlyOneEvent!GLMScriptingTest removeSelector: #testTransmissionWithTwoOrigins!GLMScriptingTest removeSelector: #testThreePanesTransmissions!GLMScriptingTest removeSelector: #testStartWithOnlyJumpStart!GLMScriptingTest removeSelector: #testStartTransmissionFromInitializationBlock!GLMScriptingTest removeSelector: #testStartTransmission!GLMScriptingTest removeSelector: #testSimpleTransmissionsToOuter!GLMScriptingTest removeSelector: #testSimpleTransmission!GLMScriptingTest removeSelector: #testScriptingDefaults!GLMScriptingTest removeSelector: #testReferences!GLMScriptingTest removeSelector: #testPublishingToOutsideFinder!GLMScriptingTest removeSelector: #testPublishingToOutsideAndInsideFinder!GLMScriptingTest removeSelector: #testPublishing!GLMScriptingTest removeSelector: #testOuterEntity!GLMScriptingTest removeSelector: #testNestedBrowserWithExplicitTransmission!GLMScriptingTest removeSelector: #testNestedBrowserOther!GLMScriptingTest removeSelector: #testNestedBrowserEntity!GLMScriptingTest removeSelector: #testFinderWithPreviousPort!GLMScriptingTest removeSelector: #testEntityInUpdateAction!GLMScriptingTest removeSelector: #testDynamicActions!GLMScriptingTest removeSelector: #testConditionalPresentation!GLMScriptingTest removeSelector: #testAllowNil!GLMScriptingTest removeSelector: #testActionDefinition!GLMScriptingTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteGLMScriptingTest!GLMPresentationTest removeSelector: #testWithReturnsTheOriginalPresentation!GLMPresentationTest removeSelector: #testWithBlockPassesTheParentPresentation!GLMPresentationTest removeSelector: #testWith!GLMPresentationTest removeSelector: #testValidate!GLMPresentationTest removeSelector: #testUpdateOnTriggered!GLMPresentationTest removeSelector: #testUpdateOnPortsUpdate!GLMPresentationTest removeSelector: #testUpdateOnFromAllPortsUpdate!GLMPresentationTest removeSelector: #testUpdateConditionallyTriggered!GLMPresentationTest removeSelector: #testUpdate!GLMPresentationTest removeSelector: #testUnregisterAnnouncementsWhenEntityChanges!GLMPresentationTest removeSelector: #testUnregisterAnnouncements!GLMPresentationTest removeSelector: #testToSendMultipleValue!GLMPresentationTest removeSelector: #testToSendAs!GLMPresentationTest removeSelector: #testToSend!GLMPresentationTest removeSelector: #testToRawSelection!GLMPresentationTest removeSelector: #testTitle!GLMPresentationTest removeSelector: #testSetup!GLMPresentationTest removeSelector: #testSelectionAvailableWhenNoSelectionDisabled!GLMPresentationTest removeSelector: #testSelectionActions!GLMPresentationTest removeSelector: #testRawSelectionAvailableWhenNoSelectionActive!GLMPresentationTest removeSelector: #testPresentationInitializationBlockIsCalled!GLMPresentationTest removeSelector: #testPresentationInitializationBlock!GLMPresentationTest removeSelector: #testOnChangeOfPortAct!GLMPresentationTest removeSelector: #testMatching!GLMPresentationTest removeSelector: #testImplicitNotNilMultipleValues!GLMPresentationTest removeSelector: #testHasTitleIcon!GLMPresentationTest removeSelector: #testHasTitle!GLMPresentationTest removeSelector: #testExplicitNotNilMultipleValues!GLMPresentationTest removeSelector: #testEquality!GLMPresentationTest removeSelector: #testEntityPortInitialization!GLMPresentationTest removeSelector: #testDisplay!GLMPresentationTest removeSelector: #testDefaultPane!GLMPresentationTest removeSelector: #testCopyTheTransformation!GLMPresentationTest removeSelector: #testCopyRootPrototype!GLMPresentationTest removeSelector: #testCopyNotTheSameRegistry!GLMPresentationTest removeSelector: #testCopyAnnouncementsDoNotRaise!GLMPresentationTest removeSelector: #testContext!GLMPresentationTest removeSelector: #testAnnouncement!GLMPresentationTest removeSelector: #testAllSelectionActionsWithSelection!GLMPresentationTest removeSelector: #testAllSelectionActionsWithNoSelection!GLMPresentationTest removeSelector: #testAllActions!GLMPresentationTest removeSelector: #testActions!GLMPresentationTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteGLMPresentationTest!GLMPortTest removeSelector: #testTransientValue!GLMPortTest removeSelector: #testSimplePort!GLMPortTest removeSelector: #testResetValue!GLMPortTest removeSelector: #testPresentationBoundPort!GLMPortTest removeSelector: #testPortInitializationFromTransmission!GLMPortTest removeSelector: #testPortInitializationDoesNotAffectTransmissionPort!GLMPortTest removeSelector: #testPortEquality!GLMPortTest removeSelector: #testPanePortTransmissionCallingReceiveIn!Smalltalk globals removeClassNamed: #AnObsoleteGLMPortTest!GLMPortReferenceTest removeSelector: #testOriginValue!GLMPortReferenceTest removeSelector: #testOriginTransformedValue!Smalltalk globals removeClassNamed: #AnObsoleteGLMPortReferenceTest!GLMPortIdentifierTest removeSelector: #testSymbolAsTargetIdentifier!GLMPortIdentifierTest removeSelector: #testSymbolAsOriginIdentifier!GLMPortIdentifierTest removeSelector: #testAssociationAsTargetIdentifier!GLMPortIdentifierTest removeSelector: #testAssociationAsOriginIdentifier!GLMPortIdentifierTest removeSelector: #testAsTargetIdentifier!GLMPortIdentifierTest removeSelector: #testAsOriginIdentifier!Smalltalk globals removeClassNamed: #AnObsoleteGLMPortIdentifierTest!GLMPortEventTest removeSelector: #testPortName!GLMPortEventTest removeSelector: #testInterdependentPanesProperPorts!GLMPortEventTest removeSelector: #testInterdependentPanesCycleBreak!GLMPortEventTest removeSelector: #testCreationWithTransmissionContext!GLMPortEventTest removeSelector: #testCreation!Smalltalk globals removeClassNamed: #AnObsoleteGLMPortEventTest!GLMPaneTest removeSelector: #testValidate!GLMPaneTest removeSelector: #testSimplePresentations!GLMPaneTest removeSelector: #testPresentationsInmmutability!GLMPaneTest removeSelector: #testPresentations!GLMPaneTest removeSelector: #testPresentationConditions!GLMPaneTest removeSelector: #testPresentationAndBrowserConditions!GLMPaneTest removeSelector: #testPortsInmmutability!GLMPaneTest removeSelector: #testPorts!GLMPaneTest removeSelector: #testNamedIn!GLMPaneTest removeSelector: #testNamed!GLMPaneTest removeSelector: #testIn!GLMPaneTest removeSelector: #testDefaultValidate!GLMPaneTest removeSelector: #testDefaultPresentations!GLMPaneTest removeSelector: #testDefaultPortValue!GLMPaneTest removeSelector: #testDefaultCompositePresentation!GLMPaneTest removeSelector: #testCreation!GLMPaneTest removeSelector: #testCopyNotTheSameRegistry!GLMPaneTest removeSelector: #testCopyAnnouncementsDoNotRaise!GLMPaneTest removeSelector: #testCopyAnnouncements!GLMPaneTest removeSelector: #testCachedMatchingPresentations!GLMPaneTest removeSelector: #testAllRecursivePresentations!GLMPaneTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteGLMPaneTest!GLMPagerModelTest removeSelector: #testSelectionChangeAfterPopOfLastPage!GLMPagerModelTest removeSelector: #testSelectToRight!GLMPagerModelTest removeSelector: #testSelectToLeft!GLMPagerModelTest removeSelector: #testPrivateRecomputeIndexesAfterScrollAt!GLMPagerModelTest removeSelector: #testPopOnePage!GLMPagerModelTest removeSelector: #testPopLastPageOf5!GLMPagerModelTest removeSelector: #testPanePushAnnouncement!GLMPagerModelTest removeSelector: #testOneReplacePane!GLMPagerModelTest removeSelector: #testOnePanePush!GLMPagerModelTest removeSelector: #testModelInitialization!GLMPagerModelTest removeSelector: #testIsPaneVisible!GLMPagerModelTest removeSelector: #testEnlargeToRight!GLMPagerModelTest removeSelector: #testEnlargeToLeft!GLMPagerModelTest removeSelector: #testEmptyPopPane!GLMPagerModelTest removeSelector: #testDiminishToRight!GLMPagerModelTest removeSelector: #testDiminishToLeft!GLMPagerModelTest removeSelector: #setUp!GLMPagerModelTest removeSelector: #createSimplePaneMorph!Smalltalk globals removeClassNamed: #AnObsoleteGLMPagerModelTest!GLMNoBrowserTest removeSelector: #testCreation!Smalltalk globals removeClassNamed: #AnObsoleteGLMNoBrowserTest!GLMNewScriptingTest removeSelector: #testStatusbar!GLMNewScriptingTest removeSelector: #testStartTabulator!GLMNewScriptingTest removeSelector: #testSimpleTransmissionWithTransformation!GLMNewScriptingTest removeSelector: #testSimpleTransmissionWithCondition!GLMNewScriptingTest removeSelector: #testSimpleTransmission!GLMNewScriptingTest removeSelector: #testSelectionValidation!GLMNewScriptingTest removeSelector: #testNestedCompositesPaneReference!GLMNewScriptingTest removeSelector: #testEntity!GLMNewScriptingTest removeSelector: #testBundleTransmissionWithTransformation!GLMNewScriptingTest removeSelector: #testBundleTransmission!GLMNewScriptingTest removeSelector: #testBuildingNestedComposites!Smalltalk globals removeClassNamed: #AnObsoleteGLMNewScriptingTest!GLMNestedBrowserTest removeSelector: #testNestedBrowsersWithMultipleOrigins!GLMNestedBrowserTest removeSelector: #testInnerTransmissions!GLMNestedBrowserTest removeSelector: #testEntityPropogation!GLMNestedBrowserTest removeSelector: #testCondition!GLMNestedBrowserTest removeSelector: #testChangeInnerSelection!Smalltalk globals removeClassNamed: #AnObsoleteGLMNestedBrowserTest!GLMLoggerTest removeSelector: #testDefault!GLMLoggerTest removeSelector: #testCustomInstance!Smalltalk globals removeClassNamed: #AnObsoleteGLMLoggerTest!GLMListPresentationTest removeSelector: #testValidateWithMultipleSelection!GLMListPresentationTest removeSelector: #testValidatePorts!GLMListPresentationTest removeSelector: #testValidateOn!GLMListPresentationTest removeSelector: #testToSend!GLMListPresentationTest removeSelector: #testSorted!GLMListPresentationTest removeSelector: #testCustomValidation!GLMListPresentationTest removeSelector: #testChildren!Smalltalk globals removeClassNamed: #AnObsoleteGLMListPresentationTest!GLMHelperTest removeSelector: #testGlamourValue!GLMHelperTest removeSelector: #testAsGlamorousMultiValue!Smalltalk globals removeClassNamed: #AnObsoleteGLMHelperTest!GLMFormattedPresentationTest removeSelector: #testFormat!Smalltalk globals removeClassNamed: #AnObsoleteGLMFormattedPresentationTest!GLMFlexiblePresentationTest removeSelector: #testDynamic!GLMFlexiblePresentationTest removeSelector: #testDefault!Smalltalk globals removeClassNamed: #AnObsoleteGLMFlexiblePresentationTest!GLMFinderTest removeSelector: #testValidSubscriptionsInComplexBrowser!GLMFinderTest removeSelector: #testUnregisterAnnouncementsWhenRemovingPane!GLMFinderTest removeSelector: #testPortPublishing!GLMFinderTest removeSelector: #testPanesHaveDifferentRegistries!GLMFinderTest removeSelector: #testPaneReplacedAnnouncement!GLMFinderTest removeSelector: #testPaneRemovedAnnouncement!GLMFinderTest removeSelector: #testPaneName!GLMFinderTest removeSelector: #testPaneCreation!GLMFinderTest removeSelector: #testPaneAddedAnnouncement!GLMFinderTest removeSelector: #testLastActivePresentation!GLMFinderTest removeSelector: #testFixedSize!GLMFinderTest removeSelector: #testExplicitTransmissionComplex!GLMFinderTest removeSelector: #testExplicitTransmission!GLMFinderTest removeSelector: #testEmptyPanes!Smalltalk globals removeClassNamed: #AnObsoleteGLMFinderTest!GLMExtensionsTest removeSelector: #testGlamourValueWithArgs!GLMExtensionsTest removeSelector: #testGlamourValue!Smalltalk globals removeClassNamed: #AnObsoleteGLMExtensionsTest!GLMExplicitBrowserTest removeSelector: #testTriggeringConditions!GLMExplicitBrowserTest removeSelector: #testTransmissionBundle!GLMExplicitBrowserTest removeSelector: #testSimpleTransmission!GLMExplicitBrowserTest removeSelector: #testSetup!GLMExplicitBrowserTest removeSelector: #testPresentationBoundPort!GLMExplicitBrowserTest removeSelector: #testJumpstartTransmission!GLMExplicitBrowserTest removeSelector: #testAddTransmissionReturn!Smalltalk globals removeClassNamed: #AnObsoleteGLMExplicitBrowserTest!GLMExplicitBrowserCopyTest removeSelector: #testTrasmissions!GLMExplicitBrowserCopyTest removeSelector: #testPanes!GLMExplicitBrowserCopyTest removeSelector: #testEquality!GLMExplicitBrowserCopyTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGLMExplicitBrowserCopyTest!GLMExpanderTest removeSelector: #testSimple!GLMExpanderTest removeSelector: #testPresentations!GLMExpanderTest removeSelector: #testCreation!GLMExpanderTest removeSelector: #testConditionWhenEmbedded!GLMExpanderTest removeSelector: #testAllowNilConditionWhenEmbedded!Smalltalk globals removeClassNamed: #AnObsoleteGLMExpanderTest!GLMDynamicPresentationTest removeSelector: #testPresentationTransformation!GLMDynamicPresentationTest removeSelector: #testPresentationInitializationBlock!GLMDynamicPresentationTest removeSelector: #testIndirectEventsPropagationTransformation!GLMDynamicPresentationTest removeSelector: #testDirectEventsPropagationTransformation!GLMDynamicPresentationTest removeSelector: #testDefaultPresentation!GLMDynamicPresentationTest removeSelector: #testCachedPresentation!Smalltalk globals removeClassNamed: #AnObsoleteGLMDynamicPresentationTest!GLMDashboardTest removeSelector: #testPanesAndLayouts!GLMDashboardTest removeSelector: #testPanes!GLMDashboardTest removeSelector: #testDefaultLayouts!GLMDashboardTest removeSelector: #compareLayout:with:!Smalltalk globals removeClassNamed: #AnObsoleteGLMDashboardTest!GLMCompositePresentationTest removeSelector: #testStartingPreservesItself!GLMCompositePresentationTest removeSelector: #testPane!GLMCompositePresentationTest removeSelector: #testDefaultPane!GLMCompositePresentationTest removeSelector: #testCreation!GLMCompositePresentationTest removeSelector: #testCreateTabulator!GLMCompositePresentationTest removeSelector: #testCreateFinder!GLMCompositePresentationTest removeSelector: #testCompositeWithinCompositePanePropagation!GLMCompositePresentationTest removeSelector: #testCompositeWithinCompositeOuterPortEvents!GLMCompositePresentationTest removeSelector: #testAddSetsCorrectPane!GLMCompositePresentationTest removeSelector: #testAddRaisesAnnouncement!GLMCompositePresentationTest removeSelector: #testAdd!Smalltalk globals removeClassNamed: #AnObsoleteGLMCompositePresentationTest!GLMBundleTransmissionTest removeSelector: #testTriggerConditionsWithParentPort!GLMBundleTransmissionTest removeSelector: #testTriggerConditions!GLMBundleTransmissionTest removeSelector: #testTransmitting!GLMBundleTransmissionTest removeSelector: #testPresentations!GLMBundleTransmissionTest removeSelector: #testPorts!GLMBundleTransmissionTest removeSelector: #testCopy!Smalltalk globals removeClassNamed: #AnObsoleteGLMBundleTransmissionTest!GLMBrowserTest removeSelector: #testWatcherCreation!GLMBrowserTest removeSelector: #testWatcherCopy!GLMBrowserTest removeSelector: #testUpdateRecomputesMatchingPresentations!GLMBrowserTest removeSelector: #testUnregisterAnnouncementsWhenUpdatingPaneWithTwoAnnouncers!GLMBrowserTest removeSelector: #testUnregisterAnnouncementsWhenUpdatingPane!GLMBrowserTest removeSelector: #testUnregisterAnnouncementsWhenRemovingPane!GLMBrowserTest removeSelector: #testUnregisterAnnouncements!GLMBrowserTest removeSelector: #testTransmissionTriggeredAnnounced!GLMBrowserTest removeSelector: #testStatusbarTransmissionsTriggered!GLMBrowserTest removeSelector: #testStatusbarTransmissions!GLMBrowserTest removeSelector: #testHasStatusbar!GLMBrowserTest removeSelector: #testCompositeInTheParentPane!GLMBrowserTest removeSelector: #testAddTransmissions!GLMBrowserTest removeSelector: #testAddPane!Smalltalk globals removeClassNamed: #AnObsoleteGLMBrowserTest!GLMAnnouncerTest removeSelector: #testSuspendParticularAnnouncementWithInheritanceWhile!GLMAnnouncerTest removeSelector: #testSuspendParticularAnnouncementWhile!GLMAnnouncerTest removeSelector: #testSuspendAllWhile!GLMAnnouncerTest removeSelector: #testSimpleNestedSuspendParticularAnnouncementWhile!GLMAnnouncerTest removeSelector: #testNestedSuspendParticularAnnouncementWhile!GLMAnnouncerTest removeSelector: #testNestedSuspendAllWhile!GLMAnnouncerTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteGLMAnnouncerTest!GLMAnnouncementPropagationTest removeSelector: #testSimplePropagation!GLMAnnouncementPropagationTest removeSelector: #testSimpleEmptyPane!GLMAnnouncementPropagationTest removeSelector: #testSimple!GLMAnnouncementPropagationTest removeSelector: #testPropagationDuringCircularDependencies!GLMAnnouncementPropagationTest removeSelector: #testEntityPropogationAnnouncements!GLMAnnouncementPropagationTest removeSelector: #tearDown!GLMAnnouncementPropagationTest removeSelector: #setUp!GLMAnnouncementPropagationTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteGLMAnnouncementPropagationTest!GLMActionTest removeSelector: #testShortcutFromKeymap!GLMActionTest removeSelector: #testShortcutAsString!GLMActionTest removeSelector: #testCondition!Smalltalk globals removeClassNamed: #AnObsoleteGLMActionTest!GLMAccumulatorTest removeSelector: #testRemovePaneIndex!GLMAccumulatorTest removeSelector: #testPublishToOutsideWhenEmbedded!GLMAccumulatorTest removeSelector: #testPublishToOutside!GLMAccumulatorTest removeSelector: #testPaneSelectedAnnouncement!GLMAccumulatorTest removeSelector: #testPaneRemovedAnnouncement!GLMAccumulatorTest removeSelector: #testPaneName!GLMAccumulatorTest removeSelector: #testPaneCreation!GLMAccumulatorTest removeSelector: #testPaneAddedAnnouncement!GLMAccumulatorTest removeSelector: #testNoDuplicatePaneCreation!GLMAccumulatorTest removeSelector: #testCustomTransmissions!GLMAccumulatorTest removeSelector: #testCopy!Smalltalk globals removeClassNamed: #AnObsoleteGLMAccumulatorTest!SubscriptionRegistry removeSelector: #glmSubscriptions!Smalltalk globals removeClassNamed: #AnObsoleteGLMTestAnnouncement2!GLMTestAnnouncement removeSelector: #parameter:!GLMTestAnnouncement removeSelector: #parameter!Smalltalk globals removeClassNamed: #AnObsoleteGLMTestAnnouncement!GLMMockSimpleTransmission removeSelector: #wasTransmited!GLMMockSimpleTransmission removeSelector: #transmitIn:!GLMMockSimpleTransmission removeSelector: #transmit!GLMMockSimpleTransmission removeSelector: #initialize!GLMMockSimpleTransmission class removeSelector: #new!Smalltalk globals removeClassNamed: #AnObsoleteGLMMockSimpleTransmission!LazyTabGroupTest removeSelector: #testSimpleCreation!LazyTabGroupTest removeSelector: #testRemovePage!LazyTabGroupTest removeSelector: #testRemoveAllPages!LazyTabGroupTest removeSelector: #testPageRemovedAnnouncement!LazyTabGroupTest removeSelector: #testPageChangedAnnouncement!LazyTabGroupTest removeSelector: #testIsRendered!LazyTabGroupTest removeSelector: #tearDown!LazyTabGroupTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteLazyTabGroupTest!GLMPagerMorphTest removeSelector: #testPushPanesBeforeOpen!GLMPagerMorphTest removeSelector: #testPushPanesAfterOpen!GLMPagerMorphTest removeSelector: #tearDown!GLMPagerMorphTest removeSelector: #setUp!GLMPagerMorphTest removeSelector: #panesMorphs!GLMPagerMorphTest removeSelector: #openInWindow!GLMPagerMorphTest removeSelector: #createSimplePaneMorph!GLMPagerMorphTest removeSelector: #buttonsMorphs!Smalltalk globals removeClassNamed: #AnObsoleteGLMPagerMorphTest!GLMWrapperMorphicTest removeSelector: #testSimple!Smalltalk globals removeClassNamed: #AnObsoleteGLMWrapperMorphicTest!GLMWizardMorphicTest removeSelector: #testClose!Smalltalk globals removeClassNamed: #AnObsoleteGLMWizardMorphicTest!GLMUpdateMorphicTest removeSelector: #testUpdatePresentationTitle!GLMUpdateMorphicTest removeSelector: #testUpdateBrowserTitle!GLMUpdateMorphicTest removeSelector: #testRemove!GLMUpdateMorphicTest removeSelector: #testInvalidateSelection!GLMUpdateMorphicTest removeSelector: #testAnnouncerUnregistration!GLMUpdateMorphicTest removeSelector: #testAddAndUpdateBrowserManually!GLMUpdateMorphicTest removeSelector: #testAdd!GLMUpdateMorphicTest removeSelector: #setUp!GLMUpdateMorphicTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteGLMUpdateMorphicTest!GLMUpdateInterdependentPanesTest removeSelector: #testTwoInterdependentPanesShouldUpdateTheRenderedSelectionOnTheTriggerPane!GLMUpdateInterdependentPanesTest removeSelector: #testOnePanesShouldUpdateTheRenderedSelectionOnTheTriggerPane!GLMUpdateInterdependentPanesTest removeSelector: #testInterdependentPanesShouldUpdateTheFocusTriggerPaneWithText!GLMUpdateInterdependentPanesTest removeSelector: #testInterdependentPanesShouldUpdateTheFocusTriggerPane!GLMUpdateInterdependentPanesTest removeSelector: #testAllowNil!Smalltalk globals removeClassNamed: #AnObsoleteGLMUpdateInterdependentPanesTest!GLMTreeMorphicTest removeSelector: #treeVisibleItems!GLMTreeMorphicTest removeSelector: #tree!GLMTreeMorphicTest removeSelector: #testTreeWithTags!GLMTreeMorphicTest removeSelector: #testTreeWithDisplay!GLMTreeMorphicTest removeSelector: #testTreeSelectionCancellation!GLMTreeMorphicTest removeSelector: #testTreeSelection!GLMTreeMorphicTest removeSelector: #testTreeMultipleSelectionWithCancellation!GLMTreeMorphicTest removeSelector: #testTreeMultipleSelection!GLMTreeMorphicTest removeSelector: #testTreeDefaultAllowDeseletion!GLMTreeMorphicTest removeSelector: #testTreeAllowDeseletion!GLMTreeMorphicTest removeSelector: #testExplicitSelectionDoesNotUpdate!GLMTreeMorphicTest removeSelector: #testChildrenBlockTakesEntity!GLMTreeMorphicTest removeSelector: #testChildrenBlock!Smalltalk globals removeClassNamed: #AnObsoleteGLMTreeMorphicTest!GLMTextMorphicTest removeSelector: #testUpdatingTextPortUpdatesTheMorph!GLMTextMorphicTest removeSelector: #testUnregisterFromAnnouncementsWhenUpdating!GLMTextMorphicTest removeSelector: #testTextPortPopulatedByDefault!GLMTextMorphicTest removeSelector: #testResettingTheSelection!GLMTextMorphicTest removeSelector: #testPastingUpdatesTextPort!GLMTextMorphicTest removeSelector: #testMultipleSelectionWithChange!GLMTextMorphicTest removeSelector: #testExplicitAcceptDoesNotAffectTextPort!GLMTextMorphicTest removeSelector: #simulateOnlyOneClickOn:!GLMTextMorphicTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteGLMTextMorphicTest!GLMTabulatorMorphicTest removeSelector: #testStatusbar!GLMTabulatorMorphicTest removeSelector: #testSpawnTabulator!GLMTabulatorMorphicTest removeSelector: #testMultipleInitialSelection!Smalltalk globals removeClassNamed: #AnObsoleteGLMTabulatorMorphicTest!GLMTableMorphicTest removeSelector: #testColumnLabel!GLMTableMorphicTest removeSelector: #testColumnBlockTakesEntity!Smalltalk globals removeClassNamed: #AnObsoleteGLMTableMorphicTest!GLMPharoScriptMorphicTest removeSelector: #testForSmalltalkWorkspace!GLMPharoScriptMorphicTest removeSelector: #testExplicitAcceptDoesNotAffectTextPort!GLMPharoScriptMorphicTest removeSelector: #testDefault!Smalltalk globals removeClassNamed: #AnObsoleteGLMPharoScriptMorphicTest!GLMMorphicTest removeSelector: #wait:until:evaluatesTo:!GLMMorphicTest removeSelector: #tearDown!GLMMorphicTest removeSelector: #send:mouseUpWithShift:onItem:!GLMMorphicTest removeSelector: #send:mouseUpOnItem:!GLMMorphicTest removeSelector: #send:mouseDownWithShift:onItem:!GLMMorphicTest removeSelector: #send:doubleClickWithShift:onItem:!GLMMorphicTest removeSelector: #repeatAssert:equals:!GLMMorphicTest removeSelector: #findWherePresentationIs:in:!GLMMorphicTest removeSelector: #findSatisfying:in:!GLMMorphicTest removeSelector: #findLastSatisfying:in:!GLMMorphicTest removeSelector: #findLast:in:!GLMMorphicTest removeSelector: #find:in:!GLMMorphicPharoCodeRendererTest removeSelector: #testCodeExecutionWithBindings!Smalltalk globals removeClassNamed: #AnObsoleteGLMMorphicPharoCodeRendererTest!Smalltalk globals removeClassNamed: #AnObsoleteGLMMorphicExamplesTest!GLMMorphMorphicTest removeSelector: #testMorphUpdateOnAnnounce!GLMMorphMorphicTest removeSelector: #testMorphUpdate!Smalltalk globals removeClassNamed: #AnObsoleteGLMMorphMorphicTest!GLMListMorphicTest removeSelector: #testUpdateFromModel!GLMListMorphicTest removeSelector: #testTypeOfSingleSelection!GLMListMorphicTest removeSelector: #testTypeOfMultipleSelection!GLMListMorphicTest removeSelector: #testTwoPanesMultipleSelectionWithChange!GLMListMorphicTest removeSelector: #testTextBackgroundColor!GLMListMorphicTest removeSelector: #testOnlyOneMorphPerRowInList!GLMListMorphicTest removeSelector: #testMultipleSelectionWithChangeFromModel!GLMListMorphicTest removeSelector: #testMultipleSelectionWithChange!GLMListMorphicTest removeSelector: #testListDoubleClickWithMultipleSelection!GLMListMorphicTest removeSelector: #testListDoubleClick!Smalltalk globals removeClassNamed: #AnObsoleteGLMListMorphicTest!GLMFinderMorphicTest removeSelector: #testSpawnFinder!GLMFinderMorphicTest removeSelector: #testRemovingVariableSizePanesWhenChangingEntity!GLMFinderMorphicTest removeSelector: #testRemovingVariableSizePanes!GLMFinderMorphicTest removeSelector: #testOneFixedSizePane!GLMFinderMorphicTest removeSelector: #testNoSelection!GLMFinderMorphicTest removeSelector: #testMultiplePresentationsValidation!GLMFinderMorphicTest removeSelector: #testFixedSize!GLMFinderMorphicTest removeSelector: #testFinderWithEmbeddedBrowser!GLMFinderMorphicTest removeSelector: #testEmbeddedBrowserRefreshesRendering!GLMFinderMorphicTest removeSelector: #testDefaultFixedSizePanes!GLMFinderMorphicTest removeSelector: #testCreationVariableSize!GLMFinderMorphicTest removeSelector: #testClose!Smalltalk globals removeClassNamed: #AnObsoleteGLMFinderMorphicTest!GLMExpanderMorphicTest removeSelector: #testCreation!Smalltalk globals removeClassNamed: #AnObsoleteGLMExpanderMorphicTest!GLMDynamicMorphicTest removeSelector: #testWithPresentation!GLMDynamicMorphicTest removeSelector: #testWithDisplay!GLMDynamicMorphicTest removeSelector: #testUpdate!GLMDynamicMorphicTest removeSelector: #testSurroundingPanel!GLMDynamicMorphicTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteGLMDynamicMorphicTest!GLMDropDownMorphicTest removeSelector: #testSelectionTriggeredOnSelectedIndex!Smalltalk globals removeClassNamed: #AnObsoleteGLMDropDownMorphicTest!GLMCompositePresentationMorphicTest removeSelector: #testTabsWithUpdate!GLMCompositePresentationMorphicTest removeSelector: #testTabsWithTitleIconWithoutTitle!GLMCompositePresentationMorphicTest removeSelector: #testTabsWithTitle!GLMCompositePresentationMorphicTest removeSelector: #testTabsWithActions!GLMCompositePresentationMorphicTest removeSelector: #testTabsLastActivePresentation!GLMCompositePresentationMorphicTest removeSelector: #testTabs!GLMCompositePresentationMorphicTest removeSelector: #testStackedVerticallyWithTitle!GLMCompositePresentationMorphicTest removeSelector: #testStackedVertically!GLMCompositePresentationMorphicTest removeSelector: #testOneTabWithActions!GLMCompositePresentationMorphicTest removeSelector: #testOneStackedVerticallyWithTitle!GLMCompositePresentationMorphicTest removeSelector: #testFinder!GLMCompositePresentationMorphicTest removeSelector: #testAccordionWithTitle!GLMCompositePresentationMorphicTest removeSelector: #testAccordionExpanded!GLMCompositePresentationMorphicTest removeSelector: #testAccordion!GLMCompositePresentationMorphicTest removeSelector: #compositeTabGroup!GLMCompositePresentationMorphicTest removeSelector: #compositePanel!GLMCompositePresentationMorphicTest removeSelector: #compositeMorph!Smalltalk globals removeClassNamed: #AnObsoleteGLMCompositePresentationMorphicTest!GLMCompositePresentationAsStartMorphicTest removeSelector: #testSimpleOpen!Smalltalk globals removeClassNamed: #AnObsoleteGLMCompositePresentationAsStartMorphicTest!GLMActionsToolbarMorphicTest removeSelector: #testDynamicActionsAreUpdated!GLMActionsToolbarMorphicTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteGLMActionsToolbarMorphicTest!GLMAccumulatorMorphicTest removeSelector: #testTabTitle!GLMAccumulatorMorphicTest removeSelector: #testSelectedTab!GLMAccumulatorMorphicTest removeSelector: #testPaneRemoval!GLMAccumulatorMorphicTest removeSelector: #testPaneCreation!GLMAccumulatorMorphicTest removeSelector: #testListInside!GLMAccumulatorMorphicTest removeSelector: #testCreation!GLMAccumulatorMorphicTest removeSelector: #testCloseTab!GLMAccumulatorMorphicTest removeSelector: #testActiveEntity!GLMAccumulatorMorphicTest removeSelector: #tabGroup!Smalltalk globals removeClassNamed: #AnObsoleteGLMAccumulatorMorphicTest!Smalltalk globals removeClassNamed: #AnObsoleteGLMMorphicTest!GLMAnnouncingCollection removeSelector: #withIndexDo:!GLMAnnouncingCollection removeSelector: #size!GLMAnnouncingCollection removeSelector: #removeLast!GLMAnnouncingCollection removeSelector: #remove:ifAbsent:!GLMAnnouncingCollection removeSelector: #remove:!GLMAnnouncingCollection removeSelector: #printString!GLMAnnouncingCollection removeSelector: #isEmpty!GLMAnnouncingCollection removeSelector: #isCollection!GLMAnnouncingCollection removeSelector: #initialize!GLMAnnouncingCollection removeSelector: #indexOf:!GLMAnnouncingCollection removeSelector: #includes:!GLMAnnouncingCollection removeSelector: #do:!GLMAnnouncingCollection removeSelector: #collect:!GLMAnnouncingCollection removeSelector: #at:!GLMAnnouncingCollection removeSelector: #asOrderedCollection!GLMAnnouncingCollection removeSelector: #add:beforeOrLast:!GLMAnnouncingCollection removeSelector: #add:before:!GLMAnnouncingCollection removeSelector: #add:!Smalltalk globals removeClassNamed: #AnObsoleteGLMAnnouncingCollection!Smalltalk globals removeClassNamed: #AnObsoleteGLMItemRemoved!Smalltalk globals removeClassNamed: #AnObsoleteGLMItemChanged!Smalltalk globals removeClassNamed: #AnObsoleteGLMItemAdded!GLMRubricTextMorphicTest removeSelector: #testUpdatingTextPortUpdatesTheMorph!GLMRubricTextMorphicTest removeSelector: #testUpdatingScriptPresentationPreservesSelection!GLMRubricTextMorphicTest removeSelector: #testUnregisterFromAnnouncementsWhenUpdating!GLMRubricTextMorphicTest removeSelector: #testTextPortPopulatedByDefault!GLMRubricTextMorphicTest removeSelector: #testResettingTheSelection!GLMRubricTextMorphicTest removeSelector: #testPastingUpdatesTextPort!GLMRubricTextMorphicTest removeSelector: #testMultipleSelectionWithChange!GLMRubricTextMorphicTest removeSelector: #testInitializeBlockSetsTextSelectionForTextPresentation!GLMRubricTextMorphicTest removeSelector: #testInitializeBlockSetsTextSelectionForScriptPresentation!GLMRubricTextMorphicTest removeSelector: #testInitializeBlockSetsTextSelectionForMethodPresentation!GLMRubricTextMorphicTest removeSelector: #simulateOnlyOneClickOn:!GLMRubricTextMorphicTest removeSelector: #noTestOKeyWithCtrlCannotBeOverriden!GLMRubricTextMorphicTest removeSelector: #noTestExplicitAcceptDoesNotAffectTextPort!GLMRubricTextMorphicTest removeSelector: #noTestEnteringTextInPort!GLMRubricTextMorphicTest removeSelector: #noTestAcceptKeyCanBeOverriden!GLMRubricTextMorphicTest removeSelector: #expectedFailures!GLMRubricTextMorphicTest removeSelector: #checkInitializeBlockSetsTextSelectionForPresentation:!Smalltalk globals removeClassNamed: #AnObsoleteGLMRubricTextMorphicTest!UIManager removeSelector: #multilineRequest:initialAnswer:!MBSpecInfo removeSelector: #validationIconSymbol!MBSpecInfo removeSelector: #validationIcon!MBSpecInfo removeSelector: #validate!MBSpecInfo removeSelector: #typeLabel!MBSpecInfo removeSelector: #spec:!MBSpecInfo removeSelector: #spec!MBSpecInfo removeSelector: #project!MBSpecInfo removeSelector: #packageName!MBSpecInfo removeSelector: #isDirty!MBSpecInfo removeSelector: #currentVersionMismatch!MBSpecInfo removeSelector: #configurationInfo:!MBSpecInfo removeSelector: #configurationInfo!MBSpecInfo removeSelector: #cmdLoadSpecCommand!MBSpecInfo class removeSelector: #spec:!MBGroupInfo removeSelector: #typeLabel!MBGroupInfo removeSelector: #printOn:!MBGroupInfo removeSelector: #name:!MBGroupInfo removeSelector: #name!MBGroupInfo removeSelector: #groupContentsIfLoaded!MBGroupInfo class removeSelector: #helpLabel!Smalltalk globals removeClassNamed: #AnObsoleteMBGroupInfo!MBProjectInfo removeSelector: #validateIfAbsent:!MBProjectInfo removeSelector: #validate!MBProjectInfo removeSelector: #typeLabel!MBProjectInfo removeSelector: #repositories!MBProjectInfo removeSelector: #printOn:!MBProjectInfo removeSelector: #interestedInPackageNamed:!MBProjectInfo removeSelector: #interestedInConfigurationInfo:!MBProjectInfo removeSelector: #currentVersionMismatch!MBProjectInfo removeSelector: #currentVersion:!MBProjectInfo removeSelector: #currentVersion!MBProjectInfo removeSelector: #classForBrowsing!MBProjectInfo removeSelector: #buildStringOrText!MBProjectInfo class removeSelector: #helpLabel!Smalltalk globals removeClassNamed: #AnObsoleteMBProjectInfo!MBPackageInfo removeSelector: #versions!MBPackageInfo removeSelector: #typeLabel!MBPackageInfo removeSelector: #repositories!MBPackageInfo removeSelector: #printOn:!MBPackageInfo removeSelector: #mbPacakgeName!MBPackageInfo removeSelector: #interestedInPackageNamed:!MBPackageInfo removeSelector: #currentVersionMismatch!MBPackageInfo removeSelector: #compareWorkingCopyNamed:using:!MBPackageInfo removeSelector: #cmdSavePackage!MBPackageInfo removeSelector: #cmdRevertPackage!MBPackageInfo removeSelector: #cmdLoad!MBPackageInfo removeSelector: #cmdBrowsePackageHistory!MBPackageInfo removeSelector: #classForBrowsing!MBPackageInfo removeSelector: #buildStringOrText!MBPackageInfo removeSelector: #basePackageName!MBPackageInfo class removeSelector: #helpLabel!Smalltalk globals removeClassNamed: #AnObsoleteMBPackageInfo!MBAbstractPackageInfo removeSelector: #workingCopy!MBAbstractPackageInfo removeSelector: #packageName:!MBAbstractPackageInfo removeSelector: #packageName!MBAbstractPackageInfo removeSelector: #isDirty!MBAbstractPackageInfo removeSelector: #cmdOpenRepositoryCommand!MBAbstractPackageInfo removeSelector: #cmdBrowsePackageChanges!MBAbstractPackageInfo removeSelector: #cmdBrowse!MBAbstractPackageInfo removeSelector: #classForBrowsing!MBAbstractPackageInfo class removeSelector: #new!MBAbstractPackageInfo class removeSelector: #named:packageName:spec:!MBAbstractPackageInfo class removeSelector: #named:!Smalltalk globals removeClassNamed: #AnObsoleteMBAbstractPackageInfo!Smalltalk globals removeClassNamed: #AnObsoleteMBSpecInfo!MBLabelInfo removeSelector: #validationIconSymbol!MBLabelInfo removeSelector: #validationIcon!MBLabelInfo removeSelector: #validate!Smalltalk globals removeClassNamed: #AnObsoleteMBLabelInfo!MBInfo removeSelector: #validationResult:!MBInfo removeSelector: #validateFull!MBInfo removeSelector: #validate!MBInfo removeSelector: #text:!MBInfo removeSelector: #text!MBInfo removeSelector: #repositories!MBInfo removeSelector: #project!MBInfo removeSelector: #printOn:!MBInfo removeSelector: #name:!MBInfo removeSelector: #name!MBInfo removeSelector: #isDirty!MBInfo removeSelector: #interestedInPackageNamed:!MBInfo removeSelector: #extractPackageSignatureFrom:!MBInfo removeSelector: #configurationRoot!MBInfo removeSelector: #configurationInfo!MBInfo removeSelector: #commands!MBInfo removeSelector: #clearValidationIcon!MBInfo removeSelector: #buildStringOrText!MBInfo removeSelector: #browseValidationResults!MBInfo removeSelector: #asStringOrText!MBInfo removeSelector: #announcer!MBInfo class removeSelector: #validateAll:!MBInfo class removeSelector: #validateAll!MBInfo class removeSelector: #helpLabel!MBConfigurationInfo removeSelector: #workingCopy!MBConfigurationInfo removeSelector: #versions!MBConfigurationInfo removeSelector: #versionForInfoList!MBConfigurationInfo removeSelector: #version!MBConfigurationInfo removeSelector: #validateFull!MBConfigurationInfo removeSelector: #validate!MBConfigurationInfo removeSelector: #trimVersionLists:!MBConfigurationInfo removeSelector: #trimVersionLists!MBConfigurationInfo removeSelector: #trimVersionInfos:!MBConfigurationInfo removeSelector: #repositories!MBConfigurationInfo removeSelector: #release!MBConfigurationInfo removeSelector: #recalculateSilently!MBConfigurationInfo removeSelector: #recalculateIfInterestedInPackageNamed:for:!MBConfigurationInfo removeSelector: #recalculateIfInterestedInConfigurationInfo:for:!MBConfigurationInfo removeSelector: #recalculate!MBConfigurationInfo removeSelector: #project!MBConfigurationInfo removeSelector: #printOn:!MBConfigurationInfo removeSelector: #isDirty!MBConfigurationInfo removeSelector: #hasVersion:!MBConfigurationInfo removeSelector: #fullRecalculate!MBConfigurationInfo removeSelector: #extractBranchFrom:!MBConfigurationInfo removeSelector: #currentVersionMismatch!MBConfigurationInfo removeSelector: #currentVersion:!MBConfigurationInfo removeSelector: #currentVersion!MBConfigurationInfo removeSelector: #configurationRoot:!MBConfigurationInfo removeSelector: #configurationRoot!MBConfigurationInfo removeSelector: #configurationInfo!MBConfigurationInfo removeSelector: #configurationClassModified!MBConfigurationInfo removeSelector: #configurationClass:!MBConfigurationInfo removeSelector: #configurationClass!MBConfigurationInfo removeSelector: #cmdValidateConfiguration!MBConfigurationInfo removeSelector: #cmdUpdateFromItsRepository!MBConfigurationInfo removeSelector: #cmdUnloadConfiguration!MBConfigurationInfo removeSelector: #cmdSaveConfiguration!MBConfigurationInfo removeSelector: #cmdOpenRepository!MBConfigurationInfo removeSelector: #cmdCommitPatchVersion!MBConfigurationInfo removeSelector: #cmdCommitMinorVersion!MBConfigurationInfo removeSelector: #cmdCommitMajorVersion!MBConfigurationInfo removeSelector: #cmdCatalogAdder!MBConfigurationInfo removeSelector: #cmdBrowseConfiguration!MBConfigurationInfo removeSelector: #calculateInfoList!MBConfigurationInfo removeSelector: #buildStringOrText!MBConfigurationInfo removeSelector: #branch!MBConfigurationInfo removeSelector: #baselinesFor:!MBConfigurationInfo removeSelector: #baselines!MBConfigurationInfo class removeSelector: #new!MBConfigurationInfo class removeSelector: #helpLabel!MBConfigurationInfo class removeSelector: #configurationClass:!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationInfo!MBVersionInfo removeSelector: #printOn:!MBVersionInfo removeSelector: #cmdSetDescription!MBVersionInfo removeSelector: #cmdReleaseDevelopmentVersion!MBVersionInfo class removeSelector: #helpLabel!Smalltalk globals removeClassNamed: #AnObsoleteMBVersionInfo!MBBaselineInfo removeSelector: #printOn:!MBBaselineInfo removeSelector: #cmdCopyBaseline!MBBaselineInfo class removeSelector: #helpLabel!Smalltalk globals removeClassNamed: #AnObsoleteMBBaselineInfo!MBAbstractVersionInfo removeSelector: #versionString!MBAbstractVersionInfo removeSelector: #versionForInfoList!MBAbstractVersionInfo removeSelector: #version:!MBAbstractVersionInfo removeSelector: #version!MBAbstractVersionInfo removeSelector: #validate!MBAbstractVersionInfo removeSelector: #project!MBAbstractVersionInfo removeSelector: #printOn:!MBAbstractVersionInfo removeSelector: #isStable!MBAbstractVersionInfo removeSelector: #isDevelopment!MBAbstractVersionInfo removeSelector: #isCurrentVersion!MBAbstractVersionInfo removeSelector: #isBleedingEdge!MBAbstractVersionInfo removeSelector: #isBaseline!MBAbstractVersionInfo removeSelector: #hasValidationIssues!MBAbstractVersionInfo removeSelector: #currentVersion!MBAbstractVersionInfo removeSelector: #configurationInfo:!MBAbstractVersionInfo removeSelector: #configurationInfo!MBAbstractVersionInfo removeSelector: #configurationClass!MBAbstractVersionInfo removeSelector: #configurationBasename!MBAbstractVersionInfo removeSelector: #cmdRemove!MBAbstractVersionInfo removeSelector: #cmdMakeStable!MBAbstractVersionInfo removeSelector: #cmdMakeDevelopment!MBAbstractVersionInfo removeSelector: #cmdLoad!MBAbstractVersionInfo removeSelector: #cmdBrowse!MBAbstractVersionInfo removeSelector: #calculateInfoList!MBAbstractVersionInfo class removeSelector: #version:!MBAbstractVersionInfo class removeSelector: #new!Smalltalk globals removeClassNamed: #AnObsoleteMBAbstractVersionInfo!MBAbstractInfoList removeSelector: #versionForInfoList!MBAbstractInfoList removeSelector: #release!MBAbstractInfoList removeSelector: #recalculateIfInterestedInPackageNamed:for:!MBAbstractInfoList removeSelector: #recalculate!MBAbstractInfoList removeSelector: #projects!MBAbstractInfoList removeSelector: #packages!MBAbstractInfoList removeSelector: #isDirty!MBAbstractInfoList removeSelector: #interestedInPackageNamed:!MBAbstractInfoList removeSelector: #interestedInPackage:!MBAbstractInfoList removeSelector: #infos!MBAbstractInfoList removeSelector: #infoList!MBAbstractInfoList removeSelector: #groups!MBAbstractInfoList removeSelector: #fullRecalculate!MBAbstractInfoList removeSelector: #calculateInfoList!Smalltalk globals removeClassNamed: #AnObsoleteMBAbstractInfoList!Smalltalk globals removeClassNamed: #AnObsoleteMBInfo!MBConfigurationRoot removeSelector: #username:!MBConfigurationRoot removeSelector: #username!MBConfigurationRoot removeSelector: #update:!MBConfigurationRoot removeSelector: #unregister!MBConfigurationRoot removeSelector: #respondToEventFor:withOperation:!MBConfigurationRoot removeSelector: #removeConfigurationInfo:!MBConfigurationRoot removeSelector: #register!MBConfigurationRoot removeSelector: #password:!MBConfigurationRoot removeSelector: #password!MBConfigurationRoot removeSelector: #methodModified:!MBConfigurationRoot removeSelector: #initialize!MBConfigurationRoot removeSelector: #configurations!MBConfigurationRoot removeSelector: #configurationInfoFor:!MBConfigurationRoot removeSelector: #configurationClasses!MBConfigurationRoot removeSelector: #classRemoved:!MBConfigurationRoot removeSelector: #classModified:!MBConfigurationRoot removeSelector: #classAdded:!MBConfigurationRoot removeSelector: #categoryModified:!MBConfigurationRoot removeSelector: #announcer!MBConfigurationRoot removeSelector: #addConfigurationInfoFor:!MBConfigurationRoot class removeSelector: #reset!MBConfigurationRoot class removeSelector: #current!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationRoot!String removeSelector: #configurationBaseName!Smalltalk globals removeClassNamed: #AnObsoleteConfigurationNotFound!VersionnerToolBox removeSelector: #projectSpecFromRequiredProject:!VersionnerToolBox removeSelector: #initialize!VersionnerToolBox class removeSelector: #projectSpecFromRequiredProject:!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerToolBox!MTVersion removeSelector: #versionString:!MTVersion removeSelector: #versionString!MTVersion removeSelector: #timestamp:!MTVersion removeSelector: #timestamp!MTVersion removeSelector: #project!MTVersion removeSelector: #printOn:!MTVersion removeSelector: #name:!MTVersion removeSelector: #name!MTVersion removeSelector: #mcVersion!MTVersion removeSelector: #description:!MTVersion removeSelector: #description!MTVersion removeSelector: #author:!MTVersion removeSelector: #author!MTVersion removeSelector: #acceptVisitor:!MTVersion removeSelector: #=!MTVersion class removeSelector: #fromVersionString:!MTVersion class removeSelector: #fromVersionName:!Smalltalk globals removeClassNamed: #AnObsoleteMTVersion!MTProjectBFSIterator removeSelector: #reset!MTProjectBFSIterator removeSelector: #project:!MTProjectBFSIterator removeSelector: #next!MTProjectBFSIterator removeSelector: #isNotVisited:!MTProjectBFSIterator removeSelector: #initialize!MTProjectBFSIterator removeSelector: #hasNext!MTProjectBFSIterator removeSelector: #hasChildNodes:!MTProjectBFSIterator class removeSelector: #on:!Smalltalk globals removeClassNamed: #AnObsoleteMTProjectBFSIterator!MTProject removeSelector: #version:!MTProject removeSelector: #version!MTProject removeSelector: #requiredProjects!MTProject removeSelector: #repository:!MTProject removeSelector: #repository!MTProject removeSelector: #removeDependencyNamed:!MTProject removeSelector: #packages!MTProject removeSelector: #name:!MTProject removeSelector: #name!MTProject removeSelector: #initialize!MTProject removeSelector: #groups!MTProject removeSelector: #devWorkflow!MTProject removeSelector: #dependencyNamed:!MTProject removeSelector: #dependenciesMap!MTProject removeSelector: #dependenciesFilteredBy:!MTProject removeSelector: #dependencies:!MTProject removeSelector: #dependencies!MTProject removeSelector: #currentBaseline!MTProject removeSelector: #configurationClass:!MTProject removeSelector: #configurationClass!MTProject removeSelector: #announcer!MTProject removeSelector: #addDependency:!MTProject removeSelector: #acceptVisitor:!MTProject removeSelector: #=!MTProject class removeSelector: #newNamed:withInitialVersion:inRepository:!MTProject class removeSelector: #newFromVersion:inConfiguration:!Smalltalk globals removeClassNamed: #AnObsoleteMTProject!Smalltalk globals removeClassNamed: #AnObsoleteMTPlatform!MTModelComparator removeSelector: #is:equalsTo:!MTModelComparator class removeSelector: #is:equalsTo:!Smalltalk globals removeClassNamed: #AnObsoleteMTModelComparator!MTDevelopmentWorkfow removeSelector: #version:!MTDevelopmentWorkfow removeSelector: #updateDevelopment!MTDevelopmentWorkfow removeSelector: #standardizeDevVersionString:!MTDevelopmentWorkfow removeSelector: #setStableBlessingFor:!MTDevelopmentWorkfow removeSelector: #requiredProjectSpecs!MTDevelopmentWorkfow removeSelector: #releaseDevelopment:!MTDevelopmentWorkfow removeSelector: #project:!MTDevelopmentWorkfow removeSelector: #project!MTDevelopmentWorkfow removeSelector: #notifyConfigurationModified!MTDevelopmentWorkfow removeSelector: #nextDevelopmentVersionString:!MTDevelopmentWorkfow removeSelector: #nextDevelopmentVersionString!MTDevelopmentWorkfow removeSelector: #isDevelopmentUsedInRelease!MTDevelopmentWorkfow removeSelector: #developmentVersionNumber:!MTDevelopmentWorkfow removeSelector: #developmentVersion:platformAttribute:!MTDevelopmentWorkfow removeSelector: #developmentVersion!MTDevelopmentWorkfow removeSelector: #createNextDevelopment:!MTDevelopmentWorkfow removeSelector: #createInitialDevelopment:!MTDevelopmentWorkfow removeSelector: #createInitialDevelopment!MTDevelopmentWorkfow removeSelector: #createBaseline:!MTDevelopmentWorkfow removeSelector: #createBaseline!MTDevelopmentWorkfow class removeSelector: #newWithProject:!Smalltalk globals removeClassNamed: #AnObsoleteMTDevelopmentWorkfow!MTPackage removeSelector: #displayString!MTPackage removeSelector: #acceptVisitor:!Smalltalk globals removeClassNamed: #AnObsoleteMTPackage!MTGroup removeSelector: #displayString!MTGroup removeSelector: #addDependency:!MTGroup removeSelector: #acceptVisitor:!Smalltalk globals removeClassNamed: #AnObsoleteMTGroup!MTDependency removeSelector: #version:!MTDependency removeSelector: #version!MTDependency removeSelector: #removeDependency:!MTDependency removeSelector: #remove!MTDependency removeSelector: #project!MTDependency removeSelector: #printOn:!MTDependency removeSelector: #parent:!MTDependency removeSelector: #parent!MTDependency removeSelector: #name:!MTDependency removeSelector: #name!MTDependency removeSelector: #initialize!MTDependency removeSelector: #displayString!MTDependency removeSelector: #displayName!MTDependency removeSelector: #dependencies:!MTDependency removeSelector: #dependencies!MTDependency removeSelector: #asString!MTDependency removeSelector: #addDependency:!MTDependency removeSelector: #acceptVisitor:!MTDependency removeSelector: #=!MTDependency removeSelector: #<=!MTDependency class removeSelector: #newNamed:!MTDependantProject removeSelector: #symbolicVersionString:!MTDependantProject removeSelector: #symbolicVersionString!MTDependantProject removeSelector: #repositories:!MTDependantProject removeSelector: #repositories!MTDependantProject removeSelector: #initialize!MTDependantProject removeSelector: #displayString!MTDependantProject removeSelector: #displayName:!MTDependantProject removeSelector: #displayName!MTDependantProject removeSelector: #configurationClass:!MTDependantProject removeSelector: #configurationClass!MTDependantProject removeSelector: #acceptVisitor:!MTDependantProject removeSelector: #=!MTDependantProject class removeSelector: #newWithWorkingCopy:!Smalltalk globals removeClassNamed: #AnObsoleteMTDependantProject!Smalltalk globals removeClassNamed: #AnObsoleteMTDependency!MCModel2MTModelVisitor removeSelector: #visitMCVersion:!MCModel2MTModelVisitor removeSelector: #visitMCProjectAsRequiredProject:!MCModel2MTModelVisitor removeSelector: #visitMCProject:withVersion:!MCModel2MTModelVisitor removeSelector: #visitMCPackage:!MCModel2MTModelVisitor removeSelector: #visitMCGroup:!MCModel2MTModelVisitor removeSelector: #visitConfiguration:withVersionString:!MCModel2MTModelVisitor removeSelector: #visitConfiguration:withVersion:!MCModel2MTModelVisitor removeSelector: #visitConfiguration:!Smalltalk globals removeClassNamed: #AnObsoleteMCModel2MTModelVisitor!MTProjectModelChanged removeSelector: #project:!MTProjectModelChanged removeSelector: #project!MTProjectModelChanged class removeSelector: #project:!Smalltalk globals removeClassNamed: #AnObsoleteMTProjectModelChanged!MBInfoListChanged removeSelector: #configurationInfo:!MBInfoListChanged removeSelector: #configurationInfo!MBInfoListChanged class removeSelector: #changed:!Smalltalk globals removeClassNamed: #AnObsoleteMBInfoListChanged!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationInfoDeleted!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationInfoCreated!MBConfigurationInfoChanged removeSelector: #configurationInfo:!MBConfigurationInfoChanged removeSelector: #configurationInfo!MBConfigurationInfoChanged class removeSelector: #changed:!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationInfoChanged!MBAnnouncement removeSelector: #configurationInfo!Smalltalk globals removeClassNamed: #AnObsoleteMBAnnouncement!VSVersionCommand removeSelector: #configurationClass!VSSetDescriptionCommand removeSelector: #title!VSSetDescriptionCommand removeSelector: #executeWithMessage:!VSSetDescriptionCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSSetDescriptionCommand!VSSaveProjectCommand removeSelector: #filterBlock!VSSaveProjectCommand removeSelector: #execute!VSSaveProjectCommand removeSelector: #commit!VSSaveProjectCommand removeSelector: #alertValidationErrors:for:!VSSaveProjectCommand class removeSelector: #validateBeforeSaving:!VSSaveProjectCommand class removeSelector: #validateBeforeSaving!VSSaveProjectCommand class removeSelector: #enableValidateSetting:!Smalltalk globals removeClassNamed: #AnObsoleteVSSaveProjectCommand!VSRemoveCommand removeSelector: #versions!VSRemoveCommand removeSelector: #title!VSRemoveCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSRemoveCommand!VSMakeVersionCommand removeSelector: #symbolicVersion!VSMakeVersionCommand removeSelector: #execute!VSMakeStableCommand removeSelector: #title!VSMakeStableCommand removeSelector: #symbolicVersion!VSMakeStableCommand removeSelector: #execute!VSMakeStableCommand removeSelector: #canBeApplied!Smalltalk globals removeClassNamed: #AnObsoleteVSMakeStableCommand!VSMakeDevelopmentCommand removeSelector: #title!VSMakeDevelopmentCommand removeSelector: #symbolicVersion!VSMakeDevelopmentCommand removeSelector: #canBeApplied!Smalltalk globals removeClassNamed: #AnObsoleteVSMakeDevelopmentCommand!Smalltalk globals removeClassNamed: #AnObsoleteVSMakeVersionCommand!VSLoadCommand removeSelector: #title!VSLoadCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSLoadCommand!VSBrowseVersionCommand removeSelector: #title!VSBrowseVersionCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSBrowseVersionCommand!Smalltalk globals removeClassNamed: #AnObsoleteVSVersionCommand!VSOpenRepositoryCommand removeSelector: #title!VSOpenRepositoryCommand removeSelector: #repository!VSOpenRepositoryCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSOpenRepositoryCommand!VSUpdateDevelopmentVersionCommand removeSelector: #title!VSUpdateDevelopmentVersionCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSUpdateDevelopmentVersionCommand!VSReleaseDevelopmentVersionCommand removeSelector: #title!VSReleaseDevelopmentVersionCommand removeSelector: #resolveSymbolicVersionsIn:!VSReleaseDevelopmentVersionCommand removeSelector: #release:andSolveSymbolic:!VSReleaseDevelopmentVersionCommand removeSelector: #projectReference:configurationFrom:!VSReleaseDevelopmentVersionCommand removeSelector: #mcVersionFor:!VSReleaseDevelopmentVersionCommand removeSelector: #execute!VSReleaseDevelopmentVersionCommand removeSelector: #baselineFor:!Smalltalk globals removeClassNamed: #AnObsoleteVSReleaseDevelopmentVersionCommand!VSDevCycleCommand removeSelector: #ensureDevelopmentVersionIsBaseline!VSDevCycleCommand removeSelector: #ensureDevelopmentVersionExists!VSDevCycleCommand removeSelector: #createDevelopmentVersion!Smalltalk globals removeClassNamed: #AnObsoleteVSDevCycleCommand!VSConfigurationValidationIssuesDisplayCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSConfigurationValidationIssuesDisplayCommand!VSValidateConfigurationCommand removeSelector: #validate!VSValidateConfigurationCommand removeSelector: #title!VSValidateConfigurationCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSValidateConfigurationCommand!VSUpdateFromItsRepositoryCommand removeSelector: #title!VSUpdateFromItsRepositoryCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSUpdateFromItsRepositoryCommand!VSUnloadConfigurationCommand removeSelector: #title!VSUnloadConfigurationCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSUnloadConfigurationCommand!VSLoadProjectCommand removeSelector: #title!VSLoadProjectCommand removeSelector: #execute!VSLoadProjectCommand removeSelector: #configurationNameForProject:!VSLoadProjectCommand removeSelector: #askProjectName!Smalltalk globals removeClassNamed: #AnObsoleteVSLoadProjectCommand!VSConfigurationCommand removeSelector: #configurationClass!VSCatalogAdderCommand removeSelector: #title!VSCatalogAdderCommand removeSelector: #hasKeywords!VSCatalogAdderCommand removeSelector: #hasKeyClasses!VSCatalogAdderCommand removeSelector: #hasContactInfo!VSCatalogAdderCommand removeSelector: #hasChangeLog!VSCatalogAdderCommand removeSelector: #hasCatalogDescription!VSCatalogAdderCommand removeSelector: #execute!VSCatalogAdderCommand removeSelector: #ensureKeywords!VSCatalogAdderCommand removeSelector: #ensureKeyClasses!VSCatalogAdderCommand removeSelector: #ensureContactInfo!VSCatalogAdderCommand removeSelector: #ensureChangeLog!VSCatalogAdderCommand removeSelector: #ensureCatalogDescription!VSCatalogAdderCommand removeSelector: #defineKeywordsTemplate!VSCatalogAdderCommand removeSelector: #defineKeyClassesTemplate!VSCatalogAdderCommand removeSelector: #defineContactInfoTemplate!VSCatalogAdderCommand removeSelector: #defineChangeLogTemplate!VSCatalogAdderCommand removeSelector: #defineCatalogDescriptionTemplate!VSCatalogAdderCommand removeSelector: #configurationMetaclass!Smalltalk globals removeClassNamed: #AnObsoleteVSCatalogAdderCommand!VSBrowseConfigurationCommand removeSelector: #title!VSBrowseConfigurationCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSBrowseConfigurationCommand!Smalltalk globals removeClassNamed: #AnObsoleteVSConfigurationCommand!VSCommitPatchCommand removeSelector: #title!VSCommitPatchCommand removeSelector: #order!VSCommitPatchCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSCommitPatchCommand!VSCommitMinorCommand removeSelector: #title!VSCommitMinorCommand removeSelector: #order!VSCommitMinorCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSCommitMinorCommand!VSCommitMajorCommand removeSelector: #title!VSCommitMajorCommand removeSelector: #order!VSCommitMajorCommand removeSelector: #execute!Smalltalk globals removeClassNamed: #AnObsoleteVSCommitMajorCommand!VSCommand removeSelector: #target:!VSCommand removeSelector: #target!VSCommand removeSelector: #showExecuteWhile:!VSCommand removeSelector: #requestor:!VSCommand removeSelector: #requestor!VSCommand removeSelector: #repositoryOfPackageNamed:!VSCommand removeSelector: #order!VSCommand removeSelector: #executeWithDevWorkflow:!VSCommand removeSelector: #execute!VSCommand removeSelector: #chooseRepositoryFromList:!VSCommand removeSelector: #canBeApplied!VSCommand class removeSelector: #target:for:!Smalltalk globals removeClassNamed: #AnObsoleteVSCommand!MBCopyBaselineCommand removeSelector: #title!MBCopyBaselineCommand removeSelector: #execute!MBCopyBaselineCommand removeSelector: #documentation!MBCopyBaselineCommand removeSelector: #copyBaselineWithNumber:!Smalltalk globals removeClassNamed: #AnObsoleteMBCopyBaselineCommand!Smalltalk globals removeClassNamed: #AnObsoleteMBVersionCommand!MBLoadConfigurationCommand removeSelector: #title!MBLoadConfigurationCommand removeSelector: #order!MBLoadConfigurationCommand removeSelector: #execute!MBLoadConfigurationCommand removeSelector: #documentation!MBLoadConfigurationCommand removeSelector: #askForProjectName!Smalltalk globals removeClassNamed: #AnObsoleteMBLoadConfigurationCommand!MBHelpCommand removeSelector: #workspaceHelp!MBHelpCommand removeSelector: #title!MBHelpCommand removeSelector: #order!MBHelpCommand removeSelector: #execute!MBHelpCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBHelpCommand!MBCheckpointDevCommand removeSelector: #title!MBCheckpointDevCommand removeSelector: #order!MBCheckpointDevCommand removeSelector: #executeWithMessage:!MBCheckpointDevCommand removeSelector: #execute!MBCheckpointDevCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBCheckpointDevCommand!MBAddRepositoryCommand removeSelector: #title!MBAddRepositoryCommand removeSelector: #execute!MBAddRepositoryCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBAddRepositoryCommand!MBAddConfigurationCommand removeSelector: #workingCopies!MBAddConfigurationCommand removeSelector: #title!MBAddConfigurationCommand removeSelector: #repositoryFor:!MBAddConfigurationCommand removeSelector: #order!MBAddConfigurationCommand removeSelector: #executeAddBaselineForConfigurationNamed:repositoryDescription:versionString:packages:configurations:repositories:!MBAddConfigurationCommand removeSelector: #executeAddBaselineForConfigurationNamed:repositoryDescription:versionString:packages:configurations:!MBAddConfigurationCommand removeSelector: #execute!MBAddConfigurationCommand removeSelector: #documentation!MBAddConfigurationCommand removeSelector: #collectPackages:andProjects:pattern:repository:!MBAddConfigurationCommand removeSelector: #askForClassName!Smalltalk globals removeClassNamed: #AnObsoleteMBAddConfigurationCommand!Smalltalk globals removeClassNamed: #AnObsoleteMBDevCycleCommands!MBValidateAllConfigurationCommand removeSelector: #title!MBValidateAllConfigurationCommand removeSelector: #execute!MBValidateAllConfigurationCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBValidateAllConfigurationCommand!MBSetUserCommand removeSelector: #title!MBSetUserCommand removeSelector: #execute!MBSetUserCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBSetUserCommand!MBSaveConfigurationCommand removeSelector: #title!MBSaveConfigurationCommand removeSelector: #executeWithMessage:!MBSaveConfigurationCommand removeSelector: #execute!MBSaveConfigurationCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBSaveConfigurationCommand!MBLoadProjectFromArchiveCommand removeSelector: #title!MBLoadProjectFromArchiveCommand removeSelector: #order!MBLoadProjectFromArchiveCommand removeSelector: #execute!MBLoadProjectFromArchiveCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBLoadProjectFromArchiveCommand!MBInspectConfigurationCommand removeSelector: #title!MBInspectConfigurationCommand removeSelector: #execute!MBInspectConfigurationCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBInspectConfigurationCommand!MBConfigurationPackageHistoryCommand removeSelector: #title!MBConfigurationPackageHistoryCommand removeSelector: #execute!MBConfigurationPackageHistoryCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationPackageHistoryCommand!MBConfigurationInfoCommand removeSelector: #showExecuteWhile:!MBConfigurationChangesCommand removeSelector: #title!MBConfigurationChangesCommand removeSelector: #execute!MBConfigurationChangesCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationChangesCommand!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationInfoCommand!MBCommand removeSelector: #viewChanges:from:to:title:!MBCommand removeSelector: #username!MBCommand removeSelector: #uiManager!MBCommand removeSelector: #title!MBCommand removeSelector: #targetNode:!MBCommand removeSelector: #targetNode!MBCommand removeSelector: #target:!MBCommand removeSelector: #target!MBCommand removeSelector: #selectRepositoryFromWorkingCopy:!MBCommand removeSelector: #requestor:!MBCommand removeSelector: #repositoryOfPackageNamed:!MBCommand removeSelector: #repositories!MBCommand removeSelector: #projectName!MBCommand removeSelector: #pickRepositoryFrom:title:!MBCommand removeSelector: #pickRepositoryFrom:!MBCommand removeSelector: #pickRepository!MBCommand removeSelector: #password!MBCommand removeSelector: #order!MBCommand removeSelector: #on:for:!MBCommand removeSelector: #initialize!MBCommand removeSelector: #helpDocumentation!MBCommand removeSelector: #findChangesFor:relativeToRepository:!MBCommand removeSelector: #findChangesBetween:toLabel:and:fromLabel:!MBCommand removeSelector: #executeWithDevWorkflow:!MBCommand removeSelector: #execute!MBCommand removeSelector: #documentation!MBCommand removeSelector: #configurationReferencesFrom:!MBCommand removeSelector: #configurationClass!MBCommand removeSelector: #compiledMethodForVersion:!MBCommand removeSelector: #chooseRepositoryFromList:!MBCommand removeSelector: #checkUserInRepositoryOfPackage:!MBCommand removeSelector: #checkUserInRepository:!MBCommand removeSelector: #canBeApplied!MBCommand removeSelector: #browseVersionHistory!MBCommand removeSelector: #askForVersionNumber!MBCommand class removeSelector: #target:for:!MBCommand class removeSelector: #newCommand!MBCommand class removeSelector: #isOBCommand!MBCommand class removeSelector: #isMorphicCommand!MBSavePackageCommand removeSelector: #title!MBSavePackageCommand removeSelector: #execute!MBSavePackageCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBSavePackageCommand!MBRevertPackageCommand removeSelector: #title!MBRevertPackageCommand removeSelector: #pickAncestorVersionInfo!MBRevertPackageCommand removeSelector: #execute!MBRevertPackageCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBRevertPackageCommand!MBPackageHistoryCommand removeSelector: #title!MBPackageHistoryCommand removeSelector: #execute!MBPackageHistoryCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBPackageHistoryCommand!MBPackageChangesCommand removeSelector: #title!MBPackageChangesCommand removeSelector: #selectRepositoryOrSymbolicVersion:!MBPackageChangesCommand removeSelector: #execute!MBPackageChangesCommand removeSelector: #documentation!MBPackageChangesCommand removeSelector: #changesForSymbolicVersion:workingCopy:!Smalltalk globals removeClassNamed: #AnObsoleteMBPackageChangesCommand!MBLoadPackageCommand removeSelector: #title!MBLoadPackageCommand removeSelector: #execute!MBLoadPackageCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBLoadPackageCommand!MBBrowsePackageCommand removeSelector: #title!MBBrowsePackageCommand removeSelector: #execute!MBBrowsePackageCommand removeSelector: #documentation!Smalltalk globals removeClassNamed: #AnObsoleteMBBrowsePackageCommand!Smalltalk globals removeClassNamed: #AnObsoleteMBAbstractPackageCommand!Smalltalk globals removeClassNamed: #AnObsoleteMBCommand!VSVersionMorph removeSelector: #version:!VSVersionMorph removeSelector: #initialize!VSVersionMorph removeSelector: #build!VSVersionMorph removeSelector: #adoptPaneColor:!VSVersionMorph removeSelector: #addTag:!VSVersionMorph class removeSelector: #withVersion:!Smalltalk globals removeClassNamed: #AnObsoleteVSVersionMorph!MCFileBasedRepository removeSelector: #location!VersionListModel removeSelector: #updateSelectionVersionString!VersionListModel removeSelector: #updateSelection!VersionListModel removeSelector: #selectDevelopment!VersionListModel removeSelector: #okToChange:!VersionListModel removeSelector: #okToChange!VersionListModel removeSelector: #items:!VersionListModel removeSelector: #initialize!VersionListModel removeSelector: #developmentVersionString!VersionListModel removeSelector: #changedBlock:!VersionListModel removeSelector: #askConfirmationIfChanges!Smalltalk globals removeClassNamed: #AnObsoleteVersionListModel!TreePresenter removeSelector: #whenSelectedNodesChanged:!VSProjectNode removeSelector: #icon!VSProjectNode removeSelector: #hasChildren!VSProjectNode removeSelector: #children!VSProjectNode removeSelector: #childNodeClassFor:!VSProjectLeafNode removeSelector: #hasChildren!VSProjectLeafNode removeSelector: #children!Smalltalk globals removeClassNamed: #AnObsoleteVSProjectLeafNode!Smalltalk globals removeClassNamed: #AnObsoleteVSProjectNode!VSPackageNode removeSelector: #textMorph!VSPackageNode removeSelector: #icon!VSPackageNode removeSelector: #hasChildren!VSPackageNode removeSelector: #children!VSPackageNode removeSelector: #childNodeClassFor:!VSPackageLeafNode removeSelector: #hasChildren!VSPackageLeafNode removeSelector: #children!Smalltalk globals removeClassNamed: #AnObsoleteVSPackageLeafNode!Smalltalk globals removeClassNamed: #AnObsoleteVSPackageNode!VSGroupNode removeSelector: #icon!VSGroupNode removeSelector: #hasChildren!VSGroupNode removeSelector: #children!VSGroupNode removeSelector: #childNodeClassFor:!VSGroupLeafNode removeSelector: #hasChildren!VSGroupLeafNode removeSelector: #children!Smalltalk globals removeClassNamed: #AnObsoleteVSGroupLeafNode!Smalltalk globals removeClassNamed: #AnObsoleteVSGroupNode!VSDetailsLeafNode removeSelector: #icon!Smalltalk globals removeClassNamed: #AnObsoleteVSDetailsLeafNode!ManifestVersionnerSpecBrowser class removeSelector: #preUnload!Smalltalk globals removeClassNamed: #AnObsoleteManifestVersionnerSpecBrowser!VersionnerToolBar removeSelector: #openButton!VersionnerToolBar removeSelector: #newConfiguration!VersionnerToolBar removeSelector: #newButton!VersionnerToolBar removeSelector: #loadButton!VersionnerToolBar removeSelector: #initializeWidgets!VersionnerToolBar removeSelector: #initializePresenter!VersionnerToolBar class removeSelector: #openIcon!VersionnerToolBar class removeSelector: #newIcon!VersionnerToolBar class removeSelector: #loadIcon!VersionnerToolBar class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerToolBar!VersionnerSpecBrowser removeSelector: #windowIsClosing!VersionnerSpecBrowser removeSelector: #unregister!VersionnerSpecBrowser removeSelector: #toolbar!VersionnerSpecBrowser removeSelector: #toolName!VersionnerSpecBrowser removeSelector: #title!VersionnerSpecBrowser removeSelector: #register!VersionnerSpecBrowser removeSelector: #refresh!VersionnerSpecBrowser removeSelector: #loadMenuFor:in:!VersionnerSpecBrowser removeSelector: #initializeWidgets!VersionnerSpecBrowser removeSelector: #initializePresenter!VersionnerSpecBrowser removeSelector: #initialize!VersionnerSpecBrowser removeSelector: #initialExtent!VersionnerSpecBrowser removeSelector: #iconForConfiguration:!VersionnerSpecBrowser removeSelector: #configurationList:!VersionnerSpecBrowser removeSelector: #configurationList!VersionnerSpecBrowser removeSelector: #browseConfiguration:!VersionnerSpecBrowser removeSelector: #aboutTitle!VersionnerSpecBrowser removeSelector: #aboutText!VersionnerSpecBrowser class removeSelector: #testConfigurations!VersionnerSpecBrowser class removeSelector: #settingsOn:!VersionnerSpecBrowser class removeSelector: #openOn:!VersionnerSpecBrowser class removeSelector: #open!VersionnerSpecBrowser class removeSelector: #menuCommandOn:!VersionnerSpecBrowser class removeSelector: #imageConfigurations!VersionnerSpecBrowser class removeSelector: #defaultSpec!VersionnerSpecBrowser class removeSelector: #configurationLoadedIcon!VersionnerSpecBrowser class removeSelector: #configurationChangedIcon!VersionnerSpecBrowser class removeSelector: #clean!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerSpecBrowser!VersionnerReleasePanel removeSelector: #title!VersionnerReleasePanel removeSelector: #symbolicVersionResolutionCheckBox!VersionnerReleasePanel removeSelector: #releaseNumberText!VersionnerReleasePanel removeSelector: #releaseNumberLabel!VersionnerReleasePanel removeSelector: #releaseNumber!VersionnerReleasePanel removeSelector: #nextVersionString!VersionnerReleasePanel removeSelector: #latestVersionString!VersionnerReleasePanel removeSelector: #isSymbolicVersionResolutionChecked!VersionnerReleasePanel removeSelector: #initializeWidgets!VersionnerReleasePanel removeSelector: #initialVersion:!VersionnerReleasePanel removeSelector: #initialExtent!VersionnerReleasePanel removeSelector: #developmentVersion:!VersionnerReleasePanel removeSelector: #confirmSymbolicVersionResolutionDesactivation!VersionnerReleasePanel class removeSelector: #openForVersion:!VersionnerReleasePanel class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerReleasePanel!VersionnerProjectToolBar removeSelector: #updateButton!VersionnerProjectToolBar removeSelector: #releaseEnabled:!VersionnerProjectToolBar removeSelector: #releaseButton!VersionnerProjectToolBar removeSelector: #initializeWidgets!VersionnerProjectToolBar removeSelector: #initializePresenter!VersionnerProjectToolBar removeSelector: #executeWithDevWorkflow:!VersionnerProjectToolBar removeSelector: #commitButton!VersionnerProjectToolBar removeSelector: #browser:!VersionnerProjectToolBar removeSelector: #browser!VersionnerProjectToolBar class removeSelector: #title!VersionnerProjectToolBar class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerProjectToolBar!VersionnerProjectPanel removeSelector: #requiredProjectMenu:!VersionnerProjectPanel removeSelector: #removeProjectButton!VersionnerProjectPanel removeSelector: #removeGroupButton!VersionnerProjectPanel removeSelector: #removeDependentProject:!VersionnerProjectPanel removeSelector: #remove:fromGroup:!VersionnerProjectPanel removeSelector: #refreshGroups!VersionnerProjectPanel removeSelector: #projectsLabel!VersionnerProjectPanel removeSelector: #projectList!VersionnerProjectPanel removeSelector: #projectBoundToSelection!VersionnerProjectPanel removeSelector: #project:!VersionnerProjectPanel removeSelector: #project!VersionnerProjectPanel removeSelector: #packagesPanel!VersionnerProjectPanel removeSelector: #isProject:!VersionnerProjectPanel removeSelector: #initializeWidgets!VersionnerProjectPanel removeSelector: #initializeProjectsWidget!VersionnerProjectPanel removeSelector: #initializePresenter!VersionnerProjectPanel removeSelector: #initializeGroupsWidget!VersionnerProjectPanel removeSelector: #groupsLabel!VersionnerProjectPanel removeSelector: #groupList!VersionnerProjectPanel removeSelector: #editSelectedProjectLoads!VersionnerProjectPanel removeSelector: #editProjectButton!VersionnerProjectPanel removeSelector: #config:!VersionnerProjectPanel removeSelector: #browseSelectedProject!VersionnerProjectPanel removeSelector: #browseProject:!VersionnerProjectPanel removeSelector: #addProjectLoadDirective!VersionnerProjectPanel removeSelector: #addProjectButton!VersionnerProjectPanel removeSelector: #addGroupButton!VersionnerProjectPanel removeSelector: #addGroup!VersionnerProjectPanel removeSelector: #addDependentProject!VersionnerProjectPanel class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerProjectPanel!VersionnerProjectPackagesPanel removeSelector: #workingCopies!VersionnerProjectPackagesPanel removeSelector: #savePackageButton!VersionnerProjectPackagesPanel removeSelector: #removeSelectedPackage!VersionnerProjectPackagesPanel removeSelector: #removePackageButton!VersionnerProjectPackagesPanel removeSelector: #refreshPackages!VersionnerProjectPackagesPanel removeSelector: #project:!VersionnerProjectPackagesPanel removeSelector: #packagesList!VersionnerProjectPackagesPanel removeSelector: #packagesLabel!VersionnerProjectPackagesPanel removeSelector: #packages!VersionnerProjectPackagesPanel removeSelector: #packageBoundToSelection!VersionnerProjectPackagesPanel removeSelector: #isPackage:!VersionnerProjectPackagesPanel removeSelector: #initializeWidgets!VersionnerProjectPackagesPanel removeSelector: #initializePresenter!VersionnerProjectPackagesPanel removeSelector: #editSelectedPackageRequirements!VersionnerProjectPackagesPanel removeSelector: #editPackageButton!VersionnerProjectPackagesPanel removeSelector: #addPackageRequirement!VersionnerProjectPackagesPanel removeSelector: #addPackageButton!VersionnerProjectPackagesPanel removeSelector: #addPackage!VersionnerProjectPackagesPanel class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerProjectPackagesPanel!VersionnerProjectBrowser removeSelector: #windowIsClosing!VersionnerProjectBrowser removeSelector: #versionsLabel!VersionnerProjectBrowser removeSelector: #versionList:!VersionnerProjectBrowser removeSelector: #versionList!VersionnerProjectBrowser removeSelector: #versionDescriptionLabel!VersionnerProjectBrowser removeSelector: #versionDescription!VersionnerProjectBrowser removeSelector: #versionCommitMessage!VersionnerProjectBrowser removeSelector: #updateRepository!VersionnerProjectBrowser removeSelector: #update!VersionnerProjectBrowser removeSelector: #unregister!VersionnerProjectBrowser removeSelector: #toolbar!VersionnerProjectBrowser removeSelector: #title!VersionnerProjectBrowser removeSelector: #selectDevelopmentVersion!VersionnerProjectBrowser removeSelector: #repositoryLabel!VersionnerProjectBrowser removeSelector: #repositoryAddButton!VersionnerProjectBrowser removeSelector: #repository!VersionnerProjectBrowser removeSelector: #register!VersionnerProjectBrowser removeSelector: #refreshConfigurationOfProject:!VersionnerProjectBrowser removeSelector: #refreshConfiguration!VersionnerProjectBrowser removeSelector: #projectPanel!VersionnerProjectBrowser removeSelector: #project!VersionnerProjectBrowser removeSelector: #loadMenuFor:in:!VersionnerProjectBrowser removeSelector: #initializeWidgets!VersionnerProjectBrowser removeSelector: #initializePresenter!VersionnerProjectBrowser removeSelector: #initialize!VersionnerProjectBrowser removeSelector: #initialExtent!VersionnerProjectBrowser removeSelector: #ignoreUnsavedChangesOnDevelopmentIfAny!VersionnerProjectBrowser removeSelector: #iconForVersion:!VersionnerProjectBrowser removeSelector: #hasChanges!VersionnerProjectBrowser removeSelector: #createBaselineIfEmptyConfiguration!VersionnerProjectBrowser removeSelector: #configuration:!VersionnerProjectBrowser removeSelector: #allVersionsCheckBox!VersionnerProjectBrowser class removeSelector: #openOn:!VersionnerProjectBrowser class removeSelector: #example!VersionnerProjectBrowser class removeSelector: #defaultSpec!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerProjectBrowser!SearchFacade class removeSelector: #projectWithConfigurationSearchRejectAll:!SearchFacade class removeSelector: #projectWithConfigurationSearch!SearchFacade class removeSelector: #mcPackageSearchRejectAll:withInitialFilter:!SearchFacade class removeSelector: #mcPackageSearchRejectAll:!SearchFacade class removeSelector: #mcPackageSearch!VersionnerRepositoriesManager removeSelector: #selectedChangedBlock:!VersionnerRepositoriesManager removeSelector: #packageName:!VersionnerRepositoriesManager removeSelector: #open!VersionnerRepositoriesManager removeSelector: #initializeSelectedRemotes!VersionnerRepositoriesManager removeSelector: #initialize!VersionnerRepositoriesManager class removeSelector: #newWithPackage:!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerRepositoriesManager!TagMorphFactory removeSelector: #textMorph!TagMorphFactory removeSelector: #text:!TagMorphFactory removeSelector: #text!TagMorphFactory removeSelector: #morph!TagMorphFactory removeSelector: #height!TagMorphFactory removeSelector: #font!TagMorphFactory removeSelector: #color:!TagMorphFactory removeSelector: #color!TagMorphFactory class removeSelector: #newTag:!TagMorphFactory class removeSelector: #example!Smalltalk globals removeClassNamed: #AnObsoleteTagMorphFactory!VSValidateConfigurationCommandTest removeSelector: #testExecute!Smalltalk globals removeClassNamed: #AnObsoleteVSValidateConfigurationCommandTest!MBCommandTests removeSelector: #tearDownPackages!MBCommandTests removeSelector: #tearDown!MBCommandTests removeSelector: #setUp!MBCommandTests removeSelector: #runCase!MBCommandTests removeSelector: #repositoryName!MBCommandTests removeSelector: #hasPackage:!MBCommandTests removeSelector: #configurationName!MBCommandMetacelloTests removeSelector: #testUsernamePassword!MBCommandMetacelloTests removeSelector: #testRemoveVersionCmd04!MBCommandMetacelloTests removeSelector: #testRemoveVersionCmd03!MBCommandMetacelloTests removeSelector: #testRemoveVersionCmd02!MBCommandMetacelloTests removeSelector: #testRemoveVersionCmd01!MBCommandMetacelloTests removeSelector: #testConfigurationChanges!MBCommandMetacelloTests removeSelector: #testAddConfigurationCmd!Smalltalk globals removeClassNamed: #AnObsoleteMBCommandMetacelloTests!MBAddConfigurationCommandTest removeSelector: #testExecute!Smalltalk globals removeClassNamed: #AnObsoleteMBAddConfigurationCommandTest!Smalltalk globals removeClassNamed: #AnObsoleteMBCommandTests!VSReleaseDevelopmentVersionCommandTest removeSelector: #testResolveSymbolicVersionsIn!VSReleaseDevelopmentVersionCommandTest removeSelector: #testProjectReferenceConfigurationFrom!VSReleaseDevelopmentVersionCommandTest removeSelector: #tearDown!VSReleaseDevelopmentVersionCommandTest removeSelector: #setUp!VSReleaseDevelopmentVersionCommandTest removeSelector: #generateTestVersion!VSReleaseDevelopmentVersionCommandTest removeSelector: #expectedTestResolveSymbolicVersionInResult!Smalltalk globals removeClassNamed: #AnObsoleteVSReleaseDevelopmentVersionCommandTest!MBLoadConfigurationCommandTest removeSelector: #testExecute!Smalltalk globals removeClassNamed: #AnObsoleteMBLoadConfigurationCommandTest!MTProjectExampleBuilder class removeSelector: #projectC!MTProjectExampleBuilder class removeSelector: #projectB!MTProjectExampleBuilder class removeSelector: #projectA!Smalltalk globals removeClassNamed: #AnObsoleteMTProjectExampleBuilder!VersionnerToolBoxTest removeSelector: #versionnerTestXMLWriterSpec!VersionnerToolBoxTest removeSelector: #versionnerTestXMLWriter!VersionnerToolBoxTest removeSelector: #testProjectSpecFromRequiredProject!Smalltalk globals removeClassNamed: #AnObsoleteVersionnerToolBoxTest!MTProjectTest removeSelector: #testEquals!Smalltalk globals removeClassNamed: #AnObsoleteMTProjectTest!MTProjectBFSIteratorTest removeSelector: #testNext!Smalltalk globals removeClassNamed: #AnObsoleteMTProjectBFSIteratorTest!MTModelComparatorTest removeSelector: #testIsEqualsTo!MTModelComparatorTest removeSelector: #referenceModel!Smalltalk globals removeClassNamed: #AnObsoleteMTModelComparatorTest!MTDevelopmentWorkfowTestWithXMLParser removeSelector: #testIsDevelopmentUsedInRelease!MTDevelopmentWorkfowTestWithXMLParser removeSelector: #testCreateNextDevelopment!MTDevelopmentWorkfowTestWithXMLParser removeSelector: #testCreateBaseline!MTDevelopmentWorkfowTestWithXMLParser removeSelector: #tearDown!MTDevelopmentWorkfowTestWithXMLParser removeSelector: #setUp!MTDevelopmentWorkfowTestWithXMLParser removeSelector: #setDevelopment:!Smalltalk globals removeClassNamed: #AnObsoleteMTDevelopmentWorkfowTestWithXMLParser!MTDevelopmentWorkfowTest removeSelector: #testStandardizeDevVersionString!MTDevelopmentWorkfowTest removeSelector: #testNextDevelopmentVersionString!MTDevelopmentWorkfowTest removeSelector: #testNewProjectWithInitialVersionInRepository!MTDevelopmentWorkfowTest removeSelector: #testCreateInitialDevelopment!Smalltalk globals removeClassNamed: #AnObsoleteMTDevelopmentWorkfowTest!MTDependencyTest removeSelector: #testRemoveGroup!MTDependencyTest removeSelector: #testRemove!MTDependencyTest removeSelector: #testProject!MTDependencyTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteMTDependencyTest!MTDependantProjectTest removeSelector: #testEquals!MTDependantProjectTest removeSelector: #referenceDependency!Smalltalk globals removeClassNamed: #AnObsoleteMTDependantProjectTest!MCModel2MTModelVisitorTest removeSelector: #testVisitXMLParserConfigurationWithVersion101!MCModel2MTModelVisitorTest removeSelector: #tearDown!MCModel2MTModelVisitorTest removeSelector: #setUp!MCModel2MTModelVisitorTest removeSelector: #checkRequiredProjects:!MCModel2MTModelVisitorTest removeSelector: #checkPackages:!MCModel2MTModelVisitorTest removeSelector: #checkGroups:!Smalltalk globals removeClassNamed: #AnObsoleteMCModel2MTModelVisitorTest!MBConfigurationRootTest removeSelector: #test0120ConfigPackageSave!MBConfigurationRootTest removeSelector: #test0111InfoListChanged!MBConfigurationRootTest removeSelector: #test0110BasicPackageUnload!MBConfigurationRootTest removeSelector: #test0101ConfigurationInfoDeleted!MBConfigurationRootTest removeSelector: #test0100BasicConfigurationUnload!MBConfigurationRootTest removeSelector: #test0091PackageMismatch!MBConfigurationRootTest removeSelector: #test0090BasicVersionLoad!MBConfigurationRootTest removeSelector: #test0083InfoListChanged!MBConfigurationRootTest removeSelector: #test0082ConfigurationInfoChanged!MBConfigurationRootTest removeSelector: #test0081BasicVersionLoad!MBConfigurationRootTest removeSelector: #test0080BasicVersionLoad!MBConfigurationRootTest removeSelector: #test0070BasicVersionLoad!MBConfigurationRootTest removeSelector: #test0062InfoListChanged!MBConfigurationRootTest removeSelector: #test0061ConfigurationInfoChanged!MBConfigurationRootTest removeSelector: #test0060BasicVersionLoad!MBConfigurationRootTest removeSelector: #test0050BasicVersionLoad!MBConfigurationRootTest removeSelector: #test0040BasicVersionLoad!MBConfigurationRootTest removeSelector: #test0032InfoListChanged!MBConfigurationRootTest removeSelector: #test0031ConfigurationInfoChanged!MBConfigurationRootTest removeSelector: #test0030BasicVersionLoad!MBConfigurationRootTest removeSelector: #test0021ConfigurationInfoCreated!MBConfigurationRootTest removeSelector: #test0020BasicConfigurationLoad!MBConfigurationRootTest removeSelector: #test0010BasicLoad!MBConfigurationRootTest removeSelector: #tearDownPackages!MBConfigurationRootTest removeSelector: #tearDown!MBConfigurationRootTest removeSelector: #setUp!MBConfigurationRootTest removeSelector: #scenariosForTests!MBConfigurationRootTest removeSelector: #hasPackage:!MBConfigurationRootTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationRootTest!MBConfigurationBranchTest removeSelector: #test002ConfigurationReferences!MBConfigurationBranchTest removeSelector: #test0011BasicLoad!MBConfigurationBranchTest removeSelector: #test0010BasicLoad!MBConfigurationBranchTest removeSelector: #tearDownPackages!MBConfigurationBranchTest removeSelector: #tearDown!MBConfigurationBranchTest removeSelector: #setUp!MBConfigurationBranchTest removeSelector: #hasPackage:!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationBranchTest!MBSpecInfoTest class removeSelector: #isAbstract!MBGroupInfoTest removeSelector: #testgroupContentsIfLoaded!MBGroupInfoTest removeSelector: #testPrintOn!Smalltalk globals removeClassNamed: #AnObsoleteMBGroupInfoTest!Smalltalk globals removeClassNamed: #AnObsoleteMBSpecInfoTest!MBPackageInfoTest removeSelector: #testWorkingCopy!MBPackageInfoTest removeSelector: #testPrintOn!MBPackageInfoTest removeSelector: #testIsDirty!MBPackageInfoTest removeSelector: #testInstantiation!MBPackageInfoTest removeSelector: #tearDown!MBPackageInfoTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteMBPackageInfoTest!MBInfoTest removeSelector: #testName!MBInfoTest removeSelector: #testIsDirty!MBConfigurationInfoTest removeSelector: #testDefaultVersion!MBConfigurationInfoTest removeSelector: #testBaselines!MBConfigurationInfoTest removeSelector: #setUp!Smalltalk globals removeClassNamed: #AnObsoleteMBConfigurationInfoTest!MBBaselineInfoTest removeSelector: #testcalculateInfoList!MBBaselineInfoTest removeSelector: #testInstantiation!MBBaselineInfoTest removeSelector: #testCopyBaseline!MBBaselineInfoTest removeSelector: #setUp!MBBaselineInfoTest removeSelector: #expectedFailures!Smalltalk globals removeClassNamed: #AnObsoleteMBBaselineInfoTest!MBAbstractVersionInfoTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteMBAbstractVersionInfoTest!Smalltalk globals removeClassNamed: #AnObsoleteMBInfoTest!MBAbstractTest removeSelector: #tearDown!MBAbstractTest removeSelector: #setUp!MBAbstractTest removeSelector: #removeClassIfExist:!MBAbstractTest removeSelector: #configurationName!MBAbstractTest class removeSelector: #isAbstract!Smalltalk globals removeClassNamed: #AnObsoleteMBAbstractTest!MBMonticelloPackagesResource removeSelector: #version12MBFooTest:!MBMonticelloPackagesResource removeSelector: #version11MBFooTest:!MBMonticelloPackagesResource removeSelector: #version10MBFooTest:!MBMonticelloPackagesResource removeSelector: #symbolicVersionStable11MBFooTest:!MBMonticelloPackagesResource removeSelector: #symbolicVersionStable10MBFooTest:!MBMonticelloPackagesResource removeSelector: #symbolicVersionDevelopmentNotDefinedMBFooTest:!MBMonticelloPackagesResource removeSelector: #symbolicVersionDevelopment10MBFooTest:!MBMonticelloPackagesResource removeSelector: #symbolicVersionBleedingEdge20baselineMBFooTest:!MBMonticelloPackagesResource removeSelector: #setUpPackagesMBFooTests!MBMonticelloPackagesResource removeSelector: #setUpPackagesMBCommandFooTests!MBMonticelloPackagesResource removeSelector: #setUpPackageClassDefs:named:ancestors:!MBMonticelloPackagesResource removeSelector: #setUpPackageClassDefs:methodDefs:named:ancestors:!MBMonticelloPackagesResource removeSelector: #setUpMonticelloRepository!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBFooTest3:!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBFooTest2:!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBFooTest1!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBFooTest!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBFooIssue117dkh3:!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBFooIssue117dkh2:!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBFooIssue117dkh1:!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBFooIssue117!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBBranchTest2:!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBBranchTest1!MBMonticelloPackagesResource removeSelector: #setUpConfigurationOfMBBranchTest!MBMonticelloPackagesResource removeSelector: #setUp!MBMonticelloPackagesResource removeSelector: #project!MBMonticelloPackagesResource removeSelector: #monticelloRepository!MBMonticelloPackagesResource removeSelector: #baseline30MBFooTest:!MBMonticelloPackagesResource removeSelector: #baseline20MBFooTest:!MBMonticelloPackagesResource removeSelector: #baseline10MBFooTest:!MBMonticelloPackagesResource class removeSelector: #projectAttributes!MBMonticelloPackagesResource class removeSelector: #project!MBMonticelloPackagesResource class removeSelector: #isMetacelloConfig!Smalltalk globals removeClassNamed: #AnObsoleteMBMonticelloPackagesResource!ConfigurationOfVersionnerTestXMLWriter removeSelector: #version210:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #version200:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #version105:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #version104:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #version103:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #version102:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #version101:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #version100:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #stable:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #project!ConfigurationOfVersionnerTestXMLWriter removeSelector: #development:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #baseline210:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #baseline200:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #baseline105:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #baseline104:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #baseline101:!ConfigurationOfVersionnerTestXMLWriter removeSelector: #baseline100:!ConfigurationOfVersionnerTestXMLWriter class removeSelector: #unloadMetacello!ConfigurationOfVersionnerTestXMLWriter class removeSelector: #project!ConfigurationOfVersionnerTestXMLWriter class removeSelector: #metacelloVersion:loads:!ConfigurationOfVersionnerTestXMLWriter class removeSelector: #load!ConfigurationOfVersionnerTestXMLWriter class removeSelector: #lastMetacelloVersionLoad!ConfigurationOfVersionnerTestXMLWriter class removeSelector: #isMetacelloConfig!ConfigurationOfVersionnerTestXMLWriter class removeSelector: #ensureMetacello!ConfigurationOfVersionnerTestXMLWriter class removeSelector: #bootstrapPackage:from:!Smalltalk globals removeClassNamed: #AnObsoleteConfigurationOfVersionnerTestXMLWriter!ConfigurationOfVersionnerTestXMLParserTemplate removeSelector: #version101:!ConfigurationOfVersionnerTestXMLParserTemplate removeSelector: #version100:!ConfigurationOfVersionnerTestXMLParserTemplate removeSelector: #stable:!ConfigurationOfVersionnerTestXMLParserTemplate removeSelector: #project!ConfigurationOfVersionnerTestXMLParserTemplate removeSelector: #development:!ConfigurationOfVersionnerTestXMLParserTemplate removeSelector: #baseline20:!ConfigurationOfVersionnerTestXMLParserTemplate removeSelector: #baseline10:!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #unloadMetacello!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #project!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #metacelloVersion:loads:!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #loadMostRecentCoreWithTests!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #loadDefault!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #load!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #lastMetacelloVersionLoad!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #isMetacelloConfig!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #ensureMetacello!ConfigurationOfVersionnerTestXMLParserTemplate class removeSelector: #bootstrapPackage:from:!Smalltalk globals removeClassNamed: #AnObsoleteConfigurationOfVersionnerTestXMLParserTemplate!ConfigurationOfVersionnerTestBitmapCharacterSet removeSelector: #version100:!ConfigurationOfVersionnerTestBitmapCharacterSet removeSelector: #stable:!ConfigurationOfVersionnerTestBitmapCharacterSet removeSelector: #project!ConfigurationOfVersionnerTestBitmapCharacterSet removeSelector: #development:!ConfigurationOfVersionnerTestBitmapCharacterSet removeSelector: #baseline100:!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #unloadMetacello!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #project!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #metacelloVersion:loads:!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #loadMostRecentCoreWithTests!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #loadDefault!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #load!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #lastMetacelloVersionLoad!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #isMetacelloConfig!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #ensureMetacello!ConfigurationOfVersionnerTestBitmapCharacterSet class removeSelector: #bootstrapPackage:from:!Smalltalk globals removeClassNamed: #AnObsoleteConfigurationOfVersionnerTestBitmapCharacterSet!----QUIT----2018-02-06T10:35:57.343888+01:00 Pharo.image priorSource: 614979!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-02-06T10:36:22.805454+01:00 Pharo.image priorSource: 1884067!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-02-06T10:36:36.409817+01:00 Pharo.image priorSource: 1887071!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-02-06T10:37:12.579127+01:00 Pharo.image priorSource: 1890076!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 07:57'!exportHeroAbilities	| s |	s := WriteStream on: (String new: 10000).	self exportHeroAbilitiesHeaderOn: s.	self exportHeroAbilitiesOn: s.	self export: s to: 'heroAbilities'! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 07:57'!exportHeroAbilitiesHeaderOn: s	s << '!! Hero abilities'.	s cr.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 07:58'!exportHeroAbilitiesOn: s	| printed order others |	importer heroAbilities do: [ :abName | 				]	! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 07:58' prior: 35450974!exportHeroAbilitiesOn: s	importer heroAbilities do: [ :abName | 				]	! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 07:59' prior: 35451163!exportHeroAbilitiesOn: s	| abilities |	abilities := importer heroAbilities collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 07:59' prior: 35451326!exportHeroAbilitiesOn: s	| abilities |	abilities := importer stealable collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s i: i.		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:00' prior: 35451563!exportHeroAbilitiesOn: s	| abilities |	abilities := importer heroAbilities collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s i: i.		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:01'!shortExportOn: s 	s 		<< '|!! Ability | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 6 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity | '			<< spellImmunityType printString.		s cr  ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:01' prior: 35451923!exportHeroAbilitiesOn: s	| abilities |	abilities := importer heroAbilities collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s .		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:01' prior: 34090448!exportStealable	| abilities s |	abilities := importer stealable collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	s := WriteStream on: (String new: 10000).	s << '!! Abilities to steal'.	s cr.	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s.		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].	self export: s to: 'steal'! !----SNAPSHOT----2018-02-13T08:01:35.591236+01:00 Pharo.image priorSource: 1893081!----SNAPSHOT----2018-02-13T08:01:37.71236+01:00 Pharo.image priorSource: 1899461!----SNAPSHOT----2018-02-13T08:01:40.029104+01:00 Pharo.image priorSource: 1899545!----SNAPSHOT----2018-02-13T08:01:43.818824+01:00 Pharo.image priorSource: 1899628!----SNAPSHOT----2018-02-13T08:01:46.646794+01:00 Pharo.image priorSource: 1899712!----SNAPSHOT----2018-02-13T08:01:50.748543+01:00 Pharo.image priorSource: 1899796!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:02' prior: 35453162!exportHeroAbilitiesOn: s	| abilities |	abilities := importer heroAbilities collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s.		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].! !GemTDAbility removeSelector: #shortExportOn:!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:02' prior: 35454482!exportHeroAbilitiesOn: s	| abilities |	abilities := importer heroAbilities collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s i: i.		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:02' prior: 35453522!exportStealable	| abilities s |	abilities := importer stealable collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	s := WriteStream on: (String new: 10000).	s << '!! Abilities to steal'.	s cr.	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s i: i.		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].	self export: s to: 'steal'! !----SNAPSHOT----2018-02-13T08:02:49.100426+01:00 Pharo.image priorSource: 1899880!----SNAPSHOT----2018-02-13T08:02:52.424823+01:00 Pharo.image priorSource: 1901196!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 2/13/2018 08:04'!heroAbilities	heroAbilities ifNotNil: [ ^ heroAbilities ].	heroAbilities := Dictionary new.	self parseCombinations: 'GameRules.gemtd_merge'.	self parseCombinations: 'GameRules.gemtd_merge_secret'.	self parseCombinations: 'GameRules.gemtd_merge_shiban'.	^ heroAbilities! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 2/13/2018 08:04' prior: 35455874!heroAbilities	heroAbilities ifNotNil: [ ^ heroAbilities ].	heroAbilities := self parseCombinations: 'GameRules.ability_sea'.	^ heroAbilities! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 2/13/2018 08:08'!parseKeyStringDict: rs	readStream := rs.	rs skipUntil: ${.	rs next.	self skipSeparators.	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 2/13/2018 08:09' prior: 35456468!parseKeyStringDict: rs	result := self dictClass new.	readStream := rs.	rs skipUntil: ${.	rs next.	self skipSeparators.		! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 2/13/2018 08:10' prior: 35456658!parseKeyStringDict: rs	result := self dictClass new.	readStream := rs.	rs skipUntil: ${.	rs next.	[self skipSeparators.	rs peek = $}] whileFalse: [ self parsePair ].		! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 2/13/2018 08:11'!parsePair	| res combo |	res := self parseRes.	combo := self parseString.	self skipUntil: Character cr.	self skipSeparators.	readStream peek = $- ifTrue: [ readStream next: 2. self skipSeparators. ].	result at: res put: combo.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 2/13/2018 08:11' prior: 35456245!heroAbilities	heroAbilities ifNotNil: [ ^ heroAbilities ].	heroAbilities := self parseAB: 'GameRules.ability_sea'.	^ heroAbilities! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 2/13/2018 08:11'!parseAB: id	GemTDLuaParser new parseKeyStringDict: 1! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 2/13/2018 08:12' prior: 35457679!parseAB: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	^ GemTDLuaParser new parseKeyStringDict: (scripts first copyFrom: i to: i + 10000) readStream! !----SNAPSHOT----2018-02-13T08:12:27.010282+01:00 Pharo.image priorSource: 1901280!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 2/13/2018 08:12' prior: 35457465!heroAbilities	heroAbilities ifNotNil: [ ^ heroAbilities ].	heroAbilities := self parseAB: 'GameRules.ability_sea'.	1halt.	^ heroAbilities! !!GemTDGod methodsFor: 'public' stamp: 'ClementBera 2/13/2018 08:12' prior: 34038306!process	importer := GemTDImporter new.	importer importAll.	self generate.	self clearExport.	self exportHeroAbilities.	self exportBaseTowers.	self exportAdvancedTowers.	self exportCreeps.	self exportStealable.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:13' prior: 35454888!exportHeroAbilitiesOn: s	| abilities |	abilities := importer heroAbilities collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	1halt.	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s i: i.		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 2/13/2018 08:13' prior: 35456881!parseKeyStringDict: rs	result := self dictClass new.	readStream := rs.	self skipUntil: ${.	rs next.	[self skipSeparators.	rs peek = $}] whileFalse: [ self parsePair ].		! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 2/13/2018 08:13' prior: 35457136!parsePair	| res combo |	res := self parseRes.	self skipSeparators.	combo := self parseString.	self skipUntil: Character cr.	self skipSeparators.	readStream peek = $- ifTrue: [ readStream next: 2. self skipSeparators. ].	result at: res put: combo.! !----SNAPSHOT----2018-02-13T08:14:18.58775+01:00 Pharo.image priorSource: 1903581!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 2/13/2018 08:14' prior: 35458191!heroAbilities	heroAbilities ifNotNil: [ ^ heroAbilities ].	heroAbilities := self parseAB: 'GameRules.ability_sea'.	^ heroAbilities! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:16'!shortExportOn: s	s 		<< '|!! Ability code | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 6 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity | '			<< spellImmunityType printString.		s cr  ]! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:16' prior: 35460023!shortExportOn: s	s 		<< '|!! Ability | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 6 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity | '			<< spellImmunityType printString.		s cr  ]! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:16' prior: 33913573!exportAbilitiesOn: s	abilities withIndexDo: [ :ab :i |		self exSplit: s.		ab shortExportOn: s ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:16' prior: 35455252!exportStealable	| abilities s |	abilities := importer stealable collect: [ :each |		GemTDAbility newFrom: each importer: importer ].	s := WriteStream on: (String new: 10000).	s << '!! Abilities to steal'.	s cr.	abilities withIndexDo: [ :ab :i | 		ab shortExportOn: s.		i = abilities size ifFalse: [ 			s << '| ~ | ~'.			s cr ] ].	self export: s to: 'steal'! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:18' prior: 35458727!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		s << '|!! Network code | ' << key.		(GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer) shortExportOn: s.		s cr ]! !----SNAPSHOT----2018-02-13T08:18:10.014079+01:00 Pharo.image priorSource: 1905204!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:18' prior: 35462452!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.				s << '|!! Network code | ' << key.		ab shortExportOn: s.		s cr ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:19' prior: 35462855!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << (ab name at: 'en').		s << '|!! Network code | ' << key.		ab shortExportOn: s.		s cr ]! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 2/13/2018 08:20' prior: 35459106!parseKeyStringDict: rs	result := self dictClass new.	readStream := rs.	self skipUntil: ${.	rs next.	[self skipSeparators.	rs peek = $}] whileFalse: [ self parsePair ].	^ result	! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:21' prior: 35463196!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: ['Unavailable'] ifNotNil: [:it | it]).		s << '|!! Network code | ' << key.		ab shortExportOn: s.		s cr ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:21' prior: 35463853!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s << '|!! Network code | ' << key.		ab shortExportOn: s.		s cr ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:21' prior: 35464275!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s << '|!! Network code | ' << key.		ab shortExportOn: s.]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:22' prior: 35464687!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s << '|!! Network code | ' << key.		ab shortExportOn: s.]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:23' prior: 35465091!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s cr.		s << '|!! Network code | ' << key.		ab shortExportOn: s.]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:23' prior: 35465495!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s cr.		s << '|!! Network code | ' << key.		s cr.		ab shortExportOn: s.]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:24' prior: 35465907!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		1halt.		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s cr.		s << '|!! Network code | ' << key.		s cr.		ab shortExportOn: s.]! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/13/2018 08:24' prior: 34115438!importDetailsWith: importer	| details modifiers | 	1halt.	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/13/2018 08:26' prior: 35466766!importDetailsWith: importer	| details modifiers | 	1halt.	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'AbilityGoldCost' ifPresent: [ :it |		goldCost := it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/13/2018 08:26' prior: 35467287!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'AbilityGoldCost' ifPresent: [ :it |		goldCost := it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !GemTDAbility removeSelector: #shortExportOn:i:!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:27' prior: 35460918!shortExportOn: s	s 		<< '|!! Ability | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	goldCost notNil ifTrue: [		s << '|!! Gold cost | '.		s << goldCost.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 6 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity | '			<< spellImmunityType printString.		s cr  ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:27' prior: 35466327!exportHeroAbilitiesOn: s	| abilities |	importer heroAbilities keys sorted do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s cr.		s << '|!! Network code | ' << key.		s cr.		ab shortExportOn: s.]! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/13/2018 08:28' prior: 34127879!abilityResourceLang: l importer: importer keyword: keyword	codeName = 'gemtd_hero_xuanfeng' ifTrue: [ 1halt ].	^ (importer resources at: l) 			at: 'DOTA_Tooltip_Ability_' , keyword 			ifAbsent: [				(importer resources at: l) 					at: 'DOTA_Tooltip_ability_' , keyword 					ifAbsent: [nil]]! !!GLMBrickPropertiesTrait methodsFor: 'brick-properties-events' stamp: 'ClementBera 2/13/2018 08:30' prior: 65299280!announce: aSymbol event: anEvent	[self announcer subscriptions glmSubscriptions do: [ :each |		each announcementClass = aSymbol ifTrue: [			(each handlesAnnouncement: aSymbol ) ifTrue: [				[ each action cull: anEvent cull: self ] 					on: UnhandledError fork: [:ex | ex pass ] ] ] ]] on: Error do: [  ]! !!Trait method!announce: aSymbol event: anEvent	[self announcer subscriptions glmSubscriptions do: [ :each |		each announcementClass = aSymbol ifTrue: [			(each handlesAnnouncement: aSymbol ) ifTrue: [				[ each action cull: anEvent cull: self ] 					on: UnhandledError fork: [:ex | ex pass ] ] ] ]] on: Error do: [  ]! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/13/2018 08:33' prior: 35469895!abilityResourceLang: l importer: importer keyword: keyword	^ (importer resources at: l) 			at: 'DOTA_Tooltip_Ability_' , keyword 			ifAbsent: [				(importer resources at: l) 					at: 'DOTA_Tooltip_ability_' , keyword 					ifAbsent: [nil]]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/13/2018 08:34' prior: 35469471!exportHeroAbilitiesOn: s	(importer heroAbilities keys sort: [ :a :b | a size = b size 			ifTrue: [ a < b ]			ifFalse: [ a size < b size ] ]) do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s cr.		s << '|!! Network code | ' << key.		s cr.		ab shortExportOn: s.]! !----SNAPSHOT----2018-02-13T08:34:43.076127+01:00 Pharo.image priorSource: 1908253!----QUIT----2018-02-13T08:38:39.485541+01:00 Pharo.image priorSource: 1917346!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:38' prior: 35468504!shortExportOn: s	s 		<< '|!! Ability | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en').		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	goldCost notNil ifTrue: [		s << '|!! Gold cost | '.		s << goldCost.		s cr ].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 6 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity | '			<< spellImmunityType printString.		s cr  ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:40' prior: 35471376!exportHeroAbilitiesOn: s	| prices |	prices := {  }.		(importer heroAbilities keys sort: [ :a :b | a size = b size 			ifTrue: [ a < b ]			ifFalse: [ a size < b size ] ]) do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s cr.		s << '|!! Network code | ' << key.		s cr.		ab shortExportOn: s.		s << '|!! Shell price | ' << (prices at: (key at: 2) asInteger).		s cr.]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:40' prior: 35484699!exportHeroAbilitiesOn: s	| prices |	prices := { 		 }.	(importer heroAbilities keys sort: [ :a :b | a size = b size 			ifTrue: [ a < b ]			ifFalse: [ a size < b size ] ]) do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s cr.		s << '|!! Network code | ' << key.		s cr.		ab shortExportOn: s.		s << '|!! Shell price | ' << (prices at: (key at: 2) asInteger).		s cr.]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:43' prior: 35485293!exportHeroAbilitiesOn: s	| prices |	prices := { 		'5 10 20 40 (Sale: 2 5 10 20)' .		'10 20 40 80 (Sale: 5 10 20 40)' .		'15 30 60 120 (Sale: 7 15 30 60)' .		'20 40 80 160 (Sale: 10 20 40 80)' }.	(importer heroAbilities keys sort: [ :a :b | a size = b size 			ifTrue: [ a < b ]			ifFalse: [ a size < b size ] ]) do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		s << '!!!! ' << ((ab name at: 'en') ifNil: [key] ifNotNil: [:it | it]).		s cr.		s << '|!! Network code | ' << key.		s cr.		ab shortExportOn: s.		s << '|!! Shell price | ' << (prices at: (key at: 2) asInteger ifAbsent: ['Not purchaseable']).		s cr.]! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/14/2018 08:43' prior: 34117290!importWith: importer 	name := Dictionary new.	self importDetailsWith: importer.	codeName = 'gemtd_hero_jingying' ifTrue: [ 1halt ].	#(en sch tch) do: [ :l |		name at: l put: (self abilityResourceLang: l importer: importer keyword: codeName) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: (self abilityResourceLang: l importer: importer keyword: codeName , '_Description') ].! !GemTDAbility subclass: #GemTDHeroAbility	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDElement subclass: #GemTDAbility	instanceVariableNames: 'tooltip property abilitySpecial spellImmunityType bonusDamage'	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDAbility subclass: #GemTDHeroAbility	instanceVariableNames: 'goldCost'	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDAbility subclass: #GemTDHeroAbility	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDElement subclass: #GemTDAbility	instanceVariableNames: 'tooltip property abilitySpecial spellImmunityType bonusDamage goldCost'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/14/2018 08:48' prior: 35486662!importWith: importer 	name := Dictionary new.	self importDetailsWith: importer.	#(en sch tch) do: [ :l |		name at: l put: (self abilityResourceLang: l importer: importer keyword: codeName) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: (self abilityResourceLang: l importer: importer keyword: codeName , '_Description') ].! !!GemTDAbility methodsFor: 'import' stamp: 'ClementBera 2/14/2018 08:48' prior: 35487901!importWith: importer 	name := Dictionary new. 	self importDetailsWith: importer.	#(en sch tch) do: [ :l |		name at: l put: (self abilityResourceLang: l importer: importer keyword: codeName) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: (self abilityResourceLang: l importer: importer keyword: codeName , '_Description') ].! !!GemTDAbility methodsFor: 'import modif' stamp: 'ClementBera 2/14/2018 08:49' prior: 35467878!importDetailsWith: importer	| details modifiers | 	details := (importer npcs at: 'DOTAAbilities') at: codeName ifAbsent: [^ self].	details at: 'AbilitySpecial' ifPresent: [ :it |		self importAbilitySpecial: it ].	details at: 'AbilityGoldCost' ifPresent: [ :it | 		goldCost := it ].	details at: 'SpellImmunityType' ifPresent: [ :it |		spellImmunityType := it endsWith: 'YES' ].	modifiers := details at: 'Modifiers' ifAbsent: [ ^ self ].	self importModifiers: modifiers copy.	! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:49' prior: 35483732!shortExportOn: s	s 		<< '|!! Ability | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en'). 		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	goldCost notNil ifTrue: [		s << '|!! Gold cost | '.		s << goldCost.		s cr ].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 6 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity | '			<< spellImmunityType printString.		s cr  ]! !GemTDAbility subclass: #GemTDHeroAbility	instanceVariableNames: 'networkName'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDHeroAbility methodsFor: 'accessing' stamp: 'ClementBera 2/14/2018 08:49'!networkName	^ networkName! !!GemTDHeroAbility methodsFor: 'accessing' stamp: 'ClementBera 2/14/2018 08:49'!networkName: anObject	networkName := anObject! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:49' prior: 35485888!exportHeroAbilitiesOn: s	| prices |	prices := { 		'5 10 20 40 (Sale: 2 5 10 20)' .		'10 20 40 80 (Sale: 5 10 20 40)' .		'15 30 60 120 (Sale: 7 15 30 60)' .		'20 40 80 160 (Sale: 10 20 40 80)' }.	(importer heroAbilities keys sort: [ :a :b | a size = b size 			ifTrue: [ a < b ]			ifFalse: [ a size < b size ] ]) do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		ab networkName: key.		ab shortExportOn: s.		s << '|!! Shell price | ' << (prices at: (key at: 2) asInteger ifAbsent: ['Not purchaseable']).		s cr.]! !!GemTDHeroAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:50'!shortExportOn: s	s << '!!!! ' << ((name at: 'en') ifNil: [networkName] ifNotNil: [:it | it]).	s cr.	s << '|!! Network code | ' << networkName.	s cr.	super shortExportOn: s! !----SNAPSHOT----2018-02-14T08:51:03.277453+01:00 Pharo.image priorSource: 1917430!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:51' prior: 35490726!exportHeroAbilitiesOn: s	| prices |	prices := { 		'5 10 20 40 (Sale: 2 5 10 20)' .		'10 20 40 80 (Sale: 5 10 20 40)' .		'15 30 60 120 (Sale: 7 15 30 60)' .		'20 40 80 160 (Sale: 10 20 40 80)' }.	(importer heroAbilities keys sort: [ :a :b | a size = b size 			ifTrue: [ a < b ]			ifFalse: [ a size < b size ] ]) do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		ab networkName: key.		ab shortExportOn: s ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:51' prior: 35491733!exportHeroAbilitiesOn: s	(importer heroAbilities keys sort: [ :a :b | a size = b size 			ifTrue: [ a < b ]			ifFalse: [ a size < b size ] ]) do: [ :key |		| ab |		ab := GemTDAbility newFrom: (importer heroAbilities at: key) importer: importer.		ab networkName: key.		ab shortExportOn: s ]! !!GemTDHeroAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:52' prior: 35491384!shortExportOn: s	| prices |	s << '!!!! ' << ((name at: 'en') ifNil: [networkName] ifNotNil: [:it | it]).	s cr.	s << '|!! Network code | ' << networkName.	s cr.	super shortExportOn: s.	prices := #( 		'5 10 20 40 (Sale: 2 5 10 20)' 		'10 20 40 80 (Sale: 5 10 20 40)' 		'15 30 60 120 (Sale: 7 15 30 60)' 		'20 40 80 160 (Sale: 10 20 40 80)' ).	s << '|!! Shell price | ' << (prices 		at: (networkName at: 2) asInteger 		ifAbsent: ['Not purchaseable']).	s cr.! !----SNAPSHOT----2018-02-14T08:52:56.369204+01:00 Pharo.image priorSource: 1937131!----SNAPSHOT----2018-02-14T08:53:04.635706+01:00 Pharo.image priorSource: 1938725!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:54' prior: 35492293!exportHeroAbilitiesOn: s	(importer heroAbilities keys sort: [ :a :b | a size = b size 			ifTrue: [ a < b ]			ifFalse: [ a size < b size ] ]) do: [ :key |		| ab |		ab := GemTDHeroAbility newFrom: (importer heroAbilities at: key) importer: importer networkName: key.		ab shortExportOn: s ]! !!GemTDHeroAbility class methodsFor: 'as yet unclassified' stamp: 'ClementBera 2/14/2018 08:54'!newFrom: codeName importer: importer networkName: key	^ self new 			networkName: key;			codeName: codeName;			importWith: importer;			yourself ! !!GemTDHeroAbility methodsFor: 'name' stamp: 'ClementBera 2/14/2018 08:56'!abilityResourceLang: l importer: importer keyword: keyword	^ (importer resources at: l) 			at: 'DOTA_Tooltip_Ability_' , keyword 			ifAbsent: [				(importer resources at: l) 					at: 'DOTA_Tooltip_ability_' , keyword 					ifAbsent: [						1halt.						(importer resources at: l) 							at: 'DOTA_Tooltip_Ability_' , keyword 							ifAbsent: [nil]]]! !!GemTDHeroAbility methodsFor: 'name' stamp: 'ClementBera 2/14/2018 08:57' prior: 35494031!abilityResourceLang: l importer: importer keyword: keyword	^ (importer resources at: l) 			at: 'DOTA_Tooltip_Ability_' , keyword 			ifAbsent: [				(importer resources at: l) 					at: 'DOTA_Tooltip_ability_' , keyword 					ifAbsent: [						(importer resources at: l) 							at: networkName							ifAbsent: [nil]]]! !!GemTDHeroAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:57' prior: 35492685!shortExportOn: s	| prices |	s << '!!!! ' << ((name at: 'en') ifNil: [networkName] ifNotNil: [:it | it]).	s cr.	s << '|!! Network code | ' << networkName.	s cr.	super shortExportOn: s.	prices := #( 		'5 10 20 40 (Sale: 2 5 10 20)' 		'10 20 40 80 (Sale: 5 10 20 40)' 		'15 30 60 120 (Sale: 7 15 30 60)' 		'20 40 80 160 (Sale: 10 20 40 80)' ).		1halt.	s << '|!! Shell price | ' << (prices 		at: (networkName at: 2) asInteger 		ifAbsent: ['Not purchaseable']).	s cr.! !!GemTDHeroAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:58' prior: 35494901!shortExportOn: s	| prices |	s << '!!!! ' << ((name at: 'en') ifNil: [networkName] ifNotNil: [:it | it]).	s cr.	s << '|!! Network code | ' << networkName.	s cr.	super shortExportOn: s.	prices := #( 		'5 10 20 40 (Sale: 2 5 10 20)' 		'10 20 40 80 (Sale: 5 10 20 40)' 		'15 30 60 120 (Sale: 7 15 30 60)' 		'20 40 80 160 (Sale: 10 20 40 80)' ).		1halt.	s << '|!! Shell price | ' << (prices 		at: (networkName at: 2) asString asInteger 		ifAbsent: ['Not purchaseable']).	s cr.! !!GemTDHeroAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:58' prior: 35495476!shortExportOn: s	| prices |	s << '!!!! ' << ((name at: 'en') ifNil: [networkName] ifNotNil: [:it | it]).	s cr.	s << '|!! Network code | ' << networkName.	s cr.	super shortExportOn: s.	prices := #( 		'5 10 20 40 (Sale: 2 5 10 20)' 		'10 20 40 80 (Sale: 5 10 20 40)' 		'15 30 60 120 (Sale: 7 15 30 60)' 		'20 40 80 160 (Sale: 10 20 40 80)' ).	s << '|!! Shell price | ' << (prices 		at: (networkName at: 2) asString asInteger 		ifAbsent: ['Not purchaseable']).	s cr.! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 08:58' prior: 35489386!shortExportOn: s	s 		<< '|!! Ability | '		<< codeName.	s cr.	(name at: 'en') ifNotNil: [ 		s 			<< '|!! Name | ' 			<< (name at: 'en'). 		s cr].	(tooltip at: 'en') ifNotNil: [		s 			<< '|!! Tooltip | '			<< (tooltip at: 'en').		s cr].	(property notNil and: [ property isEmpty not ]) ifTrue: [		s << '|!! Raw | =='.		s << property.		s << '=='.		s cr ].	abilitySpecial ifNotNil: [ 		| count |		count := 0.		s << '|!! Raw: Special | =='.		abilitySpecial keysAndValuesDo: [ :k :v |			count = 6 ifTrue: [ 				s << '=='.				s cr.				s << '|!! Raw: Special 2 | =='. ].			s << '[' << k << ': ' << v << ']'.			count := count + 1. ].		s << '=='.		s cr ].	spellImmunityType ifNotNil: [ 		s 			<< '|!! Pierce Spell Immunity | '			<< spellImmunityType printString.		s cr ].	goldCost notNil ifTrue: [		s << '|!! Gold cost | '.		s << goldCost.		s cr ].! !----SNAPSHOT----2018-02-14T08:58:59.433615+01:00 Pharo.image priorSource: 1938809!!GemTDHeroAbility methodsFor: 'name' stamp: 'ClementBera 2/14/2018 09:00' prior: 35494483!abilityResourceLang: l importer: importer keyword: keyword	^ (importer resources at: l) 			at: 'DOTA_Tooltip_Ability_' , keyword 			ifAbsent: [				(importer resources at: l) 					at: 'DOTA_Tooltip_ability_' , keyword 					ifAbsent: [						l = 'en' ifTrue: [ 1halt ].						(importer resources at: l) 							at: networkName							ifAbsent: [nil]]]! !!GemTDHeroAbility methodsFor: 'name' stamp: 'ClementBera 2/14/2018 09:03' prior: 35497689!abilityResourceLang: l importer: importer keyword: keyword	^ (importer resources at: l) 			at: 'DOTA_Tooltip_Ability_' , keyword 			ifAbsent: [				(importer resources at: l) 					at: 'DOTA_Tooltip_ability_' , keyword 					ifAbsent: [						(importer resources at: l) 							at: networkName							ifAbsent: [nil]]]! !----QUIT----2018-02-14T09:04:01.969383+01:00 Pharo.image priorSource: 1943081!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDHeroAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 09:05' prior: 35496060!shortExportOn: s	| prices |	s << '!!!! ' << ((name at: 'en') ifNil: [networkName] ifNotNil: [:it | it]).	s cr.	s << '|!! Network code | ' << networkName.	s cr.	super shortExportOn: s.	networkName size > 4 ifTrue: [ ^ self ].	prices := #( 		'5 10 20 40 (Sale: 2 5 10 20)' 		'10 20 40 80 (Sale: 5 10 20 40)' 		'15 30 60 120 (Sale: 7 15 30 60)' 		'20 40 80 160 (Sale: 10 20 40 80)' ).	s << '|!! Shell price | ' << (prices 		at: (networkName at: 2) asString asInteger 		ifAbsent: ['Not purchaseable']).	s cr.! !----QUIT----2018-02-14T09:05:50.041047+01:00 Pharo.image priorSource: 1944031!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDHeroAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 12:30' prior: 35501562!shortExportOn: s	| prices |	s << '!!!! ' << ((name at: 'en') ifNil: [networkName] ifNotNil: [:it | it]).	s cr.	s << '|!! Network code | ' << networkName.	s cr.	super shortExportOn: s.	networkName size > 4 ifTrue: [ ^ self ].	prices := #( 		' 5 . 10 . 20 . 40 ~ (Sale:  2 .  5 . 10 . 20)' 		'10 . 20 . 40 . 80 ~ (Sale:  5 . 10 . 20 . 40)' 		'15 . 30 . 60 . 120 ~ (Sale:  7 . 15 . 30 . 60)' 		'20 . 40 . 80 . 160 ~ (Sale: 10 . 20 . 40 . 80)' ).	s << '|!! Shell price | ' << (prices 		at: (networkName at: 2) asString asInteger 		ifAbsent: ['Not purchaseable']).	s cr.! !----QUIT----2018-02-14T12:30:47.021646+01:00 Pharo.image priorSource: 1947653!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDHeroAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 12:33' prior: 35508109!shortExportOn: s	| prices |	s << '!!!! ' << ((name at: 'en') ifNil: [networkName] ifNotNil: [:it | it]).	s cr.	s << '|!! Network code | ' << networkName.	s cr.	super shortExportOn: s.	networkName size > 4 ifTrue: [ ^ self ].	prices := #( 		' 5 . 10 . 20 . 40 ~ Sale:  2 .  5 . 10 . 20' 		'10 . 20 . 40 . 80 ~ Sale:  5 . 10 . 20 . 40' 		'15 . 30 . 60 . 120 ~ Sale:  7 . 15 . 30 . 60' 		'20 . 40 . 80 . 160 ~ Sale: 10 . 20 . 40 . 80' ).	s << '|!! Shell price | ' << (prices 		at: (networkName at: 2) asString asInteger 		ifAbsent: ['Not purchaseable']).	s cr.! !!GemTDHeroAbility methodsFor: 'export' stamp: 'ClementBera 2/14/2018 12:34' prior: 35514717!shortExportOn: s	| prices |	s << '!!!! ' << ((name at: 'en') ifNil: [networkName] ifNotNil: [:it | it]).	s cr.	s << '|!! Network code | ' << networkName.	s cr.	super shortExportOn: s.	networkName size > 4 ifTrue: [ ^ self ].	networkName = 'a201' ifTrue: [ 		s << '|!! Ice Block price | 1800 . 3600 . 7200 . 14400 ~ (No known sale)'.		^ s cr. ].	prices := #( 		' 5 . 10 . 20 . 40 ~ Sale:  2 .  5 . 10 . 20' 		'10 . 20 . 40 . 80 ~ Sale:  5 . 10 . 20 . 40' 		'15 . 30 . 60 . 120 ~ Sale:  7 . 15 . 30 . 60' 		'20 . 40 . 80 . 160 ~ Sale: 10 . 20 . 40 . 80' ).	s << '|!! Shell price | ' << (prices 		at: (networkName at: 2) asString asInteger 		ifAbsent: ['Not purchaseable']).	s cr.! !----QUIT----2018-02-14T12:34:57.80678+01:00 Pharo.image priorSource: 1954261!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-02-19T14:46:27.807612+01:00 Pharo.image priorSource: 1961654!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/28/2018 07:04' prior: 33862525!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/28/2018 07:07' prior: 35525113!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	s cr.	s << '""Global multiplayer settings"": [HP coef: '. 	importer difficultyHP 		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s << '][Speed coef: '.	importer difficultyHPSpeed		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s << ']'.	s cr.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/28/2018 07:09' prior: 35525809!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	s cr.	s << '!!!!!!!! Global multiplayer settings'.	s cr.	s << '|!! HP coef |'. 	importer difficultyHP 		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.	s << '|!! Speed coef |'.	importer difficultyHPSpeed		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/28/2018 07:09' prior: 35526790!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	s << '!!!!!!!! Global multiplayer settings'.	s cr.	s << '|!! HP coef |'. 	importer difficultyHP 		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.	s << '|!! Speed coef |'.	importer difficultyHPSpeed		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/28/2018 07:10' prior: 35527792!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	s << '!!!!!!!! Global multiplayer settings'.	s cr.	s << '|!! HP coef (1-4 players) | '. 	importer difficultyHP 		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.	s << '|!! Speed coef (1-4 players) | '.	importer difficultyHPSpeed		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.! !----QUIT----2018-02-28T07:10:16.632824+01:00 Pharo.image priorSource: 1961654!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/28/2018 07:14' prior: 35528787!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	s << '|!! Global HP coefficient (1-4 players) | '. 	importer difficultyHP 		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.	s << '|!! Global Speed coefficient (1-4 players) | '.	importer difficultyHPSpeed		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/28/2018 07:14' prior: 35535742!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	s << '|!! Global Creep HP coefficient (1-4 players) | '. 	importer difficultyHP 		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.	s << '|!! Global Creep Speed coefficient (1-4 players) | '.	importer difficultyHPSpeed		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.! !----SNAPSHOT----2018-02-28T07:14:23.124136+01:00 Pharo.image priorSource: 1975294!----QUIT----2018-02-28T07:14:24.853985+01:00 Pharo.image priorSource: 1983236!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/28/2018 07:17' prior: 35536742!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	s << '!!!!!!!! Global Creep coefficient'.	s cr.	s << '|!! HP (1-4 players) | '. 	importer difficultyHP 		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.	s << '|!! Speed (1-4 players) | '.	importer difficultyHPSpeed		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.! !----SNAPSHOT----2018-02-28T07:17:17.573596+01:00 Pharo.image priorSource: 1983320!----QUIT----2018-02-28T07:17:20.8245+01:00 Pharo.image priorSource: 1990262!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 2/28/2018 07:18' prior: 35543768!exportCreepsHeaderOn: s	s << '!! Creeps'.	s cr.	s << 'Note: The creeps are displayed in order according to the Game rules in the Lua script, with special cases for in-script transformation (For example, Boss 30 has a chance to be Zard instead of Carpet rider). Other creeps implemented in-game are at the bottom in the Others section. This can include event creeps (Halloween event boss, etc.), past creeps (the testers, etc.) or future creeps. In case of an update breaking my analysis, more creeps may be shown in the Others section instead of normal order (but at least they will be shown).'.	s cr.	s << '!!!!!!!! Global Creep coefficients'.	s cr.	s << '|!! HP (1-4 players) | '. 	importer difficultyHP 		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.	s << '|!! Speed (1-4 players) | '.	importer difficultyHPSpeed		do: [ :c | s << c printString ] 		separatedBy: [ s << ' . ' ].	s cr.! !!GemTDGod methodsFor: 'public' stamp: 'ClementBera 2/28/2018 07:19' prior: 35458421!process	^[		importer := GemTDImporter new.		importer importAll.		self generate.		self clearExport.		self exportHeroAbilities.		self exportBaseTowers.		self exportAdvancedTowers.		self exportCreeps.		self exportStealable.		'Pillar files successfully generated']		on: Error 		do: [ :err |			 ]! !!GemTDGod methodsFor: 'public' stamp: 'ClementBera 2/28/2018 07:20' prior: 35551805!process	^[		importer := GemTDImporter new.		importer importAll.		self generate.		self clearExport.		self exportHeroAbilities.		self exportBaseTowers.		self exportAdvancedTowers.		self exportCreeps.		self exportStealable.		'Pillar files successfully generated' ]		on: Error 		do: [ :err |			'Error during pillar files generation: ' , err class name , ': ' , err messageText ]! !!GemTDGod methodsFor: 'public' stamp: 'ClementBera 2/28/2018 07:21' prior: 35552199!process	^[ importer := GemTDImporter new.		importer importAll.		self generate.		self clearExport.		self exportHeroAbilities.		self exportBaseTowers.		self exportAdvancedTowers.		self exportCreeps.		self exportStealable.		'Pillar files successfully generated' ]		on: Error 		do: [ :err |			'Error during pillar files generation: ' , err class name , ': ' , err messageText ]! !----QUIT----2018-02-28T07:21:20.200665+01:00 Pharo.image priorSource: 1990346!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 2/28/2018 08:06' prior: 34023406!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	s << '+file://creeps/' << codeName << '.png|width=15+'.	s cr.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! HP (1-4 players) | ' << hp.	s cr.	s << '|!! Movement (1-4 players) | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 2/28/2018 08:06' prior: 35564933!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	s << '+file://creeps/' << codeName << '.png|width=12+'.	s cr.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! HP (1-4 players) | ' << hp.	s cr.	s << '|!! Movement (1-4 players) | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 08:07' prior: 33912344!exportHeaderOn: s	| width |	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !----QUIT----2018-02-28T08:07:50.457098+01:00 Pharo.image priorSource: 1998633!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 08:12' prior: 35566113!exportHeaderOn: s	| width |	1halt.	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !!InspectorNavigator methodsFor: 'accessing' stamp: 'ClementBera 2/28/2018 08:14' prior: 27411291!defaultWindowModelClass	"Stdio stdout wantsLineEndConversion: true; converter.	Stdio stdout << self class name ; cr."	^ TickingWindowPresenter! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 08:17' prior: 35575304!exportHeaderOn: s	| width png |	1halt.	png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/' , picture , '.png').	width := png width * png height // 20000.	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 08:18' prior: 35575895!exportHeaderOn: s	| width png |	"1halt."	png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/' , picture , '.png').	width := 20 * png width // 600.	"width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]." 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !----SNAPSHOT----2018-02-28T08:18:25.071892+01:00 Pharo.image priorSource: 2011929!!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 08:19' prior: 35576372!exportHeaderOn: s	| width png |	"1halt."	png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/' , picture , '.png').	width := 20 * png width // 600.	"width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]." 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 08:21' prior: 35576927!exportHeaderOn: s	| width |	"png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/' , picture , '.png').	width := 20 * png width // 600."	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !----SNAPSHOT----2018-02-28T08:21:03.26019+01:00 Pharo.image priorSource: 2022323!----SNAPSHOT----2018-02-28T08:21:22.897905+01:00 Pharo.image priorSource: 2023335!----QUIT----2018-02-28T08:21:45.770243+01:00 Pharo.image priorSource: 2023418!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:43' prior: 35577398!exportHeaderOn: s	| width png ratio |	png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/' , picture , '.png').	ratio := png width // png height.	1halt.	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:44' prior: 35583952!exportHeaderOn: s	| width png ratio |	png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/' , picture , '.png').	ratio := png width / png height.	width := (8 * ratio) truncated.	"width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]." 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !!GemTDGod methodsFor: 'public' stamp: 'ClementBera 2/28/2018 10:45'!rawProcess	importer := GemTDImporter new.	importer importAll.	self generate.	self clearExport.	self exportHeroAbilities.	self exportBaseTowers.	self exportAdvancedTowers.	self exportCreeps.	self exportStealable.! !!GemTDGod methodsFor: 'public' stamp: 'ClementBera 2/28/2018 10:45' prior: 35552676!process	^[ self rawProcess.		'Pillar files successfully generated' ]		on: Error 		do: [ :err |			'Error during pillar files generation: ' , err class name , ': ' , err messageText ]! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:47' prior: 35584427!exportHeaderOn: s	| width png ratio |	png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/base/' , picture , '.png').	ratio := png width / png height.	width := (8 * ratio) truncated.	"width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]." 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:47' prior: 35585496!exportHeaderOn: s	| width png ratio |	png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/' , picture , '.png').	ratio := png width / png height.	width := (8 * ratio) truncated.	"width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]." 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:48' prior: 35586002!exportHeaderOn: s	| width |	"png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/' , picture , '.png').	ratio := png width / png height.	width := (8 * ratio) truncated."	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:49'!exportImage: url size: size on: s	s << '+file://' << url << '.png|width=' << size printString << '+'.	s cr.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:50' prior: 35565523!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportImage: 'creeps/' , codeName size: 12 on: s.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! HP (1-4 players) | ' << hp.	s cr.	s << '|!! Movement (1-4 players) | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:51' prior: 35586503!exportHeaderOn: s	| width |	"png := PNGReadWriter formFromFileNamed: ('../GemTD-Site/wards/' , picture , '.png').	ratio := png width / png height.	width := (8 * ratio) truncated."	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 10 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	self exportImage: 'wards/' , picture size: width on: s.! !----SNAPSHOT----2018-02-28T10:51:46.101328+01:00 Pharo.image priorSource: 2023502!----SNAPSHOT----2018-02-28T10:51:52.886096+01:00 Pharo.image priorSource: 2033702!!GemTDGod methodsFor: 'public' stamp: 'ClementBera 2/28/2018 10:52' prior: 35585219!process	^[ self rawProcess.		'Pillar files successfully generated' ]		on: Error 		do: [ :err |			'Error during pillar files generation: ' , err class name , ': ' , err messageText ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:54' prior: 34022859!difficultyPatchWith: importer	| coef |	"HP"	coef := importer difficultyHP.	baseHP := Integer readFrom: hp.	hp := ''.	(coef collect: [ :c | (c * baseHP) rounded ]) do: [ :each | hp := hp , each printString] separatedBy: [ hp := hp , ' . '].	"Speed"	coef := importer difficultyHPSpeed.	baseMS := Integer readFrom: ms.	ms := ''.	(coef collect: [ :c | (c * baseMS) rounded ]) do: [ :each | ms := ms , each printString] separatedBy: [ ms := ms , ' . '].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:55' prior: 35587180!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportImage: 'creeps/' , codeName size: 12 on: s.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! Base HP [1-4 players] | ' << baseHP printString << hp.	s cr.	s << '|!! Movement (1-4 players) | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:56' prior: 35589215!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportImage: 'creeps/' , codeName size: 12 on: s.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! Base HP [1-4 players] | ' << baseHP printString << ' [ ' << hp << ' ] '.	s cr.	s << '|!! Base Movement [1-4 players] | ' << baseMS printString << ' [ ' << ms << ' ] '.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 2/28/2018 10:59' prior: 35589824!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportImage: 'creeps/' , codeName size: 12 on: s.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! Base HP | ' << baseHP printString .	s cr.	s << '|!! HP (1-4 players) | ' << hp.	s cr.	s << '|!! Base Movement | ' << baseMS printString.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Movement (1-4 players) | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 2/28/2018 11:01' prior: 35590496!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportImage: 'creeps/' , codeName size: 12 on: s.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! HP (1-4 players) | ' << hp << ' ==[Base: ' << baseHP printString << ']=='.	s cr.	s << '|!! Movement (1-4 players) | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s << ' ==[Base: ' << baseMS printString << ']=='.	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 2/28/2018 11:03' prior: 35591252!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ].	self exportImage: 'creeps/' , codeName size: 12 on: s.	self exportNamesOn: s withAssoc: 'Lvl' -> level.	self exSplit: s.	s << '|!! HP (1-4 players) [Base] | ' << hp << ' ==[' << baseHP printString << ']=='.	s cr.	s << '|!! Movement (1-4 players) [Base] | ' << ms.	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s << ' ==[' << baseMS printString << ']=='.	s cr.	s << '|!! Armor | ' << armor. 	s cr.	s << '|!! Magic resistance | ' << res.	s cr.	self exportAbilitiesOn: s! !----SNAPSHOT----2018-02-28T11:04:55.494998+01:00 Pharo.image priorSource: 2033786!----QUIT----2018-02-28T11:07:08.001547+01:00 Pharo.image priorSource: 2038094!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!