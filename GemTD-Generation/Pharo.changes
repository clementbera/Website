'From Pharo7.0alpha of 26 January 2018 [Build information: Pharo-7.0+alpha.build.456.sha.63e0b3f29bf7f31011770e9738c537cbf48fca1f (32 Bit)] on 26 January 2018 at 10:56:32.555832 am'!----QUIT----2018-01-26T10:56:32.558479+01:00 Pharo7.0-32bit-63e0b3f.image priorSource: 0!----QUIT----2018-01-26T10:56:39.895516+01:00 Pharo7.0-32bit-63e0b3f.image priorSource: 183!"This scripts sets the correct versionInfo for loaded Pharo packages. The purpose of it is to ensure 
 iceberg will find an ancestor in history and it will correctly calculate differences."
| repo commit repositoryReference |

"Create repository"

repositoryReference := (Smalltalk os environment at: 'BOOTSTRAP_REPOSITORY' ifAbsent: ['..']) asFileReference.

repo := IceRepositoryCreator new
	location: repositoryReference;
	subdirectory: 'src';
	createRepository.

repo name: 'pharo'.
"get loaded commit"
commit := repo branch lastCommit.
"using commit as versionInfo for all loaded packages"
repo savedPackages do: [ :eachPackage | 
	MCWorkingCopy allManagers
		detect: [ :each | each packageName = eachPackage packageName ]
		ifFound: [ :each |
			each ancestry ancestors: { 
				IceProxyMCVersionInfo
					remoteUrl: 'git@github.com:pharo-project/pharo.git'
					packageName: each packageName
					commit: commit 
					message: ('Stub pointing to remote repository git@github.com:pharo-project/pharo.git. 
Add iceberg repository to have the real version here.')
					author: 'TheBootstrap' } ] ]!----End fileIn----!----QUIT----2018-01-26T10:56:40.71005+01:00 Pharo7.0-32bit-63e0b3f.image priorSource: 274!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!Object subclass: #GemTDImporter	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:18'!resourcesToImport	^ #(addon_english.txt		 addon_schinese.txt		 addon_tchinese.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:18'!scriptsToImport	^ #(addon_english.txt		 addon_schinese.txt		 addon_tchinese.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:21' prior: 33559316!scriptsToImport	^ #(vscripts/addon_game_mode.lua		 npc_abilities_custom.txt		 npc_units_custom.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:21' prior: 33559506!scriptsToImport	^ #(luaScript 	vscripts/addon_game_mode.lua		 ability 		npc_abilities_custom.txt		 units 		npc_units_custom.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:22' prior: 33559140!resourcesToImport	^ #(addon_english.txt		 addon_schinese.txt		 addon_tchinese.txt)! !----SNAPSHOT----2018-01-26T11:22:08.39568+01:00 Pharo.image priorSource: 1491!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:22'!importResources! !Object subclass: #GemTDParser	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:25'!parse: readStream	self skipSeparators.	^ self parseKeyValue! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:25' prior: 33560423!parse: rs	readStream := rs.	self skipSeparators.	^ self parseKeyValue! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:26'!skipSeparators	readStream peek isSeparator whileTrue: [ readStream next ].! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:28'!parseString	| ws |	ws := WriteStream on: (ByteString new: 20).	self assert: readStream peek = $".	readStream next. "skip ''"	[readStream peek = $"] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip ''"	^ ws contents	! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:29'!parseKeyValue	| key val |	key := self parseString.	self skipSeparators.	val := (readStream peek = $"		ifTrue: [ self parseString ]		ifFalse: [ self parseDict ]).	^ key -> val! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 11:31'!parseDict	| assoc dict |	dict := Dictionary new.	self assert: readStream peek = ${.	readStream next. "skip ${"	[self skipSeparators.	readStream peek = $} ] whileFalse: [ 		assoc := self parseKeyValue.		dict at: assoc key put: assoc value ].	readStream next. "skip $}"	^ dict! !----SNAPSHOT----2018-01-26T11:31:48.045157+01:00 Pharo.image priorSource: 5609!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:33' prior: 33560209!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id) asFileReference readStream ]! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:33' prior: 33561929!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id , '.txt') asFileReference readStream ]! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:33' prior: 33562167!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream ]! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:34' prior: 33559953!resourcesToImport	^ #('addon_english.txt'		 'addon_schinese.txt'		 'addon_tchinese.txt')! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 11:34' prior: 33562414!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream contents readStream ]! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 12:03'!skipUntilRelevant	[readStream peek = $" 		or: [ readStream peek = ${		or: [ readStream peek = $} ] ]] whileFalse: [ readStream next ].! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 12:03' prior: 33560577!parse: rs	readStream := rs.	self skipUntilRelevant.	^ self parseKeyValue! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 12:03' prior: 33561457!parseDict	| assoc dict |	dict := Dictionary new.	self assert: readStream peek = ${.	readStream next. "skip ${"	[self skipUntilRelevant.	readStream peek = $} ] whileFalse: [ 		assoc := self parseKeyValue.		dict at: assoc key put: assoc value ].	readStream next. "skip $}"	^ dict! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 12:04' prior: 33561199!parseKeyValue	| key val |	key := self parseString.	self skipUntilRelevant.	val := (readStream peek = $"		ifTrue: [ self parseString ]		ifFalse: [ self parseDict ]).	^ key -> val! !GemTDParser removeSelector: #skipSeparators!----SNAPSHOT----2018-01-26T12:04:19.299262+01:00 Pharo.image priorSource: 7312!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 12:05' prior: 33562851!importResources	^ self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ]! !----QUIT----2018-01-26T12:11:53.855358+01:00 Pharo.image priorSource: 9659!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-01-26T16:25:21.291105+01:00 Pharo.image priorSource: 10015!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-01-26T16:28:56.846216+01:00 Pharo.image priorSource: 13017!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!Object subclass: #GemTDGod	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!Object subclass: #GemTDGod	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!Object subclass: #GemTDImporter	instanceVariableNames: 'resources script'	classVariableNames: ''	package: 'GemTD-Analysis'!Object subclass: #GemTDImporter	instanceVariableNames: 'resources scripts'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:31' prior: 33564276!importResources	^ resources := (self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:31'!importNPC	^ resources := (self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:31'!npcToImport	^ #(npc_abilities_custom.txt		 npc_units_custom.txt)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:31' prior: 33559715!scriptsToImport	^ #(scripts/vscripts/addon_game_mode.lua)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:32' prior: 33574745!scriptsToImport	^ #(vscripts/addon_game_mode.lua)! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:32' prior: 33574304!importNPC	^ npcs := (self npcToImport collect: [ :id |		GemTDParser new parse: ('scripts/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:32'!importScript	^ scripts := (self scriptsToImport collect: [ :id |		('scripts/' , id ) asFileReference readStream binary contents asString ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:33'!importAll	self importResources.	self importNPC.	self importScript.! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:33' prior: 33575067!importNPC	^ npcs := (self npcToImport collect: [ :id |		GemTDParser new parse: ('scripts/npc' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:34' prior: 33575731!importNPC	^ npcs := (self npcToImport collect: [ :id |		GemTDParser new parse: ('scripts/npc/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:34' prior: 33574572!npcToImport	^ #('npc_abilities_custom.txt'		 'npc_units_custom.txt')! !!GemTDImporter methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:34' prior: 33574910!scriptsToImport	^ #('vscripts/addon_game_mode.lua')! !!GemTDGod methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:36'!process	| importer |	importer := GemTDImporter new.	importer importAll.	! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:36' prior: 33576597!process	| importer |	importer := GemTDImporter new.	importer importAll.	self generateTowers.! !Object subclass: #GemTDElement	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDElement subclass: #GemTDTower	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDTower subclass: #GemTDBaseTower	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDTower subclass: #GemTDAdvancedTower	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!----SNAPSHOT----2018-01-26T16:36:38.055292+01:00 Pharo.image priorSource: 16020!Object subclass: #GemTDElement	instanceVariableNames: 'codeName'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:36'!codeName	^ codeName! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:36'!codeName: anObject	codeName := anObject! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:37'!generateTowers	| towers |	towers := OrderedCollection new.	self units do: [ :u |		towers add: (self genTower: u) ].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:37'!units	^ importer units! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:38' prior: 33576765!process	importer := GemTDImporter new.	importer importAll.	self generateTowers.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:38'!units	1halt.	^ npcs at: 'DOTA'! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:39' prior: 33578295!units	^ (npcs at:'DOTAUnits') keys! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:39' prior: 33578132!process	importer := GemTDImporter new.	importer importAll.	self generate.! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:39'!generate	| towers |	towers := OrderedCollection new.	self units do: [ :u |		towers add: (self genTower: u) ].! !GemTDGod removeSelector: #generateTowers!!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:40' prior: 33578703!generate	| units |	self units do: [ :u |		units := ((self unitType: u) newFrom: u with: importer)].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:41'!unitType: u	1halt.	(importer units at: u)! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:41' prior: 33574030!importResources	^ resources := (self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ])! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:41' prior: 33576006!importNPC	^ npcs := ((self npcToImport collect: [ :id |		GemTDParser new parse: ('scripts/npc/' , id ) asFileReference readStream binary contents asString readStream ])) asDictionary! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:42' prior: 33578424!units	^ (npcs at:'DOTAUnits')! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:42' prior: 33578951!generate	| units |	self units keysDo: [ :u |		units := ((self unitType: u) newFrom: u with: importer)].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:42' prior: 33579952!generate	| units |	self units keysDo: [ :u |		u halt.		units := ((self unitType: u) newFrom: u with: importer)].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:43' prior: 33580150!generate	| units |	self units keysAndValuesDo: [ :u :details |		u halt.		units := ((self unitType: u) newFrom: u with: importer)].! !GemTDElement subclass: #GemTDCreep	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:46' prior: 33580358!generate	| units |	self units keysAndValuesDo: [ :u :details |		| cls |		cls := ((details at: 'Model') beginsWith:'models/items/wards/')			ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]			ifFalse: [ GemTDCreep ].				units := cls newFrom: u with: details importer: importer].! !!GemTDElement class methodsFor: 'instance creation' stamp: 'ClementBera 1/26/2018 16:46'!newFrom: aString with: aCollection importer: aGemTDImporter 	self shouldBeImplemented.! !!GemTDElement class methodsFor: 'instance creation' stamp: 'ClementBera 1/26/2018 16:47' prior: 33581111!newFrom: codeName with: details importer: importer 	^ self new 			codeName: codeName;		importWith: details importer: importer;		yourself! !!GemTDBaseTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:47'!importWith: details importer: importer! !!GemTDBaseTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:48' prior: 33581540!importWith: details importer: importer	"!!!! Chipped Sapphire / B1+file://wards/crystal_maiden_ward.png|width=10+|!! Code |!! English |!! S. Chinese |!! T. Chinese|| gemtd_b1 || Smalltalk || Hypra cool || baz|!! Damage |!! Rate |!! Range |!! Projectile Speed| 2	| 1 | 600 | 3000|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !Object subclass: #GemTDElement	instanceVariableNames: 'codeName enName schName tchName'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!enName	^ enName! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!enName: anObject	enName := anObject! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!schName	^ schName! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!schName: anObject	schName := anObject! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!tchName	^ tchName! !!GemTDElement methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:48'!tchName: anObject	tchName := anObject! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:48'!importWith: details importer: importer	! !!GemTDBaseTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:48' prior: 33581686!importWith: details importer: importer	super importWith: details importer: importer.	"!!!! Chipped Sapphire / B1+file://wards/crystal_maiden_ward.png|width=10+|!! Code |!! English |!! S. Chinese |!! T. Chinese|| gemtd_b1 || Smalltalk || Hypra cool || baz|!! Damage |!! Rate |!! Range |!! Projectile Speed| 2	| 1 | 600 | 3000|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !----SNAPSHOT----2018-01-26T16:49:00.102613+01:00 Pharo.image priorSource: 22896!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:49' prior: 33582930!importWith: details importer: importer		"!!!!|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:49' prior: 33583681!importWith: details importer: importer		"names (3 lang) + abilities.|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:49' prior: 33583078!importWith: details importer: importer	super importWith: details importer: importer.	"pic"! !!GemTDTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 16:50'!importWith: details importer: importer	super importWith: details importer: importer.	"	|!! Damage |!! Rate |!! Range |!! Projectile Speed| 2	| 1 | 600 | 3000"! !Object subclass: #GemTDElement	instanceVariableNames: 'codeName enName schName tchName abilities'	classVariableNames: ''	package: 'GemTD-Analysis'!GemTDElement subclass: #GemTDAbility	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!----SNAPSHOT----2018-01-26T16:50:32.156965+01:00 Pharo.image priorSource: 29073!----SNAPSHOT----2018-01-26T16:50:34.679073+01:00 Pharo.image priorSource: 30360!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:50' prior: 33583917!importWith: details importer: importer	1halt.		"names (3 lang) + abilities.|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!resources	^ resources! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!resources: anObject	^ resources := anObject! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!scripts	^ scripts! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!scripts: anObject	^ scripts := anObject! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!npcs	^ npcs! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 16:51'!npcs: anObject	^ npcs := anObject! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:51' prior: 33579269!importResources	resources := (self resourcesToImport collect: [ :id |		GemTDParser new parse: ('resource/' , id ) asFileReference readStream binary contents asString readStream ]).	self reworkResources.	^ resources! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:51'!reworkResources	resources halt.! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:52' prior: 33586272!reworkResources	| newDict |	newDict := Dictionary new.	resources do: [ :res |		res halt. ]! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:53' prior: 33586401!reworkResources	| newDict |	newDict := Dictionary new.	resources do: [ :res |		newDict at: (res value at: 'Language') put: (res value at: 'Tokens') ].	resources := newDict.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:53' prior: 33585050!importWith: details importer: importer	importer resources .	1halt.		"names (3 lang) + abilities.|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 16:54' prior: 33560878!parseString	| ws str |	ws := WriteStream on: (ByteString new: 20).	self assert: readStream peek = $".	readStream next. "skip ''"	[readStream peek = $"] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip ''"	str := ws contents.	str removeAll: Character null.	1halt.	^ str	! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/26/2018 16:55' prior: 33587151!parseString	| ws str |	ws := WriteStream on: (ByteString new: 20).	self assert: readStream peek = $".	readStream next. "skip ''"	[readStream peek = $"] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip ''"	^ ws contents reject: [ :e | e = Character null].		! !!GemTDImporter methodsFor: 'importing' stamp: 'ClementBera 1/26/2018 16:57' prior: 33586592!reworkResources	| newDict |	newDict := Dictionary new.	resources with: #(en sch tch)  do: [ :res :l |		newDict at: l put: (res value at: 'Tokens') ].	resources := newDict.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 16:59' prior: 33586866!importWith: details importer: importer	enName := (importer resources at: 'en') at: codeName ifAbsent: ['Resource imported incorrectly'].		1halt.		"names (3 lang) + abilities.|!! Ability |!! Ability Tooltip |!! Ability Code| slow 1 | slows enemy by 60 | tower_slow1"! !GemTDElement subclass: #GemTDAbility	instanceVariableNames: 'tooltip'	classVariableNames: ''	package: 'GemTD-Analysis'!Object subclass: #GemTDElement	instanceVariableNames: 'codeName name abilities'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:03' prior: 33588201!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i).		ab = '' ifFalse: [ 			abilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ]! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:03' prior: 33588827!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i).		ab = '' ifFalse: [ 			abilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].	hiddenAbilities := OrderedCollection new.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:03' prior: 33589315!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i).		ab = '' ifFalse: [ 			abilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].	hiddenAbilities := OrderedCollection new.	9 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i).		ab = '' ifFalse: [ 			hiddenAbilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:03' prior: 33589847!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			abilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].	hiddenAbilities := OrderedCollection new.	9 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			hiddenAbilities add: [ GemTDAbility newFrom: ab importer: importer ] ] ].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 17:05' prior: 33580699!generate	| units |	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		(u name beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ GemTDCreep ].		units add: (cls newFrom: u with: details importer: importer)]].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 17:05' prior: 33591262!generate	| units |	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ GemTDCreep ].		units add: (cls newFrom: u with: details importer: importer)]].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 17:05' prior: 33578551!process	importer := GemTDImporter new.	importer importAll.	self generate.	1halt.! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/26/2018 17:05' prior: 33591752!generate	units := OrderedCollection new.	self units keysAndValuesDo: [ :u :details |		| cls |		(u beginsWith: 'gemtd') ifTrue: [ 			cls := ((details at: 'Model') beginsWith:'models/items/wards/')				ifTrue: [ u last = $1 ifTrue: [ GemTDBaseTower ] ifFalse: [ GemTDAdvancedTower ] ]				ifFalse: [ GemTDCreep ].		units add: (cls newFrom: u with: details importer: importer)]].! !!GemTDTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:06' prior: 33584358!importWith: details importer: importer	super importWith: details importer: importer.	1halt.		"	|!! Damage |!! Rate |!! Range |!! Projectile Speed| 2	| 1 | 600 | 3000"! !!GemTDTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:08' prior: 33592890!importWith: details importer: importer	super importWith: details importer: importer.	damage := details at: 'AttackDamageMin'.	range := details at: 'AttackRange'.	rate := details at: 'AttackRate'.	projectileSpeed := details at: 'ProjectileSpeed'.! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:08' prior: 33584178!importWith: details importer: importer	super importWith: details importer: importer.	"pic"	1halt.! !GemTDElement subclass: #GemTDTower	instanceVariableNames: 'damage range rate projectileSpeed picture'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:10' prior: 33593505!importWith: details importer: importer	super importWith: details importer: importer.	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDAdvancedTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:10'!importWith: details importer: importer	super importWith: details importer: importer.	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:10' prior: 33594110!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:11' prior: 33594367!importWith: details importer: importer	super importWith: details importer: importer.	picture := codeName.! !----SNAPSHOT----2018-01-26T17:11:55.474281+01:00 Pharo.image priorSource: 30442!----SNAPSHOT----2018-01-26T17:11:58.906938+01:00 Pharo.image priorSource: 40310!----SNAPSHOT----2018-01-26T17:12:00.937399+01:00 Pharo.image priorSource: 40392!----SNAPSHOT----2018-01-26T17:12:04.797246+01:00 Pharo.image priorSource: 40474!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:12' prior: 33590545!importWith: details importer: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			abilities add: (GemTDAbility newFrom: ab importer: importer) ] ].	hiddenAbilities := OrderedCollection new.	9 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			hiddenAbilities add: (GemTDAbility newFrom: ab importer: importer ) ] ].! !!GemTDAbility class methodsFor: '*Alien-Core' stamp: 'ClementBera 1/26/2018 17:12'!newFrom: aString importer: aGemTDImporter 	self shouldBeImplemented.! !!GemTDAbility class methodsFor: '*Alien-Core' stamp: 'ClementBera 1/26/2018 17:13' prior: 33595874!newFrom: codeName importer: importer	^ self new 				codeName: codeName;			importWith: importer;			yourself ! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:13'!importWith: aGemTDImporter 	self shouldBeImplemented.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:13'!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Resource imported incorrectly']) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/26/2018 17:13' prior: 33595164!importWith: details importer: importer	self importNameWithImporter: importer.	abilities := OrderedCollection new.	1 to: 8 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			abilities add: (GemTDAbility newFrom: ab importer: importer) ] ].	hiddenAbilities := OrderedCollection new.	9 to: 16 do: [ :i |		| ab |		ab := (details at: 'Ability' , i printString).		ab = '' ifFalse: [ 			hiddenAbilities add: (GemTDAbility newFrom: ab importer: importer ) ] ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:14' prior: 33596248!importWith: importer 	self importNameWithImporter: importer.	! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:14' prior: 33597280!importWith: importer 	1halt.	self importNameWithImporter: importer.	! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/26/2018 17:16' prior: 33597449!importWith: importer 	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Resource imported incorrectly']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Resource imported incorrectly']) ].! !----QUIT----2018-01-26T17:16:48.058291+01:00 Pharo.image priorSource: 40556!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:20' prior: 33597626!importWith: importer 	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Resource imported incorrectly']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Resource imported incorrectly']) ].	self! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:21' prior: 33601147!importWith: importer 	name := Dictionary s.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Resource imported incorrectly']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Resource imported incorrectly']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:21' prior: 33601671!importWith: importer 	name := Dictionary s.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:21' prior: 33596383!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: ['Unavailable']) ].! !----QUIT----2018-01-27T10:22:13.409502+01:00 Pharo.image priorSource: 43609!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:22' prior: 33602187!importWith: importer 	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 10:24' prior: 33592237!process	importer := GemTDImporter new.	importer importAll.	self generate.	self exportBaseTowers.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:24'!exportBaseTowers	self shouldBeImplemented.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:25' prior: 33606580!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	units do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].	1halt.! !!GemTDBaseTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:25'!exportOn: s	! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:25'!exportOn: s! !GemTDBaseTower removeSelector: #exportOn:!!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:26' prior: 33593860!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:26' prior: 33607183!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	"base/B"	picture := ((details at: 'Model') splitOn: '/') last allButLast: 5.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:31' prior: 33607029!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=10+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (name at: 'sch')		<< ' | ' <<  (name at: 'tch').	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ]! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:34'!shortExportOn: s	s << '|!! Ability Code |!! Name (en) |!! Tooltip (en) |!! Name (sch) |!! Tooltip (sch) |!! Name (tch) |!! Tooltip (tch)'.	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en')		<< ' | ' << (name at: 'sch')		<< ' | ' << (tooltip at: 'sch')		<< ' | ' << (name at: 'tch')		<< ' | ' << (tooltip at: 'tch').	s cr.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:34' prior: 33606712!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	units do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].	s contents.! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:35' prior: 33607444!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'base/' , (codeName at: (codeName indexOf: $_) + 1) asUppercase asString! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:36' prior: 33594632!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:36' prior: 33608829!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	units do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].	s contents.	1halt.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:36' prior: 33609597!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	self orderedBaseTowers do: [ :u |  u exportOn: s ].	s contents.	1halt.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:36'!orderedBaseTowers	self shouldBeImplemented.! !!GemTDBaseTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 10:38' prior: 33609114!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'base/' , (codeName at: 7) asUppercase asString! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:39' prior: 33610128!orderedBaseTowers	| baseTowers |	baseTowers := units select: [:u | u class = GemTDBaseTower ].	baseTowers sort: [ :a :b |		"comp type B, G, etc."		(a codeName at: 7) = (b codeName at: 7)			ifFalse: [ (a codeName at: 7) <= (b codeName at: 7) ]			ifTrue: [ a size < b size ]		 ].	^ baseTowers! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:40' prior: 33610505!orderedBaseTowers	| baseTowers |	baseTowers := units select: [:u | u class = GemTDBaseTower ].	baseTowers sort: [ :a :b |		"comp type B, G, etc."		(a codeName at: 7) = (b codeName at: 7)			ifFalse: [ (a codeName at: 7) <= (b codeName at: 7) ]			ifTrue: [ a codeName size < b codeName size ]		 ].	^ baseTowers! !----SNAPSHOT----2018-01-27T10:40:44.631649+01:00 Pharo.image priorSource: 48401!----SNAPSHOT----2018-01-27T10:40:50.647843+01:00 Pharo.image priorSource: 56781!----SNAPSHOT----2018-01-27T10:41:05.095765+01:00 Pharo.image priorSource: 56863!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:43' prior: 33609880!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	self orderedBaseTowers do: [ :u |  u exportOn: s ].	'export/baseTowers.pillar' asFileReference writeStream nextPutAll: s contents.	1halt.! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:44' prior: 33607707!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (name at: 'sch')		<< ' | ' <<  (name at: 'tch').	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ]! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:45' prior: 33605939!importWith: importer 	name := Dictionary new.	1halt.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:48' prior: 33612566!importWith: importer 	| details |	name := Dictionary new.	details := (importer npcs at: 'DOTAAbilities') at: codeName.	1halt.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:51' prior: 33613056!importWith: importer 	| details |	name := Dictionary new.	details := (importer npcs at: 'DOTAAbilities') at: codeName.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 10:51' prior: 33613621!importWith: importer 	| details |	name := Dictionary new.	"details := (importer npcs at: 'DOTAAbilities') at: codeName."	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:52' prior: 33611545!exportBaseTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Base Towers'.	s cr.	self orderedBaseTowers do: [ :u |  u exportOn: s ].	'export/baseTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 10:52' prior: 33606407!process	importer := GemTDImporter new.	importer importAll.	self generate.	self exportBaseTowers.	self exportAdvancedTowers.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:52'!exportAdvancedTowers	self shouldBeImplemented.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:53' prior: 33615247!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	self units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:53' prior: 33615383!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	self units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].	1halt.	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:54' prior: 33615746!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].	1halt.	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 10:54' prior: 33616117!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !----QUIT----2018-01-27T10:58:23.631402+01:00 Pharo.image priorSource: 56945!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:03' prior: 33608367!shortExportOn: s	s << '|!! Ability Code |!! Name (en) |!! Tooltip (en) |!! Other Languages' "Name (sch) |!! Tooltip (sch) |!! Name (tch) |!! Tooltip (tch)'".	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en')		<< ' | ' << 'Disabled'		"<< ' | ' << (name at: 'sch')		<< ' | ' << (tooltip at: 'sch')		<< ' | ' << (name at: 'tch')		<< ' | ' << (tooltip at: 'tch')".	s cr.! !----QUIT----2018-01-27T11:03:33.487905+01:00 Pharo.image priorSource: 62323!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT----2018-01-27T11:04:21.174296+01:00 Pharo.image priorSource: 65838!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:14' prior: 33611878!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ]! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:14' prior: 33626364!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	abilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:14' prior: 33627063!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:15'!shortExportHiddenOn: s	s << '|!! Hidden Ability Code |!! Name (en) |!! Tooltip (en) |!! Other Languages' "Name (sch) |!! Tooltip (sch) |!! Name (tch) |!! Tooltip (tch)'".	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en')		<< ' | ' << 'Disabled'		"<< ' | ' << (name at: 'sch')		<< ' | ' << (tooltip at: 'sch')		<< ' | ' << (name at: 'tch')		<< ' | ' << (tooltip at: 'tch')".	s cr.! !----SNAPSHOT----2018-01-27T11:15:11.660114+01:00 Pharo.image priorSource: 68841!!GemTDCreep methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 11:16'!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:16'!importWith: details importer: importer	super importWith: details importer: importer.	! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:16' prior: 33629651!importWith: details importer: importer	super importWith: details importer: importer.	1halt.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:18' prior: 33629829!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	ms := details at: 'MovementSpeed (NumPlayer factor)'.	res := details at: 'MagicalResistance'.	1halt.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:19' prior: 33630013!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed (NumPlayer factor)'.	res := details at: 'MagicalResistance'.	1halt.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:19' prior: 33630324!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed (NumPlayer factor)'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.	1halt.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:19' prior: 33630678!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed (NumPlayer factor)'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:21' prior: 33629163!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement |!! Simplified Chinese |!! Traditional Chinese'.	s cr.		abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:21' prior: 33631071!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:22' prior: 33631456!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (*NumPlayer factor) |!! Armor |!! Magic resistance'.	s cr.	1halt.	s 		<< '| ' << level 		<< ' | ' <<  ms << '(' << mc << ')'		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:22' prior: 33615046!process	importer := GemTDImporter new.	importer importAll.	self generate.	self exportBaseTowers.	self exportAdvancedTowers.	self exportCreeps.! !GemTDGod removeSelector: #unitType:!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:23'!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:23'!orderedCreeps	| creeps |	creeps := units select: [:u | u class = GemTDCreep ].	creeps sort: [ :a :b |		a level asInteger < b level asInteger		 ].	^ creeps! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!level	^ level! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!level: anObject	level := anObject! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!ms	^ ms! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!ms: anObject	ms := anObject! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!res	^ res! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!res: anObject	res := anObject! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!mc	^ mc! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!mc: anObject	mc := anObject! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!armor	^ armor! !!GemTDCreep methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 11:24'!armor: anObject	armor := anObject! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:24' prior: 33632414!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (*NumPlayer factor) |!! Armor |!! Magic resistance'.	s cr.	1halt.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:24' prior: 33634908!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (*NumPlayer factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:27' prior: 33635658!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:27' prior: 33636400!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiplied by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:27' prior: 33637131!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:29' prior: 33637876!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:31' prior: 33633379!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	1halt.	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:31' prior: 33639367!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:35' prior: 33638619!exportOn: s	(name at: 'en') = 1 ifTrue: [ ^ self ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:35' prior: 33639989!exportOn: s	(name at: 'en') = 'Unavailable' ifTrue: [ ^ self ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:35' prior: 33632048!importWith: details importer: importer	1halt.	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 11:36' prior: 33614178!importWith: importer 	| details |	1halt.	name := Dictionary new.	"details := (importer npcs at: 'DOTAAbilities') at: codeName."	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDAbility methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 11:42' prior: 33641972!importWith: importer 	| details |	name := Dictionary new.	"details := (importer npcs at: 'DOTAAbilities') at: codeName."	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName ifAbsent: ['Unavailable']) ].	tooltip := Dictionary new.	#(en sch tch) do: [ :l |		tooltip at: l put: ((importer resources at: l) at: 'DOTA_Tooltip_Ability_' , codeName , '_Description' ifAbsent: ['Unavailable']) ].! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:42' prior: 33641583!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !----QUIT----2018-01-27T11:42:33.417816+01:00 Pharo.image priorSource: 74564!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:45' prior: 33640780!exportOn: s	(name at: 'en') = 'Unavailable' ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !----QUIT----2018-01-27T11:45:35.669432+01:00 Pharo.image priorSource: 88929!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:47' prior: 33646452!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << '(flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:48' prior: 33639681!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: Some creeps may not be used by default in the game.'	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:48' prior: 33651124!exportCreeps	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Creeps'.	s cr.	s << 'Note: Some creeps may not be used by default in the game.'.	s cr.	self orderedCreeps do: [ :u |  u exportOn: s ].	'export/creeps.pillar' asFileReference writeStream nextPutAll: s contents.! !----QUIT----2018-01-27T11:48:23.239948+01:00 Pharo.image priorSource: 92752!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:49' prior: 33650275!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Level |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << level 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !----QUIT----2018-01-27T11:49:26.643546+01:00 Pharo.image priorSource: 97365!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:51' prior: 33643083!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:52' prior: 33658743!importWith: details importer: importer	super importWith: details importer: importer.	1halt.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.	hp := details at: 'StatusHealth'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:52' prior: 33659117!importWith: details importer: importer	super importWith: details importer: importer.	level := details at: 'Level'.	mc := details at: 'MovementCapabilities'.	ms := details at: 'MovementSpeed'.	res := details at: 'MagicalResistance'.	armor := details at: 'ArmorPhysical'.	hp := details at: 'StatusHealth'.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:52' prior: 33654888!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! HP |!! Movement (Multiply by factor) |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !----SNAPSHOT----2018-01-27T11:52:37.132638+01:00 Pharo.image priorSource: 101220!----QUIT----2018-01-27T11:52:57.7912+01:00 Pharo.image priorSource: 106253!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 11:53' prior: 33659927!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.	s << '|!! Base HP |!! Base Movement |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !----SNAPSHOT----2018-01-27T11:53:46.464414+01:00 Pharo.image priorSource: 106336!----SNAPSHOT----2018-01-27T11:54:02.426605+01:00 Pharo.image priorSource: 110173!----QUIT----2018-01-27T11:54:05.06218+01:00 Pharo.image priorSource: 110256!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-01-27T12:01:44.077057+01:00 Pharo.image priorSource: 110339!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-01-27T12:02:38.238152+01:00 Pharo.image priorSource: 110339!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 13:40' prior: 33609387!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:40'!combinations	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:45' prior: 33674106!combinations	combinations ifNotNil: [ ^ combinations ].	combinations := Dictionary new.	self parseCombinations: 'GameRules.gemtd_merge'.	self parseCombinations: 'GameRules.gemtd_merge_secret'.	^ combinations! !Object subclass: #GemTDLuaParser	instanceVariableNames: 'readStream'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDLuaParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 13:47'!parse: rs	readStream := rs.	self skipUntilRelevant.	^ self parseKeyValue! !GemTDParser subclass: #GemTDLuaParser	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:48'!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	1halt.! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 13:48' prior: 33673896!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	importer combinations.	1halt.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:49' prior: 33674650!parse: rs	result := Dictionary new.	readStream := rs.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ self parseCombination ]! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:49'!skipSeparators	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:50' prior: 33675601!skipSeparators	[readStream peek isSeparator] whileTrue: [ readStream next ].! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:50'!parseCombination	self ! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:51' prior: 33675870!parseCombination	| ws str |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = $=] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:51'!parseRes	| ws str |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = $=] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:52' prior: 33675989!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:55'!parseCombo	| str1 ws |	ws := WriteStream on: (Array new: 5).	[readStream peek = ${] whileFalse: [ readStream next].	readStream next. "skip {"	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ ws nextPut: self parseString ].	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:55' prior: 33676798!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	[readStream peek = ${] whileFalse: [ readStream next].	readStream next. "skip {"	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ ws nextPut: self parseString ].	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:55' prior: 33676635!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	result at: res put: combo! !----SNAPSHOT----2018-01-27T13:56:22.607608+01:00 Pharo.image priorSource: 110339!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:57' prior: 33674924!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	GemTDLuaParser new parse: (scripts first copyFrom: i + 2 to: i + 100000) readStream.	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:58' prior: 33677841!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	GemTDLuaParser new parse: (scripts first copyFrom: i + 4 to: i + 100000) readStream.	1halt.! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 13:58' prior: 33678128!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.	1halt.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:58' prior: 33675380!parse: rs	result := Dictionary new.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ self parseCombination ]! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 13:59' prior: 33677178!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	[readStream peek = ${] whileFalse: [ readStream next].	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ ws nextPut: self parseString ].	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:00' prior: 33678977!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	[readStream peek = ${] whileFalse: [ readStream next].	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: self parseString ].	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:01' prior: 33679374!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseString.	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: self parseString ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:04' prior: 33677553!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	result at: res put: combo.	res = 'gemtd_haibao' ifTrue: [ 1halt ].! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:05' prior: 33680363!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	result at: res put: combo.	res trim = 'gemtd_haibao' ifTrue: [ 1halt ].! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:06' prior: 33678697!parse: rs	result := Dictionary new.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self parseCombination.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]	]! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 14:06' prior: 33678415!parseCombinations: sub	| i |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:07' prior: 33680609!parseCombination	| res combo |	res := self parseRes.	combo := self parseCombo.	result at: res put: combo.! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 14:07' prior: 33680860!parse: rs	result := Dictionary new.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self parseCombination.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]].	^ result! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 14:07' prior: 33681222!parseCombinations: sub	| i combos |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	combos := GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.	combos keysAndValuesDo: [ :k :v |		combinations at: k put: v ]	 ! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 14:08' prior: 33674223!combinations	combinations ifNotNil: [ ^ combinations ].	combinations := Dictionary new.	self parseCombinations: 'GameRules.gemtd_merge'.	self parseCombinations: 'GameRules.gemtd_merge_secret'.	1halt.	^ combinations! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 14:08' prior: 33682432!combinations	combinations ifNotNil: [ ^ combinations ].	combinations := Dictionary new.	self parseCombinations: 'GameRules.gemtd_merge'.	self parseCombinations: 'GameRules.gemtd_merge_secret'.	^ combinations! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:08' prior: 33675131!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:09' prior: 33683064!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ]! !!GemTDAdvancedTower methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 14:09'!exportOn: s	super exportOn: s.	1halt.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:13' prior: 33683613!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).		1halt.! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:14'!enNameFor: key importer: importer	^ (importer resources at: 'en') at: codeName ifAbsent: ['Unavailable']! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:14' prior: 33683751!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.	1halt.! !!GemTDAdvancedTower methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:15' prior: 33683333!importWith: details importer: importer	super importWith: details importer: importer.	picture := 'advanced/' , codeName.	combo := importer combinations at: codeName ifAbsent: [ #() ].	comboNames := combo collect: [ :c | self enNameFor: c importer: importer ].! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:15' prior: 33684461!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.	1halt.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:15' prior: 33685355!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:16' prior: 33686215!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:16' prior: 33687067!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----SNAPSHOT----2018-01-27T14:16:59.794337+01:00 Pharo.image priorSource: 123232!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 14:17' prior: 33684257!enNameFor: key importer: importer	^ (importer resources at: 'en') at: key ifAbsent: ['Unavailable']! !----QUIT----2018-01-27T14:18:21.211368+01:00 Pharo.image priorSource: 134282!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!----QUIT/NOSAVE----2018-01-27T14:19:59.41277+01:00 Pharo.image priorSource: 134562!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:20' prior: 33687920!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----SNAPSHOT----2018-01-27T14:20:49.382902+01:00 Pharo.image priorSource: 134562!----QUIT----2018-01-27T14:20:53.48445+01:00 Pharo.image priorSource: 141482!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:54'!exportNamesOn: s	s << '|!! Code |!! English |!! Simplified Chinese |!! Traditional Chinese'.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:54' prior: 33663858!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	self exportNamesOn: s.	s << '|!! Base HP |!! Base Movement |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:55'!exportAbilitiesOn: s	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportOn: s ]! !!GemTDCreep methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:55' prior: 33699422!exportOn: s	((name at: 'en') = 'Unavailable' or: [ (name at: 'en') = '' ]) ifTrue: [ ^ self ]. 	s << '!!!! ' << level << '. ' << (name at: 'en') capitalized.	s cr.	self exportNamesOn: s.	s << '|!! Base HP |!! Base Movement |!! Armor |!! Magic resistance'.	s cr.	s 		<< '| ' << hp 		<< ' | ' <<  ms. 	mc = 'DOTA_UNIT_CAP_MOVE_FLY' ifTrue: [ s << ' (flying)' ].	s		<< ' | ' <<  armor		<< ' | ' <<  res.	s cr.	self exportAbilitiesOn: s! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:55' prior: 33627816!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	abilities do: [ :ab |		ab shortExportOn: s ].	hiddenAbilities do: [ :ab |		ab shortExportHiddenOn: s ]! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:55' prior: 33700776!exportOn: s 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=8+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	self exportAbilitiesOn: s! !----SNAPSHOT----2018-01-27T14:55:56.519498+01:00 Pharo.image priorSource: 141565!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:56' prior: 33699074!exportNamesOn: s	s << '|!! Code |!! English |!! Short name |!! '.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  "(name at: 'tch')" 'Disabled'.	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:56' prior: 33701865!exportNamesOn: s	s << '|!! Code |!! English |!! Short name |!! '.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  "(name at: 'sch')" 'Disabled'		<< ' | ' <<  ''.	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 14:56' prior: 33702188!exportNamesOn: s	s << '|!! Code |!! English |!! Short name |!! '.	s cr.	1halt.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  1		<< ' | ' <<  ''.	s cr.! !----QUIT----2018-01-27T14:57:14.799283+01:00 Pharo.image priorSource: 147260!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:00'!initialsFrom: n	| s |	s := n splitOn: '/'.	s size = 2 ifTrue: [ s at: 2 ].	1halt.	^ (s substrings collect: [ :e | e first capitalized ])! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:00' prior: 33702484!exportNamesOn: s	s << '|!! Code |!! English |!! Short name |!! '.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (self initialsFrom: (name at: 'en')) 		<< ' | ' <<  ''.	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:01' prior: 33705748!initialsFrom: n	| s |	s := n splitOn: '/'.	s size = 2 ifTrue: [ s at: 2 ].	self assert: s size = 1.	^ String newFrom: (s first substrings collect: [ :e | e first asUppercase ])  ! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:01' prior: 33706286!initialsFrom: n	| s |	s := n splitOn: '/'.	s size = 2 ifTrue: [ ^ s at: 2 ].	self assert: s size = 1.	^ String newFrom: (s first substrings collect: [ :e | e first asUppercase ])  ! !GemTDAbility removeSelector: #shortExportHiddenOn:!!GemTDAbility methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:02' prior: 33619848!shortExportOn: s	s << '|!! Ability Code |!! Ability English |!! Tooltip English |!! Other' "Name (sch) |!! Tooltip (sch) |!! Name (tch) |!! Tooltip (tch)'".	s cr.	s 		<< '| ' << codeName		<< ' | ' << (name at: 'en')		<< ' | ' << (tooltip at: 'en')		<< ' | ' << ''		"<< ' | ' << (name at: 'sch')		<< ' | ' << (tooltip at: 'sch')		<< ' | ' << (name at: 'tch')		<< ' | ' << (tooltip at: 'tch')".	s cr.! !!GemTDElement methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:04' prior: 33705982!exportNamesOn: s	s << '|!! Code |!! English |!! Initials |!! '.	s cr.	s 		<< '| ' << codeName 		<< ' | ' <<  (name at: 'en') 		<< ' | ' <<  (self initialsFrom: (name at: 'en')) 		<< ' | ' <<  ''.	s cr.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:06' prior: 33695104!exportOn: s	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	super exportOn: s.	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----SNAPSHOT----2018-01-27T15:06:43.947852+01:00 Pharo.image priorSource: 148238!----QUIT----2018-01-27T15:07:06.384014+01:00 Pharo.image priorSource: 154082!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:11' prior: 33707704!exportOn: s	((combo isNil or: [ combo size < 2 ]) and: [ (name at: 'en') = 'Unavailable' ])		ifTrue: [ ^ self ].	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 15:12' prior: 33711697!exportOn: s	((combo isNil or: [ combo size < 2 ]) and: [ (name at: 'en') = 'Unavailable' ])		ifTrue: [ ^ self ].	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----SNAPSHOT----2018-01-27T15:12:06.446999+01:00 Pharo.image priorSource: 154165!----SNAPSHOT----2018-01-27T15:12:08.761629+01:00 Pharo.image priorSource: 159187!----SNAPSHOT----2018-01-27T15:12:11.758573+01:00 Pharo.image priorSource: 159270!!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 15:13' prior: 33633120!process	importer := GemTDImporter new.	importer importAll.	self generate.	self clearExport.	self exportBaseTowers.	self exportAdvancedTowers.	self exportCreeps.! !!GemTDGod methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 15:14'!clearExport	'export' asFileReference children do: #delete! !----QUIT----2018-01-27T15:19:10.746718+01:00 Pharo.image priorSource: 159353!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:02' prior: 33616483!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	self orderedAdvancedTowers do: [ :u | u exportOn: s ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:05'!orderedAdvancedTowersFor: key with: order	| baseTowers |	baseTowers := units select: [:u | u class = GemTDAdvancedTower ].		^ baseTowers! !GemTDGod removeSelector: #exportAdvancedTowers!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:05'!exportAdvancedTowers	| s |	s := WriteStream on: (WideString new: 10000).	s << '!! Combined Towers'.	s cr.	self orderedAdvancedTowers do: [ :u | u exportOn: s ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !GemTDLuaParser subclass: #GemTDKikooParser	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDKikooParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 16:07'!parseRes	| ws str |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = ${] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:07' prior: 33724251!parseRes	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = ${] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:08' prior: 33724580!parseRes	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = Character space] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:08'!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseRes.	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: self parseRes ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:10' prior: 33723785!exportAdvancedTowers	| s order |	s := WriteStream on: (WideString new: 10000).	order := GemTDKikooParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		towerCodes do: [ :tc |			units halt.			 ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:12' prior: 33725755!exportAdvancedTowers	| s order printed others|	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDKikooParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | each class = GemTDAdvancedTower and: [ (printed includes: each codeName) not ] ].	1halt.	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:14' prior: 33726244!exportAdvancedTowers	| s order printed others|	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDKikooParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | each class = GemTDAdvancedTower and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !!GemTDAdvancedTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 16:14' prior: 33712706!exportOn: s	super exportOn: s.	combo ifNil: [ ^ self ].	combo size < 2 ifTrue: [ ^ self ] .	s << '|!! Combination |!! Combination |!! Combination |!! Combination'.	s cr.	s 		<< '| ' << comboNames first		<< ' | ' << comboNames second		<< ' | ' << (comboNames size < 3 ifTrue: [ '' ] ifFalse: [ comboNames at: 3 ])		<< ' | ' << (comboNames size < 4 ifTrue: [ '' ] ifFalse: [ 			comboNames size = 5 			ifTrue: [ (comboNames at: 4) , ' & ' , (comboNames at: 5) ]			ifFalse: [comboNames at: 4 ] ]).	s cr.	s 		<< '| ' << combo first		<< ' | ' << combo second		<< ' | ' << (combo size < 3 ifTrue: [ '' ] ifFalse: [ combo at: 3 ])		<< ' | ' << (combo size < 4 ifTrue: [ '' ] ifFalse: [ 			combo size = 5 			ifTrue: [ (combo at: 4) , ' & ' , (combo at: 5) ]			ifFalse: [combo at: 4 ] ]).	s cr.! !----QUIT----2018-01-27T16:15:25.385869+01:00 Pharo.image priorSource: 159829!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:22'!parseDirect	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = Character space] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:22' prior: 33725227!parseCombo	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	self skipSeparators.	ws nextPut: self parseDirect.	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: self parseDirect ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:23' prior: 33724905!parseRes	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = ${] whileFalse: [ 		ws nextPut: readStream next].	readStream next. "skip equal"	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:23' prior: 33732613!parseRes	| ws |	ws := WriteStream on: (ByteString new: 20).	[readStream peek = ${] whileFalse: [ 		ws nextPut: readStream next].	^ (ws contents reject: [ :e | e = Character null]) trimBoth.	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:24' prior: 33681701!parse: rs	result := self dictClass new.	readStream := rs.	self skipUntilRelevant.	readStream next.	[self skipSeparators.	 readStream peek = $} ] whileFalse: [ 	  self parseCombination.	  self skipSeparators.	  readStream peek = $, ifTrue: [ readStream next ]].	^ result! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:24'!dictClass 	^ Dictionary! !!GemTDKikooParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 16:24'!dictClass 	^ OrderedDictionary! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:24'!parseComboWith: parseSelector	| ws |	ws := WriteStream on: (Array new: 5).	self skipUntilRelevant.	self assert: readStream peek = ${.	readStream next. "skip {"	self skipSeparators.	ws nextPut: (self perform: parseSelector).	[self skipSeparators.	readStream peek = $,] whileTrue: [ 	readStream next. "skip ,"	self skipSeparators.	ws nextPut: (self perform: parseSelector) ].	self skipUntilRelevant.	self assert: readStream peek = $}.	readStream next. "skip }"	^ ws contents	! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:25' prior: 33679822!parseCombo	self parseComboWith: #parseString! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:25' prior: 33732070!parseCombo	self parseComboWith: #parseDirect! !----SNAPSHOT----2018-01-27T16:25:14.746883+01:00 Pharo.image priorSource: 174214!!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 16:26' prior: 33682073!parseCombinations: sub	| i combos |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	combos := GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.	1halt.	combos keysAndValuesDo: [ :k :v |		combinations at: k put: v ]	 ! !!GemTDImporter methodsFor: 'accessing' stamp: 'ClementBera 1/27/2018 16:26' prior: 33734772!parseCombinations: sub	| i combos |	i := scripts first indexOfSubCollection: sub.	i := i + sub size.	combos := GemTDLuaParser new parse: (scripts first copyFrom: i to: i + 100000) readStream.	combos keysAndValuesDo: [ :k :v |		combinations at: k put: v ]	 ! !!GemTDLuaParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:27' prior: 33734404!parseCombo	^ self parseComboWith: #parseString! !!GemTDKikooParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 16:27' prior: 33734547!parseCombo	^ self parseComboWith: #parseDirect! !----QUIT----2018-01-27T16:27:44.828854+01:00 Pharo.image priorSource: 180163!| evalBlock pwd |

pwd := '13V',(Character value: 33) asString,'@7h4n5'.

evalBlock := [:block :debugInfo |
	block 
		on: Exception 
		do: [ :ex | FileStream stdout 
			<< debugInfo;
			<< ' could not be changed : ';
			<< ex class name;
			<< ' ';
			<< ex messageText;
			cr ] ].

evalBlock value: [SystemVersion current major >= 7		ifTrue: [PharoLightTheme beCurrent]		ifFalse: [Pharo3Theme beCurrent]] value: 'White theme'.

evalBlock value: [Author fullName: 'ClementBera'] value: 'Author'.

evalBlock 
	value: [Nautilus inlineCritiques: true.
			QASettings nautilusPlugin: false] 
	value: 'Nautilus'.
	
"evalBlock 
	value: [ | w |
	w := Workspace openLabel: 'FF-Helper'.
	
	w contents: '
| target repo fork fileTreeRepository repositoryGroup |
target := ''/Users/clementbera/pharo'' asFileReference.
repo := IceRepositoryCreator new location: target; subdirectory:''src''; createRepository.
repo register.

fork := repo remotes detect: [:remote|remote remoteName = #clementbera].
repo pushRemote: fork; pullRemote: repo origin.

repo checkoutBranch: ''development''.	
repo backend pullFrom: repo origin.
repo push; checkoutBranch: SystemVersion current commitHash.

fileTreeRepository := (MCFileTreeRepository new directory: target / #src; yourself).
repositoryGroup := MCRepositoryGroup withRepositories: {fileTreeRepository. MCCacheRepository uniqueInstance}.
MCWorkingCopy allManagers
	select: [:wc|(wc repositoryGroup repositories reject: [:repo|repo isCache]) isEmpty]
	thenDo: [:wc|wc repositoryGroup: repositoryGroup].
	
#(FT2Handle FreeTypeCache FreeTypeSettings) do: [ :each | 
	SessionManager default unregisterClassNamed: each ].'.
	w containingWindow position: 20@20.
	w containingWindow width: 900.
	w containingWindow height: 600.
	w containingWindow collapseOrExpand] 
	value: 'No freetype'."

evalBlock 
	value: [
		{'http://source.squeak.org/VMMaker' . 
		 'http://smalltalkhub.com/mc/ClementBera/Scorch/main/' .
		 'http://ss3.gemtalksystems.com/ss/MethodMassage' .
		 'http://www.hpi.uni-potsdam.de/hirschfeld/squeaksource/BenchmarkRunner' } do: [:each |
			MCRepositoryGroup default addRepository: (MCHttpRepository 
				location: each
				user: Author fullName 
				password: pwd)]]
	value: 'adding common repos'.
	
evalBlock
	value: [IceCredentialsProvider useCustomSsh: true.
			IceCredentialsProvider sshCredentials
					username: 'git';
					publicKey: '/Users/clementbera/.ssh/id_rsa.pub';
					privateKey: '/Users/clementbera/.ssh/id_rsa';
					keyPassphrase: pwd.
			IceCredentialsProvider
					plaintextCredentials: (IcePlaintextCredentials new 
						username: 'clementbera'; 
						password: pwd).]
	value: 'SSH settings for Iceberg'.
	
"evalBlock 
	value: [(SystemWindow allSubInstances select: [:w | 
				w model isKindOf: GTGenericStackDebugger])
					do: [:w | (w model title beginsWith: 'FT2Error: ') ifTrue: [w delete]]]
	value: 'Close Freetype debugger'"
!----End fileIn----!!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 17:42' prior: 33701318!exportOn: s	| width |	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 12 ] ifFalse: [ 8 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	self exportAbilitiesOn: s! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:44' prior: 33602658!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: [			self getFallBackNames halt.			'Unavailable']) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:44'!getFallBackNames 	^ 'extra/fallBackName.txt' asFileReference readStream contents readStream! !(Smalltalk globals at: #GemTDKikooParser) rename: #GemTDOrderParser!!GemTDGod methodsFor: 'export' stamp: 'ClementBera 1/27/2018 17:45' prior: 33726990!exportAdvancedTowers	| s order printed others|	s := WriteStream on: (WideString new: 10000).	printed := #().	order := GemTDOrderParser new parse: 'extra/combinedTowerOrder.txt' asFileReference readStream contents readStream.	order keysAndValuesDo: [ :title :towerCodes |		s << '!! ' << title.		s cr.		towerCodes do: [ :tc |			units detect: [ :u | u codeName = tc ] ifFound: [ :unit |				unit exportOn: s ] ].		printed := printed , towerCodes. ].	others := units select: [ :each | each class = GemTDAdvancedTower and: [ (printed includes: each codeName) not ] ].	others ifNotEmpty: [ 		s << '!! Others'.		s cr.		others do: [ :u | u exportOn: s ] ].	'export/advancedTowers.pillar' asFileReference writeStream nextPutAll: s contents.! !GemTDParser subclass: #GemTDNameParser	instanceVariableNames: 'result'	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDNameParser methodsFor: 'as yet unclassified' stamp: 'ClementBera 1/27/2018 17:46'!parse: rs	readStream := rs.	readStream next. "skip {"	self skipSeparators.! !!GemTDParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:46'!skipSeparators	[readStream peek isSeparator] whileTrue: [ readStream next ].! !GemTDLuaParser removeSelector: #skipSeparators!!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:46' prior: 33740867!parse: rs	result := OrderedCollection new.	readStream := rs.	readStream next. "skip {"	self skipSeparators.	! !GemTDOrderParser subclass: #GemTDNameParser	instanceVariableNames: ''	classVariableNames: ''	package: 'GemTD-Analysis'!!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:47' prior: 33741244!parse: rs	result := OrderedCollection new.	readStream := rs.	readStream next. "skip {"	self skipSeparators.	! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:49' prior: 33741578!parse: rs	result := OrderedCollection new.	readStream := rs.	readStream next. "skip {"	self skipSeparators.	[result add: self parseDirect.	 self skipSeparators.	readStream peek = $}] whileFalse.	^ Dictionary newFromPairs: result! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:49' prior: 33739651!getFallBackNames 	^ GemTDNameParser new parse: ('extra/fallBackName.txt' asFileReference readStream contents readStream)! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:49' prior: 33739363!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: [			self getFallBackNames halt.			'Unavailable']) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:50' prior: 33742339!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: ((importer resources at: l) at: codeName ifAbsent: [			self getFallBackNames at: codeName ifAbsent: ['Unavailable'] ]) ].! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:52' prior: 33741788!parse: rs	result := OrderedCollection new.	readStream := rs.	readStream next. "skip {"	self skipSeparators.	[result add: self parseDirect.	 self skipSeparators.	readStream peek = $}] whileFalse.	2 to: result size by: 2 do: [ :i |		result at: i put: (self rework: (result at: i)) ].	^ Dictionary newFromPairs: result! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:54'!rework: string	| ws noUp |	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		 ]! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:55' prior: 33743370!rework: string	| ws noUp |	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: rs next ]! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:55' prior: 33743723!rework: string	| ws noUp |	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: rs next ].	^ ws contents trimBoth! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:55' prior: 33744095!rework: string	| ws noUp |	1halt.	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: rs next ].	^ ws contents trimBoth! !!GemTDNameParser methodsFor: 'parsing' stamp: 'ClementBera 1/27/2018 17:56' prior: 33744492!rework: string	| ws noUp |	ws := WriteStream on: (string class new: string size + 5).	noUp := false.	string readStreamDo: [ :rs |		[rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !----SNAPSHOT----2018-01-27T17:57:12.562163+01:00 Pharo.image priorSource: 181260!GemTDElement removeSelector: #enName!GemTDElement removeSelector: #enName:!!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 17:57'!clean: string	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:00' prior: 33745466!clean: string	| ws upNext |	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:00' prior: 33745578!clean: string	| ws upNext |	1halt.	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:00' prior: 33742643!importNameWithImporter: importer	name := Dictionary new.	#(en sch tch) do: [ :l |		name at: l put: (self clean: ((importer resources at: l) at: codeName ifAbsent: [			self getFallBackNames at: codeName ifAbsent: ['Unavailable'] ])) ].! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:01' prior: 33746006!clean: string	| ws upNext |	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:01' prior: 33746777!clean: string	| ws upNext |	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:02' prior: 33747205!clean: string	| ws upNext |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth! !!GemTDTower methodsFor: 'export' stamp: 'ClementBera 1/27/2018 18:04' prior: 33738784!exportOn: s	| width |	width := codeName = 'gemtd_zhenjiazhishi' ifTrue: [ 15 ] ifFalse: [ 8 ]. 	s << '!!!! ' << (name at: 'en') capitalized.	s cr. 	s << '+file://wards/' << picture << '.png|width=' << width printString << '+'.	s cr.	self exportNamesOn: s.	s << '|!! Attack Damage |!! Attack Rate |!! Attack Range |!! Projectile Speed'.	s cr.	s		<< '| ' << damage  		<< ' | ' <<  rate		<< ' | ' <<  range		<< ' | ' <<  projectileSpeed.	s cr.	self exportAbilitiesOn: s! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:07' prior: 33747644!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[rs peek isUppercase ifTrue: [ noUp ifFalse: [1halt. ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:08' prior: 33748695!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ noUp ifFalse: [ws space] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:12' prior: 33749307!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ noUp ifFalse: [rs peekBack = Character space ifFalse: [ws space]] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:12' prior: 33749984!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	noUp := false.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ noUp ifFalse: [rs peekBack = Character space ifFalse: [ws space]] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !!GemTDElement methodsFor: 'initialize' stamp: 'ClementBera 1/27/2018 18:14' prior: 33750702!clean: string	| ws upNext noUp |	string size = 0 ifTrue: [ ^ string ].	ws := WriteStream on: (string class new: string size).	upNext := true.	noUp := false.	string readStreamDo: [ :rs |		[rs peek = $/ ifTrue: [ ws space ].		rs peek isUppercase ifTrue: [ 			noUp ifFalse: [				rs position = 0 ifFalse: [ 					rs peekBack = Character space ifFalse: [ws space] ] ] ].		noUp := false.		rs peek = $- ifTrue: [ noUp := true ].		ws nextPut: (upNext ifTrue: [rs peek asUppercase] ifFalse: [rs peek]).		rs peek = $/ ifTrue: [ ws space ].		upNext := false.		rs peek = Character space ifTrue: [ upNext := true ].		rs next.		rs atEnd ] whileFalse ].	^ ws contents trimBoth	! !----QUIT----2018-01-27T18:14:57.319624+01:00 Pharo.image priorSource: 190794!