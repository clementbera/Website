OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:22:30.252838+01:00' ],		#prior : OmReference [ 'Pharo7.0-32bit-63e0b3f.dlsc8k109jdf1n5mvlt8zvkan', '4' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\tname := Dictionary s.\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:21',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\tname := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:22',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:24:24.737864+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #process,			#protocol : #accessing,			#sourceCode : 'process\r\timporter := GemTDImporter new.\r\timporter importAll.\r\tself generate.\r\t1halt.',			#stamp : 'ClementBera 1/26/2018 17:05',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #process,			#protocol : #accessing,			#sourceCode : 'process\r\timporter := GemTDImporter new.\r\timporter importAll.\r\tself generate.\r\tself exportBaseTowers.',			#stamp : 'ClementBera 1/27/2018 10:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:24:31.63891+01:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\tself shouldBeImplemented.',			#stamp : 'ClementBera 1/27/2018 10:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:25:38.115993+01:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\tself shouldBeImplemented.',			#stamp : 'ClementBera 1/27/2018 10:24',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\tunits do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 10:25',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:25:45.387588+01:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDTower subclass: #GemTDBaseTower\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDTower',				#traitCompositionSource : '{}'			},			#name : #GemTDBaseTower,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDBaseTower class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDBaseTower class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDBaseTower				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		},		#protocol : #export	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:25:49.210045+01:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r\t',			#stamp : 'ClementBera 1/27/2018 10:25',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:25:54.11282+01:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDTower\r\tinstanceVariableNames: \'damage range rate projectileSpeed picture\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDTower,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDTower					},					#name : #damage,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDTower					},					#name : #range,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDTower					},					#name : #rate,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDTower					},					#name : #projectileSpeed,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDTower					},					#name : #picture,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDTower class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDTower class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDTower				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		},		#protocol : #export	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:25:57.619596+01:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s',			#stamp : 'ClementBera 1/27/2018 10:25',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:26:00.174701+01:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r\t',			#stamp : 'ClementBera 1/27/2018 10:25',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:26:11.745596+01:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tpicture := ((details at: \'Model\') splitOn: \'/\') last allButLast: 5.',			#stamp : 'ClementBera 1/26/2018 17:10',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.\r\tpicture := ((details at: \'Model\') splitOn: \'/\') last allButLast: 5.',			#stamp : 'ClementBera 1/27/2018 10:26',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:26:28.858818+01:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.\r\tpicture := ((details at: \'Model\') splitOn: \'/\') last allButLast: 5.',			#stamp : 'ClementBera 1/27/2018 10:26',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.\r\t"base/B"\r\tpicture := ((details at: \'Model\') splitOn: \'/\') last allButLast: 5.',			#stamp : 'ClementBera 1/27/2018 10:26',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:31:30.042216+01:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s',			#stamp : 'ClementBera 1/27/2018 10:25',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r \ts << \'+file://wards/\' << picture << \'.png|width=10+\'.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  (name at: \'sch\')\r\t\t<< \' | \' <<  (name at: \'tch\').\r\ts cr.\r\ts << \'|! Attack Damage |! Attack Rate |! Attack Range |! Projectile Speed\'.\r\ts cr.\r\ts\r\t\t<< \'| \' << damage  \r\t\t<< \' | \' <<  rate\r\t\t<< \' | \' <<  range\r\t\t<< \' | \' <<  projectileSpeed.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ]',			#stamp : 'ClementBera 1/27/2018 10:31',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:31:41.091642+01:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDAbility\r\tinstanceVariableNames: \'tooltip\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDAbility,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDAbility					},					#name : #tooltip,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDAbility class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDAbility class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDAbility				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		},		#protocol : #export	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:34:07.979229+01:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'shortExportOn:',			#protocol : #export,			#sourceCode : 'shortExportOn: s\r\ts << \'|! Ability Code |! Name (en) |! Tooltip (en) |! Name (sch) |! Tooltip (sch) |! Name (tch) |! Tooltip (tch)\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName\r\t\t<< \' | \' << (name at: \'en\')\r\t\t<< \' | \' << (tooltip at: \'en\')\r\t\t<< \' | \' << (name at: \'sch\')\r\t\t<< \' | \' << (tooltip at: \'sch\')\r\t\t<< \' | \' << (name at: \'tch\')\r\t\t<< \' | \' << (tooltip at: \'tch\').\r\ts cr.',			#stamp : 'ClementBera 1/27/2018 10:34',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:34:32.364783+01:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\tunits do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 10:25',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Base Towers\'.\r\ts cr.\r\tunits do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].\r\ts contents.',			#stamp : 'ClementBera 1/27/2018 10:34',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:35:47.257621+01:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.\r\t"base/B"\r\tpicture := ((details at: \'Model\') splitOn: \'/\') last allButLast: 5.',			#stamp : 'ClementBera 1/27/2018 10:26',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tpicture := \'base/\' , (codeName at: (codeName indexOf: $_) + 1) asUppercase asString',			#stamp : 'ClementBera 1/27/2018 10:35',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:36:01.640487+01:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAdvancedTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tpicture := codeName.',			#stamp : 'ClementBera 1/26/2018 17:11',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAdvancedTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tpicture := \'advanced/\' , codeName.',			#stamp : 'ClementBera 1/27/2018 10:36',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:36:11.002735+01:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Base Towers\'.\r\ts cr.\r\tunits do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].\r\ts contents.',			#stamp : 'ClementBera 1/27/2018 10:34',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Base Towers\'.\r\ts cr.\r\tunits do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].\r\ts contents.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 10:36',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:36:47.336967+01:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Base Towers\'.\r\ts cr.\r\tunits do: [ :u | u class = GemTDBaseTower ifTrue: [ u exportOn: s ] ].\r\ts contents.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 10:36',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Base Towers\'.\r\ts cr.\r\tself orderedBaseTowers do: [ :u |  u exportOn: s ].\r\ts contents.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 10:36',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:36:53.80771+01:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #orderedBaseTowers,			#protocol : #export,			#sourceCode : 'orderedBaseTowers\r\tself shouldBeImplemented.',			#stamp : 'ClementBera 1/27/2018 10:36',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:38:13.984645+01:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tpicture := \'base/\' , (codeName at: (codeName indexOf: $_) + 1) asUppercase asString',			#stamp : 'ClementBera 1/27/2018 10:35',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDBaseTower			},			#name : #'importWith:importer:',			#protocol : #initialize,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tpicture := \'base/\' , (codeName at: 7) asUppercase asString',			#stamp : 'ClementBera 1/27/2018 10:38',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:39:52.75368+01:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #orderedBaseTowers,			#protocol : #export,			#sourceCode : 'orderedBaseTowers\r\tself shouldBeImplemented.',			#stamp : 'ClementBera 1/27/2018 10:36',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #orderedBaseTowers,			#protocol : #export,			#sourceCode : 'orderedBaseTowers\r\t| baseTowers |\r\tbaseTowers := units select: [:u | u class = GemTDBaseTower ].\r\tbaseTowers sort: [ :a :b |\r\t\t"comp type B, G, etc."\r\t\t(a codeName at: 7) = (b codeName at: 7)\r\t\t\tifFalse: [ (a codeName at: 7) <= (b codeName at: 7) ]\r\t\t\tifTrue: [ a size < b size ]\r\t\t ].\r\t^ baseTowers',			#stamp : 'ClementBera 1/27/2018 10:39',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:40:03.987386+01:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #orderedBaseTowers,			#protocol : #export,			#sourceCode : 'orderedBaseTowers\r\t| baseTowers |\r\tbaseTowers := units select: [:u | u class = GemTDBaseTower ].\r\tbaseTowers sort: [ :a :b |\r\t\t"comp type B, G, etc."\r\t\t(a codeName at: 7) = (b codeName at: 7)\r\t\t\tifFalse: [ (a codeName at: 7) <= (b codeName at: 7) ]\r\t\t\tifTrue: [ a size < b size ]\r\t\t ].\r\t^ baseTowers',			#stamp : 'ClementBera 1/27/2018 10:39',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #orderedBaseTowers,			#protocol : #export,			#sourceCode : 'orderedBaseTowers\r\t| baseTowers |\r\tbaseTowers := units select: [:u | u class = GemTDBaseTower ].\r\tbaseTowers sort: [ :a :b |\r\t\t"comp type B, G, etc."\r\t\t(a codeName at: 7) = (b codeName at: 7)\r\t\t\tifFalse: [ (a codeName at: 7) <= (b codeName at: 7) ]\r\t\t\tifTrue: [ a codeName size < b codeName size ]\r\t\t ].\r\t^ baseTowers',			#stamp : 'ClementBera 1/27/2018 10:40',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:43:08.548765+01:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Base Towers\'.\r\ts cr.\r\tself orderedBaseTowers do: [ :u |  u exportOn: s ].\r\ts contents.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 10:36',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Base Towers\'.\r\ts cr.\r\tself orderedBaseTowers do: [ :u |  u exportOn: s ].\r\t\'export/baseTowers.pillar\' asFileReference writeStream nextPutAll: s contents.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 10:43',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:44:55.163619+01:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r \ts << \'+file://wards/\' << picture << \'.png|width=10+\'.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  (name at: \'sch\')\r\t\t<< \' | \' <<  (name at: \'tch\').\r\ts cr.\r\ts << \'|! Attack Damage |! Attack Rate |! Attack Range |! Projectile Speed\'.\r\ts cr.\r\ts\r\t\t<< \'| \' << damage  \r\t\t<< \' | \' <<  rate\r\t\t<< \' | \' <<  range\r\t\t<< \' | \' <<  projectileSpeed.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ]',			#stamp : 'ClementBera 1/27/2018 10:31',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r \ts << \'+file://wards/\' << picture << \'.png|width=8+\'.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  (name at: \'sch\')\r\t\t<< \' | \' <<  (name at: \'tch\').\r\ts cr.\r\ts << \'|! Attack Damage |! Attack Rate |! Attack Range |! Projectile Speed\'.\r\ts cr.\r\ts\r\t\t<< \'| \' << damage  \r\t\t<< \' | \' <<  rate\r\t\t<< \' | \' <<  range\r\t\t<< \' | \' <<  projectileSpeed.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ]',			#stamp : 'ClementBera 1/27/2018 10:44',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:45:01.655284+01:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\tname := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:22',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\tname := Dictionary new.\r\t1halt.\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:45',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:48:08.928981+01:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\tname := Dictionary new.\r\t1halt.\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:45',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\t| details |\r\tname := Dictionary new.\r\tdetails := (importer npcs at: \'DOTAAbilities\') at: codeName.\r\t1halt.\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:48',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:51:09.058206+01:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\t| details |\r\tname := Dictionary new.\r\tdetails := (importer npcs at: \'DOTAAbilities\') at: codeName.\r\t1halt.\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:48',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\t| details |\r\tname := Dictionary new.\r\tdetails := (importer npcs at: \'DOTAAbilities\') at: codeName.\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:51',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:51:23.424853+01:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\t| details |\r\tname := Dictionary new.\r\tdetails := (importer npcs at: \'DOTAAbilities\') at: codeName.\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:51',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\t| details |\r\tname := Dictionary new.\r\t"details := (importer npcs at: \'DOTAAbilities\') at: codeName."\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:51',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:52:04.764355+01:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Base Towers\'.\r\ts cr.\r\tself orderedBaseTowers do: [ :u |  u exportOn: s ].\r\t\'export/baseTowers.pillar\' asFileReference writeStream nextPutAll: s contents.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 10:43',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportBaseTowers,			#protocol : #export,			#sourceCode : 'exportBaseTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Base Towers\'.\r\ts cr.\r\tself orderedBaseTowers do: [ :u |  u exportOn: s ].\r\t\'export/baseTowers.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 10:52',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:52:25.137833+01:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #process,			#protocol : #accessing,			#sourceCode : 'process\r\timporter := GemTDImporter new.\r\timporter importAll.\r\tself generate.\r\tself exportBaseTowers.',			#stamp : 'ClementBera 1/27/2018 10:24',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #process,			#protocol : #accessing,			#sourceCode : 'process\r\timporter := GemTDImporter new.\r\timporter importAll.\r\tself generate.\r\tself exportBaseTowers.\r\tself exportAdvancedTowers.',			#stamp : 'ClementBera 1/27/2018 10:52',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:52:34.113513+01:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportAdvancedTowers,			#protocol : #export,			#sourceCode : 'exportAdvancedTowers\r\tself shouldBeImplemented.',			#stamp : 'ClementBera 1/27/2018 10:52',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:53:15.987039+01:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportAdvancedTowers,			#protocol : #export,			#sourceCode : 'exportAdvancedTowers\r\tself shouldBeImplemented.',			#stamp : 'ClementBera 1/27/2018 10:52',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportAdvancedTowers,			#protocol : #export,			#sourceCode : 'exportAdvancedTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Combined Towers\'.\r\ts cr.\r\tself units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].\r\t\'export/advancedTowers.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 10:53',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:53:53.392176+01:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportAdvancedTowers,			#protocol : #export,			#sourceCode : 'exportAdvancedTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Combined Towers\'.\r\ts cr.\r\tself units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].\r\t\'export/advancedTowers.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 10:53',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportAdvancedTowers,			#protocol : #export,			#sourceCode : 'exportAdvancedTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Combined Towers\'.\r\ts cr.\r\tself units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].\r\t1halt.\r\t\'export/advancedTowers.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 10:53',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:54:27.618747+01:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportAdvancedTowers,			#protocol : #export,			#sourceCode : 'exportAdvancedTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Combined Towers\'.\r\ts cr.\r\tself units do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].\r\t1halt.\r\t\'export/advancedTowers.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 10:53',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportAdvancedTowers,			#protocol : #export,			#sourceCode : 'exportAdvancedTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Combined Towers\'.\r\ts cr.\r\tunits do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].\r\t1halt.\r\t\'export/advancedTowers.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 10:54',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T10:54:38.928775+01:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportAdvancedTowers,			#protocol : #export,			#sourceCode : 'exportAdvancedTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Combined Towers\'.\r\ts cr.\r\tunits do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].\r\t1halt.\r\t\'export/advancedTowers.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 10:54',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportAdvancedTowers,			#protocol : #export,			#sourceCode : 'exportAdvancedTowers\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Combined Towers\'.\r\ts cr.\r\tunits do: [ :u | u class = GemTDAdvancedTower ifTrue: [ u exportOn: s ] ].\r\t\'export/advancedTowers.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 10:54',			#package : #GemTD-Analysis		}	}}