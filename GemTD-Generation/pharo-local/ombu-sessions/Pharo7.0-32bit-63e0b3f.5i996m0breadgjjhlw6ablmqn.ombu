OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:14:26.972633+01:00' ],		#prior : OmReference [ 'Pharo7.0-32bit-63e0b3f.49u4dpai4zqrs7qt2ioz846lq', '1' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r \ts << \'+file://wards/\' << picture << \'.png|width=8+\'.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  (name at: \'sch\')\r\t\t<< \' | \' <<  (name at: \'tch\').\r\ts cr.\r\ts << \'|! Attack Damage |! Attack Rate |! Attack Range |! Projectile Speed\'.\r\ts cr.\r\ts\r\t\t<< \'| \' << damage  \r\t\t<< \' | \' <<  rate\r\t\t<< \' | \' <<  range\r\t\t<< \' | \' <<  projectileSpeed.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ]',			#stamp : 'ClementBera 1/27/2018 10:44',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r \ts << \'+file://wards/\' << picture << \'.png|width=8+\'.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Attack Damage |! Attack Rate |! Attack Range |! Projectile Speed\'.\r\ts cr.\r\ts\r\t\t<< \'| \' << damage  \r\t\t<< \' | \' <<  rate\r\t\t<< \' | \' <<  range\r\t\t<< \' | \' <<  projectileSpeed.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:14',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:14:45.495193+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r \ts << \'+file://wards/\' << picture << \'.png|width=8+\'.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Attack Damage |! Attack Rate |! Attack Range |! Projectile Speed\'.\r\ts cr.\r\ts\r\t\t<< \'| \' << damage  \r\t\t<< \' | \' <<  rate\r\t\t<< \' | \' <<  range\r\t\t<< \' | \' <<  projectileSpeed.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:14',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r \ts << \'+file://wards/\' << picture << \'.png|width=8+\'.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Attack Damage |! Attack Rate |! Attack Range |! Projectile Speed\'.\r\ts cr.\r\ts\r\t\t<< \'| \' << damage  \r\t\t<< \' | \' <<  rate\r\t\t<< \' | \' <<  range\r\t\t<< \' | \' <<  projectileSpeed.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\tabilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:14',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:14:52.808654+01:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r \ts << \'+file://wards/\' << picture << \'.png|width=8+\'.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Attack Damage |! Attack Rate |! Attack Range |! Projectile Speed\'.\r\ts cr.\r\ts\r\t\t<< \'| \' << damage  \r\t\t<< \' | \' <<  rate\r\t\t<< \' | \' <<  range\r\t\t<< \' | \' <<  projectileSpeed.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\tabilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:14',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDTower			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r \ts << \'+file://wards/\' << picture << \'.png|width=8+\'.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Attack Damage |! Attack Rate |! Attack Range |! Projectile Speed\'.\r\ts cr.\r\ts\r\t\t<< \'| \' << damage  \r\t\t<< \' | \' <<  rate\r\t\t<< \' | \' <<  range\r\t\t<< \' | \' <<  projectileSpeed.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:14',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:15:09.147444+01:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'shortExportHiddenOn:',			#protocol : #export,			#sourceCode : 'shortExportHiddenOn: s\r\ts << \'|! Hidden Ability Code |! Name (en) |! Tooltip (en) |! Other Languages\' "Name (sch) |! Tooltip (sch) |! Name (tch) |! Tooltip (tch)\'".\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName\r\t\t<< \' | \' << (name at: \'en\')\r\t\t<< \' | \' << (tooltip at: \'en\')\r\t\t<< \' | \' << \'Disabled\'\r\t\t"<< \' | \' << (name at: \'sch\')\r\t\t<< \' | \' << (tooltip at: \'sch\')\r\t\t<< \' | \' << (name at: \'tch\')\r\t\t<< \' | \' << (tooltip at: \'tch\')".\r\ts cr.',			#stamp : 'ClementBera 1/27/2018 11:15',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:16:03.513068+01:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:16',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:16:03.565947+01:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:16',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:16',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:16:15.957287+01:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t',			#stamp : 'ClementBera 1/27/2018 11:16',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:16:18.504433+01:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t',			#stamp : 'ClementBera 1/27/2018 11:16',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 11:16',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:18:19.927466+01:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:18:20.729582+01:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level ms\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @23				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #ms,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @23,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:18:21.482986+01:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level ms\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #ms,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level ms res\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #ms,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #res,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @25,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:18:21.486808+01:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 11:16',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tms := details at: \'MovementSpeed (NumPlayer factor)\'.\r\tres := details at: \'MagicalResistance\'.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 11:18',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:19:02.10917+01:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level ms res\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #ms,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #res,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level ms res mc\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @27				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #ms,					#parent : @27				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #res,					#parent : @27				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #mc,					#parent : @27				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @27			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @27,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:19:02.116669+01:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tms := details at: \'MovementSpeed (NumPlayer factor)\'.\r\tres := details at: \'MagicalResistance\'.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 11:18',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed (NumPlayer factor)\'.\r\tres := details at: \'MagicalResistance\'.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 11:19',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:19:53.133513+01:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level ms res mc\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #ms,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #res,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #mc,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level ms res mc armor\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #ms,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #res,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #mc,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #armor,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:19:53.139233+01:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed (NumPlayer factor)\'.\r\tres := details at: \'MagicalResistance\'.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 11:19',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed (NumPlayer factor)\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 11:19',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:19:55.167729+01:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed (NumPlayer factor)\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.\r\t1halt.',			#stamp : 'ClementBera 1/27/2018 11:19',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed (NumPlayer factor)\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:19',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:21:00.705928+01:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:16',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\t\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:21',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:21:05.618338+01:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed (NumPlayer factor)\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:19',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:21',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:22:21.440624+01:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\t\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:21',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (*NumPlayer factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\t1halt.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms << \'(\' << mc << \')\'\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:22',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:22:39.156115+01:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #process,			#protocol : #accessing,			#sourceCode : 'process\r\timporter := GemTDImporter new.\r\timporter importAll.\r\tself generate.\r\tself exportBaseTowers.\r\tself exportAdvancedTowers.',			#stamp : 'ClementBera 1/27/2018 10:52',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #process,			#protocol : #accessing,			#sourceCode : 'process\r\timporter := GemTDImporter new.\r\timporter importAll.\r\tself generate.\r\tself exportBaseTowers.\r\tself exportAdvancedTowers.\r\tself exportCreeps.',			#stamp : 'ClementBera 1/27/2018 11:22',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:22:41.647139+01:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #'unitType:',			#protocol : #accessing,			#sourceCode : 'unitType: u\r\t1halt.\r\t(importer units at: u)',			#stamp : 'ClementBera 1/26/2018 16:41',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:23:02.644177+01:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportCreeps,			#protocol : #export,			#sourceCode : 'exportCreeps\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Creeps\'.\r\ts cr.\r\tself orderedCreeps do: [ :u |  u exportOn: s ].\r\t\'export/creeps.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 11:23',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:23:33.859738+01:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #orderedCreeps,			#protocol : #export,			#sourceCode : 'orderedCreeps\r\t| creeps |\r\tcreeps := units select: [:u | u class = GemTDCreep ].\r\tcreeps sort: [ :a :b |\r\t\ta level asInteger < b level asInteger\r\t\t ].\r\t^ creeps',			#stamp : 'ClementBera 1/27/2018 11:23',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:24:04.154584+01:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #level class: GemTDCreep classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #ms class: GemTDCreep classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #res class: GemTDCreep classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #mc class: GemTDCreep classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #armor class: GemTDCreep classVariable: false)'			}		]	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ],		#time : DateAndTime [ '2018-01-27T11:24:04.169603+01:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #level,			#protocol : #accessing,			#sourceCode : 'level\r\t^ level',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ],		#time : DateAndTime [ '2018-01-27T11:24:04.17543+01:00' ],		#trigger : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'level:',			#protocol : #accessing,			#sourceCode : 'level: anObject\r\tlevel := anObject',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ],		#time : DateAndTime [ '2018-01-27T11:24:04.180109+01:00' ],		#trigger : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #ms,			#protocol : #accessing,			#sourceCode : 'ms\r\t^ ms',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ],		#time : DateAndTime [ '2018-01-27T11:24:04.185733+01:00' ],		#trigger : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'ms:',			#protocol : #accessing,			#sourceCode : 'ms: anObject\r\tms := anObject',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ],		#time : DateAndTime [ '2018-01-27T11:24:04.190253+01:00' ],		#trigger : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #res,			#protocol : #accessing,			#sourceCode : 'res\r\t^ res',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ],		#time : DateAndTime [ '2018-01-27T11:24:04.194996+01:00' ],		#trigger : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'res:',			#protocol : #accessing,			#sourceCode : 'res: anObject\r\tres := anObject',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ],		#time : DateAndTime [ '2018-01-27T11:24:04.200122+01:00' ],		#trigger : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #mc,			#protocol : #accessing,			#sourceCode : 'mc\r\t^ mc',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ],		#time : DateAndTime [ '2018-01-27T11:24:04.205048+01:00' ],		#trigger : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'mc:',			#protocol : #accessing,			#sourceCode : 'mc: anObject\r\tmc := anObject',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ],		#time : DateAndTime [ '2018-01-27T11:24:04.213025+01:00' ],		#trigger : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #armor,			#protocol : #accessing,			#sourceCode : 'armor\r\t^ armor',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ],		#time : DateAndTime [ '2018-01-27T11:24:04.217621+01:00' ],		#trigger : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'armor:',			#protocol : #accessing,			#sourceCode : 'armor: anObject\r\tarmor := anObject',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:24:50.645697+01:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (*NumPlayer factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\t1halt.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms << \'(\' << mc << \')\'\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:22',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (*NumPlayer factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\t1halt.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:24:54.128186+01:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (*NumPlayer factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\t1halt.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (*NumPlayer factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:27:24.023846+01:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (*NumPlayer factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:24',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:27',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:27:39.702617+01:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:27',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiplied by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:27',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:27:43.176653+01:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiplied by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:27',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:27',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:29:01.72803+01:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:27',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:29',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:31:08.559015+01:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportCreeps,			#protocol : #export,			#sourceCode : 'exportCreeps\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Creeps\'.\r\ts cr.\r\tself orderedCreeps do: [ :u |  u exportOn: s ].\r\t\'export/creeps.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 11:23',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportCreeps,			#protocol : #export,			#sourceCode : 'exportCreeps\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Creeps\'.\r\ts cr.\r\tself orderedCreeps do: [ :u |  u exportOn: s ].\r\t1halt.\r\t\'export/creeps.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 11:31',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:31:15.461191+01:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportCreeps,			#protocol : #export,			#sourceCode : 'exportCreeps\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Creeps\'.\r\ts cr.\r\tself orderedCreeps do: [ :u |  u exportOn: s ].\r\t1halt.\r\t\'export/creeps.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 11:31',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportCreeps,			#protocol : #export,			#sourceCode : 'exportCreeps\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Creeps\'.\r\ts cr.\r\tself orderedCreeps do: [ :u |  u exportOn: s ].\r\t\'export/creeps.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 11:31',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:35:09.839041+01:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:29',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r\t(name at: \'en\') = 1 ifTrue: [ ^ self ].\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:35',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:35:25.718369+01:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r\t(name at: \'en\') = 1 ifTrue: [ ^ self ].\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:35',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r\t(name at: \'en\') = \'Unavailable\' ifTrue: [ ^ self ].\r \ts << \'!! \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:35',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:35:58.224558+01:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:21',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\t1halt.\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:35',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:36:30.2529+01:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDAbility class\r\tinstanceVariableNames: \'\'',				#traitCompositionSource : '{}'			},			#name : #'GemTDAbility class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDElement subclass: #GemTDAbility\r\tinstanceVariableNames: \'tooltip\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',					#superclassName : 'GemTDElement',					#traitCompositionSource : '{}'				},				#name : #GemTDAbility,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#isMetaSide : false,							#className : #GemTDAbility						},						#name : #tooltip,						#parent : @12					}				],				#metaClass : @7,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDAbility					},					#parent : @12,					#content : ''				},				#classVariables : OrderedCollection [ ],				#category : #GemTD-Analysis,				#package : #GemTD-Analysis,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #'*Alien-Core'	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:36:30.298224+01:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'GemTDAbility class'			},			#name : #'newFrom:importer:',			#protocol : #'*Alien-Core',			#sourceCode : 'newFrom: codeName importer: importer\r\t^ self new \t\r\t\t\tcodeName: codeName;\r\t\t\timportWith: importer;\r\t\t\tyourself ',			#stamp : 'ClementBera 1/26/2018 17:13',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'GemTDAbility class'			},			#name : #'newFrom:importer:',			#protocol : #'as yet unclassified',			#sourceCode : 'newFrom: codeName importer: importer\r\t^ self new \t\r\t\t\tcodeName: codeName;\r\t\t\timportWith: importer;\r\t\t\tyourself ',			#stamp : 'ClementBera 1/26/2018 17:13',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:36:39.53978+01:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\t| details |\r\tname := Dictionary new.\r\t"details := (importer npcs at: \'DOTAAbilities\') at: codeName."\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 10:51',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\t| details |\r\t1halt.\r\tname := Dictionary new.\r\t"details := (importer npcs at: \'DOTAAbilities\') at: codeName."\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 11:36',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:42:13.89861+01:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\t| details |\r\t1halt.\r\tname := Dictionary new.\r\t"details := (importer npcs at: \'DOTAAbilities\') at: codeName."\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 11:36',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDAbility			},			#name : #'importWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'importWith: importer \r\t| details |\r\tname := Dictionary new.\r\t"details := (importer npcs at: \'DOTAAbilities\') at: codeName."\r\t#(en sch tch) do: [ :l |\r\t\tname at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName ifAbsent: [\'Unavailable\']) ].\r\ttooltip := Dictionary new.\r\t#(en sch tch) do: [ :l |\r\t\ttooltip at: l put: ((importer resources at: l) at: \'DOTA_Tooltip_Ability_\' , codeName , \'_Description\' ifAbsent: [\'Unavailable\']) ].',			#stamp : 'ClementBera 1/27/2018 11:42',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:42:24.199217+01:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\t1halt.\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:35',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:42',			#package : #GemTD-Analysis		}	}}