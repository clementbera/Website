OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:47:16.006078+01:00' ],		#prior : OmReference [ 'Pharo7.0-32bit-63e0b3f.954tc2tazvq4wfu4nlx1tryl9', '1' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r\t(name at: \'en\') = \'Unavailable\' ifTrue: [ ^ self ].\r \ts << \'!! \' << level << \'. \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:45',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r\t((name at: \'en\') = \'Unavailable\' or: [ (name at: \'en\') = \'\' ]) ifTrue: [ ^ self ].\r \ts << \'!! \' << level << \'. \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \'(flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:47',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:48:01.749316+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportCreeps,			#protocol : #export,			#sourceCode : 'exportCreeps\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Creeps\'.\r\ts cr.\r\tself orderedCreeps do: [ :u |  u exportOn: s ].\r\t\'export/creeps.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 11:31',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportCreeps,			#protocol : #export,			#sourceCode : 'exportCreeps\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Creeps\'.\r\ts cr.\r\ts << \'Note: Some creeps may not be used by default in the game.\'\r\ts cr.\r\tself orderedCreeps do: [ :u |  u exportOn: s ].\r\t\'export/creeps.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 11:48',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:48:19.689552+01:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportCreeps,			#protocol : #export,			#sourceCode : 'exportCreeps\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Creeps\'.\r\ts cr.\r\ts << \'Note: Some creeps may not be used by default in the game.\'\r\ts cr.\r\tself orderedCreeps do: [ :u |  u exportOn: s ].\r\t\'export/creeps.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 11:48',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDGod			},			#name : #exportCreeps,			#protocol : #export,			#sourceCode : 'exportCreeps\r\t| s |\r\ts := WriteStream on: (WideString new: 10000).\r\ts << \'! Creeps\'.\r\ts cr.\r\ts << \'Note: Some creeps may not be used by default in the game.\'.\r\ts cr.\r\tself orderedCreeps do: [ :u |  u exportOn: s ].\r\t\'export/creeps.pillar\' asFileReference writeStream nextPutAll: s contents.',			#stamp : 'ClementBera 1/27/2018 11:48',			#package : #GemTD-Analysis		}	}}