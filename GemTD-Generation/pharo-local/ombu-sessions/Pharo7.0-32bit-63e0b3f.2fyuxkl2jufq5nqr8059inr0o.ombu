OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:51:36.54302+01:00' ],		#prior : OmReference [ 'Pharo7.0-32bit-63e0b3f.7fvfm3yva3dpdvthekslsapsa', '1' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:42',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:51',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:52:16.972586+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level ms res mc armor\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #ms,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #res,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #mc,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #armor,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'GemTDElement subclass: #GemTDCreep\r\tinstanceVariableNames: \'level ms res mc armor hp\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'GemTD-Analysis\'',				#superclassName : 'GemTDElement',				#traitCompositionSource : '{}'			},			#name : #GemTDCreep,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #level,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #ms,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #res,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #mc,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #armor,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #GemTDCreep					},					#name : #hp,					#parent : @31				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'GemTDCreep class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'GemTDCreep class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @31			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #GemTDCreep				},				#parent : @31,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #GemTD-Analysis,			#package : #GemTD-Analysis,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:52:17.007506+01:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.',			#stamp : 'ClementBera 1/27/2018 11:51',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.\r\thp := details at: \'StatusHealth\'.',			#stamp : 'ClementBera 1/27/2018 11:52',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:52:22.964416+01:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\t1halt.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.\r\thp := details at: \'StatusHealth\'.',			#stamp : 'ClementBera 1/27/2018 11:52',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'importWith:importer:',			#protocol : #export,			#sourceCode : 'importWith: details importer: importer\r\tsuper importWith: details importer: importer.\r\tlevel := details at: \'Level\'.\r\tmc := details at: \'MovementCapabilities\'.\r\tms := details at: \'MovementSpeed\'.\r\tres := details at: \'MagicalResistance\'.\r\tarmor := details at: \'ArmorPhysical\'.\r\thp := details at: \'StatusHealth\'.',			#stamp : 'ClementBera 1/27/2018 11:52',			#package : #GemTD-Analysis		}	}}OmEntry {	#tags : {		#author : 'ClementBera',		#time : DateAndTime [ '2018-01-27T11:52:35.179524+01:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r\t((name at: \'en\') = \'Unavailable\' or: [ (name at: \'en\') = \'\' ]) ifTrue: [ ^ self ].\r \ts << \'!! \' << level << \'. \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! Level |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << level \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \' (flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:49',			#package : #GemTD-Analysis		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #GemTDCreep			},			#name : #'exportOn:',			#protocol : #export,			#sourceCode : 'exportOn: s\r\t((name at: \'en\') = \'Unavailable\' or: [ (name at: \'en\') = \'\' ]) ifTrue: [ ^ self ].\r \ts << \'!! \' << level << \'. \' << (name at: \'en\') capitalized.\r\ts cr.\r\ts << \'|! Code |! English |! Simplified Chinese |! Traditional Chinese\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << codeName \r\t\t<< \' | \' <<  (name at: \'en\') \r\t\t<< \' | \' <<  "(name at: \'sch\')" \'Disabled\'\r\t\t<< \' | \' <<  "(name at: \'tch\')" \'Disabled\'.\r\ts cr.\r\ts << \'|! HP |! Movement (Multiply by factor) |! Armor |! Magic resistance\'.\r\ts cr.\r\ts \r\t\t<< \'| \' << hp \r\t\t<< \' | \' <<  ms. \r\tmc = \'DOTA_UNIT_CAP_MOVE_FLY\' ifTrue: [ s << \' (flying)\' ].\r\ts\r\t\t<< \' | \' <<  armor\r\t\t<< \' | \' <<  res.\r\ts cr.\r\tabilities do: [ :ab |\r\t\tab shortExportOn: s ].\r\thiddenAbilities do: [ :ab |\r\t\tab shortExportHiddenOn: s ]',			#stamp : 'ClementBera 1/27/2018 11:52',			#package : #GemTD-Analysis		}	}}